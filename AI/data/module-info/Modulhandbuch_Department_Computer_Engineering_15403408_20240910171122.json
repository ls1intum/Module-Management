[
  {
    "module_id": "CIT1330000",
    "title": "Computational Intelligence",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung ist eine schriftliche Prüfung, die 90 min dauert. In der schriftlichen Prüfung wird vermitteltes Wissen ohne Hilfsmittel abgerufen, sowie der Transfer gelernter Prinzipien und Algorithmen auf verwandte Aufgaben erfragt. Das Beantworten der Fragen erfordert teils eigene Berechnungen und Formulierungen und teils das Ankreuzen von vorgegebenen Mehrfachantworten.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Programmierkenntnisse in \"Matlab\"",
    "content": "Einführung in Theorie und Anwendung Neuronaler Netze (Single-Layer Neuronale Netze, Multilayer Neuronale Netze und Backpropagation, Radial-Basis Function Netze, Rekurrente Neuronale Netze) Fuzzy- und Neuro-Fuzzy-Verarbeitungstechniken (Grundlagen der Fuzzy Set Theorie, Fuzzy Relations und Fuzzy Logic Inference, T-S fuzzy) Evolutionsverfahren und genetische Algorithmen zur Optimierung (Evolutionsbasiertes Rechnen, Evolutionsbasierte Optimierung, Evolutionsbasiertes Lernen und Problemlösung) CIT1330000: Computational Intelligence | Computational Intelligence [CI]",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind Studierende in der Lage, moderne Methoden der Computational Intelligence allgemein anzuwenden sowie Anwendungsfälle speziell im Bereich der Steuerungs- und Regelungstechnik zu analysieren.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen und Implementieren in den Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Vorlesungsprotokolle\n- Übungsaufgaben",
    "literature": "Folien/Arbeitsblätter zur Vorlesung\nKeller, Liu, Fogel: Fundamentals of Computational Intelligence, Wiley 2016.",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputational Intelligence (Vorlesung mit integrierten Übungen, 4 SWS)\nChen Y, Leibold M"
  },
  {
    "module_id": "CIT1330001",
    "title": "Projektwoche Natural Language Processing (NLP)",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 66,
    "hours_presence": 24,
    "examination_achievements": "Die Art der Prüfungen sind abgestimmt mit den geplanten Lernzielen:\n• Im Rahmen eines Software-Entwicklungsprojekts im Team demonstrieren die Studierenden,\ndass sie die gelernten Inhalte in praktischen Problemstellungen anwenden und umsetzen können. Die Ergebnisse aus den Praxisprojekten der Teams werden in einer Abschlusspräsentation vorgestellt, sowie in einem Abschlussbericht (ca. 8-10 Seiten) dokumentiert und vorgezeigt.\n• Während des Blockkurses gibt es zudem kleinere praktische Aufgaben, welche das Verständnis\nzu den jeweiligen Lehrinhalten und die Fähigkeit zur Anwendung vorgestellter Lösungsansätze überprüfen. Diese sind nicht notenrelevant, dienen jedoch als Grundlage für die Bewältigung des Praxisprojekts. Die Abschlussnote setzt sich wie folgt zusammen:\n- 100% teambasiertes Praxisprojekt (dies beinhaltet die Gruppenpräsentation sowie die\nschriftliche Dokumentation des Projekts). Die Note setzt sich zusammen aus 70% Ergebnis des Praxisprojekts, 20% schriftliche Dokumentation und 10% Gruppenpräsentation.",
    "repetition": "",
    "recommended_prerequisites": "Die Vorlesung basiert auf folgenden Vorkenntnissen, die in den Lehrveranstaltungen erworben\nwurden:\n- Grundlegende Programmierkenntnisse in Python\n- Bereitschaft zur aktiven Teilnahme an Diskussionen und Gruppenarbeiten\n- Keine anderen überlappenden Kurse",
    "content": "Natural Language Processing (NLP) ist ein interdisziplinäres Fachgebiet an der Schnittstelle zwischen der Informatik und der Linguistik sowie mittlerweile ein Teilbereich der Künstlichen Intelligenz. Es befasst sich mit Algorithmen, welche die natürliche Sprache des Menschen (geschrieben oder gesprochen) interpretieren, um darüber einen Computer zu befähigen aus dem Inhalt Erkenntnisse zu ziehen. So kann man beispielsweise Texte gewissen Themen zuordnen, ähnliche Texte finden, Texte als positiv oder negativ behaftet einstufen. Neueste Sprachmodelle, die auf künstlicher Intelligenz beruhen, können in Texten Antworten auf Fragen finden, Texte automatisiert zusammenfassen, sie vervollständigen und selbst vollkommen neue Texte generieren. Ziel des Projektpraktikums Natural Language Processing ist die Vermittlung von grundlegendem Wissen zu Natural Language Processing und aktuell in der Praxis eingesetzten Algorithmen, sowie die Vermittlung von praktischen Kenntnissen zur Interpretation von Texten und Verwendung in Anwendungsbeispielen. Die Studierenden erlernen dazu die erforderlichen Programmierkenntnisse in der Programmiersprachen Python. Folgende Teilbereiche werden vermittelt:\n- Syntaktische und statistische NLP Methoden\n- Transformerbasierte Modelle, generative Sprachmodelle\n- Text2Image Modelle\nWir diskutieren verschiedene Methoden und aktuelle Entwicklungen diskutieren und wenden diese praktisch an, um\n- Möglichkeiten und konkrete Anwendungen für Natural Language Processing zu erkennen und zu\nverstehen\n- Systematisch Lösungsansätze zu Aufgabenstellungen im Bereich des Verstehens und\nGenerierens von Texten zu finden\n- Aktuelle Herausforderungen und Diskussionen im Bereich NLP und speziell transformer-basierter\ngenerativer Sprachmodelle zu kennen und nachvollziehen zu können, Überlegungen zu aktuellen Herausforderungen anzustellen\n- In team-orientierter Arbeitsweise verschiedene Teilaufgaben einer Problemstellung zu einem\nkohärenten Gesamtergebnis zusammenzusetzen",
    "learning_outcomes": "Am Ende des Kurses werden die Studierenden ein grundsätzliches Verständnis von verschiedenen Ansätzen im Bereich Natural Language Processing haben. Sie werden praktische Kenntnisse zur Implementierung von NLP-Algorithmen erworben haben, von syntaktischen und semantischen Analysen über neueste Transformer-basierte generative Sprachmodelle hin zur automatischen Generierung von Bildern aus kurzen Text-Prompts über Text2Image Modelle. Sie werden Vor- und Nachteile der Modelle kennenlernen, die aktuellen Diskussionen nachvollziehen können und selbständig in der Lage sein, sich in neueste Entwicklungen schnell einzuarbeiten.",
    "teaching_methods": "Der Kurs besteht aus einem Teil klassischen Unterrichts mit Folien und Tafel am Vormittag und einem praktischen Teil zu dem jeweils am Vormittag vermittelten Inhalts am Nachmittag. Der praktische Teil ergänzt den inhaltlichen Unterricht und dient dazu die erlernten Ansätze anhand kleiner, praktischer Beispiele zu verinnerlichen. Diese praktischen Aufgaben werden alle notwendigen Teilbereiche umfassen, um nach den ersten vier Tagen des Kurses ein praktisches Projekt als Gruppenarbeit zu absolvieren, welche am Ende präsentiert wird. In kleinen Teams arbeiten die Studierende an einem Praxisprojekt. Dieses praktische Projekt wird die verschiedenen Teilbereiche von NLP beinhalten und sich mit dem Lösen einer kreativen Aufgabe befassen. Der inhaltliche und praktische Teil des Projektpraktikums, gepaart mit Informationen zu aktuellen Diskussionen um das Thema, erlaubt den Studierenden, selbständig Lösungen für Problemstellungen zur Gewinnung von Erkenntnissen aus Texten zu entwickeln und sich mit den neuesten Entwicklungen in dem spannenden Bereich generativer Sprachmodelle und Text2Image Modelle auseinanderzusetzen.",
    "media": "Folgende Methoden werden eingesetzt:\n- Frontale Präsentation (Vorlesung)\n- Gruppen- und Einzeldiskussionen\n- Leitfragenbasierte Übungsaufgaben",
    "literature": "",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNatural Language Processing Projektwoche (Workshop, 2 SWS)\nGamper V"
  },
  {
    "module_id": "CIT1330003",
    "title": "Einführung in die Quantenkommunikation",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulleistung wird in Form einer schriftlichen Prüfung (60 min) erbracht. In dieser soll nachgewiesen werden, dass sowohl die quantenphysikalischen Grundlagen, sowie die Konzepte und Protokolle der Quantenkommunikation verstanden wurden und angewendet werden können. Zusätzlich wird die Vorlesung von einer Übung begleitet. Das Einreichen der Lösungen für die Übungsaufgaben ist freiwillig. Bei Erreichen von 75% der möglichen Punkte der Übungsaufgaben wird ein Notenbonus von 0,3 Punkten auf die Note der Abschlussklausur angerechnet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra",
    "content": "Die Vorlesung bietet eine Einführung in das Gebiet der Kommunikation und Informationsverarbeitung mithilfe von Quantensystemen. Ausgehend von einfachen, aber grundlegenden Gesetzen der Quantenphysik, kann Kommunikation beweisbar sicher gegen Abhörangriffe gemacht werden. Die Vorlesung umfasst die folgenden Themenblöcke: Grundlagen konventioneller Kryptografie; Grundlagen Quanteninformation; Quantenkryptografie; Quantenkommunikation; Quantenrepeater; Quantennetzwerke; technische Implementierungen.",
    "learning_outcomes": "Die Studierenden sind nach dem erfolgreichen Abschluss des Moduls in der Lage, die Grundlagen der Quantenkommunikation zu verstehen und mit den entsprechenden Protokollen anzuwenden. Außerdem können sie praktische Implementierungen, sowie die Erweiterung auf CIT1330003: Einführung in die Quantenkommunikation | Einführung in die Quantenkommunikation Quantennetzwerke analysieren und beurteilen. Zusätzlich verstehen sie die Herausforderungen und Limitierungen von konventionellen Kommunikationsprotokollen und Verschlüsselungen.",
    "teaching_methods": "Die Vorlesungen bestehen aus dem klassischen Tafelanschrieb kombiniert mit interaktiven PowerPoint-Präsentationen. Dabei werden die vorgetragenen Inhalte ergänzt durch gemeinsam durchgearbeitete Beispiele. Die begleitenden Übungsaufgaben sollen den Stoff vertiefen.",
    "media": "PowerPoint, Tafelanschrieb; Übungsblätter; Lehrbuch, Publikationen",
    "literature": "D. Bouwmeester, A. Ekert, A. Zeilinger (eds.) - The Physics of Quantum Information, Springer\nVerlag, 2001. (Signatur TUM-Bibliothek: 0202/DAT 503f 2002 A 11)",
    "lv_sws_lecturer": "Vogl, Tobias; Prof. Dr. phil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Quantenkommunikation (Vorlesung mit integrierten Übungen, 4 SWS)\nVogl T"
  },
  {
    "module_id": "CIT133004",
    "title": "Phänomene der Quantenphysik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 60,
    "hours_presence": 90,
    "examination_achievements": "Die Modulleistung wird in Form einer schriftlichen Prüfung (60 min) erbracht. In dieser soll nachgewiesen werden, dass sowohl die Grundlagen, sowie die Konzepte und Phänomene der Quantenphysik verstanden wurden und angewendet werden können. Zusätzlich wird die Vorlesung von einer Übung begleitet. Das Einreichen der Lösungen für die Übungsaufgaben ist freiwillig. Bei Erreichen von 75% der möglichen Punkte der Übungsaufgaben wird ein Notenbonus von 0,3 Punkten auf die Note der Abschlussklausur angerechnet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra",
    "content": "Moderne Quantentechnologien wie der Quantencomputer und die Quantenkryptografie werden bereits für konkrete Anwendungen entwickelt. Diese Technologien basieren auf oftmals kontraintuitiven Konzepten und Phänomenen der Quantenphysik. Diese Vorlesung bietet eine Einführung zu den fundamentalen Grundlagen der Quantenphysik. Bei der Entwicklung der Quantenphysik wurden sich viele „Gedankenexperimente“ überlegt, welche heutzutage mit modernen Messmethoden experimentell überprüfbar geworden sind. Die Vorlesung umfasst die folgenden Themenblöcke: Grundlagen der Quantenphysik; Interferenz-Effekte; Quantenphysikalische Messungen und deren Interpretation; Experimente mit Einzelphotonen, Elektronen, Atomen und Resonatoren; Grenzen zwischen klassischer Physik und Quantenphysik. CIT133004: Phänomene der Quantenphysik | Phänomene der Quantenphysik [PQ]",
    "learning_outcomes": "Die Studierenden sind nach dem erfolgreichen Abschluss des Moduls in der Lage, die Konzepte und Phänomene der Quantenphysik zu verstehen und deren Relevanz für zukünftige Quantentechnologien einzuschätzen. Außerdem können sie diese Phänomene quantitativ beschreiben und berechnen, sowie die technischen Herausforderungen und Limitierungen für Anwendungen verstehen.",
    "teaching_methods": "Die Vorlesungen bestehen aus dem klassischen Tafelanschrieb kombiniert mit interaktiven PowerPoint-Präsentationen. Dabei werden die vorgetragenen Inhalte ergänzt durch gemeinsam durchgearbeitete Beispiele. Die begleitenden Übungsaufgaben sollen den Stoff vertiefen.",
    "media": "PowerPoint, Tafelanschrieb; Übungsblätter; Lehrbuch, Publikationen",
    "literature": "S. Haroche, J.-M. Raimond – Exploring the Quantum, Oxford Graduate Texts, 2006. (Signatur\nTUM-Bibliothek: 0202/PHY 028 2022 A 3971)",
    "lv_sws_lecturer": "Vogl, Tobias; Prof. Dr. phil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPhänomene der Quantenphysik (Vorlesung mit integrierten Übungen, 4 SWS)\nVogl T"
  },
  {
    "module_id": "CIT3330000",
    "title": "Introduction to Mobile Robotics",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Written exam at the end of the semester lasting 90min and no additional materials are allowed in the exam. In the written exam, students demonstrate that they understood the key concepts of mobile robots that can autonomously navigate their environments. The exam questions will focus on the principles which have been discussed during the lectures and students will have to apply their knowledge in the exam to solve problems similar to those discussed during the exercises as part of the lecture series.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0007 Fundamentals of Algorithms and Data Structures\nIN0015 Discrete Structures\nIN0018 Discrete Probability Theory",
    "content": "- Wheeled locomotion\n- Proximity sensors\n- Probabilistic Robotics\n- Probabilistic Motion Models\n- Probabilistic Sensor Models\n- Bayes Filter – Discrete Filters\n- Bayes Filter – Kalman Filters\n- Bayes Filter – Particle Filter\n- Occupancy grid maps and reflection maps\n- SLAM – Simultaneous Localization and Mapping\nCIT3330000: Introduction to Mobile Robotics | Introduction to Mobile Robotics\n- SLAM – Landmark-based SLAM\n- SLAM – Grid-based SLAM\n- SLAM – Graph-based SLAM\n- Iterative Closest Point Algorithm\n- Path planning and Collision Avoidance\n- Exploration",
    "learning_outcomes": "After successfully finishing this module, students will be able to design and develop mobile robots that can autonomously navigate in their environment. The key concepts taught in this course include basics of probability theory, recursive Bayes filtering, probabilistic sensor and motion models, probabilistic approaches to robot localization and mapping, techniques for simultaneous localization and mapping (SLAM), basic approaches to collision avoidance, path planning and exploration. In particular, students will acquire the following skills:\n- They can analyze sensors (ultrasound, LiDAR, Cameras) used for robot navigation and design\nprobabilistic models for them.\n- They can design probabilistic motion models.\n- They can realize a probabilistic localization approach using either a particle filter, a discrete filter,\nor variants of the Kalman filter.\n- They are able to develop and realize an approach to learn occupancy grid maps from sensor data\ngiven the poses of the robot are known.\n- They have a fundamental understanding of recursive Bayes filtering, are able to derive its\nequation and can critically assess the advantages and disadvantages of different representations of distributions for the recursive Bayes filter.\n- They have a fundamental understanding of the problem of simultaneous localization and mapping\n(SLAM).\n- They have a basic understanding of motion-planning and collision avoidance methods.\n- They have the capability to develop a navigation system for wheeled mobile robots.",
    "teaching_methods": "The module consists of a lecture and exercise classes. The content of the lecture is presented via slides, writing on a blackboard or digital media. Students are encouraged to additionally study the relevant literature. In the exercise classes, the learned content is applied to practical examples to consolidate the content of the lecture. Students should ideally have tried to solve the problems before they attend the exercise. To encourage more participation, students are regularly asked questions or encouraged to participate in online polls. Students are also encouraged to implement fundamental algorithms themselves.",
    "media": "Slides, blackboard, electronic writing pad, exercise sheets, recordings, Q&A sessions",
    "literature": "- Thrun, S, Burgard, W, and Fox, D. Probabilistic Robotics, MIT Press 2005.\nCIT3330000: Introduction to Mobile Robotics | Introduction to Mobile Robotics",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntroduction to Mobile Robotics (CIT3330000) (Vorlesung mit integrierten Übungen, 5 SWS)\nKnoll A [L], Burgard W, Krawez M, Lenz A"
  },
  {
    "module_id": "CIT3330001",
    "title": "Introduction to Emerging Computing Technologies",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The examination is performed in form of a programming task or mini-project that will provide the students with hands-on experiences on emerging technologies. These either involve the implementation and presentation of a dedicated design solution for an emerging technology or the realization of a concept presented in the lecture (the students need to choose only one programming task or mini-project based on a list of suggestions; they can also propose own tasks/projects in coordination with the lecturer). The tasks/projects allow to evaluate how well the students understood the respective concepts and how well they can use the corresponding methods to realize solutions based on/considering emerging technologies. They will be evaluated at the end of the semester through code inspection and a brief presentation by the student.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "* Basic knowledge in programming (e.g., in Python, C++, etc.)",
    "content": "Computer technologies will change in the near future. The exponential growth of conventional technologies (according to Moore’s Law) will come to a halt, since physical boundaries will be reached soon. At the same time, further system concepts beyond pure electronics emerge. As a consequence, researchers and engineers are currently considering alternative (emerging) computer technologies which work differently to established (conventional) computation paradigms. Examples include quantum computing, reversible circuits, microfludic devices (also known as Labs-on-a-Chip), or field-coupled nanotechnologies. This module provides an overview of these technologies and the corresponding paradigms. This covers an introduction into the respective concepts as well as possible applications. Afterwards, questions of how to efficiently design applications/solutions for these technologies are discussed.",
    "learning_outcomes": "At the end of the module, students will know the basic concepts of emerging technologies and their realizations from a design perspective. They will understand the potential of these technologies in principle and for what applications they can be used. In addition to that, students will get a rough overview how corresponding applications can be realized, how corresponding design steps differ from the design of conventional systems, and what methods are available for their design. Through the programming tasks/mini-projects, students will get hands-on experiences on those issues. Correspondingly considered emerging technologies include reversible computing, quantum computing, microfluidics, and field-coupled nanotechnologies.",
    "teaching_methods": "The module will be held in the form of presentations about selected topics in emerging technologies. Using slides presentations and whiteboard sketched, the main concepts of the respectively considered technologies and their design steps are provided. In addition, the students will have the opportunity to deepen der knowledge through individual hands-on experiences with corresponding design tools and methods that allow them to apply the learnt concepts to solve problems in the design of emerging technologies.",
    "media": "Lecture slides, software tools, tutorial material.",
    "literature": "",
    "lv_sws_lecturer": "Wille, Robert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntroduction to Emerging Computing Technologies (Vorlesung mit integrierten Übungen, 3 SWS)\nWille R [L], Wille R"
  },
  {
    "module_id": "CIT3330002",
    "title": "IT-Sicherheit 2",
    "level": "Bachelor/Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht. Die Prüfungsfragen testen, ob die zu prüfende Person eine Teilmenge der Fähigkeiten in der folgenden Liste erworben hat. Liste der Fähigkeiten: Der/die Studierende\n- beherrscht grundlegende und fortgeschrittene Konzepte und Techniken, um Systeme und\neinzelne Artefakte abzusichern,\n- kann erlernte Techniken korrekt anwenden,\n- ist in der Lage, Sicherheitsprobleme an konkreten Beispielen zu identifizieren,\n- kennt die Vor- und Nachteile der wichtigsten klassischen und fortgeschrittenen Sicherheits-\nKonzepte.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0042 IT-Sicherheit, IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, IN0009\nGrundlagen: Betriebssysteme und Systemsoftware",
    "content": "In dem Modul werden vertiefende sowie spezielle Themen der IT-Sicherheit behandelt. Aktuelle Konzepte und Lösungen im Bereich der Digitalen Identität, wie Smartcards, Physically Unclonable Functions (PUF), SSI und Token-basierte Authentisierung in verteilten Systemen werden vertiefend behandelt. Im Bereich der Anwendungssicherheit werden ausgewählte Fragestellungen, wie die Sicherheit von Instant Messenger-Diensten diskutiert. Im Bereich der Systemsicherheit widmet sich das Modul fortgeschrittenen Konzepten wie dem Trusted Computing, den Trusted Execution Environments und dem Confidential Computing und den dafür vorhandenen Hardware-seitigen Sicherheitskonzepten. Das Modul behandelt den aktuellen und in Entwicklung befindlichen Stand CIT3330002: IT-Sicherheit 2 | IT Security 2 der Sicherheit drahtloser und mobiler Kommunikationsarchitekturen (u.a. 5G) und mit Konzepten zur ad-hoc Sicherheit bei vernetzten IoT Geräten (z.B. BluetoothLE). Das Modul wird zudem einen Einblick in die methodische Entwicklung und Bewertung von sicheren Systemen (Security Engineering) geben.",
    "learning_outcomes": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, komplexe Sicherheitslösungen zu bewerten und Anwendungen in Bezug auf ihr Sicherheitsniveau zu analysieren. Sie sind in der Lage, die grundlegende und auch fortgeschrittene Konzepte zur Erhöhung der Sicherheit korrekt zu Lösungen von Sicherheitsproblemen einzusetzen. Sie verstehen die Ursachen von Sicherheits-Problemen von klassisch vernetzten, aber auch von mobilen und eingebetteten Systemen. Sie beherrschen die wichtigsten Konzepte zu deren Absicherung und können auch fortgeschrittene Ansätze anwenden. Sie sind in der Lage, eigenständig mögliche Sicherheitsschwachstellen in Designs oder Protokollen zu identifizieren und auf der Grundlage der erlernten Methoden und Konzepte Lösungen zu entwickeln.",
    "teaching_methods": "Das Modul besteht aus einer Vorlesung und einer begleitenden Übung. In der Vorlesung werden die Lehrinhalte vermitteln und die Studierenden zum Studium der Literatur und zur inhaltlichen Auseinandersetzung mit den Themen angeregt. In den Übungen werden in Gruppenarbeit gemeinsam konkrete Fragestellungen diskutiert und Beispiele bearbeitet. Anhand von 6-8 Übungsblättern werden die Studierenden angeleitet, den Stoff der Vorlesung anhand konkreter Aufgabenstellungen aufzuarbeiten und zu vertiefen.",
    "media": "Folien",
    "literature": "- IT-Sicherheit: Konzepte, Verfahren, Protokolle, Claudia Eckert, 11. Auflage, De Gruyter, 2023.\n- William Stallings, Lawrie Brown: Computer Security: Principles and Practice, 2018\n- Understanding Cryptography, C. Paar und J. Pelzl, Springer",
    "lv_sws_lecturer": "Eckert, Claudia; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIT Sicherheit 2 (CIT3330002) (Vorlesung mit integrierten Übungen, 4 SWS)\nEckert C [L], Andreas M, Eckert C, von Tschirschnitz M"
  },
  {
    "module_id": "CIT3330003",
    "title": "Kryptografie",
    "level": "Bachelor/Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht. Die Prüfungsfragen testen, ob die zu prüfende Person eine Teilmenge der Fähigkeiten in der folgenden Liste erworben hat. Liste der Fähigkeiten: Der/die Studierende\n- beherrscht die wichtigsten modernen kryptografischen Schemata und kann Grundelemente\nbeschreiben (u.a. AES, ChaCha, RSA, AEAD, rCTR, NMAC, CBC-MAC, ENC-THEN-MAC, OAEP, FDH, PSS, DH, Elgamal, Hybridverschlüsselung) und deren Funktionsweise und mathematische Basis erläutern;\n- versteht die Funktionsweise und Ansatzpunkte von Angriffen auf kryptografische Verfahren und\nist in der Lage zu erläutern, welche Eigenschaften ein sicheres kryptografisches System erfüllen muss;\n- versteht den Bedarf an (Pseudo-) Randomisierung in der Kryptografie und den Unterschied\nzwischen Zufälligkeit und Pseudozufälligkeit;\n- kann die Annahmen erklären, die der Kryptografie mit öffentlichen Schlüsseln zugrunde liegen;\n- kann anhand der Definitionen entscheiden, ob ein einfaches kryptografisches Schema sicher ist\noder nicht;\n- kann nachweislich sichere kryptografische Schemata auf der Grundlage dieser Konstruktionen\nund Grundelemente erstellen;\n- kann die algebraischen und zahlentheoretischen Grundlagen der RSA- und DLP-basierten\nKryptografie beschreiben und anwenden;\n- kann die grundlegenden Vor- und Nachteile elliptischer Kurven in der DLP-basierten Kryptografie\nerläutern.",
    "repetition": "CIT3330003: Kryptografie | Cryptography",
    "recommended_prerequisites": "IN0011 Einführung in die Theoretische Informatik, IN0015 Diskrete Strukturen, IN0018 Diskrete\nWahrscheinlichkeitstheorie, IN0042 IT-Sicherheit",
    "content": "- Theoretische Grundlagen:\n++ Sicherheitsdefinitionen: perfect secrecy, computational security (IND-CPA,IND-CCA,IND- CCA2), semantic security ++ Kryptographische Primitive und Pseudozufall: Pseudozufallszahlengenerator (PRG), - funktionen (PRF) und -permutationen (PRP), Einwegfunktionen (OWF) und -permutationen (OWP) (mit Falltür (TDP)), kryptographische Hashfunktionen, tweakable blockcipher (TBC) ++ Grundlagen der Gruppen- und Zahlentheorie, elliptische Kurven\n- Symmetrischen Kryptografie:\n++ Blockchiffren: AES, DES und Stromchiffre: ChaCha ++ Konstruktion von Verschlüsselungsverfahren basierend auf Blockchiffren. ++ Konstruktion von Message-Authentication-Code: CBC-MAC, NMAC, HMAC\n- Asymmetrische Kryptografie:\n++ Das RSA-Problem und davon abgeleitete Verschlüsselungs- und Signaturverfahren: RSA- OAEP, RSA-FDH, RSA-PSS ++ Der diskrete Logarithmus und davon abgeleitete Verfahren: Diffie-Hellman-Protokoll, El Gamal, DH-KEM, DSA",
    "learning_outcomes": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage,\n- die grundlegenden Primitive der symmetrischen und asymmetrischen Kryptografie zu erkennen,\n- die theoretischen Grundlagen dieser Primitive zu verstehen,\n- darauf basierende kryptographische Verfahren zu analysieren,\n- die wichtigsten Sicherheitsdefinitionen zu verstehen.",
    "teaching_methods": "Das Modul besteht aus einer Vorlesung und einer begleitenden Übung. In der Vorlesung werden die Lehrinhalte vermitteln und die Studierenden zum Studium der Literatur und zur inhaltlichen Auseinandersetzung mit den Themen angeregt. In den Übungen werden teilweise in Gruppenarbeit gemeinsam konkrete Fragestellungen diskutiert und Beispiele bearbeitet.",
    "media": "Folien und Tafel/Whiteboard",
    "literature": "- A Graduate Course in Applied Cryptography, Dan Boneh, Victor Shoup, http://toc.cryptobook.us/\n- Introduction to modern cryptography, J. Katz, Y. Lindell, Chapman&Hall/CRC, 2007\n- Lecture Notes on Cryptography, S. Goldwasser, M. Bellare, online version\n- Elliptic Curves: Number Theory and Cryptography, Lawrence C. Washington, Chapman&Hall/\nCRC, 2nd edition, 2003\nCIT3330003: Kryptografie | Cryptography\n- Handbook of Applied Cryptography, Alfred J. Menezes, Paul C. van Oorschot and Scott A.\nVanstone, CRC Press, 1996",
    "lv_sws_lecturer": "Eckert, Claudia; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nKryptografie (CIT3330003) (Vorlesung mit integrierten Übungen, 4 SWS)\nEckert C [L], Andreas M, Eckert C"
  },
  {
    "module_id": "CIT4310000",
    "title": "Quantum Computing Software Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The students will be evaluated in a project work how well they can work and generate solutions with the covered frameworks. Using the expertise which is built up during the course of the semester, the students eventually need to realize a quantum computing application at the end of the semester. The final grade will reflect whether/how well the students can use the frameworks and whether/how well they can utilize them to realize applications/solutions based on quantum computing. The evaluations are conducted through code insprection as well as a presentation by the student.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Programming Skills",
    "content": "Quantum computers are becoming a reality. They offer new and powerful paradigms while also introducing new challenges, which, in turn, need different tools and methods to develop with the new paradigms. Accordingly, the design and realization of corresponding quantum computing solutions differs significantly from the conventional design and, hence, requires new software solutions and design methods. This practica provides an introduction into the quantum computing paradigms as provides hands-on experiences on corresponding software tools and design automation methods. Different frameworks focused on quantum computing are presented and used to realize selected quantum algorithms in practice. CIT4310000: Quantum Computing Software Lab | Quantum Computing Software Lab [Qua SW Lab]",
    "learning_outcomes": "At the end of the lab, students will have a detailed insight into different software frameworks and will be able to evaluate their respective advantages and disadvantages. Based on that, they will be able to efficiently conceptualize, implement, and evaluate own quantum computing solutions using the covered software frameworks.",
    "teaching_methods": "The module will start with presentations introducing the basic concepts of quantum computing and representative quantum algorithms. With this as basis, the students will then have the opportunity to deepen their knowledge through individual hands-on experiences with corresponding software frameworks. This starts with simple exercises for each framework at the beginning and ends with comprehensive development/designs tasks that need to be conducted using the frameworks. Eventually, with this as basis, the students will develop, design, implement, and evaluate a quantum computing application by employing one or more of these frameworks.",
    "media": "Lecture slides, software tools, tutorial material.",
    "literature": "- Nielsen and Chuang \"Quantum Computation and Quantum Information\"\n- The Qiskit Textbook",
    "lv_sws_lecturer": "Wille, Robert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nQuantum Computing Software Lab (Praktikum, 4 SWS)\nWille R [L], Wille R"
  },
  {
    "module_id": "CIT4310001",
    "title": "Praktikum ASIC Design von Hardwarebeschleunigern für RISC-V",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Bewertung des Praktikums erfolgt in Form einer 30-minütigen mündlichen Prüfung im Rahmen eines Prüfungsgesprächs. In diesem werden das Verständnis für ein gutes Design des entwickelten Beschleunigers, sowie die erlangten praktischen Fähigkeiten nachgewiesen. Als Basis für das Gespräch dient die im Praktikum entsprechend der Spezifikationen angefertigte Beschleunigerimplementierung, deren hohe Qualität vom Studierenden erläutert wird, sowie ein während dem Praktikum anzufertigendes Labortagebuch. Letzteres dient auch dem Nachweis der Befähigung zur selbstständigen Arbeits- und Projektplanung. Um die Qualität des Designs zu prüfen, werden Fragen zum Design und der entsprechenden Optimierungen gestellt. Zudem zeigen die Studierenden anhand einer kurzen Demonstration die Fähigkeit, ASIC Toolchains sicher zu bedienen und entsprechende Fragen zur Funktionsweise der Werkzeuge beantworten zu können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Vorkenntnisse aus den Bereichen:\n- VHDL, Verilog oder SystemVerilog\n- Digitaltechnik\nGrundlegende Kenntnisse aus dem Bereich Digitaltechnik/Kryptografie, wie sie z.B. in folgenden\nModulen vermittelt werden:\n- Angewandte Kryptologie\n- Circuit Design for Security",
    "content": "In diesem Modul wird ein ASIC Design basierend auf einer RISC-V Plattform umgesetzt, welche durch einen Hardware-Beschleuniger erweitert wurde. Dazu werden wechselnde, in der Kryptologie weit verbreitete Beschleuniger implementiert. Das Praktikum besteht aus zwei Teilen:\n- Im Einführungsteil wird die benötigte Methodik für die Durchführung der Projektphase\nbesprochen. Dabei wird der zu entwickelnde Beschleuniger diskutiert und die RISC-V Plattform vorgestellt. Zudem folgt eine Übersicht über den Workflow im ASIC Design.\n- Im Projektteil implementieren und testen die Studierenden selbständig mit Unterstützung\nvon Tutoren und Mitarbeitern den Hardware-Beschleuniger. Dieser wird anschließend in das bereitgestellte RISC-V Design integriert und getestet. Anschließend wird mittels entsprechender Werkzeugen ein ASIC Design erstellt und dessen Kennzahlen ausgewertet.",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage Hardware- Beschleuniger für kryptografische Anwendungen selbständig zu implementieren und in ein bestehendes RISC-V Mikrocontroller-Design zu integrieren. Zudem können die Studierenden, kommerzielle Werkzeuge für das ASIC Design bedienen und auf ein beschleunigtes RISC-V Design anwenden. Konkret bedeutet dies:\n- Die Studierenden sind in der Lage, einen Hardware-Beschleungier entsprechend einer\nSpezifikation in VHDL, Verilog oder SystemVerilog zu implementieren.\n- Die Studierenden können den Beschleuniger in ein bestehendes RISC-V Design integrieren.\n- Die Studierenden verfügen über praktische Fähigkeiten, ein ASIC Design mittels gewöhnlicher\nASIC-Tools zu erstellen.\n- Die Studierenden sind in der Lage ihre Arbeitsabläufe und die Durchführung eines Projekts im\nBereich der Hardwareimplementierung selbständig zu planen.",
    "teaching_methods": "- Frontalunterricht mit Diskussion im Einführungsteil zur Vermittlung des Hintergrunds und des\nspezifischen Wissens, das zur Projektdurchführung notwendig ist.\n- Selbststudium mit Tutorunterstützung in der Projektphase.",
    "media": "Folgende Medienformen finden Verwendung:\n- Powerpoint, Tafelarbeit\n- Lehrbuch/Publikationen",
    "literature": "Die für das Projekt benötigte aktuelle Literatur wird im Kurs benannt.",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum ASIC Design von Hardwarebeschleunigern für RISC-V (Praktikum, 4 SWS)\nKarl P [L], Pehl M, Schupp J"
  },
  {
    "module_id": "CIT4310002",
    "title": "Measurement and Filtering of Bioelectrical Signals",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "with further references and Moodle course Module Exam The module is examined as pass/fail examination. For this purpose, three subareas of signal processing and measurement technology are performed. The evaluation of the laboratory performance (pass/fail) is based on the fulfillment of a multi-stage experiment, which contains experimental and theoretical parts as well as the presentations of these parts and a final report about the parts. The module is divided into 3 work phases, 3 presentation phases and a final report. Students will receive in total 800 points for the working phases (250 points), the presentations (300 points) and the final report (250 points). The module is passed if at least 50% of the points have been achieved.",
    "repetition": "",
    "recommended_prerequisites": "The requirements for this module are as follows:\n• students must be familiar with at least one programming language or eager to learn an\nappropriate programming language. Support on basic programming skills cannot be provided. The\nstudents can use a programming language of their choice for this module. The assignments of the\nfirst measuring @ home part is based on Matlab but you are free to use something else, but then,\nour support is limited\n• students must have a basic knowledge on digital filtering and digital signal processing.\n• students must be able to work in teams (self-organized).\n• students must have basic knowledge on literature research, scientific writing, and on LATEX, or at\nleast be eager to learn it.\n• students need a computer or a laptop – we mainly support Windows 10 and Windows 11 OS.\nThere is only basic support for MacOS, in case Linux is used, there might be problems with the\nsupport of the required audio interface. We will not support other operating systems although you\nare welcome to use them.",
    "content": "Biosignals refer to signals recorded from the human body. They can be either electrical (e.g. clectrocardiogram (ECG), electroencephalogram (EEG), electromyogram (EMG), etc.) or non- electrical (e.g. breathing, movements, etc.). The acquisition and processing of such signals play an important role in clinical routines. They are usually considered as major indicators which provide clinicians and physicians with useful information during diagnostic and monitoring processes. Thus, when dealing with biosignals, special attention must be paid to their acquisition, their analysis and their processing capabilities which constitute the final stage preceding the clinical diagnosis. Naturally, the diagnosis is based on the information provided by the processing system. In such cases, vast responsibility is placed on this system. Therefore, specific attention should be paid to the way these signals have to be processed. As you are aware, clinicians dealing with processed signals care little about the algorithm that has been implemented in their system to extract the required information. For them, the final results are all that counts. Generally speaking, signal processing, in particular digital signal processing, has today become a huge universe, incorporating a wide range of techniques and approaches. To get a comprehensive overview of the whole corpus of published techniques is far from straightforward. In fact, many fields deal with digital signal processing including mathematics, electrical engineering, computer engineering, and so on. In this module, you will\n• conduct several simple experiments to understand the principles of the discrete Fourier\ntransform, the acquisition and evaluation of signals and thus, learn the basics of metrology. The assignments ranges from Fourier transformation over transfer functions to noise and the characteristics of the measurement system.\n• learn how to generate publication-ready graphs\n• search for literature, implementations, toolbox, etc. on specific dedicated topics of digital signal\nprocessing with focus on ECG as a model system\n• search for, read, and understand current research papers on ECG signal processing\n• investigate common artifacts like power line interference, baseline wander, respiration and motion\nartefacts\n• measure disturbed and undisturbed, healthy and pathological ECG signals with an ECG\nsimulation system\n• implement various digital filters to remove different artifacts or to extract different features of an\nECG\n• present and discuss your results to your peers in several workshops\n• write a final report on your results",
    "learning_outcomes": "After participating in this module, students are able to:\n• write programs for signal generation and signal acquisition (programming skills)\n• understand and apply the principles of the discrete Fourier transformation and windowing\n• acquire, analyze and evaluate signals, averaging\n• measure analyze and evaluate frequency responses, noise floor\n• design, characterize and evaluate a measurement system\n• identify, analyze, and evaluate signal properties of biosignals and know their consequences for\nthe data acquisition\n• recognize and evaluate the different artifacts which might occur during the measurement of\nbiosignals\n• explain the origin of the ECG\n• describe the technical realization of bioamplifiers\n• prepare useful test signal data sets for the evaluation of filters\n• differentiate and analyze the artifacts in measured signals\n• compare different types of filters and classify them according to the usefulness for ECG filtering\n• consider different filters and select the appropriate one to remove different artifacts\n• generate publication-ready graphs\n• write legible measurement reports",
    "teaching_methods": "The students carry out the internship together in teams of usually three students. This module consists of\n• Five topics from the field of basic measurement technology with individual exercises to be solved\nby the teams. For this purpose, each participant receives a small measurement system on loan for carrying out the measurements (Lab@Home). The results of the individual tasks are presented to all participants in a workshop (peer review) and discussed.\n• Each team will receive a randomly assigned topic on digital filters with a special focus on ECG\nmeasurements. The teams will conduct an appropriate literature review based on existing starting literature and present their results in a joint workshop with all participants. The goal is to bring each participant up to the same level.\n• Each team will receive a randomly assigned artifact in ECG measurement with the task of\ndeveloping and evaluating appropriate filtering strategies. For this purpose, measurements will be performed in our laboratories with different ECG systems and a patient simulator. Possibly, measurements can also be performed in self-experimentation (under supervision). In a final joint workshop the results will be presented and discussed (peer review).\n• A short final report on the filter methods used concludes the practical part. The results of the\nmeasurements from the first part (Lab@Home) will only be recorded in Moodle and do not have to be included in the report.\n• Irregular ZOOM meetings with supervisors depending on questions and difficulties.",
    "media": "Lab work, Homework, measurements at home, on-campus workshops, screencasts and recorded\nlectures.",
    "literature": "See script with further references and Moodle course",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBEMP-Praktikum 05: Messung und Filterung von bioelektrischen Signalen (Praktikum, 4 SWS)\nHemmert W [L], Gleich B ( Rapp J ), Hemmert W"
  },
  {
    "module_id": "CIT4310003",
    "title": "Programmable Communication Networks Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "The module examinations consists of a graded semester project done as group work, graded individual exercises, and an oral mid term exam. Learning outcome of the design, test and measurement of programmable communication networks, as well as the ability to work in teams and team organization, are evaluated and graded by the delivery of a semester project, for which the students work in groups and take over different individual tasks within a group. The grading is based on the ability of problem solving, scientific writing, presentation and demonstration of results. The ability of an individual student is evaluated during the semester through multiple exercises and an oral mid-term exam. The oral mid term exam evaluates a student's acquired theoretical knowledge on the application of the methods of programmable networks. The exercises evaluate a student's acquired practical programming skills in using tools for programmable networks. There are in total 5 exercises. They are graded based on a written questionary and prepare the students for the semester project. The final grade is calculated as follows:\n- 20% five exercises\n- 25% oral mid-term exam (20 min)\n- 55% semester project (group work) (final report of 4 pages, code, presentation, demo)",
    "repetition": "CIT4310003: Programmable Communication Networks Lab | Programmable Communication Networks Lab [PCN-Lab]",
    "recommended_prerequisites": "Basic knowledge of communication networks:\n- network protocols and protocol stacks (TCP/IP and MAC layer)\n- performance analysis of communication networks\n- basic network algorithms for resource management, routing, scheduling, etc.\nProgramming skills.",
    "content": "Programmable Communication Networks describes a fundamentally new paradigm for the control and operation of communication networks with a software focus. Wide-spread related concepts are P4 (Programming Protocol-independent Packet Processors) and SDN (Software-Defined Networking). The control software is decoupled from the forwarding hardware and moved to a central entity the SDN or P4 controller. Programmability of networks opens fundamentally new opportunities for the design of communication systems. The module addresses state-of-the art challenges in communication systems in the form of a group project. The goal of the project is to develop, test and measure communication systems. The project's topic and problem definition will be given at the beginning of the semester. As a start, the participants will work on reviewing the literature available on the topic and creating a project plan. The project is implemented as a group work, with supervisors available to solve and discuss problems. Finally, the implemented communication system is evaluated through measurements or simulation. Each semester there would be given project topics.",
    "learning_outcomes": "Upon successful completion of the module, students are able to develop a communication system based on concepts of programmable communication networks (e,g, P4, SDN). They are able to apply appropriate methods to evaluate communication systems.",
    "teaching_methods": "The module addresses state-of-the art challenges in communication systems in the form of a group project. The goal of the project is to develop, test and measure communication systems. The project's topic and problem definition will be given at the beginning of the semester. As a start, the participants will work on reviewing the literature available on the topic and creating a project plan. The project is implemented as a group work, with supervisors available to solve and discuss problems. Finally, the implemented communication system is evaluated through measurements or simulation.",
    "media": "As a teaching approach, practical exercises and tutorials will be given by lab supervisors.\nThroughout the project, discussions will take place about issues and ideas on the basis of the\ngiven problem and literature.\nCIT4310003: Programmable Communication Networks Lab | Programmable Communication Networks Lab [PCN-Lab]",
    "literature": "Will be announced in the course.",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProgrammable Communication Networks Lab (Praktikum, 5 SWS)\nBermudez Serna C [L], Kellerer W, Zerwas J, Aykurt K, Ursu R, Wietfeld A"
  },
  {
    "module_id": "CIT4310004",
    "title": "Projektpraktikum Biosignalverarbeitung und Modellierung",
    "level": "",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 60,
    "hours_presence": 120,
    "examination_achievements": "Die Studierenden sollen insgesamt drei Berichte einreichen, wobei jeder Bericht ihre Fähigkeiten in Bezug auf die folgenden Punkte prüft\n- ihr Wissen über die neuesten Technologien, Algorithmen und Anwendungen für die Echtzeit-\nBiosignalanalyse im Rahmen des Konzepts der Gehirn-Computer-Schnittstellen (Spring School)\n- die Korrektheit und Vollständigkeit ihres Verständnisses in Bezug auf alle Schlüsselkonzepte\ndieses Kurses wie Signalvorverarbeitung, Datensegmentierung, Merkmalsextraktion, Merkmalsauswertung, Klassifizierung und Modellbewertung (Tutorium)\n- ihre Kooperations- und Teamarbeitsleistung, ihre Fähigkeit, neuronale Signale mit EEG-Geräten\naufzuzeichnen, und ihre Fähigkeit, praktische Modelle für eine Echtzeit-Gehirn-Computer- Schnittstelle zu implementieren. (Praxisprojekt) Sie haben eine Woche Zeit für den Bericht über die Frühjahrsschule (~2 Seiten), drei Wochen für den Bericht über das Tutorium (~2 Seiten) und zwei Monate für den Bericht über das praktische Projekt (mindestens 15 Seiten, höchstens 20 Seiten). Für das Praxisprojekt muss jede Gruppe ihre Projekte vor einem Expertengremium präsentieren und verteidigen (die Berichte über das Praxisprojekt werden durch eine Präsentation ergänzt). Die Endnote ergibt sich aus dem Durchschnitt der Laborberichte (10 % Bericht für die Springschool, 30 % Bericht für das Tutorium und 20 % für die Projektarbeit, 40% Präsentation/Verteidigung für das Praxisprojekt).",
    "repetition": "",
    "recommended_prerequisites": "Programmierkenntisse in Python und MATLAB sind vorausgesetzt\nBasiswissen im Bereich statistische Signalverarbeitung und Machinellem Lernen ist\nempfehlenswert\nCIT4310004: Projektpraktikum Biosignalverarbeitung und Modellierung | Practical Course Biosignal Processing and\nModeling",
    "content": "Das Projektpraktikum Biosignalverarbeitung und Modellierung umfasst theoretische Vorlesungen und praktische Übungen zu elektrophysiologischen Sensorsystemen, sowie Methoden zum Experiment Design, zur offline und online Signalverarbeitung und Mustererkennung / Maschinellem Lernen. Die Studierenden lernen lektrophysiologische Signale (z.B. Elektroenzephalographie, Elektromyographie) aufzunehmen, zu verarbeiten und für Gehirn-Computer Schnittstellen (BCI) Anwendungen zu klassifizieren. Im ersten Teil des Kurses wird ein Tutorial zur Vertiefung der Kursinhalte abgehalten. Der zweite Teil des Kurses ist hauptsächlich einem praktischen Projekt gewidmet welches Studenten ermöglicht, praktisch mit einem BCI Paradigma zu arbeiten (Gruppenprojekt von bis zu 4 Studierenden).",
    "learning_outcomes": "Nach dem Kurs ist der Student dazu in der Lage:\n- selbstständing ein Experiment zur Datenaufnahme mit elektrophysiologischen Sensoren\ndurchzuführen.\n- selbstständig die Datenqualität zu beurteilen und Signalverarbeitungsmethoden zur Extraktion\nrobuster Information aus den aufgenommenen Daten anzuwenden.\n- selbständig prädiktive Datenmodelle und Klassifikatoren auf Basis von Methoden aus der\nMustererkennung und Maschinellem Lernen zu erstellen und zu evaluieren.\n- selbstständig ein praktisches Projekt zu bearbeiten, sowie die Ergebnisse in einem ausführlichen,\nschriftlichen Report zusammen zu fassen.\n- das Projekt vor einem Expertenkomitee vorzutragen und zu verteidigen.",
    "teaching_methods": "- Computer-unterstützte Präsentationen\n- Die Studenten arbeiten mit bereitgestellten Computern und elektrophysiologischen\nSensorsystemen (e.g. verschiedenen EEG-Systemen)",
    "media": "- Computer-unterstützte Präsentationen\n- Die Studenten arbeiten mit bereitgestellten Computern und elektrophysiologischen\nSensorsystemen (e.g. verschiedenen EEG-Systemen)",
    "literature": "",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Biosignalverarbeitung und Modellierung (Vorlesung, 1 SWS)\nCheng G [L], Malekmohammadi A\nProjektpraktikum Biosignalverarbeitung und Modellierung (Praktikum, 5 SWS)\nCIT4310004: Projektpraktikum Biosignalverarbeitung und Modellierung | Practical Course Biosignal Processing and\nModeling\nCheng G [L], Malekmohammadi A"
  },
  {
    "module_id": "CIT4310005",
    "title": "Remote Machine Intelligence Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The evaluation is based on several lab assignments where students write code and algorithms and implement them in the robot to solve a particular problem or perform a specific task. After completing the lab assignments, students demonstrated their ability to solve the given issues of each relative part of the course, such as fundamentals of robotics, remote control systems with haptic devices and drones. One primary and complex task that weighs 40% of the grade will be assigned to the student at the end of the semester, accompanied by the final presentation. It enables them to apply their learning from all the lab assignments to combine all the skills. Then, they are able to overcome a comprehensive problem related to all the topics from the lectures. Specifically, the following distribution will be used:\n● Four Lab assignments, each weighing 15% of the final course grade and is assessed as\no Write code and algorithms (5%): use of C, python to demonstrate the algorithm in simulation and real embedded system. o Implement the real systems (5%): experiences in handling real robots, haptic devices and drones. o Solve the given problem (5%): know how to apply the learning to overcome the specific issues.\n● The final task weighs 40% of the final course grade and is assessed as\no Programming (10%): Know how to implement the complete a robotic program to a specific task. o Solving the task (25%): Apply the knowledge from all lecture sections to overcome a complex issue. o Final presentation (5%): Summary skills to report the illustration of the problem-solving solution.",
    "repetition": "",
    "recommended_prerequisites": "- Fundamentals of control theory\nCIT4310005: Remote Machine Intelligence Lab | Remote Machine Intelligence Lab [RMIL]\n- Fundamentals of robotics\n- Fundamentals of mobile robotics\n- Fundamentals of 3D computer vision\n- C, C++\n- Python",
    "content": "Overview of robotics and control o Introduction to robotics and control of robotic systems: a general overview of kinematics, dynamics and control of the robotic systems are given. o Motion control: Decentralized control, PD plus gravity and inverse dynamics controller and their closed-loop dynamics are illustrated. o Force/impedance control: The impedance control in task space and joint space is shown is reviewed.\n● Telerobotic systems and applications\no Overview of telerobotics: the importance of telerobotics and different examples are reviewed. o Control architectures: different control architecture used in teleoperation is introduced. ▪ Direct control ▪ Shared control ▪ Supervisory control o Stability and transparency in tele-manipulations: the importance of stability and transparency is shown in illustrative example scenario. o Telepresence reference platform at MIRMI: our telepresence setup with different protocols is introduced, and the performance of the system in contact with different environments is presented. o Clear intensive guidance for programming with haptic devices o Designing a teleoperation system for remote interaction and skill transfer\n● Teleoperation with haptic devices\no Intensive guidance for programming with haptic devices and designing teleoperation system for remote interaction and skill transfer. o Making students user-ready to haptic technology and challenges for teleoperation systems over real communication networks (e.g. system stability, communication load, etc.). o Working with haptic devices and remote robot in virtual reality, introduction to ROS, Chai3D, and then a quick overview about available examples. o Overview of teleoperation design in real environment and corresponding stability issues, and remote learning from demonstration technologies. o Writing codes and programming the teleoperation system either in virtual or real environments to perform a certain number of tasks that are ranging from simple to complex.\n● Drone and its application\no Simulation (Gazebo) and a real one that has basic semi-automatic control already implemented, including on-board localization. o Students will implement is on-board occupancy mapping using the mounted depth camera, as well as (local) planning to avoid collisions with the environment. CIT4310005: Remote Machine Intelligence Lab | Remote Machine Intelligence Lab [RMIL] o Develop a final demo, in which the drone can be steered intuitively with a keyboard, while the drone is inherently safe and will only ever move as far as safe to avoid colliding with the environment.",
    "learning_outcomes": "After successful completion of the course, students have understood the working principles of teleoperation systems with haptic feedback. They are ready to write code to connect haptic devices with remote robots, manipulate the robots and interact with remote objects while perceiving stable force feedback. Moreover, the students are also able to program and remotely transfer necessary knowledge to the robot for executing complex tasks at full autonomy. Besides, the students will be able to explain the main components of autonomous drones, i.e. state estimation, mapping, motion planning and control. In addition, they will know in detail the working principles of 3D occupancy mapping and planning, and be able to implement them as a real-time ROS/C++ application. They will furthermore be given awareness for what intuitive user interaction requires regarding ease of use as well as safety.",
    "teaching_methods": "During the lectures, students are instructed in a teacher-centered style. In the lab students will perform several experiments and solve various assignments. In particular:\n● Lectures (for direct transfer of theoretical knowledge)\n● Lab assignments (for testing the learned approaches)\n● Final task (to evaluate whether students can transfer the methods they have learned during the\ncourse and applied to real-life complex task)",
    "media": "-Presentations (Projector, Whiteboard)\n- E-learning platform Moodle, and Zoom\n- Robots, Task Boards and tactile devices.\n- One-hour interactive presentation, four-hour lab: programming and operating the manipulators,\nhaptic devices or drones.",
    "literature": "- Siciliano, Bruno, Oussama Khatib, and Torsten Kröger, eds. Springer handbook of robotics. Vol.\n200. Berlin: springer, 2008.\n- Peter F. Hokayem#, MarkW. Spong. Bilateral teleoperation: A historical survey, Automatica 2006.\n- Jae-young Lee, Shahram Payandeh. Haptic Teleoperation Systems - Signal Processing\nPerspective. Springer, 2015\n- S. Sonia Chernova, Andrea L. Thomaz. Robot Learning from Human Demonstration. Springer,\n2014\n- D. Fox, S. Thrun, W. Burgard: Probabilistic Robotics\n- Siliciano, Bruno, et al. \"Robotics: modelling, planning and control.\" New YorN, NY, USA: Springer\n(2010): 415-418.\n- Peter F. Hokayem#, MarkW. Spong. Bilateral teleoperation:An historical survey, Automatica 2006.\n- E. Steinbach, et, al. Haptic Communications, Proceedings of IEEE, 2012\nCIT4310005: Remote Machine Intelligence Lab | Remote Machine Intelligence Lab [RMIL]\n- Lawrence, Dale A. \"Stability and transparency in bilateral teleoperation.\" IEEE transactions on\nrobotics and automation 9.5 (1993): 624-637.\n- Nuño, Emmanuel, Luis Basañez, and Romeo Ortega. \"Passivity-based control for bilateral\nteleoperation: A tutorial.\" Automatica 47.3 (2011): 485-495.\n- Chen, Xiao, et al. \"On the Communication Channel in Bilateral Teleoperation: An Experimental\nStudy for Ethernet, WiFi, LTE and 5G.\" 2022 IEEE/RSJ International Conference on Intelligent\nRobots and Systems (IROS). IEEE, 2022.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRemote Machine Intelligence Lab (Praktikum, 4 SWS)\nHaddadin S [L], Adamczyk A, Le Q, Leutenegger S, Moortgat-Pick A, Steinbach E, Swikir A\nRemote Machine Intelligence Lab (Vorlesung, 2 SWS)\nHaddadin S [L], Adamczyk A, Le Q, Leutenegger S, Moortgat-Pick A, Steinbach E, Swikir A"
  },
  {
    "module_id": "CIT4310006",
    "title": "6G Business Modeling & Prototyping",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 9,
    "hours_total": 270,
    "hours_self_study": 170,
    "hours_presence": 100,
    "examination_achievements": "The module examinations consists of three graded presentations. Learning outcome of the application of methodologies and to cope with the challenges in interdisciplinary project teams are graded by three presentations, where students present their assigned tasks in each project team. The three presentations represent the achievements at three steps of the project work: 1. midterm with a focus on technology analysis, 2. midterm with a focus on use case development, and 3. final presentation. The final grade is calculated as follows:\n- 100% three presentations of 10 min (midterm 25% /midterm 25% / final 50%)",
    "repetition": "",
    "recommended_prerequisites": "None required",
    "content": "The students will join an interdisciplinary team and get matched with a real world problem to work on. Each team of four to five students will collaborate with an academic researcher in the field of communication technology to develop a viable business case and product for the provided technology. Within the 12 weeks the students will receive input about the tools and methodologies they need to transform their assigned technology into a viable business. The Business Modelling and Prototyping has 3 phases:\n● In the Technology Immersion phase the students will be introduced to the Design\nCIT4310006: 6G Business Modeling & Prototyping | 6G Business Modeling & Prototyping [6GBMP] Thinking Methodology of problem solving, practice expert interviews with experts in the field of communications technology and assess the shortcomings and opportunities of their technology. Furthermore, they will be introduced into concepts of project management and team communication.\n● In the Use Case Mapping phase, the student teams will learn about ideation\nmethods, explore user centric opportunities for their technology and assess their market feasibility. Additionally, the students will be exposed to university spin-off founders that can inspire with their professional experience.\n● In the Modelling and Prototyping phase the students will iterate over a value\nproposition, model a viable business model and prototype a user centric product. Finally, the students will be coached in presentation and storytelling and pitch their results in front of a large audience.",
    "learning_outcomes": "Upon successful completion of the module, students are able to apply innovation methodologies in a project team. Moreover, they are capable of coping with the challenges of working in interdisciplinary project teams. They are able to create and give presentations and gain experience in working on extensive real world problems. Specific learning outcomes for the course are as follows. Students are able to: 1. analyze the opportunities and limitations of a disruptive technology 2. plan, execute and document expert and user research 3. apply the Design Thinking methodology to an innovation problem 4. ideate around a problem space, develop use-cases and analyze their market potential 5. develop and document a viable business model 6. prototype a user centric product 7. use stroy-telling tools to captivate an audience and present an idea 8. organize themselves in a team, communicate openly and address problems in teamwork",
    "teaching_methods": "The Business Modelling and Prototyping course is designed as one comprehensive project with a predefined project plan aiming to create a viable business out of a disruptive technology with a pitch as a final comprehensive result. The students are staffed into interdisciplinary innovation teams. The teams work independently towards fixed milestones, gain methodology and topic related knowledge in lectures and workshops. They are guided by regular coaching sessions by the teaching staff. Students present their results regularly in order to obtain feedback on their outcomes.\n● Lectures: According to the project phase, external and internal lecturers from\nacademia and industry teach the students the methodology necessary for working on their project.\n● Topic Workshops: Experts from different fields of industry and academia that provide\ndiverse views on the Communication Industry are invited to illustrate different approaches and impart insights from their professional experience. CIT4310006: 6G Business Modeling & Prototyping | 6G Business Modeling & Prototyping [6GBMP]\n● Coaching Sessions: Coaching sessions are scheduled regularly during the course. In\nthese coaching sessions, the teams discuss their work with the course instructors and teaching assistants and get advice for possible areas of improvement.\n● Midterms: In these sessions, students present the current stand of their development\nand have the opportunity to collect feedback from the class and the teaching assistants on the current status of their work.\n● Final Presentation: The students present their results to a larger external audience\nand answer questions on their discoveries",
    "media": "As a teaching approach, presentations will be given. Throughout the course, discussions will take\nplace about issues and ideas on the basis of the given problem and literature.",
    "literature": "will be announced in the course",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\n6G Business Modeling & Prototyping (Praktikum, 4 SWS)\nVega Vermehren J, Wiethof F"
  },
  {
    "module_id": "CIT4310007",
    "title": "Robot Learning and Control Project Course",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "In this course, teams of up to 4 students will work on a joint project in the field of robot learning and control. The project will include algorithm development, software implementation, and real-world robot experiments. The mark is composed of quality of the software implementation and results of the final robot demonstration (50%), a written report summarizing the results (25%, length of report: up to 3 double-column pages per team member), and a presentation followed by questions and a discussion (25%, length of presentation: 5 minutes per team member).",
    "repetition": "",
    "recommended_prerequisites": "Fundamentals of robotics, machine learning, control theory, and computer vision.",
    "content": "Students will gain hands-on experience in robot learning and control by developing their own comprehensive hardware/software solution for a given robotics problem. Topics will vary each term. Student teams work jointly on the hardware and software solution, and develop a robot demonstration to showcase their results. The main goal of this course is to teach robotics problem solving skills as well as project management and teamwork.",
    "learning_outcomes": "Students will learn to independently solve robotics control and learning problems. This includes analyzing the problem, developing a project plan, exploring appropriate solutions, and demonstrating the results on real robot hardware. Students will also learn to work efficiently as a team, document their approach, and communicate their results. CIT4310007: Robot Learning and Control Project Course | Robot Learning and Control Project Course",
    "teaching_methods": "Students will be given introductory lectures and guided through the process of finding relevant literature and discussing it. Regular meetings with a scientific advisor will support this process. In particular, the advisor will provide an introduction to the topic, an initial set of relevant literature, and early feedback on the report and presentation. Each team works on an individual problem with a dedicated adviser. Through regular meetings, the advisor will support the project development by providing an introduction to the topic, an initial set of relevant literature, continuous feedback throughout the implementation process, and early feedback on the robot demonstration, report and presentation.",
    "media": "The following types of media are used:\nThe students will work with provided simulation and computation software.\nThe students will implement their work in software and demonstrate it on real experimental\ntestbeds.\nThe students will present their work using slides and videos.",
    "literature": "The required literature references will be provided depending on the topic.",
    "lv_sws_lecturer": "Schöllig, Angela; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRobot Learning and Control Project Course (Praktikum, 4 SWS)\nSchöllig A [L], Schöllig A"
  },
  {
    "module_id": "CIT4310008",
    "title": "Brain-inspired Computing for AI",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Examination with the following elements:\n- Oral presentation about the design results per student group: 20%. Each group will consist of\nup to 1-3 students and the presentation will be around 20-25min followed by 10-15min questions. Students will present their results and findings in the project. Every student has to contribute to the presentation. Every student discusses with the examiner his/her findings, and answers related questions. The questions are about the concepts of artificial intelligent (AI) acceleration, brain-inspired computing (both hardware and software) along with explaining the gains in the performance, power, energy, reliability from circuits and algorithms.\n- Written report 20% (at least 5 pages) per student about the key findings during the development\nprocess. The report contains explanation of the targeted problem and the motivation of the proposed solutions. In addition, the report presents the obtained results, analysis, and findings of implemented solution and explain the results from the lab tasks. The report summarizes the challenges that were faced during the implementation.\n- Project: 60%. The lab will consist of different tasks which the students need to implement and\nanalyze. Some of the tasks last can be completed in one session or may last to 2-3 sessions. The lab tasks will be covering system integration, circuit implementation using SPICE simulations, algorithm programming. Students will be tested to implement circuits using SPICE for brain- inspired computing and analyze the figure of merits such as performance, energy, reliability, area, and power. Students will work on developing a brain-inspired algorithm to accelerate a certain machine learning task. The algorithm will be written a programming language which the student can select such as C++, Python, etc. CIT4310008: Brain-inspired Computing for AI | Brain-inspired Computing for AI [BiC-AI]",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge in circuits;\nGood knowledge in programming;",
    "content": "Circuit design implemented using SPICE to perform brain-inspired computing. Simulation and validation of the circuit functionality. Circuit analysis of the figure of merit of the system like energy, reliability and performance. Algorithm writing in a programming language like Python or C++ for a brain-inspired machine learning. Integrating both HW and SW parts in one system and analyzing it. Project management: Coordination, integration of submodules, verification in system environment",
    "learning_outcomes": "At the end of the module students are able to analyze and evaluate circuits that perform brain- inspired computing to accelerate machine learning applications and learn the necessary concepts of HS/WS codesign for brain-inspired systems. They are capable of designing and creating circuits to perform brain-inspired computing with complex system components as well as develop brain- inspired computing algorithms. They are also capable to analyze the entire systems of brain- inspired computing with the HW/SW interactions.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students consolidated knowledge is acquired by providing subtasks of increasing complexity and difficulty in the laboratory notes and scripts. Teaching method: During the lectures students are instructed in a teacher-centered style. The lab is performed by the students' self-coordination assisted by a student tutor. Students are free to work on their own, according to their own schedule, on the laboratory tasks. Students can work on the laboratory either in the lab, or at home. For some tasks where certain software tool with license is necessary, students need to do the task in the lab. An adviser is available who will support them in case of significant difficulties.",
    "media": "- Lab Task Description (2-3 pages per session) and 3x 90 minute lab introduction (lecture style).\nThe following kinds of media are used:\n* Introductory lectures\n* Lecture slides available\n* Laboratory notes with detailed descriptions of tasks and tool environments\n* Individual discussions with advisor\nCIT4310008: Brain-inspired Computing for AI | Brain-inspired Computing for AI [BiC-AI]",
    "literature": "Springer book: \"Neuro-inspired Computing Using Resistive Synaptic Devices\", Editor: Shimeng Yu.\nKanerva, Pentti. \"Hyperdimensional Computing: An Introduction to Computing in Distributed\nRepresentation.\"",
    "lv_sws_lecturer": "Amrouch, Hussam; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBrain-inspired Computing for AI (Praktikum, 4 SWS)\nAmrouch H, Thomann S"
  },
  {
    "module_id": "CIT431009",
    "title": "Wireless Communications Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The examination consists of submitting five written reports as well as packages of program code for each of the five topic blocks. In these, the student demonstrates an understanding of how to apply and interpret the discussed coding techniques and theoretic methods. The final grade is the average of those individual grades.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Channel Coding or Channel Codes for Iterative Decoding\n- Information Theory",
    "content": "Background: Overview over architecture of digital transceivers; 1. channel coding using low-density parity-check (LDPC) codes and polar codes; 2. computing the capacity and the normal approximation; 3. combining symbol mapping, channel coding, and demodulation focusing on bit-interleaved coded modulation (BICM) and multi-level coding; 4. computing achievable rates for unknown channels or channels with no closed-form capacity formula using generalized mutual information (GMI); 5. employing channel estimation, equalization, and detection in coded systems; basics of probabilistic shaping to improve spectral efficiency",
    "learning_outcomes": "After successful completion of the module, the student is able to develop and apply coding and modulation techniques relevant to current and upcoming wireless communication standards. CIT431009: Wireless Communications Laboratory | Wireless Communications Laboratory Furthermore, he or she is able to understand the connection to information theory and can reason about performances of optimal and practical systems. In particular, the student is able to compute and interpret achievable rates and facilitate these quantities in the design of coded communication systems.",
    "teaching_methods": "For each topic block there will be a short introduction to the theoretical fundamentals. Students are expected to prepare the lecture notes before this introduction. After this, students work on implementing and discussing provided exercises alone or in small groups and document their results in a report. At the weekly tutor hours, students can receive individual supervision from a lecturer or tutor.",
    "media": "Lecture notes and exercise tasks are provided on Moodle. The lecture is given on the blackboard.",
    "literature": "Additional reading material on each topic is provided with the lecture notes.",
    "lv_sws_lecturer": "Kramer, Gerhard; Prof. Dr.sc.tech.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nWireless Communications Laboratory (Praktikum, 4 SWS)\nLentner Ibanez J, Wiegart T ( Runge C )"
  },
  {
    "module_id": "CIT431010",
    "title": "Practical Course Advanced Robocup@Home",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Unser Ziel ist es, ein Studententeam zu bilden, das am RoboCup@Home-Wettbewerb teilnimmt, dem größten Serviceroboter-Wettbewerb. Im Mittelpunkt dieses Wettbewerbs stehen komplexe wissenschaftliche Fragestellungen wie Mensch-Roboter-Interaktion, mobile Manipulation und Kognition. Folglich wird das Studententeam mit der Entwicklung, Implementierung und Bewertung von Wahrnehmungs-, Lern- und Robotersteuerungsalgorithmen beauftragt, um diese Herausforderungen zu bewältigen. Ziel ist es letztlich, den Studierenden praktische Erfahrungen zu vermitteln, die ihnen die Teilnahme am jährlichen internationalen Ligawettbewerb RoboCup@Home ermöglichen. 1. Im Anschluss an jede Vorlesungseinheit ist von den Studierenden ein kurzer Bericht einzureichen. Es wird insgesamt zwei Berichte geben, jeweils von etwa 3-5 Seiten: eine technische Überprüfung und eine Anforderungsanalyse.. Die technische Überprüfung soll die technischen Berichte früherer Wettbewerbe zusammenfassen und ein Verständnis für die Hintergrundtheorie der Lösungen zeigen, die Vor- und Nachteile jeder Lösung analysieren und die Leistung bewerten. Die Anforderungsanalyse soll die Projektziele, den Arbeitsumfang, den Zeitrahmen, die Ressourcenanforderungen, die erwartete Technologie und Hardware beschreiben, die verwendet werden sollen. Die Berichte werden 10% der Gesamtnote ausmachen (jeweils 5%).. Die Berichte werden separat bewertet, basierend auf der Nummer des überprüften technischen Berichts und dem Verständnis der Hintergrundtheorie, die im Bericht zum Ausdruck kommt. Diese Berichte werden die geplante Arbeitslast für die ersten drei Wochen des Kurses darstellen. Sie sollen sicherstellen, dass die Studierenden die aktuellen Wettbewerbsanforderungen und technologischen Fortschritte systematisch verstehen, veraltete Technologien oder bereits erfolgreich auf den Robotern im Labor implementierte Technologien vermeiden und systematisch für das Abschlussprojekt planen. Dies beinhaltet den rechtzeitigen Zugang zu Entwicklungsmitteln, die systematische Konfiguration der Entwicklungsumgebung und die effiziente Aufteilung der Lernzeit. CIT431010: Practical Course Advanced Robocup@Home | Practical Course Advanced Robocup@Home 2. Die Studierenden müssen eine Projektarbeit vorlegen, in der sie alle während des Semesters erworbenen theoretischen und praktischen Fähigkeiten anwenden. Das Abschlussprojekt wird das Absolvieren einer Herausforderung in Robocup@home sein, die sowohl vom Betreuer als auch von den Studierenden vereinbart wird. Das Projekt wird mindestens drei Themen abdecken: Erkennung und Erkennung von Objekten/Personen, Erkennung von Objektmerkmalen, Objektmanipulation und Aufgabenplanung. Aufgrund der Komplexität eines Servicerobotersystems und der für den Betrieb des Roboters erforderlichen Sicherheitsmaßnahmen wird das Projekt von Teams aus zwei Studierenden durchgeführt. Das Projekt wird jedoch individuell nach dem Lösungsbeitrag jedes Studierenden bewertet. Um das Projekt abzuschließen, müssen die Studierenden eine technisch fundierte Lösung vorschlagen und diese sauber in die vorgeschlagene Software (ROS) implementieren. Die Note wird nach der Vollständigkeit des Lösungsvorschlags und der Klarheit der Umsetzung vergeben. Am Ende des Kurses müssen die Studierenden ihren Lösungsvorschlag einem präsentieren Robocup@home-Challenge in Gruppen. Die Vortragsdauer beträgt pro Gruppe 20 Minuten, davon 15 Minuten Vortrag und 5 Minuten Fragen der Kursleitung. Im Anschluss an die Präsentation erfolgt eine 10-minütige Live-Demonstration. Die Fragen helfen dabei, die Originalität, Solidität, Sauberkeit und Innovation des Studentenprojekts einzuschätzen. Die Demo wird helfen, die Zuverlässigkeit und Leistung der Lösung zu bewerten. Der Projekt Bericht wird helfen, das Verständnis und die Anwendung umfassend zu bewerten. Die Endnote setzt sich wie folgt zusammen: Technische Überprüfung und Anforderungsanalyse: 10 %, Abschlussprojekt: 70 %, Projekt Bericht von etwa 10 Seiten: 10 %, Abschlusspräsentation und demo: 10 %",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Teilnahme am Praxiskurs Robocup@Home und das Bestehen der Prüfung wird dringend\nempfohlen.\nStarker mathematischer Hintergrund in linearer Algebra, Trigonometrie und Infinitesimalrechnung.\nKenntnisse in Robotik, z. B. Bewegungsplanung, Steuerung usw.\nGrundkenntnisse in C++, Python und ROS.\nGrundkenntnisse des maschinellen Lernens, z. B. Objekterkennung, Klassifizierung usw.\nAlle Tutorial-Übungen werden in ROS Noetic (Ubuntu 20.04) implementiert",
    "content": "1. Einführung, Einführung in den Robocup@home-Wettbewerb, historischer Rückblick, Herausforderungen beim Robocup@home-Wettbewerb 2. Überprüfung der Planung Lokalisierung und Navigation, Kartierung und Lokalisierung, Pfadplaner, Navigation in nicht kartierten Umgebungen 2.1.4. Navigation in dynamischen Umgebungen Bewegungsplanung, Hindernisvermeidung in unübersichtlichen Szenen, Bewegungsplanung mit Einschränkungen CIT431010: Practical Course Advanced Robocup@Home | Practical Course Advanced Robocup@Home 3. Rückblick auf die Wahrnehmung Erfassen, maskierte Punktwolkensegmentierung, Objekterkennung Objektbeschriftung, Griffpunkterkennung Mensch-Roboter-Interaktion, Erkennung der menschlichen Körperhaltung, Gestenerkennung, Gesichtserkennung 4. Abschlussprojekt",
    "learning_outcomes": "Analytische Fähigkeiten und technisches Wissen: Durch das Verfassen von Berichten zu technischen Überprüfungen und Anforderungsanalysen erlangen die Studierenden ein tiefgreifendes Verständnis der Technologien und Strategien, die in früheren RoboCup@Home- Wettbewerben verwendet wurden. Dieser Prozess verbessert ihre Fähigkeit, komplexe technische Lösungen zu analysieren, zu bewerten und zu verstehen. Praktische Robotikfähigkeiten und Teamarbeit: Die praktische Erfahrung, ein Abschlussprojekt in Teams zu vollenden, lehrt die Studierenden die praktische Anwendung theoretischen Wissens in der Robotik. Dazu gehört die Arbeit an Objekterkennung, -erkennung, -manipulation und - aufgabenplanung, was Teamarbeit und kollaborative Problemlösungsfähigkeiten fördert. Individuelle technische Kompetenz: Die Studierenden werden anhand ihrer individuellen Beiträge zum Abschlussprojekt bewertet, wobei der Schwerpunkt auf ihrer Fähigkeit liegt, technisch fundierte Lösungen zu entwickeln und diese effektiv mit Software wie ROS umzusetzen. Kommunikations- und Präsentationsfähigkeiten: Der Kurs erfordert von den Studierenden, ihre Projektlösungen zu präsentieren, wodurch sie ihre Fähigkeit, komplexe Ideen effektiv zu kommunizieren, verbessern. Die Live-Demonstration und die Fragerunde entwickeln weiter ihre Fähigkeiten, ihre technischen Entscheidungen zu artikulieren und zu verteidigen. Umfassendes Verständnis und Berichterstattung: Das Schreiben eines detaillierten Abschlussprojektberichts ermöglicht es den Studierenden, ein umfassendes Verständnis des Kursmaterials zu demonstrieren und ihr Wissen auf eine praktische Herausforderung anzuwenden. Insgesamt verlassen die Studierenden den Kurs mit einer Mischung aus theoretischem Wissen, praktischen Robotikfähigkeiten, analytischen Fähigkeiten, Teamerfahrung, individueller technischer Kompetenz und starken Kommunikationsfähigkeiten.",
    "teaching_methods": "Die Vorlesungen werden von Dozenten gehalten. Die Laboraufgaben vertiefen das theoretische Verständnis der Studierenden durch die Präsentation praktischer Beispiele in verschiedenen Anwendungsszenarien. In der Abschlussphase werden die Studierenden ein praktisches Projekt durchführen und dabei sowohl die in den Vorlesungen und Tutorials erlernten theoretischen als auch praktischen Fähigkeiten anwenden, um eine Herausforderung im Robocup@home- CIT431010: Practical Course Advanced Robocup@Home | Practical Course Advanced Robocup@Home Wettbewerb auf einer zugewiesenen Serviceroboterplattform (Pal Robotics Tiago oder Toyota HSRB) zu meistern.",
    "media": "- Präsentationen\n- Übungen im labor",
    "literature": "RoboCup@Home: Analysis and results of evolving competitions for domestic and service ro bots,\nIocchi L., Holz D., Ruiz-del-Solar J. , Sugiura K. and van der Zant T. Artificial Intellig ence, Volume\n229, December 2015, Pages 258–281, DOI: http://dx.doi.org/10.1016/j.artint.2 015.08.002\nArtificial Intelligence: A modern approach. Stuart Russell and Peter Norvig. Pearson Ed.\nSpringer Handbook of Robotics. Bruno Siciliano and Oussama Khatib. 2007. Springer-Verla g New\nYork, Inc., Secaucus, NJ, USA.\nMachine Learning. Tom Mitchell. McGrawHill\nRobot modeling and control. M.W. Spong, S. Hutchinson, and M. Vidyasagar. John Wiley & Sons,\n2006.",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPractical Course Advanced Robocup@Home (Vorlesung, 1 SWS)\nCheng G [L], Guadarrama Olvera J, Wang F\nPractical Course Advanced Robocup@Home (Übung, 5 SWS)\nCheng G [L], Guadarrama Olvera J, Wang F"
  },
  {
    "module_id": "CIT431011",
    "title": "Practical Course Atomistic Simulation of Nanomaterials and Electronic Devices",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In this practical course, each student (or student team of two) will perform an atomistic simulations of nanomaterials and electronic devices. The main results are presented in a short oral presentation (typically 10 min + questions) and a short scientific report (2-4 pages). The final grade is the weighted average of the grades for the report (60%) and the presentation (40%). While the students demonstrate with both the report and the presentation that they have gained knowledge and expertise using the specific simulation tool and investigated topic, with the report the students also learn the documentation of scientific work, and with the talk the students learn the presentation of scientific results in an academic environment.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No specific prerequisites.",
    "content": "The practical course offers an introduction to modern atomistic simulation tools, such as density functional theory (DFT). The participating students get hands on experience using these tools to calculate material properties and electronic devices. The topics include 2D and other nanomaterials; semiconductor heterostructures; quantum LEDs; batteries and energy storage; among others.",
    "learning_outcomes": "After successful completion of the module, the students will be able to perform modern atomistic simulations and can calculate properties of (e.g., semiconducting) nanomaterials and electronic heterostructure devices. They have also developed the skills needed to understand the limitations of such computational methods and can assess the reliability of simulation results.",
    "teaching_methods": "This course uses the software QuantumATK, which allows unexperienced users to perform DFT calculations with an intuitive graphical user interface. After an initial introduction to the field and the used software tool, each student (or student team of two) is assigned specific simulation tasks from a specific topic they choose. The simulations can be carried out in a computer pool and a mentor is available to assist with the simulations.",
    "media": "PowerPoint; publications; computer pool",
    "literature": "S. Smidstrup, T. Markussen, P. Vancraeyveld, et al. – QuantumATK: an integrated platform of\nelectronic and atomic-scale modelling tools. J. Phys. Condens. Matter. 32, 015901, 2020. https://\niopscience.iop.org/article/10.1088/1361-648X/ab4007 (open access)",
    "lv_sws_lecturer": "Vogl, Tobias; Prof. Dr. phil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPractical Course Atomistic Simulation of Nanomaterials and Electronic Devices (Praktikum, 4\nSWS)\nCebe A, Vogl T"
  },
  {
    "module_id": "CIT431012",
    "title": "Digital Changemaker Course",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 9,
    "hours_total": 270,
    "hours_self_study": 180,
    "hours_presence": 90,
    "examination_achievements": "The module examinations consist of three graded presentations. Learning outcomes of the application of the taught methodologies as well as the ability to collaborate on the challenges in interdisciplinary project teams are graded by three presentations, where students present their assigned tasks in each project team. The three presentations represent the achievements at three steps of the project work: 1. midterm with a focus on user research, 2. midterm with a focus on problem immersion, and 3. final presentation. The final grade is calculated as follows:\n- 100% three presentations of 10 min (1. midterm 25% / 2. midterm 25% / final 50%)",
    "repetition": "Semesterende",
    "recommended_prerequisites": "-",
    "content": "The students will join an interdisciplinary team and get matched with a real-world problem to work on. Each team of four to five students will collaborate with an existing company which is primarily an SME or NGO to develop a viable digitization concept for a company's internal process that includes an analysis of the ethical impact of the proposed concept. CIT431012: Digital Changemaker Course | Digital Changemaker Course [Digital Changemaker Course] Within the 12 weeks, the students will receive input about the tools and methodologies they need to develop a digitization strategy as well as the impact assessment. The Digital Changemaker Course has 3 phases:\n● The Problem Immersion Phase fosters a comprehensive understanding of the trends\nthat will significantly impact the industry of the project partner in the coming years. This means that the students grasp the potential opportunities and risks arising from digitization. Building upon this, the objective of the Problem Immersion Phase is to shed light on the specific challenges faced by the project partner and to develop initial approaches for addressing them through digital technologies.\n● The Research Phase forms the foundation of the program. The objective of this phase is for the\nstudents to identify the existing technological, economic, and societal trends within the industry of their project partner for the next five years. Through this process, a shared understanding of the opportunities and risks of digitalization will be fostered among all participants. Furthermore, they will be introduced to concepts of project management and team communication.\n● The starting point of the Ideation Phase for the students is a prioritized list of project-partner-\nspecific problems that can be addressed through digital technologies. The goal of this phase is for each team to develop a tailored solution concept for one of the problems, aligned with the project partner. In order to achieve this, different digital technologies should be compared and evaluated in terms of technological feasibility, as well as their economic and societal impacts.",
    "learning_outcomes": "At the end of the Digital Changemaker courses, students are able to apply innovation methodologies in a project team. Moreover, they are capable of coping with the challenges of working in interdisciplinary project teams. They are able to create and give presentations and gain experience in working on extensive real-world problems. Specific learning outcomes for the course are as follows. Students are able to: 1. apply trend research methodology. 2. identify problems that can be solved through digital technologies. 3. evaluate technical and digital solution approaches from a multidisciplinary perspective, including assessing technological feasibility, economic benefits, and societal sustainability. 4. develop a digitization concept and assess its ethical implications. 5. plan, execute, and document expert and user research. 6. apply the Design Thinking methodology to a digitization challenge. 7. use story-telling tools to captivate an audience and present an idea. 8. organize themselves in a team, communicate openly, and address problems in teamwork.",
    "teaching_methods": "The Digital Changemaker course is designed as one comprehensive project with a predefined project plan aiming to create a viable digitization concept with an ethical impact assessment with a presentation as a final comprehensive result. The students are staffed into interdisciplinary teams. The teams work independently towards fixed milestones and set weekly assignments, gaining methodology and topic-related knowledge in lectures and workshops. They are guided by regular CIT431012: Digital Changemaker Course | Digital Changemaker Course [Digital Changemaker Course] coaching sessions by the teaching staff. Students present their results regularly in order to obtain feedback on their outcomes.\n● Lectures: According to the project phase, external and internal lecturers from academia and\nindustry teach the students the methodology necessary for working on their project.\n● Topic Workshops: Experts from different fields of industry and academia that provide diverse\nviews on digitization, sustainability, and impact assessment are invited to illustrate different approaches and impart insights from their professional experience.\n● Coaching Sessions: Coaching sessions are scheduled regularly during the course. In these\ncoaching sessions, the teams discuss their work with the course instructors and teaching assistants and get advice for possible areas of improvement.\n● Midterms: In these sessions, students present the current stand of their project and have the\nopportunity to collect feedback from the class and the teaching assistants on the current status of their work.\n● Final Presentation: The students present their results to a larger external audience and answer\nquestions on their discoveries.",
    "media": "PowerPoint, Reader, Flipchart, Films",
    "literature": "Harald R. Fortmann: Digitalisierung im Mittelstand: Trends, Impulse und Herausforderungen der\ndigitalen Transformation\nFor more information regarding the course and registration, please visit the course’s website under\nhttps://www.cdtm.de/dcm",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDigital Changemaker Course (Praktikum, 4 SWS)\nWessel M"
  },
  {
    "module_id": "CIT4320000",
    "title": "Seminar on Topics in Design Automation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": null,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "During the semester, the students study a chosen topic and prepare a corresponding presentation. The resulting presentation (about 20 minutes with a following 10 minute discussion) determines 70% of the final grade. Afterwards, the students prepare a written report regarding the chosen topic (and also including possible feedback from the presentation) which determines 30% of the final grade.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No specific requirements",
    "content": "In this seminar, current topics from the area of Design Automation are discussed among the participants. A structured introduction into scientific literature regarding paper reading, literature research, presentation techniques, and scientific writing is given. The participants are enabled to independently perform all required steps to present a scientific topic in form of a review paper and an oral presentation.",
    "learning_outcomes": "Upon successful completion of the module, the participants are able to investigate a scientific topic based on the reading and further research of scientific publications in the area of Design Automation. The participants are able to critically reflect and discuss research outcomes. They are able to structure and write a scientific report. The participants are able to present the contents of their findings and participate in a scientific discussion. CIT4320000: Seminar on Topics in Design Automation | Seminar on Topics in Design Automation [Seminar CDA]",
    "teaching_methods": "Each student independently works on the chosen topic. A kick-off meeting provides information and resources regarding the scientific research and writing methods as well as the form of the final oral presentation. Additionally, each participant has a personal supervisor. This supervisor should help at the beginning of the research by providing according literature as well as definition and focus of the topic. The supervisor helps the students with questions and scientific discussions.",
    "media": "- Presentation\n- Report\n- Discussions",
    "literature": "",
    "lv_sws_lecturer": "Wille, Robert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Topics in Design Automation (Seminar, 3 SWS)\nWille R [L], Wille R"
  },
  {
    "module_id": "CIT4320001",
    "title": "Machine Learning and Robotics Seminar Course",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "In this course, students will demonstrate their ability to perform a literature review of research contributions in the field of Machine Learning and Robotics. This includes discussing the fundamental ideas and concepts of state-of-the-art methods as well as their current impact and limitations. Up to 3 students can work together. The mark is composed of a written report (50%, length of report: up to 4 double-column pages per team member), and a presentation followed by questions and a discussion (50%, length of presentation: 10 minutes per team member).",
    "repetition": "",
    "recommended_prerequisites": "Fundamentals of robotics, machine learning, control theory, and computer vision.",
    "content": "Students will gain knowledge in robot learning by critically reviewing existing literature in this field. Topics will vary each term. Example topics include machine learning models for robotics, human- centered robot learning, learning of interactive tasks, learning from demonstration, safe robot learning, and multi-robot learning.",
    "learning_outcomes": "Students will learn to conduct a thorough literature review, contrast different ideas and concepts, identify their impact and limitations, and communicate their findings in written and oral form. Furthermore, students will be able to structure their findings by identifying the main research threads in a particular field, and engage in group discussions and collaborative writing. CIT4320001: Machine Learning and Robotics Seminar Course | Machine Learning and Robotics Seminar Course",
    "teaching_methods": "Students will be given introductory lectures and guided through the process of finding relevant literature and discussing it. Regular meetings with a scientific advisor will support this process. In particular, the advisor will provide an introduction to the topic, an initial set of relevant literature, and early feedback on the report and presentation.",
    "media": "Presentations\nBlackboard\nReading materials",
    "literature": "The required literature references will be provided depending on the topic.",
    "lv_sws_lecturer": "Schöllig, Angela; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMachine Learning and Robotics Seminar Course (Seminar, 2 SWS)\nSchöllig A [L], Schöllig A"
  },
  {
    "module_id": "CIT4320002",
    "title": "Seminar AI Processor Design",
    "level": "Bachelor/Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The examination is based on a scientific elaboration. This examination consists of a written part (50%) in form of a paper (4 pages), and of an oral part (50%) in form a presentation of approximately 30 minutes (including a subsequent discussion and questions). Through the scientific elaboration students show that they can prepare, structure and present, e.g., the state-of- the-art, new ideas or existing approaches on novel computing concepts that employ non-traditional methods to accelerate Artificial Intelligent (AI) workloads.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "None.",
    "content": "Technology scaling is approaching its end in which breakthroughs become inevitable. This holds even more after starting the massive production of commercial processors at 7nm technology nodes. At such an extreme scale, obtaining further improvements in the efficiency of processors become significantly difficult. AI applications, in practical, impose profound challenges for the exiting von-Neumann architectures. Specific seminar topics in the area of AI acceleration in both hardware and software will be offered. Examples are: * In-memory and near-memory computing to largely accelerate AI applications. CIT4320002: Seminar AI Processor Design | Seminar AI Processor Design [AIPro-seminar] * Lightweight deep learning algorithms for edge AI such as quantized neural networks (QNNs) and binarized neural networks (BNNs). * Brain-inspired computing hardware such as neuromorphic computing and spiking neural networks (SNNs). * Emerging non-volatile memories and their crucial role in mimicking biological computing systems (e.g., membrane and synapses). * Emerging technologies for future ultralow power AI processors. * Brain-inspired computing algorithms such as novel hyperdimensional computing.",
    "learning_outcomes": "At the end of the seminar, the students are able to present a new idea or an existing approach in the area of AI acceleration in an understandable and convincing manner. For this purpose, the following competencies will be acquired: * The students are able to independently familiarize themselves with a scientific topic in the field of unconventional computing paradigms for AI accelerations. * The students are able to present their topic in a structured way according to problem formulation, state of the art, goals, methods and results. * The students can present their topic, according to the above-mentioned structure, in form of a presentation, and in form of a written report. The students are able to summarize, present, and explain research ideas presented in scientific papers.",
    "teaching_methods": "Learning method: Students elaborate a given scientific topic by themselves and are advised by a research assistant. Teaching method: Introductory lessons will be given, which cover advice on the work procedure during the seminar, scientific writing techniques as well as the preparation of an oral presentation. The students discuss further (specific) details with the advising research assistants on an individual basis.",
    "media": "All current techniques for preparing and presenting papers and talks will be applied, e.g.\n- blackboard, whiteboard\n- electronic slides, beamer\n- electronic word processing\n- electronic slide processing",
    "literature": "A set of topics and related literature is given at the start of the course. Each participant selects his/\nher topic.\nCIT4320002: Seminar AI Processor Design | Seminar AI Processor Design [AIPro-seminar]",
    "lv_sws_lecturer": "Amrouch, Hussam; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar AI Processor Design (Seminar, 4 SWS)\nAmrouch H, Thomann S"
  },
  {
    "module_id": "CIT4320003",
    "title": "Seminar Quantum Networks",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "In this seminar, each student individually prepares a short scientific report (2-4 pages) on a current topic around quantum networks which he/she chooses at the beginning of the semester. The main results are presented in an oral presentation (typically 30 min + 15 min discussion). The final grade is the average of the grades for the report (50%) and presentation (50%). While the students demonstrate with both the report and the presentation that they have gained knowledge and expertise in the specific topic, with the report the students also learn the writing of scientific texts, and with the talk the students learn the presentation of scientific results in an academic environment.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No specific prerequisites. Introductory lectures on quantum computing or quantum communication\nare advantageous.",
    "content": "The seminar offers an overview of current topics in the field of quantum networks, presented by the participating students. The topics include basic quantum information; protocols; distributed quantum computing; multi-party quantum communication; elements of quantum networks; local realizations; satellite links; quantum internet.",
    "learning_outcomes": "After successful completion of the module, the students will be able to understand the current state-of-the-art and limitations of quantum networks. They have developed the skills needed to read, comprehend, and critically evaluate scientific publications and present scientific results to an academic audience. While the students demonstrate with both the report and the presentation that CIT4320003: Seminar Quantum Networks | Seminar Quantum Networks they have gained knowledge and expertise in the specific topic, with the report the students also learn the writing of scientific texts, and with the talk the students learn the presentation of scientific results in an academic environment.",
    "teaching_methods": "After an initial introduction to the field, each student is assigned a topic and a mentor who is an expert in the specific topic. Every student presents their results in a weekly seminar to the other students and the group discusses the specific topic. The presentations regularly involve PowerPoint.",
    "media": "PowerPoint; publications",
    "literature": "P. P. Rohde - The Quantum Internet, Cambridge University Press, 2021.",
    "lv_sws_lecturer": "Vogl, Tobias; Prof. Dr. phil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Quantum Networks (Seminar, 2 SWS)\nCebe A, Vogl T"
  },
  {
    "module_id": "CIT432005",
    "title": "Seminar Quantum Information Processing Devices",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "In this seminar, each student individually prepares a short scientific report (2-4 pages) on a current topic around quantum information processing devices which he/she chooses at the beginning of the semester. The main results are presented in an oral presentation (typically 30 min + 15 min discussion). The final grade is the average of the grades for the report (50%) and presentation (50%). While the students demonstrate with both the report and the presentation that they have gained knowledge and expertise in the specific topic, with the report the students also learn the writing of scientific texts, and with the talk the students learn the presentation of scientific results in an academic environment.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No specific prerequisites. Introductory lectures on quantum computing or quantum communication\nare advantageous.",
    "content": "The seminar offers an overview of current topics in the field of quantum information processing, presented by the participating students. The topics include basic quantum information; devices based on NMR, trapped ions, superconducting circuits, photons, neutral atoms in optical lattices, spins in solid-state systems; networking across different platforms.",
    "learning_outcomes": "After successful completion of the module, the students will be able to understand the current state-of-the-art and limitations of quantum information processing devices and the platforms that can be used to implement qubits. They have developed the skills needed to read, comprehend, and critically evaluate scientific publications and present scientific results to an academic audience.",
    "teaching_methods": "After an initial introduction to the field, each student is assigned a topic and a mentor who is an expert in the specific topic. Every student presents their results in a weekly seminar to the other students and the group discusses the specific topic. The presentations regularly involve PowerPoint.",
    "media": "PowerPoint; publications",
    "literature": "J. Stolze, D. Suter - Quantum Computing: A Short Course from Theory to Experiment, Wiley-VCH,\n2008.\nP. P. Rohde - The Quantum Internet, Cambridge University Press, 2021.",
    "lv_sws_lecturer": "Vogl, Tobias; Prof. Dr. phil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Quantum Information Processing Devices (Seminar, 2 SWS)\nVogl T"
  },
  {
    "module_id": "CIT4330000",
    "title": "Introduction to Soft Robotics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote ergibt sich aus den Labor- und Übungsaufgaben (40%), Präsentation (20%) und der mündlichen Prüfung (40%). Die Labor- und Übungsaufgaben bewerten die Fähigkeit der Studierenden weiche Roboter zu bauen und die in den Vorlesungen vorgestellten Modellierungs- und Steuerungsansätze zu implementieren und zu diese zu testen. In den Präsentationen wird geprüft, ob die Studierenden die von Fachkollegen begutachtete veröffentlichte Arbeiten prägnant darstellen können. In der mündlichen Prüfung wird das Verständnis der Studierenden für die Grundlagen der Soft- Robotic wie Betätigung, Sensorik, Modellierung und Steuerung bewertet. Die Abschlussnote setzt sich wie folgt zusammen: A) Mündliche Abschlussprüfung: 40% B) Individuelle Laborarbeiten: 40% C) Präsentation: 20% Die Dauer der mündlichen Prüfung beträgt 20 Minuten für jeden Studenten. Den Studierenden werden Fragen zu weichen Aktoren, weichen Sensoren, weichen Robotermanipulatoren, Fortbewegung mit weichen Robotern, Forward und Inverse Kinematik von weichen Robotern sowie Dynamik und Steuerung von weichen Robotern gestellt. Jeder Student hält mindestens eine Einzelpräsentation (10 Minuten) zu einem verwandten Thema; die Präsentationen werden vom Dozenten ausgewählt. Die Anzahl der zu bearbeitenden Übungsaufgaben beträgt fünf:\n- Eine Laborarbeit über weiche Aktoren\nCIT4330000: Introduction to Soft Robotics | Introduction to Soft Robotics [ISR]\n- eine Laborarbeit über weiche Sensoren\n- Eine Laborarbeit über weiche Robotermanipulatoren\n- Eine Laborarbeit über Forward und Inverse Kinematik\n- Eine Laborarbeit zur Dynamik und Steuerung von Softrobotern",
    "repetition": "",
    "recommended_prerequisites": "C/C++ programming skills. Matrix transformation",
    "content": "Soft Robotic ist ein wachsender Bereich auf dem Gebiet der Robotik. Im Gegensatz zu herkömmlichen Studien der Robotik, die von starren Strukturen ausgeht, welche über eine endliche Anzahl von Gelenken miteinander verbunden sind, nimmt die Soft Robotic weiche und deformierbare Strukturen an. Diese korrespondieren zu einer unendlichen Anzahl von herkömmlichen Gelenken. Diese Eigenschaft macht weiche Roboter flexibel, robust und prinzipiell sicher. Weiche Roboter können eine Vielzahl von Aufgaben ausführen, denen Robotern mit starrer Struktur schwer fallen würden, wie z. B. das Greifen von unregelmäßig geformten Objekten und der Umgang mit Kollisionen während Interaktionen in komplexen Umgebungen. Im Vergleich zu Robotern mit starrer Struktur sind für die Steuerung und Modellierung soft Roboter neue Strategien erforderlich, von denen einige in diesem Kurs untersucht werden. In diesem Kurs werden die neuesten Errungenschaften in der Herstellung, Modellierung und Steuerung von weichen Robotern vorgestellt. Der Kurs umfasst die folgenden Inhalte: 1- Einführung und Motivation: Welche Vorteile bietet die Übertragung von Konzepten aus der Natur auf Roboter? Warum werden weiche Körper in der Robotik verwendet? Können wir einen Roboter haben, der vollständig aus weichen Materialien besteht? Was sind die Vor- und Nachteile des Einsatzes weicher Körper in der Robotik? 2 - Weiche Aktuatoren: Es werden verschiedene Arten von weichen Aktuatoren vorgestellt, wie z. B. weiche aufblasbare Strukturen, kabelgetriebene Strukturen, verdrillte Fadenstrukturen und elektroselbstklebende Kupplungen. Es wird untersucht, wie die Leistung von weichen Aktuatoren mit Hilfe der Analyse der blockierten Kraft bewertet werden kann und es wird eine Studie über die Hysterese von weichen Aktuatoren bei wiederholten Be- und Entlastungsszenarien durchgeführt. Außerdem wird das signifikante Leistungs-/Gewichtsverhältnis untersucht. 3- Weiche Sensoren: Es wird eine Studie über die Herstellung verschiedener Arten von weichen Sensoren, wie Dehnungsmessstreifen-Soft-Sensoren, Kraft-Soft-Sensoren und multimodale Soft- Sensoren, durchgeführt. Der Dehnungsfaktor und die Hysterese von weichen Sensoren werden vorgestellt. CIT4330000: Introduction to Soft Robotics | Introduction to Soft Robotics [ISR] 4- Manipulation weicher Roboter: Es wird eine Studie über die mehrteilige Anordnung von weichen Aktoren und -Sensoren für den Bau von weichen Manipulatoren und eines sphärischen weichen Roboterarms durchgeführt. 5- Fortbewegung mit weichen Robotern: Es wird eine Studie zu mobilen weichen Robotern gegeben, welche die zugrundeliegenden Prinzipien der Soft-Robotic-Lokomotion vorstellt, und es werden Anwendungen und weitere Entwicklungen für die mobile Soft-Robotic demonstriert. 6- Vorwärtskinematik von weichen Robotern: Es werden Methoden zur Untersuchung der Kinematik von weichen Robotern vorgestellt, wie z. B. die Methode der stückweisen konstanten Krümmung, einschließlich aktorspezifischer und aktorunabhängiger Abbildung. 7- Inverse Kinematik weicher Roboter: Es wird eine Studie über geschlossene Lösungen der Kinematik von weichen Robotern vorgestellt. 8- Steuerung von weichen Robotern: Die Definition der erforderlichen Steuerungsvariablen von weichen Robotern und wie diese Variablen im Laufe der Zeit verändert werden müssen, um die gewünschte Bewegung zu erzeugen. Modellbasierte Steuerungsmethoden werden eingehend untersucht. 9- Dynamik von weicher Robotern: Es wird eine Einführung in verschiedene dynamische Modelle von weichen Robotern gegeben, wie z.B. die dynamische Modellierung erster Ordnung, die im Detail untersucht wird.",
    "learning_outcomes": "Durch die Vorlesungen erhalten die Studierenden ein umfassendes Verständnis im Bereich der Soft-Robotics, dessen Errungenschaften und Herausforderungen. Durch die Tutorien werden sie in der Lage sein, die neuesten Soft Roboter Designs zu reproduzieren und sogar eigene Lösungen vorzuschlagen, um Herausforderungen zu bewältigen. Mittels bekannter Methoden zur Modellierung Soft Roboter, werden sie in der Lage sein, Soft Roboter selbstständig zu modellieren und zu steuern. Sie werden in der Lage sein, Soft Roboter zu modulieren und zu steuern, indem sie bekannte Methoden zur Modellierung von Soft Robotern aus der Literatur verwenden.",
    "teaching_methods": "Die folgenden Lehrmethoden werden angewandt:\n- Vorlesungen, welche die notwendigen Theorien für die Tutorien vermitteln.\n- Tutorien mit Laboraufträgen stellen sicher, dass wesentliche Teile der Lehrinhalte, z.B.\nModellierung und Regelungsalgorithmen, realisiert und erprobt werden.",
    "media": "Präsentationen und Laborübungen\nCIT4330000: Introduction to Soft Robotics | Introduction to Soft Robotics [ISR]",
    "literature": "Rus, D., Tolley, M. Design, fabrication and control of soft robots. Nature 521, 467–475 (2015).\nhttps://doi.org/10.1038/nature14543\nHuang, W., Huang, X., Majidi, C. et al. Dynamic simulation of articulated soft robots. Nat Commun\n11, 2233 (2020). https://doi.org/10.1038/s41467-020-15651-9",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntroduction to Soft Robotics (Vorlesung mit integrierten Übungen, 4 SWS)\nCheng G, Nassour J"
  },
  {
    "module_id": "CIT4330001",
    "title": "Machine Learning and IT-Security",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The examination performance is evaluated via a written exam (75min). Knowledge questions test the familiarity with basic concepts and methodological approaches of the following topics: 'ML for IT Security', 'IT Security for ML' and 'Audio Deepfakes / Spoofing'. The ability to design anomaly detection systems will be tested. Furthermore, small exercise scenarios will be used to evaluate the student’s ability to design attacks on different ML algorithms and to design appropriate defense strategies. Fundamentals in audio deepfake detection and creation, including feature extraction will be reviewed using knowledge questions.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "IN0001 and one of the following is recommended:\n- IN2332 Statistical Modeling and Machine Learning\n- IN2346 Introduction to Deep Learning",
    "content": "Content:\n- Overview of the application areas 'ML for IT security' and 'IT security for ML'.\n- Fundamentals and advanced concepts for anomaly detection, including both semi- and\nunsupervised algorithms\n- Basics of dimension reduction for data visualization and preprocessing\n- Fundamentals of Natural Language Processing (NLP) for IT Security: Spam and Malware\nDetection using Learning Algorithms\n- Basic and advanced concepts of adversarial machine learning: attackability of systems using\nwhite/grey/black box attacks and corresponding defenses CIT4330001: Machine Learning and IT-Security | Machine Learning and IT-Security\n- Possibilities and limitations of transferability of such attacks from the lab to the real world\n- Basic concepts of both creation and detection of audio deepfakes (spoofing) incl. extraction of\ncorresponding features (such as MFCC)",
    "learning_outcomes": "After successful completion of this module, participants will have an overview of three areas in the intersection of IT security and machine learning: 1. Machine learning for IT security, i.e., the application of ML for enhancing security in information systems. This includes anomaly detection algorithms for detecting e.g. network attacks, but also basic approaches for spam and malware detection. Classical methods for detecting attacks, spam or malware (e.g. signature-based algorithms) are not covered. 2. IT Security for ML: Students will know basic and advanced attacks on ML systems under different threat models and will be able to describe and classify their advantages and disadvantages. They can describe defenses and their limitations and evaluate their effectiveness. 3. Deepfake / Audio Spoofing: Participants will know the basic concepts in audio deepfake / audio spoofing. This includes both the creation and detection of audio deepfakes using ML. Students will be familiar with the most basic signal processing techniques as they pertain to feature extraction.",
    "teaching_methods": "Lecture and Exercise Sheets (exercise sheets not graded)",
    "media": "Lecture Slides",
    "literature": "Literature:\n- Christopher M. Bishop: Pattern Recognition and Machine Learning. Springer, 2006.\n- Ian J. Goodfellow, Yoshua Bengio and Aaron Courville: Deep Learning. MIT Press, 2016.",
    "lv_sws_lecturer": "Eckert, Claudia; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "CIT4330004",
    "title": "Trendweeks on the Future of Digital Technologies",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 45,
    "hours_presence": 45,
    "examination_achievements": "In order to evaluate all study goals, the Trend Weeks grade consists of a written assignment, presentations and continuous assessment and consists of both individual and team assessment. The weight of the several assignments is as follows: 20% for the written project report of about 50 pages (group assessment), 20% for intra team grading (individual assessment), 20% for the scenario phase presentation as the final presentation of about 20 min (group assessment), and 40% for the trend phase presentation as the midterm presentation of about 15 min (group assessment).",
    "repetition": "",
    "recommended_prerequisites": "none",
    "content": "Each year, students from diverse academic backgrounds collectively write a trend report on a certain topic in the field of communication technologies. This trend report includes a status quo analysis, identification of trends, future developments as well plausible scenario developments. Each student is assigned to a team to work on a certain perspective of the trend report topic. The resulting interdisciplinary teams ensure a thorough analysis of the trend report topic. The trend report is published online and is part of a related research project, e.g. BMBF 6G-life. The Trend Weeks takes place in two phases:\n● The Trend Phase looks at the near future, summarizes the status quo and identifies upcoming\ntrends. An interdisciplinary approach ensures that for example technological, economic, social, political, legal and environmental trends are taken CIT4330004: Trendweeks on the Future of Digital Technologies | Trendweeks on the Future of Digital Technologies [FDT] into account. Each team has the task to research the topic from a different perspective and to summarize the findings in a report.\n● In the Scenario Phase, students build upon the trend analysis from the Trend Phase and analyze\nthe trend report topic with a perspective lying further in the future. They create four different extreme, but plausible scenarios of what the future might look like in 20 years. The teams summarize their findings in a report.",
    "learning_outcomes": "At the end of the Trend Weeks, students are able to apply trend and futures research methodology in a project team. Moreover, they are capable of coping with the challenges of working in interdisciplinary project teams. They are able to create and give presentations and gain experience in working on extensive real world problems. Specific learning outcomes for the Trend Seminar are as follows. Students are able to:\n● distinguish between trend and futures research, as well as to apply portfolio related research\nmethodologies\n● analyze the status quo of a given topic and to apply the methods of an interdisciplinary trend\nanalysis considering perspectives like economic, technological, social, environmental, political and legal frameworks under high time pressure\n● apply the scenario planning methodology in real-world contexts in interdisciplinary project teams\n● apply the basics of academic writing to document their work results in a comprehensive report in\na short amount of time\n● discuss topics in an interactive setup and elicit different opinions on the matter\n● organize themselves in a team, communicate openly and address problems in teamwork",
    "teaching_methods": "The Trend Weeks are designed as one comprehensive project with a predefined project plan aiming to create the Trend Report as a final comprehensive result. This project is divided into two phases, Trend Phase and Scenario Phase. In each phase, the class is split into interdisciplinary project teams. The teams work independently towards fixed milestones, gain methodology and topic related knowledge in lectures and workshops. They are guided by regular coaching sessions by the teaching staff. Students present their results regularly in order to obtain feedback on their outcomes.\n● Lectures: According to the project phase, external and internal lecturers from academia and\nindustry teach the students the methodology necessary for working on the Trend Seminar project.\n● Topic Workshops: Experts from different fields of industry and academia that provide diverse\nviews on the Communication Industry are invited to illustrate different approaches and impart insights from their professional experience.\n● Coaching Sessions: Coaching Sessions are scheduled regularly during the Trend Weeks. In\nthese Coaching Sessions, the teams discuss their work with the course instructors and teaching assistants and get advice for possible areas of improvement.\n● Scenario Workshop: In this workshop, students learn to apply the scenario planning methodology\nin order to develop future scenarios based on identified drivers. CIT4330004: Trendweeks on the Future of Digital Technologies | Trendweeks on the Future of Digital Technologies [FDT]\n● Midterms: In this session, students present their product or service ideas and have the\nopportunity to collect feedback from the class and the teaching assistants on the current status of their work.\n● Final Presentation: The students present their results to a larger external audience and answers\nquestions on their discoveries.",
    "media": "Presentations, Readings, Videos, Flipchart",
    "literature": "N/A",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "CIT4330006",
    "title": "Communication Networks Modeling and Optimization",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The module examination consists of a graded written exam of 120 minutes duration and homework problems (6-7 sets). In the written exam, students demonstrate their analytical skills acquired in this course by solving problems related to modeling and optimization of communication networks. Students also demonstrate their ability in deeper understanding different stochastic processes. In the homework the students demonstrate their practical skills acquired in the course related to their capability for implementing original solutions and comparing them against other approaches by using different optimization tools (CVX, Gurobi, etc.). The homework will consist of 6-7 programming assignments to be solved using available optimization software tools. The final grade is composed of the following components:\n- 60% final exam\n- 40% from homework",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "The knowledge of following modules are recommended:\n- Data Networking",
    "content": "Introduction to probability and stochastic processes. Discrete-time Markov chains. Continuous- time Markov chains. Introduction to queueing theory. M/G/1 queues. Special queues. Queueing networks. Real-world examples. Math for the Internet architecture. Statistical multiplexing and packet buffering. Scheduling. Network optimization problems. Power optimization application.",
    "learning_outcomes": "Upon successful completion of the module, students are able to understand and apply analytical tools that can be used in modeling the network operation (both wireless and wireline) and its optimization. They are able to formulate optimization problems in different solvers.",
    "teaching_methods": "During the lectures students are instructed in a teacher-centered style. In the exercises, analytical problems will be solved. Also, students will have access to software for solving optimization problems (optimization solvers) and will be guided through several examples. Students will need to solve analytical problem on their own.",
    "media": "Lectures: Presentation slides\nTutorials: Solving problems on board/notebook",
    "literature": "1. M. H. Balter “Performance Modeling and Design of Computer Systems: Queueing Theory in\nAction”\n2. R. Srikant, L. Ying “Communication Networks: An Optimization, Control, and Stochastic\nNetworks Perspective”",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCommunication Networks Modeling and Optimization (Vorlesung mit integrierten Übungen, 4 SWS)\nMehmeti F [L], Kellerer W, Wietfeld A, Ursu R"
  },
  {
    "module_id": "CIT4330007",
    "title": "Modelling and Control of Legged Robots",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Laboratory assignments, final project, and presentation. 1.- After every three tutorial sessions, the students will be asked to deliver a laboratory assignment which will count for the final grade. Four in total, the laboratory assignments will assess the technical skills the students acquired during the tutorials and the comprehension of the theory covered in the lectures. They will require the analysis of a defined problem and the proposition of a theoretical solution with practical implementation in a numerical simulation. The laboratory assignments will be evaluated individually. The laboratory assignments will compose 50% of the final grade (12.5% each). They will be graded according to the proposed solution to the given problem. To complete the assignment, the students must understand the theory of the lecture session, complete the tasks of the tutorials, analyze the assignment task, propose a technically sound solution and cleanly implement it within the proposed software (ROS). The grade will be assigned according to the completeness of the proposed solution and the clarity of the implementation. 2.- Once covered all the lectures and the tutorial sessions, the students will have to present a final project applying all the theory and practical skills acquired during the semester. While the tutorial sessions focus on a specific part of the control system required for legged robots to balance and walk, the final project will consist of a complete implementation of the control system. The project will cover the modeling of the robot, state estimation, the design of a feedback loop controller, and its technical implementation. Due to the complexity of a walking control system, and the safety measurements required to operate a robot, the project will be carried out by teams of 3 or 4 students. However, the project will be graded individually according to each student's contribution to the solution. CIT4330007: Modelling and Control of Legged Robots | Modelling and Control of Legged Robots 3.- At the end of the course, the students will make a final presentation with the details of their final project's solution. The duration of the presentation will be 15 minutes per student, comprised of 10 minutes of presenting and 5 minutes of questions from the course supervisors. The questions will help assess the originality, soundness, cleanness, and innovation of the student's project.. The final grade is composed as follows: 1.- Individual laboratory assignments: 50% 2.- Final project: 40% 3.- Final presentation: 10%",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Strong Mathematical background in Linear Algebra, Trigonometry, and Calculus.\nKnowledge in robotics (preferred).\nBasic Knowledge in C++, Python, and ROS.\nAll the tutorial exercises will be implemented in ROS Noetic (ubuntu 20.04).",
    "content": "1. Introduction 1.1. Motivation 1.2. Historical review 1.3. Applications 2. Background. 2.1. Homogeneous transformations 2.2. Rotations 2.3. Modeling 2.3.1. Kinematic modeling 2.3.2. Dynamic Modeling 2.3.3. Floating base state representations 2.3.4. Centroidal Dynamics 2.3.5. Kinematic constraints 2.3.6. Inverse kinematics 2.4. Quadratic Programming and optimization. 2.4.1. Conditions for optimality (KKT) 2.4.2. Lagrangian Multipliers 2.4.3. QP solvers 3. Whole body control 3.1. Task space representations 3.2. Whole-body Jacobians 3.3. Task definitions CIT4330007: Modelling and Control of Legged Robots | Modelling and Control of Legged Robots 3.4. Hierarchical control 3.4.1. Soft hierarchical control 3.4.2. Strict hierarchical control 4. Stability and balance (including contacts) 4.1. Zero Moment Point (ZMP) 4.2. Foot Rotation Indicator (FRI) 4.3. Centroidal Moment Pivot (CMP) 4.4. Capture Point (CP/DCM) 4.5. Friction cone 4.6. Contact stability 4.7. Balance control 5. Trajectory optimization 5.1. Bellman principle of Optimality 5.2. Hamiltonian Jacobian Bellman 5.3. LQR 5.4. MPC extensions 5.5. Differential Dynamic Programming (DDP) 6. Walking Control 6.1. Walking cycle representation 6.2. Simplified models 6.3. Footstep planning 6.4. DCM walking motions 6.5. Floating base estimation 6.5.1. Odometry 6.5.2. Kalman Filter 6.6. Walking motion tracking 6.7. Walking controller architectures 7. Advanced topics. 7.1. Uneven terrain 7.2. Partial footholds 7.3. Torque level walking 7.4. Running / jumping Tutorials: T0: Technical training (ROS, Dynamics libraries) T1: Kinematic and dynamic modeling T2: Optimization T3: Floating base estimation T4: Whole body control CIT4330007: Modelling and Control of Legged Robots | Modelling and Control of Legged Robots T5: Task space inverse dynamics T6: Balance control T7: Trajectory optimization T8: Quadruped walking control T9: Biped walking control T10: Running and Jumping T11: Hardware implementations",
    "learning_outcomes": "After completion of the module, the students can analyze and model floating-base-legged robots. They will be capable of designing whole-body controllers for humanoid and quadruped robots, including walking controllers with all the elements involved. The students will be capable of creating walking controllers with classic methods and state-of-the-art optimal control methods.",
    "teaching_methods": "Lectures will be held ex-cathedra. The laboratory assignments will consolidate the student's theoretical knowledge by providing practical examples in numerical simulations. The final phase will comprise a practical project where the students will apply all the theory and practical skills acquired during the Lecture and tutorial sessions into a real application with a legged robot (quadruped or biped).",
    "media": "The following types of media are used:\n- Presentations\n- Laboratory exercises",
    "literature": "Wieber, P. B., Tedrake, R., & Kuindersma, S. (2016). Modeling and control of legged robots. In\nSpringer handbook of robotics (pp. 1203-1234). Springer, Cham.",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nModelling and control of legged robots (Vorlesung mit integrierten Übungen, 6 SWS)\nCheng G [L], Armleder S, Guadarrama Olvera J"
  },
  {
    "module_id": "CIT4330008",
    "title": "5G New Radio Communications: Physical Layer Channels and Procedures",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Note für dieses Modul ergibt sich zu 50% aus den benoteten abgegebenen Übungensaufgaben während des Semesters sowie zu 50% aus der Note einer 90 minütigen schriftlichen Prüfung am Semesterende. In der schriftlichen Abschlußklausur soll durch das schriftliche Beantworten von Fragen und Darlegung eines Lösungsansatzes für ein gegebenes Problem nachgewiesen werden, dass die Studierenden die in Vorlesung und Übung behandelten Algorithmen der Parameterschätzung sicher einsetzen können. In den Übungsaufgaben während des Semesters sollen die Studenten durch das Beantworten von technischen Fragen und Ausführung von Simulationen bzw. Experimenten zeigen, dass die im Vorlesungen präsentierten Konzepte verstanden haben und sie sich mit der empfohlenen Literatur auseinander gesetzt haben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra, Mathematisches Interesse, Systemtheorie, Signalbeschreibung im Zeit- und\nFrequenzbereich.\nFolgende Module sollten bereits erfolgreich absolviert worden sein: Mobile Communications,\nChannel Coding, Information Theory, Physical Layer Methods, Wireless Communications, MIMO\nSystems",
    "content": "Die Integration neuartiger Bit- und Signalverarbeitungsansätze, wie z. B. Wellenformdesign, MIMO, Physical Layer Security, Post-Shannon-Codierungsschemata, unter anderem, in den CIT4330008: 5G New Radio Communications: Physical Layer Channels and Procedures | 5G New Radio Communications: Physical Layer Channels and Procedures Protokollstapel moderner Mobilfunknetze erfordert detaillierte Kenntnisse der physikalischen Schicht von 5G New Radio (NR) und ihre entsprechenden Verfahren. Ziel dieses Lehrangebot ist es, einen umfassenden Überblick über die Signale, Kanäle, Verfahren und Protokolle zu geben, die auf der physikalischen Schicht wichtig sind. Der Student wird mit den mathematischen Sequenzen und Algorithmen vertraut gemacht, die für Synchronisations-, Kanalschätzungs- und Entzerrungsaufgaben verwendet werden, sowie mit anderen 5G-NR-Verfahren der physikalischen Schicht, die zum Extrahieren von Signalisierungsinformationen und zum Decodieren von Benutzerdaten erforderlich sind, einschließlich der Codierungsverfahren unter Verwendung von LDPC und Polarcodes.",
    "learning_outcomes": "Am Ende dieses Moduls sind die Studierenden in der Lage, die Verfahren und Algorithmen zu erklären, die von 5G-NR-Sendern und -Empfängern verwendet werden, um eine Kommunikationsverbindung unter verschiedenen Kanalbedingungen herzustellen. Mit Hilfe von Simulationen und Laborexperimenten mit Software-Defined Radios (SDR) können die Studierenden das in den Vorlesungen Gelernte im Labor anwenden.",
    "teaching_methods": "Präsentation der Hauptinhalte über Folien. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Durchführen von Simulationen. Vorbereitung der Studierenden auf die Durchführung von Experimenten durch Ausführen der simulierten Module in Hardware mit SDRs.",
    "media": "Folienpräsentation während der Vorlesung. Verwendung von MATLAB und/oder C während der\nÜbungen, um einige Algorithmen zu implementieren und Experimente mit Software-Defined\nRadios durchzuführen.",
    "literature": "Huseyin Arslan, \"Wireless Communication Signals: A Laboratory-based Approach\"\nErik Dahlman, Stefan Parkvall, Johan Sköld, \"5G NR, the next generation wireless access\ntechnology\"\nMihai Enescu, \"5G new radio: a beam-based air interface\"\nSelected 3GPP 38 series technical specifications: https://www.3gpp.org/dynareport?code=38-\nseries.htm",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\n5G New Radio Communications: Physical Layer Channels and Procedures (Vorlesung, 2 SWS)\nTorres Figueroa L [L], Boche H, Pohl V\n5G New Radio Communications: Physical Layer Channels and Procedures (Übung, 2 SWS)\nTorres Figueroa L [L], Huffmann J, Pohl V\nCIT4330008: 5G New Radio Communications: Physical Layer Channels and Procedures | 5G New Radio\nCommunications: Physical Layer Channels and Procedures"
  },
  {
    "module_id": "CIT4330009",
    "title": "IoT Security",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The intended learning outcomes are assessed in a written exam at the end of the semester (60% of the final grade). Additionally, two assignments (in the form of Capture The Flag (CTF) competitions) are evaluated and contribute 20% each to the final grade. The first CTF is mainly about cryptography challenges while the second one is about attacking IoT devices. For each CTF, the teams' members need to collect flags to gain points. The students need to apply their gained knowledge to solve different challenges. Each challenge will reveal a flag once it was solved that the students can submit to prove their successful work and gain the predefined points for that challenge. The team that will collect the highest number of points during the limited time of the CTF will gain the competition. The duration of every CTF will be two weeks. The goal of the CTF is to assess the capability of the student to perfom cyber secrurity attacks practically. Such knowldge will not be possible to be assessed via the written exam. On the other hand, the writen exam (90 minutes) will focus on the theoritical part of the security attacks and vulnerabilities. Criteria for assessment include: The ability to explain the basic security terms and attacks against the different layers of the IoT stack (assessed via a written exam).\n- Perform basic penetration testing on IoT applications and protocols (assessed via CTFs).\n- Demonstrate the ability to define and implement security mitigation mechanisms against various\nattacks (assessed through CTFs and an exam).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Must: good programming skills.\nPreferable: basic knowledge of computer networking.\nCIT4330009: IoT Security | IoT Security [IOTSEC]",
    "content": "This course focuses on the security aspects within the IoT protocol stack (i.e., data, application, and network). The course starts by looking at the IoT stack and discussing the most common IoT applications and some recent attacks against those applications. The course discusses some of the famous crypto algorithms applied to secure the (exchanged) data. Students shall implement some of these algorithms and try some techniques to break them (if possible). The course also introduces some of the authentication protocols that shall be adopted to solve some security issues in modern IoT applications. Students must implement these protocols and, later, try to break them. Attacks such as DoS and MITM are discussed in detail during the course. The students need to perform such attacks using existing tools (e.g., using Kali Linux tools) or writing their own tools. The course investigates the SSL protocol as an excellent example of securing IoT communication. Students need to integrate this protocol to ensure secure communication between smart devices. Finally, the course discusses some of the IoT software vulnerabilities and attacks which exploit these security weaknesses and how to harden the system.",
    "learning_outcomes": "Upon successful completion of the module, students are able to:\n- Explain the basic concepts of IoT (computer) security and the most common threats that threaten\nthe modern IoT systems.\n- Plan and execute pen testing for IoT systems.\n- Choose, design and implement some protection techniques to secure IoT systems.",
    "teaching_methods": "The content will be taught using slides. Tutorials will be given to the students to exercise what they learned in the lectures and help them solve the assignments.",
    "media": "The following media are used:\n- Presentations (Projector, Blackboard)\n- E-learning platform Moodle",
    "literature": "Book: Bruce Schneier, Applied Cryptography Protocols, Algorithms, and Source Code in C.\n- Ziegler, Sébastien, ed. Internet of Things Security and Data Protection. Springer International\nPublishing, 2019.\n• Dhanjani, Nitesh. Abusing the internet of things: blackouts, freakouts, and stakeouts. \" O'Reilly\nMedia, Inc.\", 2015.",
    "lv_sws_lecturer": "Steinhorst, Sebastian; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIoT Security (Vorlesung, 4 SWS)\nHamad M [L], Debnath R, Finkenzeller A, Hamad M, Steinhorst S\nCIT4330009: IoT Security | IoT Security [IOTSEC]"
  },
  {
    "module_id": "CIT4330010",
    "title": "Brain, Mind and Cognition",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "Abgabe von mindestens 3 (von maximal 5) schriftlich formulierten Hausarbeiten, in denen das Verständnis der Literatur nachgewiesen wird sowie aktive Teilnahme an den Diskussionen dazu - Notengewicht von 60% zur Gesamtnote Abgabe eines zusammenfassenden Essays zum Nachweis der Fähigkeit zur Bewertung der interdisziplinären Zusammenhänge - Notengewicht von 40% zur Gesamtnote",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Ausreichende Sprachkenntnisse in Englisch, um sprachlich anspruchsvolle Literatur lesen, sowie\nverständliche Essays zum Thema verfassen zu können.",
    "content": "Im Seminarteil lesen Studierende allgemeinverständliche Literatur (bis zu 5 Bücher) zum erweiterten Themenkreis Brain, Mind and Cognition und diskutieren in der Gruppe. Es soll dabei die Frage beantwortet werden in welcher Form wir etwas aus der Literatur lernen können über den Aufbau und die Funktion von Gehirn, Geist und Kognition. Welche Inspiration können wir daraus für die technische Arbeit gewinnen? Ergänzend zum Seminar gibt es eine Vorlesung, in der Hintergrundinformation zu den Themen Neuro- und Kognitionswissenschaften mit Blick auf kognitive Roboter vermittelt werden. Lehr- und Lernmethode CIT4330010: Brain, Mind and Cognition | Brain, Mind and Cognition [BMCSem]",
    "learning_outcomes": "Am Ende des Moduls haben die Studierenden zum einen einen breiten und interdisziplinären Zugang und Einblick zum Thema \"Brain, Mind and Cognition\" gewonnen haben und können entsprechende Konzepte verstehen und bewerten. Studierende sind anhand der gelesenen Literatur in der Lage wissenschaftliche Fragestellungen zu identifizieren und zu formulieren. Zudem verbessern die Studierenden ihre schriftliche und mündliche Ausdrucksweise sowie die Fähigkeit zum wissenschaftlichen Dialog.",
    "teaching_methods": "Studierende lesen die vereinbarte Literatur innerhalb eines vorgegeben Zeitrahmens und schreiben im Anschluss einen Aufsatz über das persönliche Verständnis der Literatur. Die Aufsätze werden mittels Leitfragen angeleitet. Die gelesene Literatur wird in einer Kontaktstunde mit Blick auf eine übergeordnete Fragestellung untereinander diskutiert. Abschließend schreiben die Studierenden eine Zusammenfassung der Diskussionsergebnisse und der eigenen Einsichten. Ergänzende Hintergrundinformationen zu den Büchern wird in Form von Frontalunterricht (Vorlesung) präsentiert.",
    "media": "Bücher und Literatur (kann z.T. in elektronischer Form via Webseite zum download angeboten\nwerden);\nVorlesung mit Präsentationsfolien (Frontalunterricht)",
    "literature": "Die Literaturliste des Kurses wird zu jedem Semester aktualisiert und vorab via Webseite\nveröffentlicht.",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBrain, Mind and Cognition - Alternativ 2 (Seminar, 3 SWS)\nDiepold K, Dötzer M, Lengl M, Ripoll M"
  },
  {
    "module_id": "CIT4330011",
    "title": "Geometric Control for Robotic Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "To pass the course, students must achieve 50% of the maximum total grade.\n• Grading\no Assignments 40% (There will be four assignments (each weighted 10%) giving you an opportunity to practice the theoretical concepts presented in the lectures and test your understanding of the course material. Assignments are a group activity: you will form groups of two to four students and submit your work as a group.). 10% of the assignment grades will be coming from peer-reviews and self-assessment. After performing those assignments, the students should have gained the theoretical and practical knowledge to apply several teachings of geometrical control to a real-world problem. o A one hour Final exam 60% (will focus on the knowledge and understanding developed during the lectures and reinforced by the practical sessions.) By passing the final exam, the student should have gained an overall understanding of the theoretical topics of the course as well as their real-life perspective and applications.",
    "repetition": "",
    "recommended_prerequisites": "Pre-requisite course(s): Linear algebra, calculus, control theory (recommended), programming\nskills in MATLAB/Python (recommended).",
    "content": "In robotics, data are characterized by simple but varied structures with specific geometry constraints. Examples of these geometry constraints robotics data types are: (i) Orientation, encapsulated in unit quaternions S3 or rotation matrices SO(3); (ii) Manipulability or stiffness, encapsulated in CIT4330011: Geometric Control for Robotic Systems | Geometric Control for Robotic Systems [GCRS] Symmetric Positive Definite (SPD) matrices. For variables interrelated by geometric constraints, the embedding strategy has to be modified to fulfill the constraints during both training and execution. Moreover, several robotic skills consist of a combination of variables belonging to different manifolds. A simple example is a pose trajectory where the position lies in Cartesian space and the orientation is represented e.g., as unit quaternions. In this context, geometric control provides controller design and stability analysis to be carried out directly on a Riemannian manifold, which is a smooth differentiable topological space that resembles that is everywhere locally diffeomorphic to Euclidean space Rn, but cannot be globally identified with a Rn. If a manifold is accompanied with group structures, it is referred to as a Lie group. One of the most appealing use of Riemannian geometry in robotics is that it provides a principled and simple way to extend algorithms initially developed for Euclidean data to other manifolds, by efficiently taking into account prior geometric knowledge about these manifolds. In particular, Riemannian manifolds can be connected to a wide range of problems in robotics, including problems that requiring uncertainty and statistical modeling to be computed on structured non-Euclidean data.\n● Introduction to the basics of differential geometric,\n● Riemannian geometry, algebraic topology and Lie group theory.\n● Control systems on manifolds.\n● Controllability and observability of nonlinear systems.\n● Optimization on manifolds and Lie groups and their applications in\nlearning.\n● Control of non-holonomic systems and mechanical systems, rigid body\ndynamics.\n● Optimal control on manifolds and Lie groups",
    "learning_outcomes": "After the course the student should be able to: 1. Identify connections between linear algebra and multivariable calculus, differential geometry and control in order to describe mechanical systems (e.g. robots); 2. Write intrinsic formulation to describe the dynamics of robotic systems directly on the corresponding manifold. 3. Familiar with the concepts of controllability and observability, know how to prove the main results, and be able to formulate and solve optimal control problems. 4. Extend existing knowledge in control and learning algorithms to a verity of robotics data across different manifolds. 5. Identify some of the areas where the developed theory finds applications, and have accumulated enough knowledge to construct and analyse simple mathematical models for real problems, involving control of mechanical systems (e.g. robots) whose configuration spaces are particular differentiable manifolds, such as Lie groups and symmetric spaces. CIT4330011: Geometric Control for Robotic Systems | Geometric Control for Robotic Systems [GCRS]",
    "teaching_methods": "Two main teaching methods will be conducted in this course in order to achieve the maximum ILO level. (i) Traditional contact teaching approach: The abstract concepts, illustrated with examples, will be presented during the lectures. The course is designed in such a way to maximize the extent to which students discover the main concepts by themselves. This is achieved through class participation in discussions during the lectures and tutorial periods. (ii) Assignment/problembased learning approach: Students should not only focus on problem solving with a defined solution, but also, they learn how to acquire knowledge and enhance their collaboration and communication skills. Assignments/Problems will be divided into two types: practice problems, and challenging problems, whose resolution will be fundamentally more involved.\n• Digital tools/platforms that might be used during the course include but are not limited to; Wiki,\nMyCourses, Adobe Connect, etc.",
    "media": "● Presentations (Projector, Whiteboard)\n● Online videos\n● Handouts (exercises, labs)",
    "literature": "MyCourses (or any equivalent university platform)\n○ Lecture slides\n○ Links to readings and videos\n● Online communication tools: e.g. zoom, MS teams\n● Digital tools\n● Primary book\n○ Bullo F, Lewis AD. “Geometric control of mechanical systems: modeling, analysis, and design for\nsimple mechanical control systems”. Springer; 2019 Jun 12.\n● Secondary books\n○ J.M. Lee, “Introduction to Smooth Manifolds”, 2nd edition, Springer, 2013\n○ A. Agrachev, Y. Sachkov, “Control Theory from the Geometric Viewpoint”, Springer, 2004\n○ V. Jurdjevic, “Geometric Control Theory”, Cambridge University Press, 1996",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "CIT4330012",
    "title": "Software for Quantum Computing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The examination is performed in form of either an oral (30 mins) or a written exam (90 mins). The exam will cover tasks conducted before in the hands-on sessions/exercises (which in turn, cover the main content of the lecture in a practical fashion). The tasks/exercises allow to evaluate how well the students understood the respective concepts and how well they can realize corresponding (software) methods for quantum computing.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge in programming (e.g., in Python, C++, etc.)\nBasic knowledge in the use of design tools such as compilers, debuggers, etc.",
    "content": "Quantum computers have the potential to solve certain tasks that would take millennia to complete even with the fastest (conventional) supercomputer. Numerous quantum computing applications with a near-term perspective (e.g., for finance, chemistry, machine learning, optimization) and with a long-term perspective (i.e., cryptography, unstructured search) are currently investigated. However, while impressive accomplishments can be observed in the physical realization of quantum computers, the development of automated methods and software tools that provide assistance in the design and realization of applications for those devices is at risk of not being able to keep up with this development anymore. This may lead to a situation where we might have powerful quantum computers but hardly any proper means to actually use them. This module provides an in-depth introduction into the internals of quantum computing software. This includes CIT4330012: Software for Quantum Computing | Software for Quantum Computing [Quantum SW] * an elaboration on the differences between classical computing and quantum computing, * an introduction to the design flow for quantum computing applications, * a detailed coverage of data-structures and method dedicated to quantum computing, * a detailed coverage of software tools and methods for important design tasks such as quantum circuit simulation, quantum circuit compilation, quantum circuit verification, etc., as well as * corresponding hands-on experiences of those tools considering actual quantum algorithms as well as quantum computing platforms.",
    "learning_outcomes": "At the end of the module, students will have detailed expertise of software for quantum computing with which corresponding applications can be realized. More precisely, they will * understand the paradigm of quantum computing and will be able to evaluate how it differs from classical computing, * be able to analyze whether an application is suited for quantum computing, * be able to utilize and, if necessary, extend different data-structures as well as core methods that provide the basis for quantum computing software tools, * be able to utilize and, if necessary extend software solutions for quantum computing (e.g., for quantum circuit simulation, quantum circuit compilation, and quantum circuit verification), as well as * be able to realize, simulate, compile, verify, and execute quantum circuits using this software.",
    "teaching_methods": "The module will be held in the form of presentations about the topics covered above followed by corresponding hands-on sessions/exercises. Using slides presentations and whiteboard sketches, the main concepts of the respectively considered topics are provided. In addition, the students will have the opportunity to deepen their knowledge through individual hands-on experiences with corresponding software tools.",
    "media": "Lecture slides, software tools.",
    "literature": "M. A. Nielsen, I. L. Chuang: Quantum Computation and Quantum Information. Cambridge\nUniversity Press (2010)\nA. Zulehner and R. Wille. Introducing Design Automation for Quantum Computing. Springer, 2020.",
    "lv_sws_lecturer": "Wille, Robert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSoftware for Quantum Computing (Vorlesung mit integrierten Übungen, 3 SWS)\nWille R [L], Wille R"
  },
  {
    "module_id": "CIT4330013",
    "title": "Design Automation and Simulation for Microfluidic Devices",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The examination is performed in form of either an oral (30 mins) or a written exam (90 mins). The exam will cover tasks conducted before in the hands-on sessions/exercises (which in turn, cover the main content of the lecture in a practical fashion). The tasks/projects allow to evaluate how well the students understood the respective concepts and how well they can use the corresponding methods to design and/or simulate a microfluidic biochip.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge in programming (e.g., in Python, C++, etc.)\nBasic knowledge in the use of design tools such as compilers, debuggers, etc.",
    "content": "The domain of microfluidics is a multi-disciplinary field which deals with the precise control and manipulation of fluids at the micro-scale. Corresponding devices, often also known as \"Lab- on-a-Chip\" (LoC), are used to realize experiments or operations in domains such as medicine, (bio-)chemistry, biology, pharmacology, etc. The main idea is to realize assays, which are originally conducted in bulky and expensive laboratories, on a minimized, integrated, and automated single device. Prominent (although simple) examples include the pregnancy test or the Covid-19 test; but much more elaborated devices exist. However, the design and layout of microfluidic devices is not trivial: Channels must be properly dimensioned and connected, the used samples and chemicals must be injected into the chip at the right pressure, and mixing, heating, or incubation processes must be initiated at the right time. This requires dedicated expertise on a huge number of parameters and, eventually, design automation and simulation methods. This module provides * an overview of the various applications which are suited for microfluidic devices, * an overview of the different biochip platforms that are available to realize those applications, * a detailed introduction into design automation for microfluidic devices, * a detailed introduction into simulation methods for microfluidic devices, as well as * an overview of fabrication procedures for microfluidic devices. Overall, after the lecture, students have a complete understanding of how to realize a microfluidic application from the initial idea to a prototypical implementation.",
    "learning_outcomes": "At the end of the module, students will have detailed expertise of microfluidics and can design and simulate corresponding devices. More precisely, they will * be able to evaluate the potential of microfluidics and the applications it can be used for, * be able to analyze the different platforms that are available to realize certain applications, * be able to apply design steps, design methods, and design tools to realize a microfluidic device, * be able to apply simulation methods and simulation tools to evaluate the resulting device, as well as * understand the remaining steps that would be needed to eventually fabricate that device.",
    "teaching_methods": "The module will be held in the form of presentations about the topics covered above followed by corresponding hands-on sessions/exercises. Using slides presentations and whiteboard sketches, the main concepts of the respectively considered topics are provided. In addition, the students will have the opportunity to deepen their knowledge through individual hands-on experiences with corresponding design and simulation tools. Finally, students will be given the opportunity to witness the fabrication process of a simple/prototypical microfluidic biochip within our lab.",
    "media": "Lecture slides, software tools, hands-on in lab.",
    "literature": "A. Grimmer and R. Wille. Designing Droplet Microfluidic Networks: A Toolbox for Designers.\nSpringer, 2020.\nKrüger, Timm, et al. \"The lattice Boltzmann method.\" Springer International Publishing 10.978-3\n(2017): 4-15.",
    "lv_sws_lecturer": "Wille, Robert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDesign Automation and Simulation for Microfluidic Devices (Vorlesung mit integrierten Übungen, 3\nSWS)\nWille R [L], Wille R"
  },
  {
    "module_id": "CIT4330014",
    "title": "Control for Robotics: from Optimal Control to Reinforcement Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The students will demonstrate their knowledge in a written final exam at the end of the course. Successful completion of additional course components (such as the course assignments) can count towards a bonus for the exam. The exam will assess the students’ understanding of optimal control, learning-based control, and reinforcement learning, with a focus on applying these approaches in robotics. Exam questions will cover the lecture content as well as the practical content from the course assignments.",
    "repetition": "",
    "recommended_prerequisites": "Motivation and interest in robot learning and control, as well as knowledge in dynamic systems,\ncontrol theory (including state-space approaches), calculus, probability theory, linear algebra, and\nprogramming (Matlab and Python).\nAdditional knowledge and courses on the following topics will be beneficial: basics of optimization,\nmobile robotics, machine learning, optimal control.",
    "content": "Course Summary: This course presents optimal control, learning-based control, and reinforcement learning principles from the perspective of robotics applications. The course covers the foundations of optimal control and derives practical control algorithms that leverage first-principle robot models as well as data collected from the robot system. Real-world challenges such as disturbances, state estimation errors and model errors are addressed, and adaptive and reinforcement learning approaches are derived to address these challenges. CIT4330014: Control for Robotics: from Optimal Control to Reinforcement Learning | Control for Robotics: from Optimal Control to Reinforcement Learning Course Topics: Topics covered in the course include:\n- Foundations of Optimal Control: Dynamic Programming, Bellman Equation, Value Iteration and\nPolicy Iteration, Pontryagin’s Minimum Principle, Iterative Optimal Control Algorithms\n- Foundations of Model Predictive Control (MPC): Stability and Feasibility, Robust MPC, Practical\nMPC Considerations\n- Model Learning from Data: Deterministic Approaches such as Linear Regression and Neural\nNetworks, Probabilistic Approaches such as Bayesian Linear Regression and Gaussian Processes\n- Combining Learned Models and Robust Control: Gaussian Process Model Predictive Control\n- Introduction to Reinforcement Learning: Markov Decision Processes, State Value Function,\nAction Value Function, Model-Based Reinforcement Learning\n- Model-Free Reinforcement Learning: Monte Carlo, Q Learning, Experience Replay\n- Current Research Directions: Deep Reinforcement Learning, Offline Reinforcement Learning,\nSafe Learning for Robotics",
    "learning_outcomes": "At the end of the course, students are able to:\n- derive optimal controller equations for mobile robots,\n- implement optimal controllers in practice and analyse their properties,\n- understand state-of-the-art approaches to learning-based control and reinforcement learning,\n- design learning-based controllers to cope with non-idealities such as model errors.",
    "teaching_methods": "The core components of this course are: Lectures (introducing the core concepts) In-Class Exercises and Tutorials (working through examples) Assignments (practising the application of the concepts to practical problems and gaining hands-on implementation experience) Optional Course Project",
    "media": "The following types of media are used:\nPresentations (blackboard and slides)\nHandouts (lecture notes and assignments)\nOnline Videos (additional tutorials)",
    "literature": "Lecture notes and slides\nBertsekas, Dynamic Programming and Optimal Control, Vol. I and II\nStengel, Optimal Control and Estimation\nSutton and Barto, Reinforcement Learning: An Introduction\nBertsekas, Reinforcement Learning and Optimal Control\nBorrelli, Bemporad, and Morari, Predictive Control for Linear and Hybrid Systems\nLjung, System Identification: Theory for User (2nd ed.)\nCIT4330014: Control for Robotics: from Optimal Control to Reinforcement Learning | Control for Robotics: from Optimal\nControl to Reinforcement Learning",
    "lv_sws_lecturer": "Schöllig, Angela; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nControl for Robotics: from Optimal Control to Reinforcement Learning (Praktikum, 2 SWS)\nSchöllig A [L], Schöllig A, Brunke L, Zhou S, Römer R, Schuck M, von Rohr A\nControl for Robotics: from Optimal Control to Reinforcement Learning (Vorlesung mit integrierten\nÜbungen, 4 SWS)\nSchöllig A [L], Schöllig A, Brunke L, Zhou S, Schuck M, Römer R, von Rohr A"
  },
  {
    "module_id": "CIT4330015",
    "title": "Coding for Private Reliable and Efficient Distributed Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The students would be assessed through a semester-long group-project consisting of three students, and a written exam. The project is divided into three phases: In phase 1, the students choose a paper from a collection of suggested papers, read it and choose one of them (\"student A\") to present it. The duration of the presentation is expected to be between 15 to 25 minutes depending on the number of groups. In phase 2, the students implement (in a programming language of their choice) the algorithm introduced in the chosen paper. \"Student B\" explains their observations in a poster, while the other two roam around and ask about the posters of others. The poster should be of size A0. In phase 3, the students write a report about their own project summarizing their findings and summarizing the findings of two projects of their peers. \"Student C\" drives the report-writing phase. The report should consist of 5 to 10 pages. A summary on good practices in writing and structuring a report and a poster will be given during the semester. For fairness and to encourage all students to collaborate and give their best, the project grading is divided as follows: The grade of student A is equal to 0.5*(group grade for presentation) + 0.25*(group grade for poster) + 0.25*(group grade for re the report). Students B and C are graded in a similar fashion with the highest weight corresponding to their main task. In case the total number of students is not a multiple of three, groups of 4 students will be formed. Phase 1 for those groups will consist of reading two papers. The additional student presents the second paper. The grading will be of the form 0.4*(group grade for first presentation) + 0.2*(group grade for second presentation) + 0.2*(group grade for poster) + 0.2*(group grade for re the report). The 0.4 corresponds to the main task of the student. The written exam (duration 60 mins) will consist of problems covering the topics explained by the lecturer in class. The final grade for each student is equal to 2/3*(project grade) + 1/3*(exam grade). CIT4330015: Coding for Private Reliable and Efficient Distributed Learning | Coding for Private Reliable and Efficient Distributed Learning Exam retake is only allowed for the written exam. To make up for the project, students should participate in the whole project phase again next semester.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge of mathematics, e.g., linear algebra, calculus and probability theory\nBasic knowledge of a programming language, e.g., MATLAB or python\nThe course \"Channel Coding\" is recommended",
    "content": "This course covers the coding-theoretic tools behind speeding up distributed computing. In addition, data privacy being of crucial importance, this course includes a deep understanding of the main tool behind information-theoretic privacy: secret sharing. Several applications of secret sharing and coding theoretic tools in modern distributed systems and distributed machine learning are then explained together with the impact brought by applying those tools. More precisely, the course covers the following topics\n- Coding to ensure information-theoretic privacy through secret sharing.\n- Communication efficient secret sharing: a modification of secret sharing to better suit modern\ndistributed systems\n- Basic probability theory such as ordered statistics used to analyze the performance of different\ntechniques used in coding for distributed systems\n- Coding for private and fast distributed matrix multiplication, based on secret sharing schemes.\nSeveral state-of-the-art techniques will be explained in detail and their performance will be analyzed\n- Basics of machine learning algorithms: gradient descent, stochastic gradient descent, linear and\nlogistic regression\n- Fast distributed gradient descent with and without coding theory",
    "learning_outcomes": "At the end of this course, the students are able to:\n- Identify the challenges of modern distributed computing systems and tackle them using coding\ntheory\n- Analyze and assess the privacy and the performance guarantees of coding theoretic methods\napplied to distributed computing\n- Manipulate the fundamental secret sharing tool and be able to apply it in several applications to\nprivate distributed systems\n- Understand the basics of machine learning algorithms\n- Implement through programming languages algorithms explained in a research paper, produce\ntheir own observations and analyze their findings CIT4330015: Coding for Private Reliable and Efficient Distributed Learning | Coding for Private Reliable and Efficient Distributed Learning\n- Prepare and present a poster (or a paper) within the standards of international conferences/\nworkshop",
    "teaching_methods": "Lectures: The lecturer uses slides and the blackboard (or an iPad) to explain the fundamental theoretical concepts. Lectures are designed to be interactive and to encourage the students to ask questions and initiate discussions with the lecturer and each other. Tutorials: The lecturer, or teaching assistants, solve concrete problems to simplify the understanding of the theoretical content and help the students better understand the material. Students’ presentations: Each group of three students nominates one of them to present a paper of their choice. The paper is recent research on topics discussed in class. (Groups of four students nominate two students, each presents a paper) Poster session: A workshop-style session in which each group of three students nominate one of them to present a poster. The others would go around and ask questions about other posters. This session is designed to introduce the students to environments of international scientific events. Throughout the semester, the students can ask for question-and-answer sessions and/or lab sessions in which the lecturers and teaching assistants come to answer the students' questions about the topics discussed in class. In lab sessions, the teaching assistants provide help to further their progress in the programming tasks.",
    "media": "",
    "literature": "A collection of papers will be given to the students for further reading.\nAll slides and notes written in class will be passed to students.",
    "lv_sws_lecturer": "Wachter-Zeh, Antonia; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCoding for Private Reliable and Efficient Distributed Learning (Vorlesung, 4 SWS)\nBitar R [L], Bitar R, Egger M, Hofmeister C, Wachter-Zeh A"
  },
  {
    "module_id": "CIT4330016",
    "title": "Innovative Computing for AI",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": null,
    "hours_presence": 60,
    "examination_achievements": "The exam is in written format and lasts 75 minutes. The exam includes questions about the principles of technology scaling and the fundamental limitations along with the new concepts that become necessary in computer architecture to overcome those limitations and continue technology scaling. In addition, problems to test the understanding of how such fundamental limitations impact the performance, reliability, power and temperature of processors as well as what are the advantages and shortcomings of the different proposed solutions to improve technology scaling. These problems cover extensive reliability-related and energy-related topics of digital circuits and the underlying mechanisms that induce degradations in digital circuits.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge of computer architecture\nBasic knowledge of digital circuits",
    "content": "Fundamental limits in technology scaling and why innovative computing methods are highly required. Emerging beyond-CMOS technologies and their impact on the performance and energy of modern computing systems. Emerging non-volatile memories and challenges in such new nano-scaled devices with respect to reliability, endurance, energy, etc. Novel architectures beyond traditional von-Neumann principles. In-Memory Computing and Neuromorphic Computing. Novel algorithms for brain-inspired computing like Hyperdimensional Computing. CIT4330016: Innovative Computing for AI | Innovative Computing for AI [IC4AI] Combining novel algorithms with novel architecture for ultra-efficient computing systems. Reliability challenges in the existing technologies and emerging technologies and architectures. Novel cooling solutions for advanced thermal managements.",
    "learning_outcomes": "At the end of the module students know and understand the fundamental limitations in technology scaling and which novel concepts are needed to overcome those limitations. Students obtain a comprehensive knowledge and solid understanding of the novel methods for computing that go beyond traditional von-Neumann computer architecture principles. Students know and understand the need for novel and emerging technologies for both logic and memories. Student will understand the novel methods for performing advanced reliability management when emerging nanotechnologies are in use. In addition, student know in detail the concepts of innovative computing methods such novel in-memory computing, near-memory computing, neuromorphic computing, brain-inspired hyperdimensional computing.",
    "teaching_methods": "The module includes lectures and tutorials. In the lectures, basic concepts of novel computing paradigms, that go beyond traditional computer architectures, are discussed. Visual aids such as PowerPoint slides, overhead projections and handwriting on black board are used. In each lecture, some problems in technology scaling are explained first. Then discussions are held to predict possible solutions. Thereafter, state-of-the-art solutions from both academia and industry are shown. In the tutorials, the techniques introduced in lectures are demonstrated and potential challenges are discussed. The advantages and shortcoming of presented state-of-the-art solutions are evaluated together with the students. Students need to read scientific papers to discuss and challenge them. Students practice with small examples and thus get familiar with the techniques presented in the state of the art and how they work and can be implemented.",
    "media": "PowerPoint, black board, online materials, scientific papers.",
    "literature": "Springer Book: “Beyond-CMOS Technologies for Next Generation Computer Design”, ISBN\n978-3-319-90384-2 e-ISBN 978-3-319-90385-9\nSpringer Book: “Emerging Technology and Architecture for Big-data Analytics”, ISBN\n978-3-319-54840-1\n- Hennessy, Patterson: Computer Architecture - A quantitative Approach.\n- selected scientific papers that will be share with students",
    "lv_sws_lecturer": "Amrouch, Hussam; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nInnovative Computing for AI (Vorlesung mit integrierten Übungen, 4 SWS)\nAmrouch H, Thomann S\nCIT4330016: Innovative Computing for AI | Innovative Computing for AI [IC4AI]"
  },
  {
    "module_id": "CIT4330017",
    "title": "Trustworthy Machine Learning Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "The written exam (60 minutes) held without any allowed aids assesses whether the learning objectives targeted in the learning outcomes have been met. The answering of the questions requires own formulations and the application of the lecture contents to new tasks.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Foundations of machine learning and deep neural networks.",
    "content": "- Motivation to create trustworthy systems with components built with machine learning\n- Fields of application\n- Dimensions of trustworthiness\n- Concerns regarding the trustworthiness of machine learning systems\n- Relationship between trustworthiness and safety\n- \"European AI Act\" and relevant standards\n- Development processes\n- Requirements definition\n- Risk Analysis\n- Architectures for building trustworthy systems\n- Creation of trusted components with machine learning\n- Dimensions of data quality\n- Failure Mode and Effects Analysis\n- Learning assurance\n- Trustworthiness Assessment\nCIT4330017: Trustworthy Machine Learning Systems | Trustworthy Machine Learning Systems",
    "learning_outcomes": "At the end of the module students are able to evaluate the need, benefits, as well as the particular challenges of trustworthy systems with modules created with machine learning in various application fields. They will understand the connection between trusted components and their use for dependable functions. They know the European Ai Act the relevant standards and can evaluate concerns about the use of machine learning in dedicated applications. They can create an appropriate risk analysis for applications. Graduates know the dimensions of trustworthiness and the scientific and practical foundations of creating trustworthy systems with machine learning components.",
    "teaching_methods": "Presentation of the content following a structure that is presented at the beginning of the lecture. The presentation of the content is combined with discussion between the lecturer and the students that are introduced by questions that integrate “trusted AI related news” like ongoing development of standards and regulations, product introductions or trustworthiness problems.",
    "media": "PowerPoint presentations and videos",
    "literature": "“European Ai Act” available at EUR-Lex - 52021PC0206 - EN - EUR-Lex (europa.eu)\n„EASA Artificial Intelligence concept paper - proposed Issue“ https://www.easa.europa.eu/en/\ndownloads/137631/en\n“ISO/IEC TR 24028 - Overview of trustworthiness in AI” available at https://www.vde-verlag.de/iec-\nnormen/248797/iso-iec-tr-24028-2020.html\n“ISO/IEC CD 5259” - Data quality for analytics and ML available at https://www.iso.org/\nstandard/81088.html\n“ISO/IEC DTR 5469” - Functional safety and AI systems available at https://www.iso.org/\nstandard/81283.html\n“VDE-AR-E-2842-61 1-6” available at https://www.vde-verlag.de/normen/0800731/vde-ar-\ne-2842-61-2-anwendungsregel-2021-06.html",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTrustworthy Machine Learning Systems (CIT4330017) (Vorlesung, 2 SWS)\nKnoll A [L], Lenz A, Waschulzik T"
  },
  {
    "module_id": "CIT4330018",
    "title": "2D Materials and Applications in Electronics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The module is completed in the form of a written exam (60 min). The aim is to prove that both the fundamentals and properties of 2D materials have been understood and can be applied. In addition, the lecture is accompanied by homework exercises. The submission of the solutions for the exercises is voluntary. If 75% of the possible points of the exercises are achieved, a grade bonus of 0.3 points will be credited to the grade of the final exam.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No specific prerequisites. Solid-state physics is advantageous.",
    "content": "The lecture offers an introduction to the field of novel two-dimensional materials and their applications in electronics, optoelectronics, and photonics. The fundamental properties of these materials are covered, as well as synthesis and characterization techniques. In the course, the applications of these materials in near-future devices are also studied. The lecture covers the following topics: fundamentals of 2D materials; material classes; material properties; synthesis; characterization; heterostructures; devices.",
    "learning_outcomes": "After successful completion of the module, students will be able to understand the basics of the material class of the 2D materials as well as their properties. In addition, they can evaluate their performance in devices. Moreover, the students can also judge the limitations of these materials and their large-scale fabrication processes for applications in near-future electronic, optoelectronic, and photonic devices. CIT4330018: 2D Materials and Applications in Electronics | 2D Materials and Applications in Electronics",
    "teaching_methods": "The lectures consist of blackboard writing combined with interactive PowerPoint presentations. The content presented is supplemented by state-of-the-art examples. The accompanying exercises are intended to deepen the understanding of the course contents.",
    "media": "PowerPoint, blackboard; Exercise sheets; textbooks, publications",
    "literature": "P. Avouris, T. F. Heinz, T. Low (eds.) - 2D Materials: Properties and Devices, Cambridge University\nPress, 2017.",
    "lv_sws_lecturer": "Vogl, Tobias; Prof. Dr. phil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\n2D Materials and Applications in Electronics (Vorlesung mit integrierten Übungen, 4 SWS)\nCebe A, Vogl T"
  },
  {
    "module_id": "CIT433019",
    "title": "Projektwoche Medizintechnik Prototyp",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Einmalig",
    "credits": 2,
    "hours_total": 60,
    "hours_self_study": 20,
    "hours_presence": 40,
    "examination_achievements": "Präsentation der Ergebnisse jeder Gruppe, 15 Min (+Diskussion) Die Studierenden stellen in Gruppen die Ergebnisse ihrer Projektarbeit vor und bewerten ihre Lösungen. Anhand der Präsentation wird die geleistete technische Entwicklungsarbeit bewertet sowie die Entwicklung einer möglichen Geschäftsidee.",
    "repetition": "",
    "recommended_prerequisites": "Studierende der Module:\n• Entwurf von sicheren medizinischen Geräten und Baugruppen (Dr. Gleich)\n• Neuroprosthetics (Prof. Hemmert)\n• Zulassungsverfahren und Qualitätsmanagement in der Medizintechnik (Dr. Oswald)",
    "content": "Unser Projekt „Medizintechnik“ zeigt Studierenden am Beispiel der Entwicklung eines Gerätes zum Hörscreening wie Probleme aus der medizinischen Diagnostik mit technologischen Ansätzen gelöst werden können. Das Projekt ist interdisziplinär zwischen der Medizin, den Ingenieurswissenschaften und einem Wirtschaftsunternehmen (KMU) angesiedelt, die Studierenden lernen dabei die Denkweisen und Anforderungen aus diesen Bereichen kennen, inklusive wichtiger Aspekte bei der Zulassung von Medizinprodukten und der wirtschaftlichen Verwertung. Der Projektablauf beinhaltet eine Einführung in die benötigten Grundlagen, eine Exkursion zum Medizintechnik Unternehmen PATH MEDICAL (Germering bei München). Die folgenden zwei Tagen bestehen aus praktischen Inhalten zum mechanischen und elektrischen CIT433019: Projektwoche Medizintechnik Prototyp | Project Week Medical Technology Prototype [Medizintechnik Prototyp] Design, Rapid Prototyping (3d-Druck), und der Softwareentwicklung. Hier sollen sich die Studierenden auf einen Teil konzentrieren, in dem sie ihre Vorkenntnisse optimal einbringen können. Am letzten Tag werden die Teilnehmer mit dem entstandenen System Messungen an ihrem Gehör durchführen und sollen Projektideen und Geschäftsmodelle für Start-Ups entwickeln.",
    "learning_outcomes": "Projektziele: Die Studierenden können die Stärken und Probleme eines heterogenen und interdisziplinären Teams bewerten. Sie sind sich über ihre eigenen Stärken bei der Technologieentwicklung bewusst und berücksichtigen ethische Aspekte bei der Produktentwicklung (Patientensicherheit, Datenschutz). Zudem können sie ihr Grundwissen in pragmatische Lösungen umsetzen und sind in der Lage, auch die wirtschaftlichen Grundlagen einer Geschäftsidee zu bewerten und eigene Start-Up Ideen zu entwickeln.",
    "teaching_methods": "Gruppenarbeit im Labor, Exkursion zu einer KMU",
    "media": "Gruppenarbeit",
    "literature": "",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektwoche Medizintechnik Prototyp (Workshop, 3 SWS)\nHemmert W [L], Gleich B, Oswald J, Wimmer W"
  },
  {
    "module_id": "CIT433020",
    "title": "Contact-Rich Robotics; an Optimization Perspective",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The course grade will be determined by the midterm exam (50%) and final project (50%). The midterm test consists of solving theoretical problems in written tests of a duration of 120 min. The midterm evaluates if students have grasped the fundamentals of robotics and optimization, and can solve simple theoretical problems using pen and paper. This understanding is essential for students to simulate and control more complicated robotic systems with contact. Additionally, there will be a final project where students build a simulation environment with contact and present their work at the end. They will also deliver codes and a 5-page report on their project. The final project evaluates whether students are able to transfer what they learned to develop simulation environments with contact. For the final project, students select one simple robotic system among the ones proposed in the class and use existing software for rigid body algorithms (e.g., Pinocchio) together with their own model of contact to simulate robotic systems with contact. This can be done within four weeks, after which they will present their approach in a 30-minutes presentation. Specifically, the grade will be divided as follows: 50% midterm exam (written test) 50% Final project (20% Solving the task, 10% Report, 10% Code/software, 10 % presentation)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "The course is fully self-contained. However, knowledge of robotics and optimization will be helpful\nin grasping the concepts explained in the course. The exercises and final project will require\nprogramming in Python.",
    "content": "Chapter 1: Introduction to robot kinematics and dynamics Rigid-body motions Forward and inverse kinematics Dynamics modeling Chapter 2: Introduction to Optimization Nonlinear optimization Newton-type optimization algorithms Calculating derivatives Numerical simulation Chapter 3: Modeling contact Frictional contact Compliant models Rigid models Relaxed models Chapter4: Control of robots with contact Dynamic programming Optimal control Reinforcement learning Advanced control methods for contact-rich systems",
    "learning_outcomes": "After successful completion of the course, students will have learned how to efficiently model robotic systems and simulate their motion with contact. Also, they are able to use state-of-the-art available software and advanced model-based and data-driven techniques to control robots in contact with the environment.",
    "teaching_methods": "● Lectures (for direct transfer of theoretical knowledge)\n● Exercises (for practicing the theoretical concepts)\n● Software tutorial (preparation for the final project)",
    "media": "Presentations (Projector, Whiteboard)\nOnline videos\nHandouts (exercises, labs)",
    "literature": "Lecture slides\nLynch, Kevin M., and Frank C. Park. Modern robotics. Cambridge University Press, 2017.\nSebastien Gros and Moritz Diehl. \"Numerical optimal control.\" Optimization in Engineering Center\n(OPTEC) (2022).\nKao, Imin, Kevin M. Lynch, and Joel W. Burdick. \"Contact modeling and manipulation.\" Springer\nHandbook of Robotics(2016): 931-954.\nTodorov, Emanuel, Tom Erez, and Yuval Tassa. \"Mujoco: A physics engine for model-based\ncontrol.\" 2012 IEEE/RSJ international conference on intelligent robots and systems. IEEE, 2012.\nHorak, Peter C., and Jeff C. Trinkle. \"On the similarities and differences among contact models in\nrobot simulation.\" IEEE Robotics and Automation Letters 4.2 (2019): 493-499.",
    "lv_sws_lecturer": "Khadiv, Majid; Dr. Ph.D.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nContact-Rich Robotics, an Optimization Perspective (Vorlesung, 6 SWS)\nKhadiv M [L], Khadiv M"
  },
  {
    "module_id": "CIT433021",
    "title": "Fundamentals of Foundation Models",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The module assessment consists of a written exam (graded) as well as coursework (homeworks, pass/fail). Students will take a written exam of two hours (120 Minutes) duration. In the exam, the students demonstrate their understanding of foundation models. With the exam, the ability of students is tested to answer questions on the principles and practice of foundation models. In addition, the course has the following coursework requirement that won’t be part of the grade but is necessary to pass the course: The course has weekly homeworks, 8-10 in total. The homeworks contain exercises on foundational models that are solved with pen and paper (for example, deriving a mathematical proof, or explaining how an algorithm is applied to a certain problem), and of coding problems where the task is to implement a machine learning method or evaluate the method empirically. At least half of the problems overall must be solved correctly. With the homeworks, the students learn to understand, apply, and develop foundation models.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "An introduction to machine learning, or a course like machine learning and optimization.",
    "content": "Foundation models are machine learning models that are trained on large amounts of data often in an un-supervised manner, and are then fine-tuned to perform a given or a wide range of tasks. Examples of foundation models are large language models like generative pretrained transformers (GPT), and multi-modal models such as Contrastive Language–Image Pretraining (CLIP), as well as image generating models such as dalle-e and stable diffusion. In this course, students will learn technical aspects about foundation models: what foundation CIT433021: Fundamentals of Foundation Models | Fundamentals of Foundation Models [FMS] models are, how they work, and how they are trained and fine-tuned. We discuss foundations models for text (GPT), multi-modal models (CLIP), and image generation models (stable diffusion). Those models are typically trained on large sets of data, we will discuss the engineering challenges and how to train such models on multiple nodes. For downstream tasks those models are fine-tuned and aligned. We will discuss such fine-tuning and alignment strategies. Finally, we will discuss tools like scaling laws for working with and thinking about foundation models, as well as data aspects.",
    "learning_outcomes": "Upon successful completion of the module students know the fundaments of foundation models such as LLMs, CLIP, and image generating models, and how to train, fine-tune, and work with such models. Students are able to (i) apply advanced and build new foundation models by modifying existing ones (ii) tune and work with optimization algorithms for training such models, (iii) be able to leverage existing models through fine-tuning, and (iv) understand data-requirements and dependencies.",
    "teaching_methods": "Foundation models are introduced and discussed during lectures, with a focus on technical aspects, i.e., the architecture, data requirements, scaling, and training them on distributed systems. Exercises with theory and coding problems distributed weekly or every second week, and whenever a new exercise is handed out, solutions for the previous one are distributed. We also offer discussion/exercise sessions for asking specific questions about the exercises and the methods introduced in the lectures, and discussing certain problems or parts of the lecture in more detail. The material is presented with slides, on the board, and with coding examples.",
    "media": "",
    "literature": "Slides and references will be distributed.",
    "lv_sws_lecturer": "Heckel, Reinhard; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nFundamentals of Foundation Models (Vorlesung mit integrierten Übungen, 4 SWS)\nHeckel R, Ommer B, Mansour Y, Weindel F, Klug T"
  },
  {
    "module_id": "CIT433022",
    "title": "Introduction to Quantum Optics and Applications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 60,
    "hours_presence": 90,
    "examination_achievements": "DDie Modulprüfung wird in Form einer mündlichen Prüfung mit Dauer von 30 Minuten erbracht. Die Note der mündlichen Prüfung zählt 75% zur Gesamtnote. Während des Semesters werden 25% der Note durch schriftliche Hausaufgaben erbracht. Diese schriftlichen Hausaufgaben bestehen aus mathematischen Aufgaben und Programmieraufgaben. Diese werden jede Woche abgegeben und korrigiert. Sie ermöglichen den Studenten ihren Lernfortschritt zu überprüfen, und trainieren das Denken in den quantenmechanischen Kommunikationsmodellen. Die Studenten lernen durch die Hausaufgaben die Probleme im Kommunikationsdesign durch mathematische Methoden zu lösen, sowie Programmierumgebungen zu nutzen um numerische Resultate auch für komplexe zusammengesetzte Systeme zu erhalten. der Prüfung soll durch das Beantworten von Fragen und Darlegung eines Lösungsansatzes für ein gegebenes Problem nachgewiesen werden, dass die Studierenden die in Vorlesung und Übung behandelten Konzepte sicher einsetzen können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra, Introduction to Quantum Networks, Mathematisches Interesse.\nFolgende Module sollten bereits erfolgreich absolviert worden sein: Introduction to Quantum\nNetworks",
    "content": "Ziel der Vorlesung ist es, die Teilnehmer an die besonderen Eigenschaften der Quantenkommunikation auf der physikalischen Schicht heranzuführen. Quantenkommunikation ist ein Forschungsgebiet, welches sich in den letzten Jahren rasant entwickelt und etabliert hat. Eine Grundlage der Quantenkommunikation ist das Konzept des „Joint Detection Receivers“, welcher Messungen auf einer Vielzahl von Signalen gleichzeitig durchführt CIT433022: Introduction to Quantum Optics and Applications | Introduction to Quantum Optics and Applications ohne diese vorher vom optischen in den elektronischen Bereich zu konvertieren. Dieser Detektionsmechanismus ermöglicht es effizientere Empfänger für die Nachrichtenübertragung zu bauen. Weitere Eigenschaften der physikalischen Schicht eines Quantensystems sind die dort verfügbaren elementaren Gatter, welche für die spezifischen auf Verschränkung basierenden Services eines Quantennetzwerkes notwendig sind. Zusätzlich kann auf der physikalischen Schicht eines Quantensystems mit gequetschtem Licht gearbeitet werden, was Vorteile bei bestimmten Übertragungsmedien bietet. Nach einer kurzen Einführung des „Fock-Space“ auf welchem Signale von Quantenkommunikationssystemen modelliert werden die Gatter und Nachrichtenübertragungssysteme dargestellt und in Bezug zur klassischen Theorie gesetzt. Die Studenten lernen die Vorteile von Quantenkommunikationssystemen gegenüber dem Stand der Technik, sowie die Grundbausteine für weiterführende Services der physikalischen Schicht von Quantenkommunikationsnetzen.",
    "learning_outcomes": "Am Ende der Veranstaltung ist der Student mit den Grundlagen der Quantenkommunikation vertraut. Er kann elementare Quantenkommunikationstechniken auf der physikalischen Schicht beschreiben und so an der Schnittstelle zwischen Theorie und experimenteller Umsetzung neue Konzepte definieren.",
    "teaching_methods": "Darstellung der Inhalte im Vorlesungsskript. Darstellung der Inhalte an der Tafel (in Präsenz) und als Kurzvideo (asynchron, online). Entwicklung eines tiefgehenden Abschnitts für Fragen und Antworten basierend auf den Fragen der Studenten. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispielen in Heimarbeit. Übungen zur Beantwortung der Fragen der Studenten.",
    "media": "Die Inhalte werden präsentiert mittels: Präsentation an der Tafel / Zoom / im Skript. In den\nÜbungen werden QuNetSim und QuTiP eingesetzt um kleine Algorithmen zu implementieren.",
    "literature": "J. C. Garrison, R. Y. Chiao,Quantum Optics (Oxford University Press, 2008).\nWeedbrook, C., Pirandola, S., Garcia-Patron, R., Cerf, N. J., Ralph, T. C., Shapiro, J. H., and\nLloyd,\nS. (2012). Gaussian quantum information. Reviews of Modern Physics, 84(2), 621.\nJ-P Gazeau, Coherent States in Quantum Physics (Wiley-VCH, 2009)",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntroduction to Quantum Optics and Applications (Vorlesung, 2 SWS)\nNötzel J [L], Viladomat Jasso A\nCIT433022: Introduction to Quantum Optics and Applications | Introduction to Quantum Optics and Applications\nIntroduction to Quantum Optics and Applications (Übung, 2 SWS)\nNötzel J [L], Viladomat Jasso A"
  },
  {
    "module_id": "CIT433023",
    "title": "Circuit Reliability for AI in Advanced Technologies",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The exam is in written format and lasts 75 minutes. In the exam, students will demonstrate that they are able to solve problems related to circuit’s reliability and degradation effects. Students will analyze how different workloads such as AI can impact circuit’s reliability and how technology scaling impact the circuit’s reliability. Students will analyze the existing tradeoffs among performance, reliability, power and temperature of modern processors. Students will demonstrate they solve problems about reliability-related and energy-related topics of circuits and processors.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge of computer architecture\nBasic knowledge of digital circuits",
    "content": "• Technology Scaling and the Ever-Increasing Challenges in\nTransistor’s and Circuit’s Reliability.\n• Key Reliability Degradation Mechanisms: Impact of Aging Effects, Temperature Effects, Self-\nheating Effects, and Soft Error Effects on the Reliability of Circuits.\n• Modeling and Investigating Reliability Degradations from Transistors to Complex Circuits.\n• Reliability-Aware Circuit Design.\n• Techniques to Improve the Reliability of Processors and Mitigate Degradation Effects.\n• System-Level Management Techniques to Optimize Reliability in Multi-Core Processors.\n• Impact of Emerging Technologies on the Reliability of Future Chips.",
    "learning_outcomes": "At the end of the module students know and understand the fundamental concepts of design for reliability for circuits in advanced technology nodes. Students understand how heavy workloads induced by AI applications negatively impact the circuits' reliability. Students obtain a comprehensive knowledge and solid understanding of the underlying key mechanisms which impact reliability circuits and transistors. Students obtain solid knowledge on how technology scaling and advanced technologies impact the circuit reliability. Students learn in detail about the various mechanisms, such as aging effects, temperature effects, soft errors, and self-heating effects which degrade the reliability of transistors in modern chips in sub-10nm technologies. Students master advanced techniques and methods for protecting circuits and on-chip systems against reliability degradations. The module covers how circuit’s reliability can be investigated, modeled, improved, and managed at different abstraction levels starting from transistors to logic gates to complex circuits like processors all the way to the system level. Students learn how novel emerging technologies can help in improving the reliability of circuits in the future.",
    "teaching_methods": "The module includes lectures and tutorials. In the lectures, basic and fundamental concepts of reliability degradations for circuits and transistors are discussed. Visual aids such as PowerPoint slides, projector, and handwriting on black board are used. In each lecture, some problems in circuit's reliability are explained first. Then, discussions are held to predict possible solutions. Thereafter, state-of-the-art solutions from both academia and industry are shown and discussed with students. In the tutorials, the techniques introduced in lectures are demonstrated and potential challenges are discussed. The advantages and shortcoming of presented state-of-the-art solutions are evaluated together with the students. Students need to read scientific papers to discuss and challenge them. Students practice with small examples and thus get familiar with the techniques presented in the state of the art and how they work and can be implemented.",
    "media": "PowerPoint, black board, online materials, scientific papers.",
    "literature": "Research Papers and Journals.\nSpringer Book: “Circuit Design for Reliability”, ISBN 978-1-4614-4078-9.\nSpringer Book: “Fundamentals of Bias Temperature Instability in MOS Transistors”, ISBN\n978-81-322-2508-9.\nSpringer Book: “Beyond-CMOS Technologies for Next Generation Computer Design”, ISBN\n978-3-319-90384-2 e-ISBN 978-3-319-90385-9\nSpringer Book: “Dependable Embedded Systems”, ISBN 978-3-030-52017-5.",
    "lv_sws_lecturer": "Amrouch, Hussam; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCircuit Reliability for AI in Advanced Technologies (Vorlesung mit integrierten Übungen, 4 SWS)\nAmrouch H, Thomann S"
  },
  {
    "module_id": "CIT433024",
    "title": "Experimental Audiology",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In der schriftlichen Prüfung (60 Minuten) werden Konzepte der Audiologie, subjektive und objektive Messmethoden für Kliniken geprüft. Darüber hinaus werden Konzepte von Hörimplantaten, insbesondere Cochlea-Implantaten, intra- und postoperative Telemetrie und audiologische Anpassung geprüft. Der Praktikumsbericht kann die wissensbasierten Komponenten nicht effektiv bewerten, da sie im Internet leicht zugänglich sind. Der praktische Teil besteht aus einem praktischen Kurs zur audiologischen Beurteilung. Darüber hinaus werden zwei praktische Programmierprojekte mit elektrophysiologischen Signalen und Computertomographie-Bildern durchgeführt, wobei für jedes Programmierprojekt ein Bericht zur Dokumentation der Ergebnisse eingereicht werden muss. Die implementierten Lösungen und der Bericht werden bewertet und benotet. Umfang: 2 Ausarbeitungen mit 5-10 Seiten (aber hauptsächlich Abbildungen) basierend auf Simulationen (Matlab oder Python). Diese Programmierkenntnisse können wiederum nicht in der schriftlichen Klausur geprüft werden. Benotung:\n- 60% Prüfung\n- 40% benotete Berichte",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundkenntnisse in Matlab oder Python\nGrundlagen der digitalen Signalverarbeitung\nCIT433024: Experimental Audiology | Experimental Audiology [Experimentelle Audiologie]",
    "content": "Die Vorlesung (2SWS) wird durch einen praktischen Teil (2SWS) ergänzt, der grundlegende und angewandte Konzepte der experimentellen und klinischen Audiologie abdeckt. Der Kurs beginnt mit einem Überblick über die Hörphysiologie, Pathologien und audiologische Testverfahren, gefolgt von praktischen Übungen zur Audiometrie in der HNO-Abteilung, um die grundlegenden Fähigkeiten zu festigen. Darüber hinaus werden die folgenden Themen behandelt:\n- Hörimplantate: klinische Indikation, Chirurgie und audiologische Verfahren\n- Computergestützte Chirurgie für Hörimplantate: präoperative Planung, Navigation und\nrobotergestützte Chirurgie\n- Computergestützte Audiologie mit praktischen Übungen: CT-Analyse (3DSlicer)\n- Auditiv evozierte Potentiale (Hirnstamm)\n- Cochlea-Implantat-Telemetrie: elektrische Impedanzen und eCAP mit praktischen Übungen\n- Postoperative Aktivierung und Anpassung von Cochlea-Implantaten",
    "learning_outcomes": "Nach diesem Kurs sind die Teilnehmer in der Lage / erworbenen Fähigkeiten in Bezug auf:\n- fortgeschrittene Programmierfähigkeiten\n- Erstellung von Reinton- und Sprachaudiogrammen\n- Verständnis des Prozesses der klinischen Entscheidungsfindung bei der Kandidatur für ein\nCochlea-Implantat\n- Kenntnis von computergestützten Verfahren für die Operation von Hörimplantaten\n- Fähigkeit, Impedanzmessungen von Cochlea-Implantaten zu analysieren und auszuwerten\n- die Fähigkeit, elektrisch evozierte zusammengesetzte Aktionspotenziale zu analysieren und zu\nbewerten\n- Verständnis des postoperativen audiologischen Anpassungsprozesses für Cochlea-Implantate",
    "teaching_methods": "Vorlesung mit praktischen Übungen Implementierung von Skripten zur CT-basierten medizinischen Bildanalyse für Cochlea-Implantate Implementierung von Skripten zur Verarbeitung von Implantat-Telemetrie (ECAP, Impedanz etc.) Praktische Übungen zur klinischen Audiometrie (Luft- und Knochenleitungshörschwellen, Schallfeldaudiometrie, Lokalisationstests, Sprache in Ruhe und im Lärm)",
    "media": "Vortrag\n- unterstützt durch Folien (Beamer / interaktives Whiteboard)\n- Ableitungen und ergänzende Informationen auf dem interaktiven Whiteboard\nPraktischer Kurs\n- Praktische Übungen im Labor für experimentelle Audiologie\n-Individuelle Unterstützung während des Praktikums bei der Lösung der gestellten Aufgaben am\nComputer\n- Anweisungen und unterstützende Informationen an der Tafel\nCIT433024: Experimental Audiology | Experimental Audiology [Experimentelle Audiologie]",
    "literature": "Die Studierenden erhalten die Vorlesungsfolien.\nWeiterführende Literatur:\n- Essentials of Audiology, Stanley A. Gelfand & Lauren Calandruccio; ISBN: 9781684203994",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nExperimentelle Audiologie (Vorlesung, 2 SWS)\nWimmer W [L], Veloso de Oliveira J\nExperimentelle Audiologie Praktikum (Praktikum, 2 SWS)\nWimmer W [L], Veloso de Oliveira J"
  },
  {
    "module_id": "CIT433025",
    "title": "Entrepreneurial Opportunities in 6G Communication Network Technologies (Lecture Series)",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "This module is designed to equip students with a comprehensive understanding of entrepreneurial opportunities and challenges within the dynamic realm of network technology, with a particular focus on 6G innovations. The assessment structure is crafted to encourage in-depth exploration and practical application, reflecting a commitment to both theoretical understanding and entrepreneurial acumen. The assessment components are as follows:\n- Group Project (40% of the grade): Students will work in teams to develop a prototype business\nmodel that leverages 6G technology. This project encourages collaborative innovation and practical application of entrepreneurial principles in the context of emerging network technologies.\n- Individual Research Paper (40% of the grade): Each student is required to conduct a detailed\nstudy on a specific aspect of entrepreneurship in the 6G era, culminating in a reflective research paper. The expected length of the paper is 5 pages. This assessment method is designed to deepen students' research skills and their understanding of 6G entrepreneurship.\n- Presentation (20% of the grade): Students will present their research findings or project\noutcomes. The duration of the presentation is 10 min. This component assesses the ability to effectively communicate complex ideas and the application of 6G technology in an entrepreneurial context.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Basic understanding of network technologies and principles.\n- Prior coursework in entrepreneurship or business studies is advantageous.\n- Curiosity and willingness to engage with emerging technologies and interest in entrepreneurship.",
    "content": "1. Introduction to 6G Technology: Overview, potential, and advancements. 2. Entrepreneurial Opportunities in 6G: Identifying market needs and technological gaps. 3. Case Studies: Successful ventures and startups in the 6G domain. 4. Challenges and Risks: Addressing technical, regulatory, and market challenges. 5. Innovative Business Models: Exploring new paradigms and strategies. 6. Future Trends and Predictions: Expert insights on the evolution of 6G.",
    "learning_outcomes": "- To understand the fundamentals and potential of 6G technology.\n- To identify and analyze entrepreneurial opportunities in the 6G era.\n- To develop critical thinking about the challenges and risks in this domain.\n- To foster the ability to create innovative business models leveraging 6G tech.",
    "teaching_methods": "- Lectures: Insights from professors and industry experts.\n- Interactive Workshops: Hands-on sessions for practical understanding.\n- Group Discussions: Peer-to-peer learning and idea exchange.\n- Case Study Analysis: Real-world examples to comprehend market dynamics.",
    "media": "- Lecture Slides and Reading Materials: Provided for each session.\n- Video Lectures: Supplemental content from leading experts.\n- Online Forums: For discussion, queries, and resource sharing.",
    "literature": "",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEntrepreneurial Opportunities in 6G Communication Network Technologies (Lecture Series)\n(Vorlesung, 2 SWS)\nEfa A [L], Kellerer W, Steinbach E"
  },
  {
    "module_id": "CIT433026",
    "title": "Semantics in Robot Perception and Decision-Making Seminar Course",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "This course offers an introduction to semantics in robot perception and decision-making. In this course, students will conduct a literature review and implement one state-of-the-art approach in the pertinent topic area. To complete this course, students have to demonstrate their ability to understand the fundamental ideas behind the state-of-the-art literature, critically identify limitations of existing approaches, and presenting own ideas in a comprehensive manner. Students are expected to work in pairs, and the final grade will be composed of\n● a written report (40%, length of report: up to 2 double-column pages per team member),\n● a presentation followed by questions and a discussion (40%, length of presentation: 5 minutes\nper team member), and\n● a demonstration of the core idea proposed in an existing work in the literature (20%, minimal\nexpectation: reproducing examples from the original scientific work). Through introductory lectures, in-class activities, and self-directed reading groups, students will be equipped with the necessary skills for independent research in their chosen topic.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Fundamentals of robotics, machine learning, control theory, and computer vision.",
    "content": "Students will gain knowledge in robot decision-making by critically reviewing existing literature in this field, with a focus on semantics-informed approaches. In addition to the literature review, students are expected to implement relevant work to showcase their understanding of the CIT433026: Semantics in Robot Perception and Decision-Making Seminar Course | Semantics in Robot Perception and Decision-Making Seminar Course approach and support the claims in their literature analysis. The specific topics covered will change each term, encompassing areas such as safe robot learning, learning from demonstration, language-conditioned robot learning, spatial AI, and 3D scene understanding.",
    "learning_outcomes": "Students will learn to conduct a thorough literature review, contrast different ideas and concepts, quickly prototype existing algorithms, identify their impact and limitations, and communicate their findings in written and oral form. Furthermore, students will be able to structure their findings by identifying the main research threads in a particular field and engaging in group discussions and collaborative writing.",
    "teaching_methods": "Students will be given introductory lectures and guided through the process of finding relevant literature and discussing it. Regular meetings with a scientific advisor will support this process. In particular, the advisor will provide an introduction to the topic, an initial set of relevant literature, and early feedback on the report and presentation.",
    "media": "● Presentations\n● Blackboard\n● Robot simulation software and dataset\n● Reading materials",
    "literature": "The required literature references will be provided depending on the topics.",
    "lv_sws_lecturer": "Schöllig, Angela; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSemantics in Robot Perception and Decision-Making Seminar Course (Seminar, 5 SWS)\nSchöllig A [L], Schöllig A, Dai A, Zhou S"
  },
  {
    "module_id": "CIT433027",
    "title": "Advanced Deep Learning in Robotics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 165,
    "hours_presence": 75,
    "examination_achievements": "- Written test of 60 minutes at the end of the course (for lecture)\n- After each practical session, the students will have to provide the written working code to the\nteaching assistant for evaluation.\n- In the written exam (50% of the final grade), we will ask questions regarding lecture theory\n- In addition, to the written exam, the results of the projects will be evaluated (50% of the\nfinal grade); we will evaluate projects on a (bi-) weekly basis including reports (33.33%), oral presentations (33.33%), and code/submissions (33.33%).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "MA0902 Analysis for Informatics\nMA0901 Linear Algebra for Informatics\nIN2346 Introduction to Deep Learning (expert knowledge required!)",
    "content": "This is the advanced deep learning lecture with a specific focus on Robotics and Deep Reinforcement Learning (including guest lectures from DeepMind and Intrinsic). Taking the “Introduction to Deep Learning” course is expected. 1. Introduction & Recap of Deep Learning 2. Advanced Network Architectures & Recursive Neural Networks (LSTMs) 3. Hyperparameter & Architecture Search CIT433027: Advanced Deep Learning in Robotics | Advanced Deep Learning in Robotics Bayesian optimization, network architecture search (NAS) 4. Adversarial Samples & Adversarial Training 5. Bayesian Deep Learning Bayesian learning, variational inference, Monte Carlo dropout method 6. Generative Models: VAEs & GANs variational auto-encoders, generative neural networks (WGAN-GP) 7. Data Efficient Learning: Transfer & Semi-Supervised Learning 8. Deep Reinforcement Learning I MDPs, Q-iteration, Bellman equation, deep Q-learning, example: Atari-games 9. Deep Reinforcement Learning II policy gradients, REINFORCE, actor-critic algorithm, TRPO, PPO, robotic applications 10. Deep Reinforcement Learning III advanced methods: DDPG, soft Q-learning, soft actor-critic (SAC), robotic applications 11. & 12. Guest Lectures from DeepMind Recent Developments in Deep Reinforcement Learning for Robotics 13. Guest Lecture from Intrinsic (formerly Google X Robotics) Learning methods and challenges in real-world robotic applications",
    "learning_outcomes": "Upon completion of this module, students will have acquired extensive theoretical concepts behind advanced architectures of neural networks and state of the art deep reinforcement learning methods in the context of robotic tasks. In addition to the theoretical foundations, a significant aspect lies on the practical realization of deep reinforcement learning (DRL) methods in robotic scenarios.",
    "teaching_methods": "The lectures will provide extensive theoretical aspects of advanced deep learning architectures and specifically deep reinforcement learning methods in the field of robotics. The lecture will have reading assignments (e.g., from the DeepLearning book and recent RSS/ICRL/ICRA/IROS papers). The practical sessions will be key, students shall get familiar with esp. Deep Reinforcement Learning through hours of training and testing. The students will do a semester-long project in teams of 2 with weekly presentations and tutoring of the projects throughout the semester. They will work with DL frameworks (PyTorch, TensorFlow, …) and simulation environments (OpenAI Gym, PyBullet, Isaac) and implement advanced deep reinforcement learning methods for state of CIT433027: Advanced Deep Learning in Robotics | Advanced Deep Learning in Robotics the art robotic problems. For each student, $1000 credits in the Google Cloud are available via a special Google Educational Grant.",
    "media": "Projector, blackboard, PC",
    "literature": "- Slides given during the course\n- www.deeplearningbook.org",
    "lv_sws_lecturer": "Bäuml, Berthold; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Deep Learning in Robotics (CIT433027) (Vorlesung mit integrierten Übungen, 5 SWS)\nBäuml B"
  },
  {
    "module_id": "CIT436000",
    "title": "Beinroboter",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Bewertung für das Modul \"Legged Robots\" beinhaltet einen vielschichtigen Ansatz mit fünf individuellen Hausaufgaben und einem abschließenden Abschlussprojekt. Diese umfassende Evaluierung umfasst die Überprüfung von Quellcodes und mündlichen Präsentationen, um eine ganzheitliche Beurteilung des Verständnisses und der Anwendung der Studierenden im Fachgebiet sicherzustellen. Jede einzelne Hausaufgabe ist sorgfältig darauf ausgerichtet, sowohl theoretisches als auch praktisches Wissen im Zusammenhang mit den für die Modellierung und Steuerung von Beinrobotersystemen erforderlichen Techniken zu bewerten. Die Bewertung umfasst Aufsatzschreiben und Codierungselemente, die über eine Online-Plattform wie Google Colab oder Jupyter Notebook bewertet werden. Diese Methode ermöglicht nicht nur eine effiziente Bewertung, sondern entspricht auch zeitgemäßen Praktiken auf dem Gebiet. Die einzelnen Hausaufgaben sind so strukturiert, dass sie einen engagierten Aufwand erfordern, mit einer geschätzten Dauer von 10 Stunden pro Aufgabe. Dies ermöglicht es den Studierenden, tief in die Feinheiten der Modellierung und Steuerung von Beinrobotern einzutauchen. Am Ende des Moduls werden die Studierenden an einem abschließenden Capstone-Projekt teilnehmen. In diesem Unterfangen wird jeder Student ein systematisch ausgearbeitetes Projekt präsentieren, das den Höhepunkt ihres gemeinsamen Verständnisses repräsentiert. Eine beispielhafte Demonstration könnte das Erreichen des Ziels beinhalten, einen Beinroboter zu steuern, wobei eine in dem Modul erlernte Steuermethode verwendet wird. Jede einzelne Hausaufgabe trägt mit einem Gewicht von 1/9 zum Gesamtstudienkredit bei, während das Abschlussprojekt einen signifikanten Beitrag mit einem Gewicht von 4/9 zur Gesamtbewertung des Kredits leisten wird. CIT436000: Beinroboter | Legged Robots",
    "repetition": "",
    "recommended_prerequisites": "Wissen über Robotik, mindestens an einer Vorlesung über Robotik teilgenommen, wie z.B. IN2067\n(Robotik), IN2138 (Roboterbewegungsplanung).",
    "content": "1. Einführung in legged Robots 2. Modellierung und Steuerung eines einbeinigen Roboters, der sich in der Ebene hüpft 3. Modellierung und Steuerung eines beinbasierten Roboters, der sich in drei Dimensionen bewegt 4. Steuerung des Laufs von Zweibeinern und Vierbeinern 5. Fortgeschrittene Regelalgorithmen zur Steuerung von legged Robots, einschließlich modellprädiktiver Regelung und Ganzkörperregelung",
    "learning_outcomes": "Das Modul vermittelt Kenntnisse über die kinematische und dynamische Modellierung von Systemen leggeder Roboter. Es unterrichtet über die Steuerung der Fortbewegung von leggeden Robotern und bietet somit Fachkenntnisse an, die auf die Steuerung verschiedener dynamischer Robotersysteme anwendbar sind. Das Modul behandelt fortgeschrittene Regelalgorithmen, einschließlich modellprädiktiver Regelung und Ganzkörperregelung.",
    "teaching_methods": "Seminare und praktische Übungen finden in physischer Anwesenheit statt. Live-Aufnahmen werden auch in BBB bereitgestellt, jedoch wird empfohlen, an der Präsenzvorlesung teilzunehmen. Simulationen und reale Robotikexperimente werden durchgeführt, um das im Modul erlernte Wissen umzusetzen.",
    "media": "Software-Ressourcen stehen zur Verfügung. Reale Roboterplattformen und Simulationsagenten\nfür Experimente.",
    "literature": "Raibert, Marc H. Legged robots that balance. MIT press, 1986.",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nLegged Robots (CIT436000) (Vorlesung, 4 SWS)\nKnoll A [L], Bing Z, Lenz A"
  },
  {
    "module_id": "CIT6320000",
    "title": "Advisor Advanced Training",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Zweisemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 60,
    "hours_presence": 120,
    "examination_achievements": "Die Note wird aus mehreren Prüfungsleistungen ermittelt, die in Form von Vorträgen (ca. 15 Minuten) mit anschließender Diskussion (ca 15 Minuten) erbracht werden. Die Prüfungsleistungen werden zu folgenden Bereichen erbracht:\n- Gruppenführung: Analyse und Bewertung der gruppendynamischen Entwicklung über den\ngesamten Projektzeitraum und wissenschaftiche Einordnung. [Gewichtung: 25% Anteil an der Modulnote]\n- Projektplanungskompetenz: Zielvereinbarungs- und Zielabschlussvorstellung zur bewussten\nAuseinandersetzung mit der Planung und Messung des Erfolgs [Gewichtung: 25% Anteil an der Modulnote]\n- Prozessreflexion: Abschlussvortrag am Übergabetag mit Analyse gruppendynamischer Prozesse\nanhand der zuvor umgesetzten und erlernten Soft Skills. [Gewichtung: 50% Anteil an der Modulnote]",
    "repetition": "",
    "recommended_prerequisites": "• Advisor in der Projekt- oder Gruppenleitung im advisor-Programm der CIT\n• Studierende in der CIT, mind. 5. Semester Bachelor oder im Masterstudiengang\n• Interesse und Eignung für Führungs- und Teamleitungsaufgaben\nCIT6320000: Advisor Advanced Training | Advisor Advanced Training",
    "content": "Das Modul besteht aus mehrtägigen professionellen Seminaren als Blockveranstaltung (meist Wochenendveranstaltungen), in welchen die Teilnehmenden folgende Inhalte auf theoretischer Basis vermittelt werden:\n• Anleitung und Begleitung bei der Planung, Gestaltung und Leitung von Workshops\n• Sinnvolle Übertragung von Aufgaben und Aufgabenbereichen\n• Moderationstechniken, Rollen in der Moderation\n• Supervisionsverständnis und S.-techniken\n• Nahtstellenmanagement effektiv gestalten\n• Individuelle Betreuung bei der Aufgabenerstellung und Verantwortungs-übernahme\n• Individuelles, persönliches Coaching mit Ziel- und Lösungserarbeitung",
    "learning_outcomes": "Nach dem erfolgreichen Besuch des Moduls haben die Studierenden folgende Kompetenzen erworben:\n• Differenziertes Führungsverständnis\n• Klare Kommunikation als\n• Teamleitungskompetenzen\n• Selbstleitung und Selbstreflexion\n• Entwicklung als Person und Persönlichkeit\n• Verantwortung\n• Umfangreicher Methodenpool für die Gruppensteuerung und zur Krisen-bewältigung\n• Unterstützung der Motivation durch Zielvereinbarungen und Sinnstiftung\n• Annehmbares, klares Delegieren von Aufgaben und Prozess- und Ergeb-nisverantwortung\n• Gezielte Projektsteuerung\n• Fachliche Verantwortung in komplexen Projekten wahrnehmen\n• Moderation auch von anspruchsvollen Prozessen\n• Meeting Kultur effektiv und effizient gestalten",
    "teaching_methods": "• Interaktive Wissens- und Kompetenzvermittlung\n• Theoretische Inputs\n• Persönliche Lehrgespräche\n• Anleitung\n• Erarbeitung von Inhalten in Workshops\n• Reflexion und Feedback\n• Erlebnis- und Handlungsorientierte Methodik\n• Coaching – Supervision",
    "media": "Folgende Medienformen finden Verwendung:\n• Präsentationen\n• Moderationsmethoden (FC, MP, Karten...)\n• Workshop und ähnliche Formate\nCIT6320000: Advisor Advanced Training | Advisor Advanced Training\n• Powerpoints\n• Teamaufgaben und Teamübungen\n• Online-Kommunikation",
    "literature": "Folgende Literatur wird für das Seminar empfohlen:\n• Hartmann, Funk, Nietmann: Präsentieren, Präsentationen, Beltz\n• Gebert / von Rosenstiel: Organisationspsychologie\n• Rosenberg, M.: Gewaltfreie Kommunikation\n• Rubner & Rubner: Unterwegs zur funktionierenden Gruppe\n• Schulz v. Thun: Miteinander reden, Band 1-3, Rowohlt\n• Schulz von Thun: Kommunikationspsychologie für Führungskräfte\n• Stahl, Eberhard: Dynamik in Gruppen\n• Watzlawik: Wie wirklich ist die Wirklichkeit\n• Weidenmann: 100 Tipps und Tricks für Pinnwand und Flipchart",
    "lv_sws_lecturer": "Wollherr, Dirk; PD Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvisor Advanced Training (Tutorium, 8 SWS)\nFink M, Wollherr D"
  },
  {
    "module_id": "CIT6330001",
    "title": "Advisor Tutorium",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Zweisemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Modulprüfung mit folgenden zwei Bestandteilen: Bewertung der Ausarbeitung und Präsentation eines Projektplans zwischen Seminarphase und Projektphase [Projektplanungkompetenz, Gewichtung: 25% Anteil an der Modulnote]. Präsentation der Projektergebnisse innerhalb der Gruppe im Rahmen einer Abschlussveranstaltung am Ende des Moduls [Projektumsetzungskompetenz, Gewichtung: 75% Anteil an der Modulnote].",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Das Modul richtet sich ausschließlich an Studierende im ersten Fachsemester der\nBachelorstudiengänge der CIT.\nVoraussetzung für die Teilnahme am Modul ist die gleichzeitige Teilnahme am advisor Programm\nder CIT.",
    "content": "Das Modul besteht aus einem Seminar (Präsenzzeit) und einem praktischen Projekt (Eigenstudium), wofür die Teilnehmer zu Beginn des Moduls in Gruppen eingeteilt werden. Im Seminar werden Inhalte der sozialen Kompetenz besprochen:\n- Kommunikation\n- Teambildung\n- Zeit- und Selbstmanagement\n- Präsentationstechniken\n- Stressbewältigung\n- Projektmanagement\nCIT6330001: Advisor Tutorium | Advisor Tutorium Die einzelnen Gruppen lernen sich kennen, arbeiten zusammen mit einem Tutor an den einzelnen, oben genannten Themen und bereiten sich so als Team auf die anschließende Projektphase vor. In der Projektphase bekommen die einzelnen Gruppen eine klar definierte, praktische technische Aufgabe, wie beispielsweise ein Fahrzeug zu bauen, das einer vorgegebenen Linie folgen kann. Dafür werden ein technisches Konzept und ein Projektplan erarbeitet, die vor einer Jury präsentiert werden müssen. Anschließend steht den Gruppen ein begrenzter Zeitraum für die Umsetzung zur Verfügung. Das Modul wird mit der Präsentation der Projektergebnisse auf einer großen Abschlussveranstaltung durch die Studierenden abgeschlossen.",
    "learning_outcomes": "Nach der Teilnahme am Modul kennen die Studierenden die einzelnen Bestandteile sozialer Kompetenz, deren Wichtigkeit und deren Auswirkung auf einzelne Personen sowie Gruppen im Hinblick auf ein Projekt. Die Absolventen des Moduls haben das theoretische Wissen aus dem Seminar in der Projektphase angewendet und kennen einen Teambildungsprozess sowie mögliche auftretende Schwierigkeiten während eines Projekts.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch das interaktive Arbeiten im Seminar angestrebt. Die einzelnen Themen werden in der Gruppe vorgestellt und diskutiert. Darüber hinaus sorgt die Anwendung des erlernten theoretischen Wissens in der praktischen Projektphase für Veranschaulichung und eine weitere Vertiefung der Inhalte. Als Lehrmethode wird im Seminar auf interaktive Präsentation und Diskussion sowie die Methode \"Lernen durch Lehren\" zurückgegriffen.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\nDie Inhalte des Seminars werden durch Präsentationen, Skizzen am Flipchart und Arbeiten am\nMetaplaner unterstützt.",
    "literature": "Folgende Literatur wird empfohlen:\n- Schulz v. Thun: Miteinander reden, Band 1-3, Rowohlt\n- Hartmann, Funk, Nietmann: Präsentieren, Präsentationen, Beltz\n- Weidenmann: 100 Tipps und Tricks für Pinnwand und Flipchart",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvisor Tutorium (Tutorium, 2 SWS)\nFink M, Wollherr D\nCIT6330001: Advisor Tutorium | Advisor Tutorium"
  },
  {
    "module_id": "CIT6330002",
    "title": "Advisor Training",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Zweisemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 67,
    "hours_presence": 113,
    "examination_achievements": "Modulprüfung mit folgenden drei Bestandteilen:\n- Engagement - Begleitende Leistungsbewertung über den gesamten Projektzeitraum.\n[Gewichtung: 25% Anteil an der Modulnote]\n- Projektplanungskompetenz - Zielvereinbarungs- und Zielabschlussgespräche zur bewussten\nAuseinandersetzung mit der Planung und Messung des Erfolgs [Gewichtung: 25% Anteil an der Modulnote]\n- Prozessreflexion - Mündliche Prüfung am Übergabetag mit Analyse gruppendynamischer\nProzesse anhand der zuvor umgesetzten und erlernten Soft Skills. [Gewichtung: 50% Anteil an der Modulnote]",
    "repetition": "",
    "recommended_prerequisites": "Voraussetzung für die Teilnahme am Modul ist die Teilnahme als Tutor am advisor Programm der\nCIT.",
    "content": "Das Modul besteht aus mehrtägigen professionellen Seminaren (Präsenzzeit 12,5d à 8h = 100h) in welchen den Teilnehmern folgende Inhalte auf theoretischer Basis vermittelt werden:\n- Teamarbeit, Führung, Kommunikation\n- Lerntechniken, Zeitmanagement\n- Rhetorik und Präsentation\n- Moderation\n- Stressbewältigung\nIm Rahmen der Guppenphase des adveisor Tutoriums (eigenständiges Modul im fachlichen Wahlbereich des Bachelorstudiengangs) werden die in den Seminaren erlernten theoretischen CIT6330002: Advisor Training | Advisor Training Inhalte praktisch angewandt. Hierfür übernehmen die Teilnehmer die Vorbereitung (Eigenstudium 9 à 3h = 27h) und die Leitung der Gruppenstunden (Präsenzeit 9 à 1,5h = 13,5h). Im Anschluss an das Wintersemester erhalten die einzelnen Gruppen des adveisor Tutoriums eine klar definierte, praktische Aufgabe aus dem Bereich der Elektrotechnik und Informationstechnik, wie beispielsweise ein Fahrzeug zu bauen, das einer vorgegebenen Linie folgen kann. Aufgabe der Teilnehmer des adveisor Trainings ist es im Sommersemester jeweils eine Gruppe bei der Umsetzung des Projekts zu unterstützen und zu begleiten sowie die Gruppendynamik zu bewerten (Eigenstudium 40h).",
    "learning_outcomes": "Nach der Teilnahme am Modul ist der Studierende in der Lage gruppendynamische Prozesse zu erkennen und zu bewerten. Durch intensives Zusammenarbeiten der Gruppe innerhalb des advisor Trainings und das kontinuierliche Coaching durch externe Trainer erfährt jeder Teilnehmer eine intensive Persönlichkeitsentwicklung, welche sich wesentlich an seinen Stärken und Schwächen orientiert.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch das interaktive Arbeiten im Seminar angestrebt. Die einzelnen Themen werden in der Gruppe vorgestellt und diskutiert. Darüber hinaus sorgt die Anwendung des erlernten theoretischen Wissens in der praktischen Projektphase für Veranschaulichung und eine weitere Vertiefung der Inhalte. Als Lehrmethode wird im Seminar auf interaktive Präsentation und Diskussion sowie die Methode \"Lernen durch Lehren\" zurückgegriffen. Zusätzlich erhält jeder Teilnehmer ein individuell auf seine Persönlichkeit zugeschnittenes Coaching.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\nDie Inhalte des Seminars werden durch Präsentationen, Skizzen am Flipchart und Arbeiten am\nMetaplaner unterstützt.",
    "literature": "Folgende Literatur wird für das Seminar empfohlen:\n- Schulz v. Thun: Miteinander reden, Band 1-3, Rowohlt\n- Hartmann, Funk, Nietmann: Präsentieren, Präsentationen, Beltz\n- Weidenmann: 100 Tipps und Tricks für Pinnwand und Flipchart",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nCIT6330002: Advisor Training | Advisor Training\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvisor Training (Tutorium, 7,5 SWS)\nFink M, Wollherr D"
  },
  {
    "module_id": "EI00110",
    "title": "Computertechnik und Programmieren",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 75,
    "hours_presence": 105,
    "examination_achievements": "Die Kenntnisse der Studierenden werden im Rahmen einer 90 minütigen Prüfung am Rechner, z.B. über Moodle, festgestellt. Beispielsweise lösen Studierende Aufgaben zur Informationsdarstellung in Computersystemen, zum Aufbau von Teilsystemen, z.B. auf Gatterebene und/oder müssen funktionsfähigen Maschinen-/Assembler- oder Hochsprachen- Code erstellen/analysieren. Aufgrund begrenzter Raumressorcen wird die Prüfung in Gruppen nacheinander durchgeführt. Der Nachweis, tätigkeitsbasierte Kompetenzen unter Zuhilfenahme typischerweise zur Verfügung stehender Hilfsmittel anwenden zu können, wird mit freiwilligen schriftlichen Hausaufgaben erbracht. Die Endnote setzt sich zu 100 % aus der Prüfung im Rechnerraum zusammen. Wird die Prüfung bestanden und werden in jeder zu bearbeitenden Hausaufgabe mindestens 80% der Maximalpunktzahl erreicht, verbessert sich die Note um 0,3 (Notenbonus), bis zur besten Note der Notenskala.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Keine Voraussetzungen",
    "content": "Informationsdarstellung in Computersystemen, Mikro-Architektur, Befehlssatz-Architektur, Daten- und Befehlsformate, Programmierung auf Assembler- und Hochsprachen-Ebene, Interaktion von Computer-Programmen mit dem Betriebssystem EI00110: Computertechnik und Programmieren | Computer Technology and Programming",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls kennen die Studierenden den grundlegenden Aufbau von Computersystemen. Die Studierenden kennen verschiedene Daten- und Befehlsformate, verstehen den Aufbau von Prozessoren bis zur Gatterebene und können einfache Teilkomponenten oder vergleichbare Schaltungen selbst entwerfen/analysieren. Die Studierenden können Computerprogramme auf Assembler- und Hochsprachen-Ebene verstehen, eigene Assembler- und Hochsprachenprogramme schreiben und dabei auch typischerweise zur Verfügung stehende Hilfsmittel gezielt einsetzen.",
    "teaching_methods": "Lernmethoden: Selbstgesteuertes Lernen anhand von Vorlesungsunterlagen und Übungsaufgaben. Lehrmethoden: Vorlesung und Übung sind in einer gemeinsamen Veranstaltung integriert. Es findet frontaler Arbeitsunterricht statt, bei dem die Wissensvermittlung insbesondere durch Diskussion und gemeinsames Lösen typischer Fragestellungen stattfindet. Im Praktikum lösen Studierende selbstständig Programmieraufgaben in einer standardisierten Programmierumgebung.",
    "media": "Folgende Medienformen finden Verwendung: Skriptum mit Übungskatalog, Präsentationen, Online-\nÜbungen",
    "literature": "- David Patterson, John Hennessy: Rechnerorganisation und Rechnerentwurf - Die Hardware/\nSoftware Schnittstelle, Oldenburg Verlag\n- Heidi Anlauff, Axel Böttcher, Martin Ruckert: \"Das MMIX-Buch\", Springer Verlag\n- Brian Kernighan, Dennis Ritchie: Programmieren in C",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputertechnik und Programmieren (Fragestunde) (Übung, 2 SWS)\nZwick M\nProgrammierpraktikum (Praktikum, 2 SWS)\nZwick M\nProgrammierpraktikum (Übung) (Übung, 2 SWS)\nZwick M\nComputertechnik Tutorium (Tutorium, 2 SWS)\nZwick M\nComputertechnik (Vorlesung mit integrierten Übungen, 3 SWS)\nEI00110: Computertechnik und Programmieren | Computer Technology and Programming\nZwick M ( Gronauer S )"
  },
  {
    "module_id": "EI00120",
    "title": "Digitaltechnik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "In einer schriftlichen Abschlussklausur (60 Min) weisen die Studierenden sowohl Ihr grundsätzliches Verständnis der Schaltungskonzepte digitaler Logik, als auch Ihre Fähigkeit, die erlernten Techniken auf praktische Probleme des digitalen Schaltungsentwurf anzuwenden nach. Dies beinhaltet u.a. die Anwendung der Gesetzte Boole'scher Logik auf die funktionsäquivalente Transformation und Logik-Minimierung von logischen Gleichungen und Wahrheitstabellen, die Realisierung beliebiger kombinatorischer Logikausdrücke als Transistor-Schaltungen und zweistufigen kanonischen Logiken, die Zeitanalyse sequentieller Schaltungen und endlicher Automaten (FSMs) auf Register Transfer Ebene.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "keine",
    "content": "Grundlagen digitaler Informationsdarstellung, Verarbeitung und Speicherung: Basismodell für funktionales Verhalten von MOSFET Transistoren, Stromgleichungen, Verzögerungszeit und dynamischer Verlustleistung. Schaltungstechnische Realisierung von arithmetischen Rechenoperationen (Addition, Subtraktion, Multiplikation) sowie die Synthese von zwei- und mehrstufigen kombinatorischen Verknüpfungen (Konjunktion, Disjunktion, Negation) und sequentiellen Schaltwerken aus elementaren Basiskomponenten (Logikgatter, Register, MOSFET Transistoren). Logikoptimierung von kombinatorischen Schaltnetzen. Techniken zur Verbesserung des Informationsdurchsatzes getakteter, sequentieller Schaltwerke mittels Fließband- und Parallelverarbeitung. Rolle und Aufbau endlicher Automaten (Finite State Machines) als Steuer- bzw. Kontrolleinheiten vielfältiger praktischer Anwendungen. Grundlagen des methodischen Tests EI00120: Digitaltechnik | Digital Design von Schaltungen: Fehlerdiagnose, Herleitung von Fehlerüberdeckungstabellen, Testbestimmung in kombinatorischen Schaltnetzen und sequentiellen Schaltwerken. Neben diesen funktionalen Aspekten digitaler Schaltungstechnik werden auch die Ursachen und Grenzen der Leistungsfähigkeit, des Zeitverhaltens, des Energiebedarfs sowie der wirtschaftlichen Aspekte digitaler CMOS (Complementary Metal Oxide Semiconductor) Technologien im Kontext von Kommunikations- und Informationstechnologie (IKT) vermittelt.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, ihr Zusammenspiel zu analysieren, Funktionalität zu bewerten und einfache Blöcke selbst zu entwickeln. Leistungsoptimierte Realisierungen mehrstufiger kombinatorischer Logikblöcke sowie von endlichen Automaten (FSMs) können anhand der Entwurfsprinzipien Fließband- und Parallelverarbeitung hergeleitet, bewertet und entwickelt werden.Ferner erwerben die Studierenden ein Grundverständnis der Funktionsweise von MOS-Transistoren und deren Anwendung in CMOS Schaltungen.",
    "teaching_methods": "In den Vorlesungen werden die technischen Inhalte mittels Vortrag und PowerPoint Präsentation eingeführt und unmittelbar anhand kleinerer Rechenbeispielen oder Herleitungen, die mit Hand in die PowerPoint Folien hineineditiert werden, veranschaulicht. Dieses Material wir über Moodle den Studierenden verfügbar gemacht. Zudem werden Studierende aktiv zu Fragen animiert, was auch rege aufgenommen wird. Zentralübung und Tutorübungen erfolgen ebenfalls mit Tablet- und Tafelanschrift und vertiefen zusätzlich die Vorlesungsinhalte durch Rechnen von Aufgaben sowie unterstütztes Lösen von Übungen. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Tabletanschrieb\n- Präsentationen\n- Skript\n- Handschriftlich ergänztes Vorlesungsmaterial sowie Übungsaufgaben mit Lösungen als\nDownload im Internet\n- Online-Übungen",
    "literature": "Folgende Literatur wird empfohlen:\n- U. Tietze, Ch. Schenk, \"Halbleiter-Schaltungstechnik\", Springer, 2002\n- H. Lipp, J. Becker, \"Grundlagen der Digitaltechnik\", Oldenbourg, 2008\n- J. Rabaey, \"Digital Integrated Circuits - A Design Perspective\", Prentice Hall, 2003\n- J. Wakerly, \"Digital Design Principles and Practices\", Prentice Hall, 2006\nEI00120: Digitaltechnik | Digital Design",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDigitaltechnik (Vorlesung mit integrierten Übungen, 5 SWS)\nHerkersdorf A, Maurer F, Biersack F, Stechele W, Wild T\nDigitaltechnik - Tutorien (Tutorium, ,1 SWS)\nMaurer F [L], Herkersdorf A"
  },
  {
    "module_id": "EI00130",
    "title": "Schaltungstheorie",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfung ist schriftlich (mit bis zu 20 % Multiple Choice Fragen), 90 min. Mit maximal 5 DIN A4 Blätter als erlaubten Hilfsmitteln wenden die Studierenden die gelehrten Konzepte an und analysieren lineare und nichtlineare Schaltungen. Sie beantworten Verständnisfragen, und lösen Aufgaben, um die Eigenschaften der Schaltungen zu bewerten und die Zeitantworten linearer Schaltungen mit Widerständen und Reaktanzen zu bestimmen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Algebra (Gleichungssysteme in mehreren Variablen), Vektorrechnung, Differential- und\nIntegralrechnung, elektrophysikalisches Grundwissen\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n- Lineare Algebra\n- Analysis 1",
    "content": "Modellierung, Analyse linearer und nichtlinearer Schaltungen. Kirchhoff-Gesetze und Graphen: Torbedingung, Kirchhoff'sche Gesetze, Netzwerkgraph, systematische Formulierung der Kirchhoff'schen Gesetze, Inzidenzmatrizen. Resistive Eintore: Modellierung, Eigenschaften, streng lineare resistive Eintore, Dioden, Verschaltung von Eintoren, lineare Quellen, stückweise lineare Widerstände, Arbeitspunkt, Kleinsignalanalyse. Resistive Zweitore: lineare Zweitore, Eigenschaften, spezielle Zweitore, Verschaltung von Zweitoren. Operationsverstärker: Modellierung, Grundschaltungen mit Operationsverstärker. Resistive Mehrtore: Beschreibungsformen, spezielle Mehrtore. EI00130: Schaltungstheorie | Circuit Theory Allgemeine Analyseverfahren: Tellegen'scher Satz, Tableaugleichungen, Newton-Raphson Algorithmus, reduzierte Knotenspannungsanalyse. Netzwerkeigenschaften: duales Netzwerk, Sustitutionstheorem, Superpositionsprinzip, äquivalente Zweipolersatzschaltungen. Reaktive Bauelemente: lineare und nichtlineare Kapazitäten, Induktivitäten und Memristoren, Dualität von Ladung und Fluss, Eigenschaften reaktiver Eintore, Verschaltung reaktiver Eintore, reaktive Mehrtore. Komplexe Wechselstromrechnung: komplexe Zeigergrößen, Berechnung der Zeitantwort im eingeschwungenen Zustand, Energie- und Leistungsberechnung mit komplexen Zeigern.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, aus der Struktur der elektrischen Schaltung die Kirchhoff'schen Gesetze zu bestimmen, mathematische Beschreibungen für lineare und nichtlineare Elemente als Ein-, Zwei- oder Mehrtore zu erstellen und deren Eigenschaften zu beurteilen. Für die Analyse von resistiven Schaltungen beherrschen sie die Formulierung der Tableaugleichungen und des Gleichungssystems der reduzierten Knotenspannungsanalyse. Die Studierenden können für lineare Schaltungen das Superpositionsprinzip anwenden und eine Zweipolersatzschaltung bestimmen. Sie können einfache Schaltungen entwerfen und die Sinnhaftigkeit des verwendeten Modells beurteilen. Die Studierenden sind in der Lage, die grundlegenden Eigenschaften reaktiver Elemente zu beurteilen und die Zeitantwort einer linearen reaktiven Schaltung mithilfe der komplexen Wechselstromrechnung bestimmen.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesung und der Übung Frontalunterricht gehalten (dozenten- orientiert). Zusätzlich zu den individuellen Methoden der Studierenden wird eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt, in denen die Modellierung und die Lösung der dabei erhaltenen Gleichungen geübt wird. Auch wird die Interpretation der Ergebnisse diskutiert. In den Tutorübungen werden die Studierenden angehalten, die Aufgaben selbst zu lösen. Die Studierenden können ihre Kompetenzen durch Bearbeiten von freiwilligen Hausaufgaben vertiefen und erweitern, in denen sie Beispielschaltungen analysieren und eigene Lösungen entwickeln. Zusätzlich können die Studierenden an einer Semestrale teilnehmen, um ihren Wissensstand in der Mitte des Semesters beurteilen zu können.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen (Tafel, Overhead-Folien, Beamer)\n- Skript (Vorlesung und Übung)\n- Übungsaufgaben und Hausaufgaben mit Lösungen als Download",
    "literature": "Folgende Literatur wird empfohlen:\nEI00130: Schaltungstheorie | Circuit Theory\n- L.O. Chua, C. Desoer und E. Kuh: Linear and Nonlinear Circuits",
    "lv_sws_lecturer": "Joham, Michael; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSchaltungstheorie (Vorlesung mit integrierten Übungen, 6 SWS)\nJoham M, Sistermanns J\nTutorium Schaltungstheorie (Übung, ,1 SWS)\nSistermanns J, Joham M\nSchaltungstheorie Semestrale (Vorlesung, 1 SWS)\nSistermanns J, Joham M"
  },
  {
    "module_id": "EI00220",
    "title": "Systemtheorie",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfung ist schriftlich (mit bis zu 20 % Multiple Choice Fragen und bis zu 17 % der Prüfung beziehen sich auf das Praktikum dieses Moduls), 90 min. Mit maximal 10 DIN A4 Blätter als erlaubten Hilfsmitteln wenden die Studierenden die gelehrten Konzepte an und analysieren lineare und nichtlineare dynamische Schaltungen und Systeme im Zeit- wie auch im Frequenzbereich. Sie beantworten Verständnisfragen, lösen Aufgaben, um die Zustandsraumdarstellung für lineare dynamischen Systeme herzuleiten, die zugehörige Impulsantwort und Übertragungsfunktion zu bestimmen und die Stabilitätseigenschaften der Systeme zu beurteilen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Differentiation und Integration, gewo#hnliche Differentialgleichungen, lineare Algebra, komplexe\nZahlen, Analyse resistiver Schaltungen.\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Lineare Algebra\n- Schaltungstechnik 1\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n- Analysis 2\n- Elektrizität und Magnetismus\n- Physikalische Grundlagen für die EI",
    "content": "Modellierung und Analyse linearer und nichtlinearer dynamischer Schaltungen und Systeme. Schaltungen ersten Grades: Lösung für die Verschaltung eines linearen, resistiven Netzwerkes mit einem linearen, reaktiven Eintor bei allgemeiner, konstanter und stückweise konstanter EI00220: Systemtheorie | System Theory Erregung, dynamischer Pfad bei nichtlinearem dynamischen Netzwerk, Sprungphänomene, Relaxationsoszillatoren, bistabile Kippstufen, Schaltungen ersten Grades mit polynomialer Nichtlinearität, Systeme ersten Grades. Lineare Systeme zweiten Grades: System mit zwei linearen dynamischen Elementen bei konstanter und allgemeiner Erregung, Normalformen, Phasenportrait, Zeitantwort, autonome Systeme. Nichtlineare Systeme zweiten Grades: Satz von Hartman-Grobman, konservative Systeme, bistabile Schaltung, harmonischer Oszillator, Relaxationsoszillator. Allgemeine dynamische Systeme: verallgemeinerte Zustandsgleichungen, Zustandsraum- Darstellung, Zero-Input und Zero-State response, Impulsantwort, Stabilität. Analyse im Laplace-Bereich: Ableitungsoperator, Übertragungsfunktion, Eigenfrequenzen, Stabilität, Bodediagramm, Ortskurve.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, mathematische Modelle für nichtlineare dynamische Schaltungen und Systeme ersten und zweiten Grades im Zeitbereich zu finden und diese zu kategorisieren. Sie können die Zustandsraumdarstellung für lineare dynamische Systeme ersten, zweiten und höheren Grades im Zeit- wie auch im Frequenzbereich bestimmen. Die Studierenden können die Lösbarkeit des Modells beurteilen und die Lösungen für lineare Systeme beliebigen Grades im Zeit- und im Frequenzbereich berechnen. Insbesondere können sie die Impulsantwort und Übertragungsfunktion im Laplace-Bereich bestimmen, deren Eigenschaften und Beziehung diskutieren und damit die Stabilität des Systems beurteilen.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesung und der Übung Frontalunterricht gehalten (dozenten- orientiert). Zusätzlich zu den individuellen Methoden der Studierenden wird eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt, in denen die Modellierung und die Lösung der dabei erhaltenen Gleichungen geübt wird. Auch wird die Interpretation der Ergebnisse diskutiert. In den Tutorübungen werden die Studierenden angehalten, die Aufgaben selbst zu lösen. Im Zuge des Praktikums können die Studierenden dynamische Systeme über das eigenständige Lösen von Simulationsaufgaben besser verstehen und deren Eigenschaften besser beurteilen. Die Studierenden können ihre Kompetenzen durch Bearbeiten von freiwilligen Hausaufgaben vertiefen und erweitern, in denen sie Beispielsysteme analysieren und eigene Lösungen entwickeln. Zusätzlich können die Studierenden an einer Semestrale teilnehmen, um ihren Wissensstand in der Mitte des Semesters beurteilen zu können.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen (Tafel, Overhead-Folien, Beamer)\n- Skript (Vorlesung und Übung)\n- Übungsaufgaben und Hausaufgaben mit Lösungen als Download\nEI00220: Systemtheorie | System Theory",
    "literature": "Folgende Literatur wird empfohlen:\n- L.O. Chua, C. Desoer und E. Kuh: Linear and Nonlinear Circuits\n- T. Kailath: Linear Systems",
    "lv_sws_lecturer": "Joham, Michael; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSystemtheorie (Vorlesung mit integrierten Übungen, 5 SWS)\nJoham M, Turan N, Strasser F\nSystemtheorie (Praktikum) (Praktikum, 1 SWS)\nTuran N, Joham M, Strasser F\nSystemtheorie (Tutorübung) (Tutorium, 2 SWS)\nTuran N, Joham M, Strasser F"
  },
  {
    "module_id": "EI00330",
    "title": "Signaltheorie",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht, deren Aufbau den verschiedenen Lernergebnissen angepasst ist: Aufgaben zur Überprüfung der Lernergebnisse aus Vorlesung und Übung nehmen in der Klausur einen Anteil von 80% ein. Aufgaben zur Überprüfung weiterer Lernergebnisse aus dem Programmierpraktikum nehmen in der Klausur einen Anteil von 20% ein. Es können insgesamt bis zu 20% der Klausur durch Ankreuzen von vorgegeben Mehrfachantworten abgenommen werden. Zugelassene Hilfsmittel sind ausschließlich das Vorlesungsskript inkl. handschriftlicher Notizen in ebensolchem, eine unbeschriftete Klarsichtfolie und Zeichen- sowie Schreibmaterial (kein eigenes Papier!). In der Prüfung müssen die Studierenden gelerntes Wissen über die zeitkontinuierliche und zeitdiskrete Darstellung und Verarbeitung von Signalen wiedergeben, auf praktische sowie theoretische Probleme anwenden und auf weiterführende Fragestellungen transferieren können. Die Studierenden müssen in der Lage sein, Verständnisfragen mit eigenen Worten unter Verwendung der gängigen Fachbegriffe zu beantworten und Ergebnisse sowohl formal als auch zeichnerisch adequat darstellen zu können. Neben den o.g. Anforderungen treffen für den Prüfungsteil des Programmierpraktikums zusätzliche Anforderung zu: die Studierenden müssen selbstständig auf dem Papier Programmcode nachvollziehen, interpretieren und generieren können. Dazu gehören insbesondere aber nicht ausschließlich das Erkennen von Fehlern in vorgebenem Code, das Korrigieren und Ergänzen von ebensolchem, die Bestimmung des Ergebnisses eines vorgebenen Codes oder das Lösung von typischen Problemen der Signaldarstellung (s.o.) mithilfe von selbstgeschriebenem Code.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Differentialrechnung, Integralrechnung, Komplexe Analysis, Differentialgleichungen, Grundlagen\nder Programmierung\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nEI00330: Signaltheorie | Signal Theory\n- Analysis 1\n- Analysis 2\n- Systemtheorie",
    "content": "Zeitkontinuierliche und zeitdiskrete Signale, lineare zeitinvariante Systeme (LTI-Systeme), Faltung, Faltungsintegral und Faltungssumme, Impulsantwort von LTI-Systemen, Stabilität und Kausalität, periodische Signale, orthogonale Funktionensysteme, zeitkontinuierliche Fourier-Reihe (FR), zeitkontinuierliche Fourier-Transformation (FT), Fourier-Integral, Zusammenhang zwischen FR und FT, korrespondierende FT-Paare, Amplitudenmodulation und Signalrückgewinnung, lineare Differentialgleichungen und Übertragungsfunktionen, Bode-Diagramm, Einführung in die Filtertechnik, zeitdiskrete Fourier-Transformation (ZDFT), lineare Differenzengleichungen, zeitdiskrete Filter, Abtasttheorem, Abtastung und Rekonstruktion eines Signals, Abtastung im Frequenzbereich, Laplace-Transformation (LT), Konvergenzeigenschaften der LT, z- Transformation, Residuensatz, Diskrete Fourier-Transformation (DFT).",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, sowohl kontinuierliche und diskrete als auch reelle und komplexe Signale und Systeme in ihren deterministischen Erscheinungsformen sowohl in ihren mathematischen Eigenschaften als auch im Zeit- und Frequenzbereich zu beschreiben, zu berechnen, zu skizzieren, zu analysieren, zu bewerten sowie diese ineinander zu überführen. Damit einhergehend haben die Studierenden grundlegende Kompetenzen für den Umgang mit den klassischen unilateralen und bilateralen Integraltransformationen der Signaltheorie sowie deren diskretisierten Varianten erworben, jeweils inklusive ihrer Rücktransformationen und mathematischen Eigenschaften. Die Studierenden können ihre erworbenen Kompetenzen sowohl auf Papier als auch in MATLAB auf typische Problemstellungen der Signalverarbeitung anwenden und diese selbstständig lösen.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Besprechung und Lösung von Problemstellungen) gehalten. Eine Vertiefung des Unterrichtsstoffes im Rahmen von Tutorübungen wird angeboten. Durch ein semesterbegleitendes Programmierpraktikum (MATLAB) im Rahmen von Hausarbeiten wird die individuelle Problemlösekompetenz sowie praktische Erfahrung im Umgang mit Signaldarstellung und den Grundlagen von MATLAB gefördert. Begleitend zur Übung des Programmierpaktikums werden freiwillige Hausaufgaben angeboten, die jedoch nicht in die Modulnote mit einfließen.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download\n- Aufgaben für das Programmierpraktikum als Download\nEI00330: Signaltheorie | Signal Theory",
    "literature": "Von der FSEI vertriebenes Skriptum zur Vorlesung",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSignaltheorie (Vorlesung mit integrierten Übungen, 5 SWS)\nRigoll G, Teepe T, Knoche M\nSignaltheorie Tutorübung (Tutorium, 2 SWS)\nTeepe T"
  },
  {
    "module_id": "EI00340",
    "title": "Stochastische Signale",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur (90 min) erbracht, deren Aufbau den verschiedenen Lernergebnissen angepasst ist: Aufgaben zur Überprüfung der Lernergebnisse aus Vorlesung und Übung nehmen in der Klausur einen Anteil von 80% ein. Hierbei kann beispielsweise gefordert werden, die (gemeinsamen) stochastischen Eigenschaften von gegebenen oder durch Transformationen entstehenden Zufallsexperimenten/-variablen/-folgen/-prozessen zu untersuchen und zu beschreiben (z.B. durch geeignete Berechnungen, Begründungen, Skizzen, etc.) und die dabei erhaltenen Ergebnisse zu interpretieren (aus mathematischer Sicht oder, sofern in der Aufgabenstellung ein Bezug zu einem Anwendungsfall hergestellt wird, auch aus technischer Sicht) oder Zusammenhänge der Ergebnisse mit aus der Vorlesung bekannten Standardmodellen herzustellen. Aufgaben zur Überprüfung weiterer Lernergebnisse aus dem Programmierpraktikum nehmen in der Klausur einen Anteil von 20% ein. Hierbei kann beispielsweise gefordert werden, Plots aus dem Themenbereich des Praktikums zu interpretieren, Kurzfragen zu aus dem Praktikum bekannten Konzepten (z.B. technische Anwendungen der stochastischen Methoden) zu beantworten, zu untersuchen zu welchen Ergebnissen ein gegebenes Codefragment führen würde und wie diese Ergebnisse stochastisch zu interpretieren sind, oder kurze Codefragmente selbst zu schreiben. Es können insgesamt bis zu 20% der Klausur durch Ankreuzen von vorgegeben Mehrfachantworten abgenommen werden. Bei den anderen Aufgaben wird bei der Beurteilung der Lösungen (neben der Überprüfung der Ergebnisse auf Korrektheit) besonderes Augenmerk darauf gelegt, dass jeweils der Lösungsweg klar erkennbar und korrekt sein muss, dass Ergebnisse plausibel sein müssen, und dass sie unmissverständlich und in der üblichen Notation angegeben werden müssen. EI00340: Stochastische Signale | Stochastic Signals Als Hilfsmittel sind 5 beliebig beschriebene (oder bedruckte) Blätter DIN A4 erlaubt. Es können alternativ 10 einseitig beschriebene Blätter verwendet werden, sofern deren Rückseiten völlig leer sind. Elektronische Geräte (Computer, Taschenrechner, Mobiltelefone usw.) sind nicht zugelassen. Für Studierende deren Muttersprache nicht Deutsch ist, ist ein Wörterbuch Deutsch-Muttersprache in Papierform zugelassen, sofern keine handschriftlichen Notizen darin vorhanden sind.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Differentialrechnung, Analysis, Mengenbegriff, Fourierintegral.\nEs wird empfohlen, die folgende Module (oder gleichwertige Module) vor der Teilnahme bereits\nerfolgreich absolviert zu haben:\n- Analysis 1 (EI)\n- Analysis 2 (EI)",
    "content": "Wahrscheinlichkeitstheorie:\n- Ergebnisraum\n- Sigma-Algebra\n- Wahrscheinlichkeitsmaß\n- bedingte Wahrscheinlichkeit\n- stochastische Unabhängigkeit\n- Satz von Bayes\n- diskrete und stetige reelle Zufallsvariablen\n- Wahrscheinlichkeitsverteilung und -dichte\n- Produktverteilung und -dichte\n- Funktionen von Zufallsvariablen\n- Erwartungswert und Varianz\n- erzeugende und charakteristische Funktion\n- zentraler Grenzwertsatz\n- Gesetz der großen Zahlen\n- Chebyshev-Ungleichung\nStochastische Standardmodelle:\n- Bernoulliverteilung\n- Binomialverteilung\n- Poissonverteilung\n- Geometrische Verteilung\n- Exponentialverteilung\n- Normalverteilung\nZufallsfolgen:\n- Ensemble von Zufallsvariablen vs. Pfadmodell\n- Verteilungen und Dichten von Zufallsfolgen\nEI00340: Stochastische Signale | Stochastic Signals\n- diskreter Random Walk\n- Konvergenz von Zufallsfolgen\n- Markoveigenschaft\n- Markovketten\nZufallsprozesse:\n- Auto- und Kreuzkorrelationsfunktion\n- Wiener-Levy Prozess\n- Poisson-Prozess\n- Markov-Prozesse\n- Klassifikation von Zufallsprozessen\n- Leistungsdichtespektrum\n- Wiener-Khintchine-Theorem\n- lineare Systeme und Zufallsprozesse\n- weißes Gaußsches Rauschen\nOptionale Themen, z.B.:\n- komplexe Zufallsvariablen\n- bedingte Erwartung\n- mittlerer quadratischer Fehler (MSE)\n- Ableitung und Integration stochastischer Pfade\n- Karhunen-Loeve-Entwicklung von Zufallsprozessen\nMATLAB:\n- Grundlagen\n- Realisierungen von Zufallsvariablen und darauf basierende Schätzungen\n- Beschreibung von Zufallsvariablen mit numerischen Werkzeugen\n- Funktionen von Zufallsvariablen und von deren Realisierungen\n- Verarbeitung von Zufallsvariablen (z.B. MAP- und ML-Detektion)\n- Umgang mit stochastischen Standardmodellen\n- numerische Beschreibung und Simulation von Zufallsfolgen und Zufallsprozessen\n- Verarbeitung von Zufallsfolgen und Prozessen (z.B. Filterung)",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, Signale in ihren stochastischen Erscheinungsformen zu beschreiben, sowie grundlegende Konzepte der Wahrscheinlichkeitstheorie und die Grundlagen stochastischer Prozesse zu verstehen und anzuwenden. Insbesondere haben die Studierenden ein Verständnis für die fundamentalen Konzepte Zufallsexperiment, Zufallsvariable, Zufallsfolge, Zufallsprozess, insbesondere Markov-Prozess, sowie Ergebnis, Ereignis, Realisierung und Musterfolge/-funktion entwickelt und sie können mit Hilfe dieser Konzepte stochastische Phänomene aus der realen Welt und aus technischen Anwendungen modellieren (z.B. unter Verwendung einfacher Standardmodelle) um sie sodann unter Verwendung verschiedener mathematischer Werkzeuge und stochastischer Beschreibungsformen/Kenngrößen zu untersuchen und zu charakterisieren und schließlich die Ergebnisse zu interpretieren. Darüber hinaus haben die Studierenden gelernt zu untersuchen EI00340: Stochastische Signale | Stochastic Signals wie sich verschiedene Arten von Transformationen auf die stochastischen Phänomene und ihre Beschreibungsformen auswirken, sie können Zusammenhänge zwischen technischen Begriffen (z.B. Rauschen, Leistung) und stochastischen Modellen/Kenngrößen herstellen, kennen Zusammenhänge mit verwandten mathematischen Themenfeldern (z.B. mit Grundlagen der Maßtheorie) und sie kennen die Grundideen hinter einigen weiterführenden stochastischen Konzepten (z.B. Konvergenz). Im begleitenden Praktikum haben die Studierenden Grundkenntnisse in der Anwendung von MATLAB erworben, kennen die wichtigsten Funktion zur Erzeugung von Realisierungen und zur Untersuchung theoretischer Eigenschaften von Zufallsvariablen/-folgen, haben ein Verständnis für einfache Grundlagen der Schätztheorie entwickelt und können all diese Kenntnisse anwenden um einfache stochastische Sachverhalte und technische Anwendungen in MATLAB zu simulieren und die Ergebnisse zu interpretieren.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden eine vertiefende Wissensbildung durch Besprechung und Lösung von Problemstellungen in Übungen angestrebt. Die Studierenden werden zudem ermutigt, Aufgaben selbstständig zu lösen. Für eine regelmäßige Selbstkontrolle wird den Studierenden die Teilnahme an einem Quiz zum jeweils in der Vorlesung besprochenen Thema angeboten. Als Lehrmethode wird in den Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Besprechung und Lösung von Problemstellungen) gehalten. Eine Vertiefung des Unterrichtsstoffes wird im Rahmen von Tutorübungen angeboten. Durch ein semesterbegleitendes Praktikum (basierend auf MATLAB) im Selbststudium (mit Unterstützung durch Tutorien und Übungen) wird die individuelle Problemlösekompetenz gefördert und es werden praktische Erfahrungen im Umgang mit stochastischen Signalen und den Grundagen von MATLAB erworben.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Entwicklung an der Tafel\n- Skript\n- Übungsaufgaben mit Lösungen\n- Quizaufgaben\n- computergestützte Demonstrationen und Simulationen",
    "literature": "Eine Auswahl aus der folgenden Literatur wird empfohlen:\n- B. Hajek. An Exploration of Random Processes for Engineers. Lecture Notes at University of\nIllinois, Urbana-Champaign. URL: http://www.freetechbooks.com\nEI00340: Stochastische Signale | Stochastic Signals\n- H. Stark and J. W. Woods. Probability, Random Processes, and Estimation Theory for Engineers.\nPrentice Hall, 2. Edition, 1994.\n- G. Grimmett, D. Stirzaker; Probability and Random Processes; 3. Ed, Oxford University Press,\n2001\n- H.-O. Georgii; Stochastik; de Gruyter (Verlag), 3. Auflage, 2007 (für mathematisch Interessierte)\n- D. Meintrup, S. Schäffler; Stochastik; Springer (Verlag), 2004 (für mathematisch Interessierte)",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nStochastische Signale (Vorlesung mit integrierten Übungen, 5 SWS)\nUtschick W, Würth M\nStochastische Signale (Mentorgruppe) (Übung, ,1 SWS)\nWürth M, Utschick W\nPraktikum Stochastische Signale (Übung, ,1 SWS)\nWürth M, Utschick W"
  },
  {
    "module_id": "EI00440",
    "title": "Nachrichtentechnik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Modulprüfung wird als schriftliche Abschlussklausur (90 min) abgelegt. Es wird durch Fragen geprüft, ob die Studierenden in der Lage sind das in Vorlesung und Übung erworbene Verständnis für digitale Nachrichtentechnik und Übertragungssysteme wiederzugeben. Folgende Kompetenzen sollen durch Theoretische sowie Rechenfragen, beide im ähnlichen Umfang, nachgewiesen werden: Bedeutung der Nyquistrate für Abtastung, sowie Entwurf von Interpolationsformeln für die Signalrekonstruktion, Entwurf von Linearer Quantisierer, Analyse der Bandbreite und spektralen Eigenschaften von Pulses für PCM, Erstellung und Erklärung von Augendiagramme, Entwurf eines optimalen Detektors im Rauschen, Berechnung der Fehlerwahrscheinlichkeit von Kommunikationssystem, Entwurf von lineare digitale Modulationsverfahren.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Mathematisches Verständnis, Signalbeschreibung im Zeit- und Frequenzbereich, Systemtheorie,\nGrundlagen der Wahrscheinlichkeitsrechnung und der Statistik, Lineare Algebra\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1 bis 3\n- Lineare Algebra\n- Signaldarstellung\n- Stochastische Signale\n- Schaltungstechnik 2",
    "content": "Die Lehrveranstaltung bietet eine Einführung in die digitale Nachrichtentechnik. Dazu zählt die Digitalisierung von analogen Quellen durch Abtastung und Quantisierung, Quellen- und EI00440: Nachrichtentechnik | Communications Systems Kanalcodierung, Grundbegriffe der Rate-Distortion Theorie, Pulsecode-Modulation (PCM), differentielle PCM, Impulsformen und ihre Spektren, Augendiagramme, Übertragungskanäle mit Rauschen, Detektion im Rauschen, Matched-Filter, Fehlerwahrscheinlichkeit, lineare digitale Modulationsverfahren (PSK, QAM), sowie Realisierungsaspekte (Takt-, Phasen- und Frequenzschätzung)",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage\n- Die Grundlagen der digitalen Nachrichtentechnik zu erklären, z.B. die Vor- und Nachteile\ngegenüber analogen Methoden,\n- die Funktion der Blöcke (z.B. Abtaster, Quantisierer, Modulator, Matched Filter) eines digitalen\nSenders und Empfängers zu beschreiben,\n- die charakteristischen Eigenschaften von linearen, zeitinvarianten Übertragungskanälen zu\nbeschreiben,\n- wissenschaftliche Dokumente in Nachrichtentechnik zu verstehen.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben per Papier und Bleistift rechnen) gehalten. Ausgewählte Probleme werden in der Übung durch Programmieraufgaben in Matlab weiter vertieft behandelt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet\n- Programmieraufgaben und Beispielprogramme",
    "literature": "- Kammeyer, K.D.: Nachrichtenübertragung. 5. Auflage, 2011\n- Proakis, J. G. und Salehi, M.: Grundlagen der Kommunikationstechnik, 2. Auflage, 2004\n- Gallager, R.G.: Principles of Digital Communication, 2008\n- Skriptum Nachrichtentechnik",
    "lv_sws_lecturer": "Wachter-Zeh, Antonia; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNachrichtentechnik (Vorlesung mit integrierten Übungen, 5 SWS)\nWachter-Zeh A [L], Wachter-Zeh A, Ritterhoff S, Wiegart T"
  },
  {
    "module_id": "EI00450",
    "title": "Regelungssysteme",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Note wird durch eine schriftliche Abschlussklausur (90 min) bestimmt. In der Klausur wird überprüft, ob die Studierenden auch unter Zeitdruck in der Lage sind die gelernten und eingeübten Methoden der Systemanalyse und des Reglerentwurfs auf neue Probleme anzuwenden. Dies wird durch Aufgabenrechnen überprüft. Zusätzlich wird in Kurzfragen geprüft, ob ein vertieftes Verständnis der Methoden erlangt wurde.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Analysis, Lineare Algebra, Systemtheorie, Signaltheorie",
    "content": "Grundlagen der Steuerung und Regelung, Automatisierung in technischen und nichttechnischen Systemen. - Modellbildung, Linearisierung und lineare Systeme. - Zeitverhalten linearer dynamischer Systeme. - Systemdynamische Bausteine, Zeitverzögerte Systeme. - Stabilität von LTI-Systemen, Stabilitätskriterien. - Grundlagen der Regelung und Standardregler. - Stabilitätsanalyse von Regelkreisen im Frequenzbereich, Nyquist- und Bodediagramme. - Reglerentwurf und Methoden zur Reglerparametrierung. - Strukturelle Erweiterungen der einschleifigen Regelungsstruktur durch Vorsteuerung und Reglerkaskaden. - Zustandsbasierter Reglerentwurf, Linearquadratische Regelung, Zustandsbeobachter von LTI-Systemen. - Digitale Implementierung von Steuerungs-, Regelungs- und Filtergesetzen. - Grundlagen der Regelungstheorie ereignisdiskreter Systeme, endliche Zustandsautomaten, Sprache eines Automaten, Petri-Netz-Modellierung, Koordinierung von Teilsteuerungen. - Technik von Regelungs-, Steuerungs- und Automatisierungssystemen. - Anwendungsbeispiele. EI00450: Regelungssysteme | Control Systems",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls hat der Studierende ein tieferes Verständnis von Konzepten der linearen Regelung. Studierende sind in der Lage lineare Regelstrecken und Regelkreise zu analysieren und gelernte Reglerentwurfsverfahren auszuwählen und anzuwenden. Darüber hinaus haben die Studierenden ein grundlegendes Verständnis für dynamische Systeme und deren Verhalten erworben.",
    "teaching_methods": "Die Grundlagen der Regelungstechnik, Regelkreisanalysemethoden und Reglerentwurfsverfahren werden in der Vorlesung präsentiert. Weiterhin werden in der Vorlesung Anwendungsbeispiele vorgestellt. Die Übungen dienen zur Vertiefung des Verständnisses der Konzepte und Verfahren der Regelungstechnik. Dafür werden Rechenaufgaben mit unterschiedlichem Fokus zur Verfügung gestellt: die Verfahren aus der Vorlesung werden praktisch umgesetzt, weitere Anwendungsbereiche werden eingeführt und Erweiterungen der Verfahren der Vorlesung werden erarbeitet. Die Aufgaben der Übungen sollen von den Studierenden in häuslicher Vorbereitung erarbeitet werden. Eine Musterlösung wird in den Übungsstunden präsentiert und diskutiert. Weiterhin wird eine schriftliche Musterlösung zur Verfügung gestellt. In den Tutorübungen werden zusätzliche Übungsaufgaben gemeinsam mit studentischen Tutoren gerechnet. Hier kann insbesondere auf individuelle Fragen eingegangen werden, da die Tutorübungen in Kleingruppen abgehalten werden.",
    "media": "Skript, Übungsblätter mit Lösungen, Tafelarbeit, Overheadfolien, Forum in moodle",
    "literature": "- Skriptum\n- Lunze: Regelungstechnik 1\n- Astrom/Murray: Analysis and Design of Feedback Systems",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRegelungssysteme 1 (Vorlesung mit integrierten Übungen, 5 SWS)\nBuss M, Daniels A, Kerz S\nRegelungssysteme 1 Tutorium (Tutorium, 2 SWS)\nDaniels A, Kerz S\nEI00450: Regelungssysteme | Control Systems"
  },
  {
    "module_id": "EI00460",
    "title": "Diskrete Mathematik für Ingenieure",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfung erfolgt in Form einer Abschlussklausur (90 min). Dabei wird hauptsächlich durch Rechenaufgaben überprüft, ob die Studierenden die mathematischen Begriffe aus der diskreten Mathematik bzw. zu diskreten Strukturen, wie beispielsweise Mengentheorie, Relationen, Logik, Graphen korrekt anwenden können. Dies erfolgt exemplarisch durch zu führende Beweise, zu lösende Aufgaben wie beispielsweise Entsprechungen zwischen Aussagen-, Prädikatenlogik und Mengen zu bestimmen, Eigenschaften gegebener Relationen zu ermitteln, Hüllen von Relationen zu berechnen, oder Eigenschaften von Ordnungsrelationen zu bestimmen. Es sind schriftliche Unterlagen jeglicher Art sowie ein nicht-programmierbarer Taschenrechner gestattet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Digitaltechnik\n- Algorithmen und Datenstrukturen",
    "content": "Aussagenlogik:\n- Aussageformen, Beschreibungsmöglichkeiten, Erfüllbarkeitsmenge, aussagenlogische Gesetze\n- Resolutionsgesetze, Resolventenmethode\n- aussagenlogisches Schließen\n- binäre Entscheidungsnetze, Operationen auf binären Entscheidungsnetzen\nPrädikatenlogik: prädikative Aussageformen, prädikatenlogische Gesetze EI00460: Diskrete Mathematik für Ingenieure | Discrete Mathematics for Engineers Mengen:\n- Beschreibungsformen, Mengenbeziehungen\n- Boolesche Algebra der Teilmengen, Operationen auf Wortmengen\n- Entsprechungen zwischen Aussagen- und Prädikatenlogik sowie Mengen, zwischen Boolescher-\nund Mengenalgebra Relationen und Graphen:\n- Grundlagen; Operationen auf Relationen\n- Eigenschaften von Relationen, Darstellungsformen (u.a. Matrizendarstellung)\n- Hüllen von Relationen, Ordnungsrelationen, Äquivalenzrelationen\n- binäre Graphen (u.a. Erreichbarkeit, Pfade, Bäume)\n- evtl. Graphen auf Algorithmen (z.B. längste Pfade)\n\" Extrema Endliche Automaten:\n- Beschreibung mit Relationen\n- Optimierung von Endlichen Automaten\nAlgebraische Strukturen:\n- Ringe: Grundlagen, Eigenschaften, Substrukturen, Homomorphismus und Isomorphismus;\nModulare Arithmetik\n- Gruppen: Grundlagen, Eigenschaften, Homomorphismus und Isomorphismus, Cosets\nKomplexitätstheorie: \" Nummerierung, Elementare Abzählverfahren \" Asymptotik von Kostenfunktionen",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls mit den Grundlagen diskreter Mathematik und deren Anwendungen in der Elektro- und Informationstechnik vertraut. Sie kennen wesentliche Konzepte, um anspruchsvolle technische Aufgabenstellungen formal zu modellieren und damit einer automatisierten Lösung zugänglich zu machen. Sie verstehen die Grundlagen diskreter Strukturen und sowohl Zusammenhänge als auch Unterschiede verschiedener solcher Strukturen. Die erworbenen Kompetenzen bereiten insbesondere auf die Vertiefungsrichtungen „Computer Engineering“ und „Entwurf integrierter Systeme“ vor. Auch für die Vertiefungsrichtungen „Hochfrequenztechnik“ (bei bevorzugtem Interesse an Digitaltechnik / Softwaretechnik / Informationstechnik) sowie „Medizinische Elektronik / Life Science Electronics“ (bei bevorzugtem Interesse an digitalen Themen wie Telemedizin) sind sie gut geeignet. Konkrete Module, welche die Inhalte dieser Vorlesung aufgreifen, sind z.B. EI 0608 „Digitale Schaltungen“, EI 0690 „Entwurf digitaler System mit VHDL u. SystemC“, EI04007/8 „Real-Time and Embedded Systems 1/2“, EI04002 „Grundlagen der IT-Sicherheit“, EI 04003 „Angewandte Kryptologie“. Auch für Module im Master-Studiengang EI ist diese Veranstaltung gut geeignet, z.B. EI 7323 „Electronic Design EI00460: Diskrete Mathematik für Ingenieure | Discrete Mathematics for Engineers Automation“, EI 7381 „Synthesis of Digital Systems“, EI7340 „HW/SW-Codesign“, EI 70002 „Modeling and Verification of Embedded Systems“.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch exemplarische Erläutern in Übungen angestrebt. Als Lehrmethode wird in Vorlesung wie Übung Frontalunterricht gehalten. Die Übung enthält auch anwendungsnahe Beispiele. Die Vorlesung umfasst viele Beispiele. Überlegt wird, kleine Programmierprojekte zu integrieren (z.B. Operationen auf Graphen)",
    "media": "Folgende Medienformen finden Verwendung:\n- Tafelanschrieb\n- Umfassende Formelsammlung\n- Übungskatalog mit Musterlösungen\n- zusätzliche Unterlagen und Demonstrationen online",
    "literature": "Folgende Literatur wird empfohlen:\n- F.L. Bauer, M. Wirsing: Elementare Aussagenlogik, Springer Verlag, Berlin, 1991\n- D.F. Stanat, D.F. McAllister: Discrete Mathematics in Computer Science, Prentice-Hall,\nEnglewood Cliffs, N.J., 1986",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDiskrete Mathematik für Ingenieure (Vorlesung mit integrierten Übungen, 5 SWS)\nSchlichtmann U, Petri R, Truppel A"
  },
  {
    "module_id": "EI0204",
    "title": "Signaldarstellung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht, deren Aufbau den verschiedenen Lernergebnissen angepasst ist: Aufgaben zur Überprüfung der Lernergebnisse aus Vorlesung und Übung nehmen in der Klausur einen Anteil von 80% ein. Aufgaben zur Überprüfung weiterer Lernergebnisse aus dem Programmierpraktikum nehmen in der Klausur einen Anteil von 20% ein. Es können insgesamt bis zu 20% der Klausur durch Ankreuzen von vorgegeben Mehrfachantworten abgenommen werden. Zugelassene Hilfsmittel sind ausschließlich das Vorlesungsskript inkl. handschriftlicher Notizen in ebensolchem, eine unbeschriftete Klarsichtfolie und Zeichen- sowie Schreibmaterial (kein eigenes Papier!). In der Prüfung müssen die Studenten gelerntes Wissen über die zeitkontinuierliche und zeitdiskrete Darstellung und Verarbeitung von Signalen wiedergeben, auf praktische sowie theoretische Probleme anwenden und auf weiterführende Fragestellungen transferieren können. Die Studenten müssen in der Lage sein, Verständnisfragen mit eigenen Worten unter Verwendung der gängigen Fachbegriffe zu beantworten und Ergebnisse sowohl formal als auch zeichnerisch adequat darstellen zu können. Neben den o.g. Anforderungen treffen für den Prüfungsteil des Programmierpraktikums zusätzliche Anforderung zu: die Studenten müssen selbstständig auf dem Papier Programmcode nachvollziehen, interpretieren und generieren können. Dazu gehören insbesondere aber nicht ausschließlich das Erkennen von Fehlern in vorgebenem Code, das Korrigieren und Ergänzen von ebensolchem, die Bestimmung des Ergebnisses eines vorgebenen Codes oder das Lösung von typischen Problemen der Signaldarstellung (s.o.) mithilfe von selbstgeschriebenem Code.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Differentialrechnung, Komplexe Analysis, Mengenbegriff, Fourierintegral.\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nEI0204: Signaldarstellung | Signal Representation\n- Analysis 1\n- Analysis 2",
    "content": "Signaldarstellung: Zeitkontinuierliche und zeitdiskrete Signale, lineare zeitinvariante Systeme (LTI-Systeme), Faltung, Faltungsintegral und Faltungssumme, Impulsantwort von LTI-Systemen, Stabilität und Kausalität, periodische Signale, orthogonale Funktionensysteme, zeitkontinuierliche Fourier-Reihe (FR), zeitkontinuierliche Fourier-Transformation (FT), Fourier-Integral, Zusammenhang zwischen FR und FT, korrespondierende FT-Paare, Amplitudenmodulation und Signalrückgewinnung, lineare Differentialgleichungen und Übertragungsfunktionen, Bode-Diagramm, Einführung in die Filtertechnik, zeitdiskrete Fourier-Transformation (ZDFT), lineare Differenzengleichungen, zeitdiskrete Filter, Abtasttheorem, Abtastung und Rekonstruktion eines Signals, Abtastung im Frequenzbereich, Laplace-Transformation (LT), Konvergenzeigenschaften der LT, z- Transformation, Residuensatz, Diskrete Fourier-Transformation (DFT).",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, sowohl kontinuierliche und diskrete als auch reelle und komplexe Signale und Systeme in ihren deterministischen Erscheinungsformen sowohl in ihren mathematischen Eigenschaften als auch im Zeit- und Frequenzbereich zu beschreiben, zu berechnen, zu skizzieren, zu analysieren, zu bewerten sowie diese ineinander zu überführen. Damit einhergehend haben die Studierenden grundlegende Kompetenzen für den Umgang mit den klassischen unilateralen und bilateralen Integraltransformationen der Signaltheorie sowie deren diskretisierten Varianten erworben, jeweils inklusive ihrer Rücktransformationen und mathematischen Eigenschaften. Die Studenten können ihre erworbenen Kompetenzen sowohl auf Papier als auch in MATLAB auf typische Problemstellungen der Signalverarbeitung anwenden und diese selbstständig lösen.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden eine vertiefende Wissensbildung durch Besprechung und Lösung von Problemstellungen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Besprechung und Lösung von Problemstellungen) gehalten. Eine Vertiefung des Unterrichtsstoffes im Rahmen von Tutorübungen wird angeboten. Durch ein semesterbegleitendes Programmierpraktikum (MATLAB) im Rahmen von Hausarbeiten wird die individuelle Problösekompetenz sowie praktische Erfahrung im Umgang mit Signaldarstellung und den Grundlagen von MATLAB gefördert. Begleitend zur Übung des Programmierpaktikums werden freiwillige Hausaufgaben angeboten, die jedoch nicht in die Modulnote mit einfließen.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\nEI0204: Signaldarstellung | Signal Representation\n- Skript\n- Übungsaufgaben mit Lösungen als Download\n- Aufgaben für das Programmierpraktikum als Download",
    "literature": "Folgende Literatur wird empfohlen:\n- A.V. Oppenheim and A.S. Wilsky. Signals and Systems. Prentice Hall Signal Processing Series,\n2. Edition, 1996.\n- H.W. Schüssler: Digitale Signalverarbeitung, Springer-Verlag 1994",
    "lv_sws_lecturer": "Rigoll, Gerhard; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI0205",
    "title": "Stochastische Signale",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur (90 min) erbracht, deren Aufbau den verschiedenen Lernergebnissen angepasst ist: Aufgaben zur Überprüfung der Lernergebnisse aus Vorlesung und Übung nehmen in der Klausur einen Anteil von 80% ein. Aufgaben zur Überprüfung weiterer Lernergebnisse aus dem Programmierpraktikum nehmen in der Klausur einen Anteil von 20% ein. Es können insgesamt bis zu 20% der Klausur durch Ankreuzen von vorgegeben Mehrfachantworten abgenommen werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Differentialrechnung, Komplexe Analysis, Mengenbegriff, Fourierintegral.\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Analysis 2",
    "content": "Wahrscheinlichkeitstheorie: Ergebnisraum, Sigma Algebra, Wahrscheinlichkeitsmaß, bedingte Wahrscheinlichkeit, stochastische Unabhängigkeit, Satz von Bayes, diskrete und reelle Zufallsvariablen, Wahrscheinlichkeitsverteilung und -dichte, Produktverteilung und -dichte, Funktionen von Zufallsvariablen, Erwartungwert und Varianz, bedingte Erwartung, erzeugende und charakteristische Funktion, zentraler Grenzwertsatz, Gesetz der großen Zahl, Chebyshev Ungleichung. Stochastische Standardmodelle: Bernoulliverteilung, Binomialverteilung, Poissionverteilung, Geometrische Verteilung, Exponentialverteilung, Normalverteilung, etc. Stochastische Zufallsfolgen: Ensemble von Zufallsvariablen vs. Pfadmodell, Verteilungen und Dichten von Zufallsfolgen, diskreter random walk, Konvergenz von Zufallsfolgen, EI0205: Stochastische Signale | Stochastic Signals Markoveigenschaft, Markovketten. Zufallsprozesse: Auto- und Kreuzkorrelationsfunktion, Wiener-Levy Prozess, Poisson Prozess, Markov Prozesse, Klassifikation von Zufallsprozessen, Leistungsdichtespektrum, Wiener-Khintchine Theorem, lineare Systeme und Zufallsprozesse, weißes Gaußsches Rauschen, Ableitung und Integration stochastischer Pfade, das MSE-Kalkül und die Karhunen-Loeve Entwicklung von Zufallsprozessen.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, Signale in ihren stochastischen Erscheinungsformen zu beschreiben, sowie grundliegende Konzepte der Wahrscheinlichkeitstheorie und die Grundlagen stochastischer Prozesse zu verstehen und anzuwenden.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden eine vertiefende Wissensbildung durch Besprechung und Lösung von Problemstellungen in Übungen angestrebt. Für eine regelmäßige Selbstkontrolle wird den Studierenden die Teilnahme an einem Quiz zum jeweils in der Vorlesung besprochenen Thema angeboten. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Besprechung und Lösung von Problemstellungen) gehalten. Eine Vertiefung des Unterrichtsstoffes im Rahmen von Tutorübungen angeboten. Durch ein semesterbegleitendes Programmierpraktikum (MATLAB) im Rahmen von Hausarbeiten wird die individuelle Problösekompetenz gefördert.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen.\n- Skript.\n- Übungsaufgaben mit Lösungen als Download.",
    "literature": "Folgende Literatur wird empfohlen:\n- B. Hajek. An Exploration of Random Processes for Engineers. Lecture Notes at University of\nIllinois, Urbana-Champaign. URL: http://www.freetechbooks.com\n- H. Stark and J. W. Woods. Probability, Random Processes, and Estimation Theory for Engineers.\nPrentice Hall, 2. Edition, 1994.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nStochastische Signale (Mentorgruppe) (Übung, ,1 SWS)\nWürth M, Utschick W\nEI0205: Stochastische Signale | Stochastic Signals"
  },
  {
    "module_id": "EI0300",
    "title": "Systeme - Nachrichtentechnik 1 und Regelungssysteme 1",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 9,
    "hours_total": 270,
    "hours_self_study": 165,
    "hours_presence": 105,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen: - Abschlussklausur Nachrichtentechnik (50%)\n- Abschlussklausur Regelungstechnik (45%) - Benotete Hausaufgaben und Projekte\nRegelungstechnik (5%)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Mathematisches Verständnis, Signalbeschreibung im Zeit- und Frequenzbereich, Systemtheorie,\nGrundlagen der Wahrscheinlichkeitsrechnung und der Statistik, Lineare Algebra\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Mathematik 1 bis 3\n- Signale\n- Schaltungstechnik 2\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n-",
    "content": "Nachrichtentechnik: Quellensignale und ihre Spektren. Abtasttheorem, Quantisierung, Pulsecode-Modulation (PCM), differentielle PCM, Sigma-Delta-Modulator. Basisbandübertragung: Impulsformen und ihre Spektren, Nyquistbedingungen, Augendiagramm. Übertragungskanal (z.B. AWGN-Kanal), Detektion im Rauschen, Matched-Filter, Fehlerwahrscheinlichkeiten bei EI0300: Systeme - Nachrichtentechnik 1 und Regelungssysteme 1 | Systems - Telecommunications 1 and Control Systems 1 antipodischer und orthogonaler Übertragung, lineare digitale Modulationsverfahren (PSK, QAM), Realisierungsaspekte (Takt-, Phasen- und Frequenzschätzung). Regelungstechnik: Steuerung, Regelung, Automatisierung in technischen und nichttechnischen Systemen. - Modellbildung, Linearisierung und lineare Systeme. - Zeitverhalten linearer dynamischer Systeme.\n- Systemdynamische Bausteine. - Stabilität von LTI-Systemen. - Grundlagen der Regelung und\nStandardregler. - Stabilitätsanalyse von Regelkreisen im Frequenzbereich. - Reglerentwurf.\n- Strukturelle Erweiterungen der einschleifigen Regelungsstruktur. - Zustandsbasierter\nReglerentwurf. - Digitale Implementierung von Steuerungs-, Regelungs- und Filtergesetzen. - Ereignisdiskrete Steuerungen und Petri-Netz-Modellierung. - Technik von Regelungs-, Steuerungs- und Automatisierungssystemen. - Anwendungsbeispiele.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, die Grundlagen der digitalen Nachrichtentechnik und der charakteristischen Eigenschaften von Übertragungssystemen zu verstehen. Darüber hinaus hat der Studierende Kenntnisse zu den Grundlagen der Regelungs- und Steuerungstechnik.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "Folgende Literatur wird empfohlen:\n- Kammeyer, K.D.: Nachrichtenübertragung. 3. Auflage, 2004\n- Proakis, J. G. und Salehi, M.: Grundlagen der Kommunikationstechnik, 2. Auflage, 2004\n- Skriptum Regelung- und Steuerungstechnik 1\n- Skriptum Nachrichtentechnik 1",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nEI0300: Systeme - Nachrichtentechnik 1 und Regelungssysteme 1 | Systems - Telecommunications 1 and Control\nSystems 1\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI0307",
    "title": "Regelungssysteme",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Endnote wird durch eine schriftliche Abschlussklausur (90 min) bestimmt. In der Klausur wird überprüft, ob die Studierenden auch unter Zeitdruck in der Lage sind die gelernten und eingeübten Methoden der Systemanalyse und des Reglerentwurfs auf neue Probleme anzuwenden. Dies wird durch Aufgabenrechnen überprüft. Zusätzlich wird in Kurzfragen geprüft, ob ein vertieftes Verständnis der Methoden erlangt wurde.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Mathematik dynamischer Systeme, die in den Vorlesungen für höhere Mathematik\nvermittelt wird.",
    "content": "Grundlagen der Steuerung und Regelung, Automatisierung in technischen und nichttechnischen Systemen. - Modellbildung, Linearisierung und lineare Systeme. - Zeitverhalten linearer dynamischer Systeme. - Systemdynamische Bausteine, Zeitverzögerte Systeme. - Stabilität von LTI-Systemen, Stabilitätskriterien. - Grundlagen der Regelung und Standardregler. - Stabilitätsanalyse von Regelkreisen im Frequenzbereich, Nyquist- und Bodediagramme. - Reglerentwurf und Methoden zur Reglerparametrierung. - Strukturelle Erweiterungen der einschleifigen Regelungsstruktur durch Vorsteuerung und Reglerkaskaden. - Zustandsbasierter Reglerentwurf, Linearquadratische Regelung, Zustandsbeobachter von LTI-Systemen. - Digitale Implementierung von Steuerungs-, Regelungs- und Filtergesetzen. - Grundlagen der Regelungstheorie ereignisdiskreter Systeme, endliche Zustandsautomaten, Sprache eines Automaten, Petri-Netz-Modellierung, Koordinierung von Teilsteuerungen. - Technik von Regelungs-, Steuerungs- und Automatisierungssystemen. - Anwendungsbeispiele. EI0307: Regelungssysteme | Control Systems [RS1]",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende mit grundlegenden Konzepten der Regelungs- und Steuerungstechnik vertraut und in der Lage, Regelungen selbst zu konzipieren und umzusetzen. Darüber hinaus wird den Studierenden ein tieferes Verständnis für dynamische Systeme und deren Verhalten vermittelt.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen\n- Tutorübungen",
    "literature": "Skriptum zur Vorlesung",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRegelungssysteme 1 (Vorlesung mit integrierten Übungen, 5 SWS)\nBuss M, Daniels A, Kerz S\nRegelungssysteme 1 Tutorium (Tutorium, 2 SWS)\nDaniels A, Kerz S"
  },
  {
    "module_id": "EI04001",
    "title": "Komputer & Creativität",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Art der Prüfungen sind abgestimmt mit den geplanten Lernzielen:\n• Zum Ende des Semesters wird eine Abschlussklausur abgehalten mit einer Prüfungsdauer von\n60 Minuten, um damit das grundlegende Verständnis für die Konzepte der mescnhlichen und maschinellen Kreativität zu erfassen.\n• Mittels teambasierter Projektarbeit in Form eines S/W Entwicklungsprojektes weisen die\nStudierenden den Erwerb praktischer Problemlösings- und Umsetzungsfähigkeiten nach. Die Teams präsentieren, dokumentieren und demonstrieren die Ergebnisse ihres jeweiligen Projektes.\n• Im Verlaufes des Semesters gibt es bewerte Hausaufgaben, um das Verständnis und die\nFähigkeit zur Bewertung technischer Lösungsansätze zu überprüfen. Die Abschlussnote setzt sich wie folgt zusammen:\n- 30% schriftliche Abschlussklausur\n- 50% teambasiertes Semesterprojekt (dies beinhaltet Grupppenpräsentationen sowie schriftliche\nDokumentation für das Projekt)\n- 20% Hausaufgaben",
    "repetition": "",
    "recommended_prerequisites": "Die Vorlesung basiert auf folgenden Vorkenntnissen, die in den Lehrveranstaltungen erworben\nwurden:\n- Computertechnik\n- Algorithmen & Datenstrukturen\nEI04001: Komputer & Creativität | Computational Creativity [KuC]\n- Programmierkenntnisse in Matlab C",
    "content": "Computational Creativity is ein Teilgebiet der künstlichen Intelligenz und des Maschinellen Lernens, das sich mit der Erzeugung von Maschinen beschäftigt, die kreative Fähigkeiten besitzen. Der Kurs konzentriert sich darauf das Konzept der Kreativität in Mensch und Maschine zu erfassen und praktische Kenntnisse für die S/W-Implementierung exemplarischen Systemen mit kreativen Fähigkeiten zu erwerben. Studierende werden in die Lage versetzt Konzepte von algorithmischer Kreativität zu untersuchen, entsprechende Systeme und Anwendungen zu konzipieren und zu entwicklen. Die Studierenden erlernen dazu die erforderlichen Programmierkenntnisse in der Programmiersprachen Python. Wir werden verschiedene Methoden diskutieren und verwenden, um\n• die Natur und die Characteristika von menschlicher Kreativität zu verstehen, sowohl für das\nIndividuum als auch in der Grupppe\n• Anwendungen und Herausforderungen für algorithmische Kreativität zu erkennen und zu\nspezifizieren\n• Lösungsansätze für kreative Systeme systematisch zu erarbeiten\n• eine team-orientierte Arbeitsweise mit agilen Methoden zu erleben",
    "learning_outcomes": "Am Ende des Kurses haben die Studierenden ein grundlegendes Verständnis für die unterschiedlichen Konzepte, die dem Phänomen der Kreativität zugrunde liegen erfasst und verstanden. Sie haben praktische Fähigkeiten bzgl. der Umsetzung und der S/W-Implementierung von System mit algorithmischer Kreativität erworben. Sie sind in der Lage entsprechende Lösungen und Implementierungen zu verstehen und zu bewerten .",
    "teaching_methods": "Der Kurs besteht zum einen aus Elementen mit Frontalunterricht und \"inverted classroom\" Diskussionen. Darüber hinaus gibt es Design Thinking Workshops um die teambasierte Projekarbeitet zu starten. Die Softwarearbeit beruht auf agilen Methoden, die durch regelmäßige Scrum-Meetings begeleitet werden. Studierende werden in kleinen Teams an einem Semesterprojekt arbeiten. Die Teams werden durch eine Reihe von Zwischenpräsentationen den Fortschritt ihres Projektes vorstellen und diskutieren. Das Endergebnis ist in einer Abschlusspräsentationam Ende des Semesters dargestellt. Die Hausaufgaben und das Semesterprojekt sollen den Studierenden die Möglichkeit geben sich die angestrebten Kompetenzen selbstständig erarbeiten. Die Hausaufgaben umfassen auch Leseaufgaben akueller Literatur. EI04001: Komputer & Creativität | Computational Creativity [KuC]",
    "media": "Folgende Methoden werden eingesetzt:\n- Frontale Präsentation (Vorlesung)\n- Gruppen- und Einzeldiskussionen\n- Design Thinking Workshops\n- Leitfragenbasierte Übungsaufgaben\n- Tutorübungen und Kleingruppenbetreuung",
    "literature": "",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nKomputer & Creativität (Vorlesung mit integrierten Übungen, 4 SWS)\nDiepold K, Röhrl S, Sacchetto L, Schumann S\nKomputer & Creativität (Praktikum, 2 SWS)\nRöhrl S"
  },
  {
    "module_id": "EI04002",
    "title": "Grundlagen der IT-Sicherheit",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Modulprüfung besteht aus einer benoteten Prüfungsleistung in Form einer Klausur (60 min). Hierbei werden die theoretischen Inhalte des Moduls abgeprüft. Insbesondere sollen die Studierenden ohne Hilfsmittel Begriffe, Methoden und Hintergründe der IT-Sicherheit wiedergeben und erklären können. Weiterhin sollen sie Lösungen zu konkreten Anwendungsprobleme aus dem Bereich der IT-Sicherheit aufzeigen und diskutieren können. Das Verständnis der in der Übung vermittelten praktischen Inhalte können Studierende in Form freiwilliger Hausaufgaben nachweisen. Das Bestehen dieser Hausaufgaben fließt mit einem Notenbonus von 0,3 in die Abschlussnote ein.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundverständnis für Mathematik",
    "content": "Um einen Überblick der IT Sicherheit zu vermitteln werden folgende Themen behandelt: Motivation für IT-Sicherheit Grundbegriffe der IT-Sicherheit Computer Malware Kryptographische Grundlagen Authentisierung Biometrie Zugriffskontrolle Netzwerk- und Internetsicherheit EI04002: Grundlagen der IT-Sicherheit | Introduction to IT-Security [ITSEC] Physikalische Sicherheit / Physikalische Angriffe Sicherheitsevaluierung und Zertifizierung Einführung in den Datenschutz",
    "learning_outcomes": "Studierende können nach der erfolgreichen Teilnahme an diesem Modul grundlegende Begriffe und Bereiche der IT Sicherheit erklären. Sie können Angriffsmöglichkeiten auf IT Systeme und entsprechende Gegenmaßnahmen charakterisieren. Sie verstehen kryptographische Methoden, ihre Implementierungskomplexitäten und ihre Bedeutung für die IT-Sicherheit. Sie sind imstande Authentifizierungsmechanismen zu erklären und zu klassifizieren. Sie sind in der Lage die Prinzipien der Kommunikations-, Netzwerk- und Internetsicherheit anzuwenden und können Sicherheitsmodelle und Zugriffs- und Informationsflusskontrollen erklären. Weiterhin verstehen sie die Organisation von IT Sicherheitsmaßnahmen im Unternehmen (z.B. durch Risiko Analysen). Studierende können die Möglichkeiten und Grenzen von IT Sicherheitsmaßnahmen einschätzen und grundlegende Sicherheitsaspekte von IT Systemen analysieren.",
    "teaching_methods": "Die Vorlesung besteht aus Präsentationen mit PowerPoint und Tafelanschrieb. In den Übungen werden Aufgaben begleitend zur Vorlesung behandelt. Darüber hinaus werden weitere praktische Kenntnisse in Form einer Hausaufgabe vermittelt und eingeübt.",
    "media": "PowerPoint Folien, Tafelanschrieb, Moodle, Übungsblätter.",
    "literature": "- R. Anderson, Security Engineering, John Wiley & Sons Verlag, 2008\n- C. Eckert, IT Sicherheit, Oldenburg Verlag, 2009",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagen der IT-Sicherheit (Übung, 2 SWS)\nRuchti J [L], Brosch M\nGrundlagen der IT-Sicherheit (Praktikum, 1 SWS)\nRuchti J [L], Schupp J\nGrundlagen der IT-Sicherheit (Vorlesung, 2 SWS)\nRuchti J [L], Sigl G, Brosch M"
  },
  {
    "module_id": "EI04003",
    "title": "Angewandte Kryptologie",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Modulleistung wird in Form einer schriftlichen Prüfung (60 min) erbracht. In dieser soll nachgewiesen werden, dass sowohl die mathematischen Konzepte, als auch die Zusammenhänge der einzelnen Teilbereiche der Kryptologie verstanden wurden und angewendet werden können. Hierzu werden sowohl geschlossene Fragen zum Reproduzieren und Erklären von kryptographischen Grundlagen, als auch offene Fragen zum Umsetzen des Gelernten gestellt. In Rechenaufgaben wird das Lösen von typischen kryptographischen Problemen geprüft. Zusätzlich wird im Rahmen einer semesterbegleitenden, freiwilligen Programmierhausaufgabe das selbstständige Analysieren und Umsetzen der Spezifikationen eines symmetrischen Block-Ciphers geprüft. Das erfolgreiche Bestehen führt zu einem Notebonus von 0,3 Punkten auf die Note der Abschlussklausur.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundkenntnisse in Programmierung, Algorithmen und Datenstrukturen, Computerhardware,\nKommunikationsprotokolle,\ndiskrete Mathematik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich\nabsolviert sein:\nAlgorithmen und Datenstrukturen, Programmierpraktikum C,\nComputertechnik, Kommunikationsnetze\nEI04003: Angewandte Kryptologie | Applied Cryptology [Krypto]",
    "content": "Die Vorlesung bietet eine Einführung in die Themen der Kryptologie. Die für die Vorlesung relevanten Aussagen der diskreten Mathematik werden rekapituliert. An die Besprechung kryptographischer Mechanismen (symmetrische vs. asymmetrische Verschlüsselung, Stromchiffren, hybride Kryptographie, Einweg- und Hashfunktionen, digitale Signaturen, sowie deren Kombination in Authenticated Encryption) schließt sich die beispielhafte Betrachtung wichtiger kryptographischer Algorithmen an. Es werden symmetrische und asymmetrische Verfahren mit ihren verschiedenen Arbeitsmodi betrachtet. Ihre Verwendung in kryptographischen Protokollen zu Authentifizierung und Key-Exchange, sowie Public-Key-Infrastrukturen wird untersucht. Außerdem wird das Konzept des Secret-Sharings erklärt. Dabei wird auch auf die Generierung und Eigenschaften kryptographisch sicherer Zufallszahlen eingegangen. Abschließend wird auf die neuen Herausforderung der Kryptogrpahie in Zeiten von Quantencomputer eingegangen. Hierzu werden verschiedene Post-Quantum-Algorithmen vorgestellt.",
    "learning_outcomes": "Die Teilnehmer sind nach dem erfolgreichen Abschluss des Moduls in der Lage, die Funktionsweise der grundlegenden Verfahren der Kryptologie und deren Implementierung zu analysieren, diese in einem praktischen Umfeld anzuwenden und die Implementierungskomplexitäten kryptographischer Verfahren zu erfassen. Zusätzlich verstehen sie die Herausforderungen der Kryptologie in Zeiten von Quantencomputer und können Lösungen darlegen. Im Rahmen der Programmieraufgabe(n) sind die Teilnehmer in der Lage einen kryptographischen Algorithmus in der Programmiersprache C zu implementieren.",
    "teaching_methods": "Vorlesungen bestehen aus interaktiven Präsentation mit Powerpoint und Tafelanschrieb. Hierbei werden die Inhalte vorgetragen und wo möglich anhand von Beispielen gemeinsam durchgearbeitet. Übungen behandeln Übungsaufgaben begleitend zur Vorlesung. Hierbei werden sowohl Rechenaufgaben exemplarisch vorgerechnet, als auch wichtige Zusammenhänge/Algorithmen schrittweise rekapituliert und falls nötig anhand von Beispielen veranschaulicht. Hausaufgaben in Form von Programmieraufgabe(n) bieten eine praktische Umsetzung des Erlernten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Powerpoint, Tafelarbeit\n- Übungsblätter/Foliensatz\n- Aufgaben in Moodle\n- Lehrbuch/Publikationennen\nEI04003: Angewandte Kryptologie | Applied Cryptology [Krypto]",
    "literature": "Folgende Literatur wird empfohlen:\n- J. Swoboda, St.Spitz, M.Pramateftakis. Kryptographie und ITSicherheit, Vieweg Verlag, 2007.\n(Signatur TUM-Bibliothek: 0003/DAT 465f 2008 L 637)\n- Knudsen, Lars R., Robshaw, Matthew: The block cipher companion (Signatur TUM-Bibliothek:\n0002/DAT 465f 2016 A 2156)",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGeorg Sigl\nsigl@tum.de\nMichael Tempelmeier\nmichael.tempelmeier@tum.de"
  },
  {
    "module_id": "EI04004",
    "title": "Strategic Management for Engineers",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "The examination is done in a written exam (60 min) at the end of the semester. Considering the learning objectives the theoretical and practial concepts of strategic management will be covered. The students have to explain notions, concepts, methods and the background of the covered topics. In addition, the students discuss different solutions of specific practical problems from the entrepreneurial practise.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No requirements",
    "content": "Introduction\n- Strategic purpose (vision, mission, values; stakeholders)\n- Ownership models, Corporate social responsibility (CSR) and compliance\n- Shareholder value\nStrategic positioning\n- Business environment\n- Resources, competencies and strategic capabilities\n- Value chain and value system\nBusiness strategy\n- Strategic business units\n- Competitive strategies (cost leadership, differentiation)\nEI04004: Strategic Management for Engineers | Strategic Management for Engineers Corporate strategy\n- Value creation and the corporate parent\n- Portfolio management\nDigitalization\n- Technological achievements, new business models and social attractiveness\n- Platforms\n- Big data\nTechnology and Innovation Internationalization Mergers, acquisitions and alliances Organization of companies Strategy planning process Business plans",
    "learning_outcomes": "After successful completion of the module students have an overview on how strategic planning and decision-making processes are carried out in companies. They know the prerequisites (in addition to a suitable product or a suitable business idea) that are necessary in order to successfully position a business in the market. In addition, they are able to evaluate products or business ideas, taking into account the market environment and the competitive situation. They are closer to being able to prepare sound management decisions.",
    "teaching_methods": "The lecture is accompanied by intense dicussions about pros and cons of specific strategy tools. There will be also discussions about case studies of specific companies.",
    "media": "Power Point Slides, Animations, Blackboard",
    "literature": "Recommended literature:\nGerry Johnson: Exploring Strategy - Text and Cases",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nEI04004: Strategic Management for Engineers | Strategic Management for Engineers\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nStrategic Management for Engineers (Vorlesung, 2 SWS)\nHepp A [L], Sauerbrey J"
  },
  {
    "module_id": "EI04014",
    "title": "Fundamentals of Human-Centered Robotics",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Modulnote basiert auf der Leistung der Studierenden in einer Präsentation die eine Demonstration, sowie ein Prüfungsgespräch (ca. 10 Min) enthält. Dabei wird das Wissen der Studierenden über die theoretischen Grundlagen der menschenzentrierten Robotik ausgewertet und untersucht, ob sie dies auf reale Probleme anwenden und das Ergebnis präsentieren, sowie demonstrieren können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Regelungssysteme 1\nRobotik",
    "content": "Die Vorlesung Human-Centered Robotics umfasst eine gründliche Einführung in die Technologie und die intelligente Steuerung von kollaborativen Robotersystemen. Die theoretischen Grundlagen und Anwendungsmöglichkeiten von interagierenden Robotern werden ausführlich diskutiert. Tutorials vertiefen das konzeptionelle Verständnis der interaktiven Robotik und der entsprechenden Softwaretools. Die Studenten lernen die Grundlagen der Robotersicherheit, der menschenfreundlichen, KI-basierten Aufgaben- und Wegplanung in dynamischen Umgebungen. Um praktische Erfahrungen zu sammeln und die Kurskonzepte in modernster Robotertechnik anzuwenden, werden Robothons angeboten, die darauf abzielen, reale Herausforderungen mit hochmotivierten Studierendenteams aus 4-6 Mitgliedern aus verschiedenen Disziplinen zu lösen. Die Kursskizze ist unten abgebildet. EI04014: Fundamentals of Human-Centered Robotics | Fundamentals of Human-Centered Robotics I. Einführung\n- Eine kurze Geschichte der Robotik\n- Was ist menschenfreundliche Robotik?\nII. Mechanisches Design und dynamische Modellierung für Sicherheit und Leistung\n- Steife Roboter\n- Roboter mit flexiblen Elementen\n- Intrinsisch nachgiebige Roboter\n- Sicherheit für die physische Mensch-Roboter-Interaktion\nIII. Roboterregelung für unbekannte Umgebungen und Mensch-Roboter-Interaktion\n- Perzeption und Aktuierung für die interaktive Robotik\n- Bewegungssteuerung\n- Kraft- und Impedanzregelung\n- Kollisionserkennung und -reaktion\nIV. Echtzeit-Bewegungsplanung\n- Echtzeit-Trajektorienplanung\n- Umgebungserfassung und -wahrnehmung\n- reaktive Bewegungsplanung in Echtzeit und Kollisionsvermeidung\n- Hierarchische Bewegungssteuerung\nDie Übungen konzentrieren sich auf folgende Themen:\n- Robotermodellierung - Einführung in die Modellierung von starren und flexiblen Gelenkrobotern\n- Robotersteuerung - Einführung in die angewandte Robotersteuerung in dynamischen\nUmgebungen mit Fokus auf die Sicherheit des Menschen.\n- Bewegungsplanung - Entwurf und Durchführung einer sicheren dynamischen Trajektorienplanung\nWährend des Robothon sammeln die Studenten praktische Erfahrungen bei der Lösung realer Probleme mit Robotersystemen. Die Studierenden arbeiten in interdisziplinären Teams zusammen, in denen jedes Team eine gewünschte Roboteraufgabe zur Umsetzung auswählt, wobei der Schwerpunkt auf der Zusammenarbeit zwischen Mensch und Roboter liegt. Die Studierenden sind verantwortlich für die Leitung des gesamten Projekts, die Erstellung des Projektplans, die Durchführung des Projekts in einem interdisziplinären Team, die termingerechte Fertigstellung des Projekts und die Präsentation der Ergebnisse vor den Kursteilnehmern. Projektbeispiele aus früheren Robothons in Hannover finden Sie unter: https://www.roboterfabrik.uni-hannover.de",
    "learning_outcomes": "Nach Abschluss dieses Moduls sind die Studierenden in der Lage die verschiedenen Methoden und Technologien der sicheren physikalischen Mensch-Roboter-Interaktion zu verstehen und zu bewerten. Sie wissen die theoretischen Grundlagen der Robotersteuerung für eine sichere Mensch-Roboter-Interaktion anzuwenden. Sie können selbst Programme von Robotern auf den EI04014: Fundamentals of Human-Centered Robotics | Fundamentals of Human-Centered Robotics Grundlagen neuester Methoden zur globalen Bewegungsplanung in dynamischen Umgebungen entwickeln. Darüber hinaus haben sie einen Überblick über Bewegungsplanungsalgorithmen zur Kollisionsvermeidung und können diese praktisch in der Robotik umsetzen. Sie könne, von einer spezifischen Problemstellung ausgehend, sichere und menschen-freundliche Programme zur physikalischen Mensch-Roboter-Interaktion entwickeln und praktisch umsetzen und evaluieren.",
    "teaching_methods": "Dieser Kurs besteht aus Vorträgen, theoretischen Übungen und einem Projekt. Neben den Vorträgen werden auch die Übungen zur Verfügung gestellt, präsentiert und diskutiert. Beispiellösungen, sowie einige Paper werden zur Verfügung gestellt. Der Robothon führt die Studenten in die Probleme der Praxis ein, die mit echten State-of-the-Art- Robotern in Form eines gemeinsamen, interdisziplinären Projekts gelöst werden sollen. Dabei wird das Wissen aus den Vorlesungen mit realen Anwendungen und dem kompetenten Einsatz moderner Robotertechnik kombiniert.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Übungsaufgaben mit Lösungen\n- Paper",
    "literature": "- R. M. Murray, Z. Li, S. S. Sastry, ‘A mathematical introduction to robotic manipulation’, CRC\npress, 2017.\n- M. W. Spong, S. Hutchinson, M. Vidyasagar, ‘Robot Modeling and Control’, vol. 3, New York:\nWiley, 2006.\n- B. Siciliano, O. Khatib, ‘Springer Handbook of Robotics’, Springer, 2016.\n- Oussama Khatib, Lecture Notes: Advanced Robotics Manipulation, Stanford University.\n- O. Khatib, ‘Inertial Properties in Robotic Manipulation: An Object Level Framework’, Int. J. of\nRobotics Research, vol. 14, no. 1, pp. 3-19, 1995.\n- H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, S. Thrun, ‘Principles of\nRobot Motion: Theory, Algorithms, and Implementation’, MIT Press, 2005.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nFundamentals of Human-Centered Robotics (Vorlesung, 2 SWS)\nHaddadin S [L], Chen L, Haddadin S, Swikir A\nEI04014: Fundamentals of Human-Centered Robotics | Fundamentals of Human-Centered Robotics\nFundamentals of Human-Centered Robotics (Übung, 2 SWS)\nHaddadin S [L], Chen L, Haddadin S, Swikir A\nFundamentals of Human-Centered Robotics (Praktikum, 2 SWS)\nHaddadin S [L], Chen L, Haddadin S, Swikir A"
  },
  {
    "module_id": "EI04016",
    "title": "Introduction to Machine Learning",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Students have to take a written exam of two hours duration. In the exam, the students will answer questions on machine learning theory and practice, solve problems on machine learning theory and algorithms. The exam test whether students understand and can apply standard algorithms for regression and classification. Lecture notes are permitted in the exam, but no computer will be needed or is allowed.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Analysis 1-3, Einführung in die Statistik oder Wahrscheinlichkeitsrechnung",
    "content": "he course provides an introduction to concepts, methods, best practices, and theoretical foundations of standard machine learning algorithms. Topics covered include regression, classification, model selection and validation, kernels, nearest neighbor algorithms, clustering, decision trees, ensemble learning, empirical risk minimization and regularization.",
    "learning_outcomes": "Upon successful completion of the module students know the standard machine learning algorithms, how and when to apply those algorithms, their comparative strengths and weaknesses, and how to critically evaluate their performance. Students are able to (i) apply basic machine learning methods to build predictive models or perform exploratory analysis, (ii) properly tune, select and validate machine learning models, (iii) interpret their results, and (iv) understand their limits. EI04016: Introduction to Machine Learning | Introduction to Machine Learning",
    "teaching_methods": "The foundations of machine learning and basic machine learning algorithms are introduced and explained during lectures, mostly on the board, but also by showing coding examples and running the algorithms on simple example data during the lectures. In each lecture, there will be brief (1-5 minute) exercised, typically posed as a question that the students will discuss in groups of two or three. Exercises with both theory and coding problems are handed out every second week, and whenever a new exercise is handed out, solutions for the previous one are distributed. The exercises allow the students to gain a deeper understanding of the methods by mathematically deriving properties about them, and by applying them on real data. The discussion session has an interactive format in that it is a forum for asking specific questions about the exercises and the methods introduced in the lectures, and discussing certain problems or parts of the lecture in more detail on the board, but only on request by the students during the discussion session.",
    "media": "The material is presented on the boad, sometimes code and algorithms are shown with a projector.\nLecture notes and exercises are distributed.",
    "literature": "We do not follows a textbook, lecture notes will be distributed. Helpful references include:\n``Elements of Statistical Learning'' by Hastie, Tibshirani & Friedman; ``Machine Learning'' by\nTom Mitchell ; ``Foundation of Machine Learning'', by Mohri, Rostamizadeh, and Talwalkar;\n``Understanding Machine Learning: From Theory to Algorithms'' by Shalev-Shwartz and Ben-David",
    "lv_sws_lecturer": "Heckel, Reinhard; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI04017",
    "title": "Maschinelle Intelligenz und Gesellschaft (in Python)",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Beurteilung der Teilnahme der Studierenden an der Vorlesung ist in vier Komponenten aufgeteilt:\n- Der persönliche Fortschritt bei den theoretischen und praktischen Kenntnissen wird von jedem\nStudierenden individuell reflektiert und in seiner persönlichen Wiki-Seite (Lab Book) dokumentiert. Die Benotung erfolgt nach Regelmäßigkeit, Struktur und Relevanz der Aufzeichnungen.\n- Die Auswirkungen der maschinellen Intelligenz auf die Gesellschaft werden in Leseaufgaben\nbehandelt. Sie werden überprüft, indem kleine Aufsätze geschrieben werden, die die persönliche Meinung der Studierenden zum Thema widerspiegeln, gefolgt von einem anschließenden Peer- Review.\n- Praktische Kenntnisse über maschinelles Lernen und Programmieren werden durch kleine\nProgrammieraufgaben überprüft. Diese Aufgaben müssen in Python 3 erstellt werden.\n- Die Fähigkeit der Studierenden, die Konzepte des maschinellen Lernens in realen Anwendungen\nunter Berücksichtigung von Einschränkungen in realistischen Anwendungsfällen anzuwenden, wird anhand der Ergebnisse des Projekts und einer entsprechenden Präsentation dieser Ergebnisse beurteilt. Darüber hinaus wird durch den erfolgreichen Abschluss des Projekts auch die allgemeine Fähigkeit der Studierenden zu erfolgreichen Leistungen in einem Team einschließlich der Selbstorganisation beurteilt. Um das Modul zu bestehen, muss jeder der oben genannten Teile bestanden werden. Wenn jeder der oben genannten Teile bestanden wird, ist die Gesamtnote die gewichtete Summe der oben genannten Komponenten: EI04017: Maschinelle Intelligenz und Gesellschaft (in Python) | Machine Intelligenz and Society (in Python) [MIG]\n- Persönliches Laborbuch (individuell) 20 %\n- Programmierungszuweisungen (Gruppe) 20 %\n- Aufsätze (individuell) 30 %\n- Schlussbericht (Gruppe) 30 %",
    "repetition": "",
    "recommended_prerequisites": "Lineare Algebra, Matrixalgebra, Statistik, Wissenschaftsphilosophie",
    "content": "multivariate Datenanalyse – Methoden: Partial Least Squares (PLS) und Principal Component Analysis (PCA) und Werkzeuge: Datenvisualisierung, Validierung; Planung von Experimenten und Durchführung von Datenerhebungen und Datenanalysen; Künstliche Intelligenz, Maschinelles Lernen und Neuronale Netze; Einführung in die Programmierung mit Python; agile Softwareentwicklung im Team",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls haben Studierende ein grundlegendes Verständnis und erste Erfahrungen im Umgang mit Daten und deren Auswertung erworben; Sie sind in der Lage einfache Programme in Python zu entwickeln; Sie können Datenerhebungen planen und einfache Analysen durchführen; Sie können Chancen, Risiken und Grenzen der datenbasierten Technik und der künstlichen Intelligenz grundsätzlich einschätzen; sie kennen agiles Projektmanagement.",
    "teaching_methods": "Vorlesung zur Wissensvermittlung; Seminaristische Diskussion der aktuellen Themen der Veranstaltung zur Vertiefung und Aktivierung des Wissens; Bearbeitung einfacher Beispiele und Übungsaufgaben zur Datenanalyse; Teamorientiertes Software-Projekt zur Datenanalyse/Künstlichen Intelligenz zur eigenständigen Anwendung der erlernten Konzepte.",
    "media": "Studierende werden gezielt mit ausgewählten Handreichungen unterstützt in Form von Büchern,\nwissenschaftlichen Artikeln, Videos und Beispiel für Software; Vorlesungsfolien",
    "literature": "Applied Predictive Modeling, Max Kuhn, Kjell Johnson, Springer, 2013.\nMultivariate Analysis of Quality: An Introduction, H. Martens, M. Martens, Wiley, 2001.",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nEI04017: Maschinelle Intelligenz und Gesellschaft (in Python) | Machine Intelligenz and Society (in Python) [MIG]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI04019",
    "title": "Grundlagen der Wavelet- und Zeit-Frequenz Analyse",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung wird in Form einer schriftlichen Prüfung am Semesterende erbracht (90 min). In dieser Prüfung lösen die Studierenden Aufgaben, in denen sie die in Vorlesung und Übung erlernten Methoden und Fähigkeiten anwenden. Diese Aufgaben schließen kurze Rechnungen und Beweisskizzen mit ein. Es können bis zu 20% der Prüfung durch Ankreuzen von vorgegeben Mehrfachantworten abgenommen werden. Während der Prüfung sind keine Hilfsmittel zugelassen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Kenntnisse in linearer Algebra, Analysis und MATLAB.\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein: Analysis 1-3,\nLineare Algebra, Signaldarstellung",
    "content": "In der klassischen Fourier-Analyse werden Signale als Überlagerung trigonometrischer Funktionen dargestellt. Diese Methoden sind besonders vorteilhaft für die Beschreibung stationärer Eigenschaften von Signalen. Für veränderliche Signale sind hingegen Methoden der Wavelet- oder zeit-frequenz-Analyse meist deutlich besser geeignet. Diese Methoden stellen die Signale als Überlagerungen von Signalbausteinen dar, die im Zeit- und Frequenzbereich gut begrenzt sind und die mittels Skalierung, Verschiebung, und Modulation aus einer Grundfunktion gewonnen werden. Daher sind diese Methoden deutlich flexibler und lassen sich besser an spezielle Anwendungen anpassen. Andererseits ist die Konstruktion von „guten“ Grundfunktionen im Allgemeinen eine herausfordernde und nicht-triviale Aufgabe. Diese Vorlesung gibt eine theoretische Einführung in die Prinzipien und Methoden sowohl der kontinuierlichen als auch der diskreten Wavelet- und Zeit-Frequenzanalyse. Insbesondere werden EI04019: Grundlagen der Wavelet- und Zeit-Frequenz Analyse | Fundamentals of Wavelet and Time-Frequency Analysis die folgen Themen ausführlich besprochen: Haar-Systeme, Haar-Basen, Haar-Transformation; Multiskalenanalyse; Diskrete Wavelettransformation; Konstruktion von Wavelet Basen; Spline Basen; Zeit-Frequenzdarstellungen; short-time Fourier Transformation; Gabor Frames. Aus praktischer Sicht werden Anwendungen aus den Bereichen der Bildverarbeitung, Kanalschätzung, sowie Radar diskutiert und als Übungen in MATLAB realisiert.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls haben die Studierenden fundierte theoretische Kenntnisse in der Wavelet- und Zeit-Frequenz-Analyse. Sie kenne Vor- und Nachteile der unterschiedlichen Signaldarstellungen und Transformationen, wissen wie sie mit den erlernten Transformationen Signale analysieren und synthetisieren können. Die Studierenden beherrschen Methoden zur Konstruktionen geeigneter Wavelets und Gabor frames, kennen grundlegende Anwendungen, in denen die Transformationen eingesetzt werden und sie können einfache Anwendungen in MATLAB realisieren.",
    "teaching_methods": "Die wesentlichen theoretischen Inhalte werden durch eine Tafelpräsentation entwickelt. Durch Beamer-Präsentation werden verschiedene Beispiele veranschaulicht. In den Übungen werden durch das Lösen von Übungs- und Rechenaufgaben die theoretischen Inhalte wiederholt, gefestigt, und erweitert. Das Implementieren von einfachen Algorithmen und Methoden in MATLAB durch die Studenten dient der Veranschaulichung und Illustration des Erlernten.",
    "media": "Tafel- und Beamerpräsentation, Übungsblätter, MATLAB.",
    "literature": "S. Mallat, “A Wavelet Tour of Signal Processing\", 2nd. Ed., Academic Press, 1999.\nG. Strang, T. Nguyen, “Wavelets and Filter Banks\", Wellesley-Cambridge Press, 1997.\nD. F. Walnut, “An Introduction to Wavelet Analysis”, Springer 2002.",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagen der Wavelet- und Zeit- Frequenz Analyse (Übung, 2 SWS)\nPohl V\nGrundlagen der Wavelet- und Zeit- Frequenz Analyse (Vorlesung, 2 SWS)\nPohl V"
  },
  {
    "module_id": "EI04026",
    "title": "Measurement Laboratory at Home",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 45,
    "hours_presence": 45,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nEI04026: Measurement Laboratory at Home | Measurement Laboratory at Home [Messtechnik Praktikum im\nHeimstudium]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI04029",
    "title": "Praktikum Software Engineering",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulprüfung enthält die folgenden Bestandteile, welche zusammen die finale Note bilden:\n● Zweiwöchentliche Programmier Hausaufgaben (5 x 10%)\n● Schriftliche Abschlussprüfung (50%)\nDie zweiwöchentlichen Hausaufgaben überprüfen regelmäßig das Verständnis der Studenten von den vorgestellten Konzepten und deren Anwendung in praktischen Beispielen. In der schriftlichen Prüfung zeigen die Studenten ihr theoretischen Verständnis von modernen Software Engineering Techniken. Dies geschieht durch das Beantworten von Fragen, Code Reviews und Schreiben von Pseudo Code unter Zeitdruck und ohne Hilfsmittel. Das abgeprüfte Wissen umfasst ein grundlegendes Verständnis von Build Systemen, Unit Tests, Test Driven Development, Werkzeuge der Software Entwicklung und Techniken des Software Refactorings.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Programmierung",
    "content": "Die Software Engineering Fähigkeiten eines Ingenieurs werden mit wachsender Digitalisierung und Automatisierung immer wichtiger. Software Engineering bedeutet nicht nur durch die Implementierung alle Anforderungen zu erfüllen und korrekte Ergebnisse zu erzielen. Ein zweiter, sehr wichtiger Aspekt ist die Wartbarkeit der Software. Mehrere Entwickler müssen in der Lage sein, den Code über Monate, Jahre oder Jahrzehnte pflegen zu können. Durch die Lebensdauer und die Anzahl der mitwirkenden Entwickler entstehen neue Anforderungen und EI04029: Praktikum Software Engineering | Software Engineering Lab [SEL] Herausforderungen während des gesamten Entwicklungsprozesses. Die Software muss testbar, lesbar und erweiterbar sein. Konzepte wie Unit Testing, Code Reviews und Continuous Integration unterstützen hier den Entwicklungsprozess. Dieser Kurs vermittelt grundlegende Konzepte des Software Engineerings unabhängig von einer spezifischen Programmiersprache. Der Kurs basiert auf der Programmiersprache C++, um auf die erworbenen Kenntnisse des C-Praktikums zu Beginn des Bachelor EI aufzubauen. Der Kurs beinhaltet eine grundlegende Einführung in Compiler und Linker, das Build System, Unit Testing, Refactoring, Code Review und Werkzeuge der Software Entwicklung (VCS, CI, …). Jede Gruppe von Studierenden wendet das erworbene Wissen in praktischen Übungen und Hausaufgaben an. Insgesamt behandelt der Kurs die folgenden Themen:\n● Einführung zu Compiler und Linker\n● Buildsysteme\n● Konzepte des Unit Testing\n● Code Refactoring\n● Code Review\n● Werkzeuge (Versionsverwaltung, Continuous Integration, …)",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, die Struktur und die Organisation eines kollaborativen Software Projekts zu verstehen. Weiterhin ist der Studierende in der Lage die Konzepte des Unit Testing für die Validierung der eigenen Implementierungen auf jeder Ebene anzuwenden.",
    "teaching_methods": "In einem zweiwöchentlichen Rhythmus lernen die Studierenden neue Konzepte des Software Engineerings. In praktischen Übungen und Hausaufgaben wird das Erlernte angewendet um die erlernten Konzepte zu manifestieren. Alle Hausaufgaben verbessern/bearbeiten/erweitern eine gegebene Codebasis. Die Studenten lernen häufige Probleme in der Wartung von zuverlässiger und langlebiger Software zu lösen. Insgesamt umfasst das Lab wöchentlich eine 5-stündige Lab Session. Darin werden die neuen Konzepte eingeführt und die Studierendem von einem Betreuer bei der Einrichtung, der Implementierung und Lösung von Problemen unterstützt.",
    "media": "",
    "literature": "[1] Winters, Titus, Hyrum Wright, and Tom Manshreck. \"Software Engineering at Google: Lessons\nLearned from Programming over Time.\" (2020).",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nEI04029: Praktikum Software Engineering | Software Engineering Lab [SEL]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum Software Engineering (Praktikum, 5 SWS)\nSteinbach E, Hofbauer M"
  },
  {
    "module_id": "EI04034",
    "title": "Responsible Robotics 2: Prerequisites and Requirements for a Society of Long Life",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 45,
    "hours_presence": 105,
    "examination_achievements": "Die Kursnote wird zu 100 % durch eine 90-minütige schriftliche Abschlussprüfung ermittelt. Die Studierenden beantworten Fragen im Multiple-Choice-Verfahren unter Zeitdruck und ohne Hilfsmittel. Die Studierenden werden im theoretischen Wissen über den demografischen Wandel, die aktuellen gesellschaftlichen Herausforderungen, die spezifischen Probleme älterer Menschen und die wirtschaftlichen, sozialen und ethischen Aspekte des Einsatzes von KI und assistierender Robotertechnologie für ältere Menschen geprüft.",
    "repetition": "Folgesemester / Semesterende",
    "recommended_prerequisites": "Responsible Robotics 1 is recommended but not necessary.",
    "content": "Die Vorlesungsreihe richtet sich an Studierende im Bachelor-Studiengang, die sich erstmals (vertiefend) mit den umfassenden Fragestellungen einer alternden Gesellschaft, einer „Gesellschaft des Langen Lebens“ unter den verschiedensten Aspekten und Fragestellungen befassen. Die Vorlesungsreihe vermittelt zunächst Wissen und Hintergrundinformationen zu allen Themenbereichen, die mit einer Gesellschaft des Langen Lebens verbunden sind. Die Vorlesungen sollen damit aber auch einen intensiven Dialog zwischen den Studierenden in Gang setzen und dabei die Erkenntnis reifen lassen, dass man mit einer Beschäftigung mit den Auswirkungen des demografischen Wandels an einer der zentralen Herausforderungen unserer Gesellschaft mitwirkt. Insbesondere die Ingenieurwissenschaften sind gefordert, lebensdienliche, unterstützende Technik zu entwickeln, um einer immer älter werdenden Gesellschaft vor allem Selbständigkeit a) zu ermöglichen und b) so lange wie möglich zu erhalten. Nur durch den Einsatz lebensdienlicher Technik wird es möglich sein, bei einem durch den demografischen Wandel schwindenden Unterstützungspotenzial (weniger professionell und ehrenamtlich Pflegende!) und gleichzeitig wachsendem Pflegebedarf (immer mehr Pflegebedürftige!) den jetzigen Qualitätsstand der Sorgearbeit zu halten. Der Beitrag der Ingenieurwissenschaften für diese existenzielle gesellschaftliche Aufgabe kann nicht hoch genug bewertet werden. Die Vorlesung wird in deutscher Sprache angeboten; mit englischen Ergänzungen und zweisprachigen Unterrichtsmaterialien. Die Exkursionen führen zu beispielgebenden Orten und Settings, in denen alte und hochbetagte Menschen leben und / oder gepflegt und begleitet werden, sowie zu Institutionen, die zu Fragen des Alter(n)s auf unterschiedlichstem Feld und zu den verschiedensten Problemstellungen forschen.",
    "learning_outcomes": "Nach Abschluss des Moduls sind die Studierenden in der Lage, folgendes zu verstehen, zu analysieren und bei eigenen Forschungsfragen anzuwenden:\n• der Prozess des demografischen Wandels und seine Bedeutung für das gesellschaftliche\nHandeln\n• die spezifischen Probleme älterer Menschen, die durch die Grundlagen der Gerontologie und\nGeriatrie vermittelt warden\n• die wirtschaftlichen, sozialen und ethischen Aspekte des Einsatzes von KI und assistiver\nRobotertechnologie für ältere Menschen Die Ingenieurstudenten werden am Ende des Moduls in der Lage sein, einen Perspektivwechsel gegenüber älteren Menschen einzunehmen und die technologische Entwicklung aus dieser Perspektive zu bewerten. Schließlich sind die Studierenden in der Lage, aktuelle Forschungspublikationen zu diesen Themen zu verstehen, kritisch zu analysieren und umzusetzen und KI und assistive Robotertechnologie als Beitrag zur Bewältigung der Herausforderungen des demografischen Wandels zu verstehen.",
    "teaching_methods": "Der Stoff wird im Wesentlichen durch die Vorlesungen vermittelt - mit eingebundenen Diskussionen und aktiven Reflexionen. Die Studierenden sollen dabei eigene Positionen benennen und ihre bisherige Vorstellungen auf der Folie neuer Erkenntnisse abgleichen. Darüber hinaus werden an zwei Exkursionstagen die zentralen Fragestellungen des Moduls durch die Demonstration bereits im Einsatz befindlicher Technologien praxisnah vertieft.",
    "media": "PowerPoint, whiteboard, flipchart, films",
    "literature": "Kirsten Aner / Ute Karl: Handbuch Soziale Arbeit und Alter. Springer Verlag, Berlin Heidelberg\n22020.\nKarsten Hank u.a. (Hrsg.): Alternsforschung. Handbuch für Wissenschaft und Praxis. Baden-\nBaden 22019.\nHans-Werner Wahl / Vera Heyl: Gerontologie – Einführung und Geschichte. Kohlhammer Verlag\nStuttgart 2015.\nSami Haddadin u.a.: Geriatronik – Assistenzroboter für ein selbstbestimmtes Leben im Alter? In:\nRoboter als (Er-)Lösung? Orientierung der Pflege von morgen am christlichen Menschenbild. Hrsg.\nStephan Mokry / Maximilian Th. L. Rückert. Hans-Seidel-Stiftung München 2020.\nSami Haddadin: Was Robotik in der Pflege leisten kann. https://www.bmbf.de/de/was-robotik-in-\nder-pflege-leisten-kann-9638.html [Zugriff: 17.6.2021].\nÄltere Menschen und Digitalisierung. Der Achte Altersbericht der Bundesregierung. Berlin 2020.\nhttps://www.achter-altersbericht.de/bericht\nhttps://www.achter-altersbericht.de/fileadmin/altersbericht/pdf/aktive_PDF_Altersbericht_DT-\nDrucksache.pdf\n[Zugriff: 17.6.2021]\nAndreas Kruse: Lebensphase hohes Alter. Springer Verlag, Berlin Heidelberg 2017.\nThomas Klie / Stefan Arend: Arbeitsplatz Langzeitpflege. Heidelberg 2018.\nStefan Arend / Thomas Klie: Wer pflegt Deutschland? Hannover 2017.\nHartmut Remmers: Pflege und Technik. Stand der Diskussion und zentrale ethische Fragen. Ethik\nMed 31, 407–430 (2019). https://doi.org/10.1007/s00481-019-00545-2 [Zugriff: 17.6.2021].",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI0463",
    "title": "Praktikum VHDL",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Im Rahmen einer 60 minütigen schriftlichen Klausur weisen die Studierenden anhand von Fragen zu VHDL Modellierungskonzepten und Sprachkonstrukten sowie einer konkreten Modellierungsaufgabe nach, dass sie in der Lage sind, synthetisierbare HW Modelle in VHDL zu entwerfen. Die Fähigkeit zur Anwendung der vermittelten Kenntnisse zur individuellen Problemlösung wird anhand von Deliverables aus den Praktikumsversuchen geprüft. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 60 % Note der Abschlussklausur\n- 40 % Note auf Deliverables",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Schaltnetze und Schaltwerke\nFolgendes Modul sollte vor der Teilnahme bereits erfolgreich absolviert sein:\n- Digitaltechnik",
    "content": "Gegenstand dieses Praktikums ist der Entwurf von digitalen integrierten Schaltungen mit der Hardware-Beschreibungssprache VHDL. Das Praktikum beinhaltet sowohl die Modellierung und die Simulation von digitalen Schaltungen als auch deren Synthese in Gatter-Netzlisten. Folgende Hauptaspekte sollen vermittelt werden: Aufbau von VHDL Modellen (Entity, Architecture, Package); Nebenläufigkeit von Hardware und deren Erfassung in VHDL; Strukturale und Verhaltensmodellierung; Prozesse als Schnittstelle zwischen nebenläufiger und sequentieller EI0463: Praktikum VHDL | VHDL Laboratory Course Modellierung; Modellierung des Zeitverhaltens in VHDL (Event Queue, Delta-Zyklen); Synchrones Design; Synthetisierbarkeit von Modellen",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls kennen die Studierenden die Grundkonzepte der Hardware-Modellierung mit Hilfe einer Hardware-Beschreibungssprache (hier VHDL). Sie sind in der Lage, entsprechende Modelle zu erstellen, zu simulieren und in Gatter-Netzlisten zu synthetisieren. Zudem können sie für diese Netzlisten auch die statische Timing Analyse durchzuführen und sie simulieren. Insgesamt haben damit die Teilnehmer die Grundfertigkeiten zur Erstellung synthetisierbarer HW Modelle erworben.",
    "teaching_methods": "Als Lehrmethode werden zu Beginn der Veranstaltung die theoretischen Grundlagen in mehreren doppelstündigen Einführungsvorlesungen dargestellt. Die Praktikumsaufgaben werden von den einzelnen Teilnehmern selbständig bei freier Zeiteinteilung anhand der Aufgabenbeschreibung gelöst. Begleitend hierzu werden Tutorstunden angeboten, in denen den Teilnehmern Hilfestellung von einem erfahrenen Tutor angeboten wird.",
    "media": "Folgende Medienformen finden Verwendung und sind auch online verfügbar:\n- Präsentationen\n- Praktikumsanleitung mit Beschreibung der zu modellierenden Funktionalitäten\n- VHDL Spracheinführung (optionale Ergänzung zu dem Präsentationsfolien)",
    "literature": "Folgende Literatur wird (als optionale Ergänzung) empfohlen:\n- Z. Navabi; \"VHDL - Analysis and Modeling of Digital Systems\", McGraw-Hill\n- P. Ashenden, \"The designer´s Guide to VHDL\", Morgan Kaufmann\n- J. Reichardt, B. Schwarz \"VHDL-Synthese\", Oldenbourg",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum VHDL (Praktikum, 4 SWS)\nHerkersdorf A, Twardzik T, Maurer F, Wild T, Stechele W"
  },
  {
    "module_id": "EI0481",
    "title": "Methoden der Unternehmensführung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen: - Abschlussklausur, 40 min",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine Voraussetzungen\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n-\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n-",
    "content": "Marktentwicklung in der Elektroindustrie, Globalisierung, Firmenorganisation, Wissensmanagement, Personalführung, Innovationsmanagement, Technologieplanung, Technologietrends, Marketing und Wettbewerb, Betriebswirtschaftliche Unternehmensführung, Patentstrategie, Standardisierungsstrategien, Projektmanagement.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, grundlegende Methoden der Unternehmensführung zu verstehen und anzuwenden. Er kennt die Grundzüge des Innovationsmanagements, der Technologieplanung und der Patent- sowie Standardisierungsarbeit. EI0481: Methoden der Unternehmensführung | Methods for Business Management Darüber hinaus hat er betriebswirtschaftliche, marktwirtschaftliche und organisatorische Entscheidungsstrategien erlernt.",
    "teaching_methods": "Frontunterricht in Verbindung mit Fallbeispielen.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript",
    "literature": "Folgende Literatur wird empfohlen:\n- Bea/Haas: Strategisches Management; Lucius&Lucius, Stuttgart, 2001, ISBN 3-8252-1458-3\n- H. Hinterhuber: Strategische Unternehmensführung, Vol.1, Walter deGruyter, New York, 1996 ,\nISBN 3-11-015037-9.\n- H. Hinterhuber: Strategische Unternehmensführung, Vol.2, Walter deGruyter, New York, 1997,\nISBN 3-11-015278-9.\n- Manfred Burghardt: Einführung in das Projektmanagement, Publicis MCD Verlag, Erlangen 2001,\nISBN 3-89578-163-0\n- Dirk Börnecke (Hrsg): Basiswissen für Führungskräfte, Publicis MCD Verlag, Erlangen 2001,\nISBN 3-89578-180-0\n- Georg Berner: Management in 20XX, Publicis MCD Verlag, Erlangen 2004, ISBN 3-89578-241-6",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMethoden der Unternehmensführung (Vorlesung, 2 SWS)\nKnoll A [L], Lenz A, Lipka M"
  },
  {
    "module_id": "EI0508",
    "title": "Projektpraktikum Python",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsart ist den verschiedenen Lernergebnissen angepasst:\n- Die Fähigkeit zur individuellen Problemlösung wird im Rahmen von 4 problembezogenen\nHausaufgaben semesterbegleitend geprüft.\n- Die Fähigkeiten zur Teamarbeit und Teamorganisation sowie die problemlösende Anwendung\nder Programmierkonzepte werden durch die Abgabe einer Programmierprojektes nachgewiesen. Die Fähigkeiten der mündlichen Kommunikationsfähig wird dabei bei der Präsentation des Projektergebnisses mit erfast. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 50 % Programmierprojekt (inkl. Abschlusspräsentation)\n- 50 % Hausaufgaben (4 benotete abgegebene Hausaufgaben - je 12,5%)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Programmierkenntnisse in C, Grundlegende Begriffe der objektorientierten Programmierung,\nAlgorithmen und Datenstrukturen\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Computertechnik, Algorithmen und Datenstrukturen, Programmierpraktikum C, Grundkurs C++",
    "content": "Das Projektpraktikum Python bietet eine umfassende Einführung in die Programmierung mit Python und führt die Teilnehmer bis zur Durchführung eines eigenständigen Programmierprojekts. Neben grundlegenden Datentypen und -strukturen wirf die Python-Programmiersprache behandelt. Die Grundlagen werden seminaristisch diskutiert und anhand von Übungsaufgaben in Form von EI0508: Projektpraktikum Python | Project Course Python Programmieraufgaben vertieft. Die erworbenen Kenntnisse werden in Form einer eigenständig zu lösenden Programmieraufgabe angewendet.",
    "learning_outcomes": "Die Studierenden sind in der Lage mit Python als Programmierwerkzeug praktisch umzugehen, sowie die Einbindung von Object-Code bestehender Software-Systeme zu integrieren Die Studierenden sind in der Lage Python als objektorientiertes Programmierwerkzeug für die Problemlösung praktisch anzuwenden und die Einbindung aus Object-Code bestehender Software-Systeme zu analysieren.",
    "teaching_methods": "Vorlesungen bestehen aus Tafelvortrag und Diskussion zum Thema, Übungen bestehen aus gezielten Hilfestellungen zu Fragen der Programmierung und zu Fragen, die von den Studierenden gestellt werden sowie ergänzende studentische Präsentationen, Studierende sollen im Rahmen des Praktikums in kleinen Teams Programmieraufgaben bearbeiten und Programme und Daten abgeben, Ergebnisse werden im Rahmen des Praktikums mit den Studierenden besprochen",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen, Tafelarbeit, studentische Präsentationen\n- Teamorientierte Programmieraufgaben, Matlab-Demos",
    "literature": "Folgende Literatur wird empfohlen:\n- .\n- .",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Python (Praktikum, 4 SWS)\nDurkovic M"
  },
  {
    "module_id": "EI0531",
    "title": "Trend Seminar in Digital Technologies and Management",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The Trend Seminar consists of the two phases, Basic Seminar and Scenario Planning Seminar. In order to lessen the examination load at the end of the Seminar 50% of the weighted course work are already assigned and evaluated after the first phase. The other 50% are assigned and evaluated at the end of the module. The trend seminar grade consists of a written assignment, presentations and continuous assessment and comprises of both individual and team assessment. As the module grade results from various assignments, the weight of the several assignments will be announced in the first session of the module.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "This module will be complemented by module CDTM0120, therefore students are requested to\nregister for both modules at the same time.",
    "content": "Each semester students from diverse academic backgrounds collectively write a trend report on a certain topic in the field of emerging digital technologies. This trend report includes a status quo analysis, identification of trends, future developments as well as product or service ideas for the future. Each student is assigned to a team to work on a certain perspective of the trend report topic. The resulting interdisciplinary teams ensure a thorough analysis of the trend report topic. The Trend Seminar takes place in two phases: \" The Basic Seminar phase looks at the near future, summarizes the status quo and identifies upcoming trends. An interdisciplinary approach ensures that for example technological, economic, EI0531: Trend Seminar in Digital Technologies and Management | Trend Seminar in Digital Technologies and Management social, political, legal and environmental trends are taken into account. Each team has the task to research the topic from a different perspective and to summarize the findings in a report. \" In the Scenario Planning Seminar phase students build upon the trend analysis from the Basic Seminar phase and analyze the trend report topic with a perspective lying further in the future. They investigate possible developments in areas such as economy, technology, politics, law, environment or society in the future. Based on the results the teams develop innovative products or service ideas for which technical as well as business considerations are analyzed. The teams summarize their findings in a report.",
    "learning_outcomes": "At the end of the Trend Seminar students are capable of understanding the challenges of working together in interdisciplinary project teams. They are able to apply trend and futures research methodology in a project team. They are able to create and give presentations and gain experience in working on extensive real world problems. Specific learning outcomes for the Trend Seminar are as follows. Students are able to: \" distinguish between trend and futures research, as well as to apply portfolio related research methodologies \" analyze the status quo of a given topic and to apply the methods of an interdisciplinary trend analysis considering perspectives like economic, technological, social, environmental, political and legal frameworks under high time pressure \" apply the scenario planning methodology in real-world contexts in interdisciplinary project teams \" create possible future scenarios based on a driver analysis and understand the process of developing and describing an innovative product or service idea \" apply the basics of academic writing to document their work results in a comprehensive report in a short amount of time \" discuss topics in an interactive setup and elicit different opinions on the matter \" create and give trend and futures research result presentations \" accept and implement given feedback https://www.cdtm.de/collaborate/innovation-research/cooperate-trend-seminar/",
    "teaching_methods": "The Trend Seminar is designed as one comprehensive project with a predefined project plan aiming to create the Trend Report as final comprehensive result. This project is divided into two phases Basic Seminar Phase and Scenario Planning Seminar Phase. In each phase the class is split into interdisciplinary project teams. The teams work independently towards fixed milestones, gain methodology and topic related knowledge in lectures and workshops, are guided by regular coaching sessions, present their results internally and to external project partners as well as get feedback on their learning outcomes. Lectures: According to the current project phase lectures with external and internal lecturers from academia and industry teach the students the methodology necessary for working on the Trend Seminar project. EI0531: Trend Seminar in Digital Technologies and Management | Trend Seminar in Digital Technologies and Management Topic Workshops: Experts from different fields of industry and academia with diverse interests and views on the Trend Seminar topic are invited to illustrate different approaches and impart insights from their professional point of view. Coaching Sessions: Coaching Sessions are distributed along the whole Trend Seminar. In these Coaching Sessions the teams discuss their work with the course instructors and teaching assistants and get advice for possible areas of improvement. Scenario Workshop: In this workshop students apply the whole process of the scenario planning methodology in a condensed timeframe. Midterms: In this session students present their product or service ideas and have the opportunity to collect feedback from the class and the teaching assistants on the current status of their work. Feedback Sessions: Students get feedback on their performance. Their written reports as well as their presentations are discussed in terms of their learning outcomes.",
    "media": "PowerPoint, Reader, Flipchart, Films",
    "literature": "N/A",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTrend Seminar in Digital Technologies and Management (Seminar, 3 SWS)\nHofsommer P"
  },
  {
    "module_id": "EI05381",
    "title": "Projektpraktikum Multimedia",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "- Hauptprojekt (Konzeptvorstellung, Android Applikation und Abschlusspräsentation) (100%)\nDie Programmieraufgaben werden während den Praktikumsterminen bearbeitet und abgeschlossen. Die Konzepterstellung und -vorstellung dient dazu, das zu realisierende Projekt zu definieren und dessen Machbarkeit im Rahmen des Praktikums zu diskutieren. In der Abschlusspräsentation präsentieren die Studierenden das umgesetzte Projekt und diskutieren die Ergebnisse mit den Betreuern.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Medientechnik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Medientechnik",
    "content": "In diesem Projektpraktikum werden ausgewählte Grundlagen der Multimediatechnik am Beispiel aktueller Themen am Rechner praktisch umgesetzt. Besonderer Schwerpunkt liegt auf der Verknüpfung mehrerer Medien zu einer Gesamtmultimediaanwendung. Die konkrete Aufgabenstellung wechselt von Jahr zu Jahr. Beispiele für Themen der vergangenen Jahre sind Multimediale eLearning Einheiten, Car Infotainmentsysteme, 3D Computer Spiele, und Computer Haptik, Augmented Reality. EI05381: Projektpraktikum Multimedia | Multimedia Laboratory [PPMM]",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende in der Lage, verschiedene digitale Medienelemente zu akquirieren bzw. am Rechner zu synthetisieren, zu verarbeiten, zu verknüpfen und in einer Gesamtpräsentation zu arrangieren.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktische Ausführung im Labor eingesetzt. Als Lehrmethode werden wöchentliche Laborsitzungen mit intensiver Betreuung mit mehreren Frontaleinheiten zu Beginn der Veranstaltung kombiniert. Das Projektpraktikum Multimedia findet im WS20/21 hauptsächlich online statt. Bei Bedarf besteht unter Einschränkungen die Möglichkeit den Praktikumsraum zu nutzen.",
    "media": "- Präsentationen\n- Skript und Übersichtsartikel aus der Fachliteratur\n- Tutorials und Software-Dokumentationen",
    "literature": "Folgende Literatur wird empfohlen:\n- R. Steinmetz, Multimedia-Technology Springer-Verlag, 3. überarb. Auflage, 2000.",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Multimedia (Praktikum, 5 SWS)\nSteinbach E, Chaudhari R, Patsch C, Zakour M, Xu X"
  },
  {
    "module_id": "EI0543",
    "title": "Multimediatechnik für Lehramt",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 16,
    "hours_total": 480,
    "hours_self_study": 330,
    "hours_presence": 150,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen: - Abschlussklausur - Mündliche Prüfung und Präsentation Einzelprüfung Medientechnik: Wissensbasierte Lernergebnisse werden im Rahmen einer 90 minütigen schriftlichen Klausur überprüft. Einzelprüfung Mensch-Maschine-Kommunikation 1: Wissensbasierte Lernergebnisse werden im Rahmen einer 75 minütigen schriftlichen Klausur überprüft. Einzelprüfung Projektpraktikum Multimedia besteht aus drei Teilen: 1) Testaufgaben die als Studienleistung bestanden werden müssen 2) Konzepterstellung und -vorstellung 3) Abschlusspräsentation Die Modulnote setzt sich wie folgt zusammen: Jede Einzelprüfung wird mit dem Faktor 1/3 gewichtet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Höhere Mathematik, Lineare Algebra, Signalverarbeitung,\nGrundlagen der Systemtheorie, Grundlagen der Statistik, Boolsche Algebra, Finite Automaten",
    "content": "V. Medientechnik: Mediendifferenzierung, Zeitabhängigkeit von Medien, Bildentstehung, Kameramodelle und Kamerakoordinaten, Zusammenhang zwischen Welt- und Pixelkoordinaten, Kamerakalibrierung, Stereokamerasysteme, Bildwiedergabe, Bildsynthese, Rastern von Linien, Geometrische EI0543: Multimediatechnik für Lehramt | Multimedia Technology for lectureship Szenenmodellierung, Polygonnetze, Parametrische Kurven und Flächen, B-Splines, Rendering von Polygonnetzen, Rendering von parametrischen Oberflächen, lokale Beleuchtungsmodelle, Rendering-Pipeline, Bildbasierte Szenen-Modellierung, Information Retrieval, schnelle Textsuche und Bildersuche, analoges Video, Farbfernsehsignale, Farbfernsehnormen, digitales Video. P. Projektpraktikum Multimedia: In diesem Projektpraktikum werden ausgewählte Grundlagen der Multimediatechnik am Beispiel aktueller Themen am Rechner praktisch umgesetzt. Besonderer Schwerpunkt liegt auf der Verknüpfung mehrerer Medien zu einer Gesamtmultimediaanwendung. Die konkrete Aufgabenstelllung wechselt von Jahr zu Jahr. Beispiele für Themen der vergangenen Jahre sind Multimediale eLearning Einheiten, Car Infotainmentsysteme, 3D Computer Spiele, und Computer Haptik. V. Mensch-Maschine-Kommunikation 1: Informations- und Kommunikationssysteme, Peripheriegeräte zur Datenein-/Ausgabe, Sinnesorgane und -modalitäten zur Mensch-Maschine-Kommunikation, Dialogsysteme und Grundlagen der künstlichen Intelligenz, Spracherkennung mit Hidden-Markov-Modellen.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, grundlegende Eigenschaften digitaler Medien (reale und synthetische Bilder, Video) und die Verarbeitungskette von der Aufnahme bis zur Darstellung für ausgewählte Medientypen zu verstehen. Die Studierenden werden insbesondere in die Lage versetzt, die Mischung von realen und synthetischen Szenen im Studio zu verstehen. Der Studierende kennt die wichtigsten Peripheriegeräte für die Ein- und Ausgabe sowie deren grundsätzliche Funktionsweise. Er kann einfache intelligente User-Interfaces bzw. Dialogsysteme beurteilen und entwerfen und beherrscht die Grundlagen von Hidden-Markov-Modellen zur stochastischen Modellierung und Erkennung von gesprochener Sprache. Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage, verschiedene digitale Medienelemente zu akquirieren bzw. am Rechner zu synthetisieren, zu verarbeiten, zu verknüpfen und in einer Gesamtpräsentation zu arrangieren.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Im Projektpraktikum wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktische Ausführung im Labor eingesetzt. Als Lehrmethode werden wöchentliche Laborsitzungen mit intensiver Betreuung mit mehreren Frontaleinheiten zu Beginn der Veranstaltung kombiniert. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Im Projektpraktikum wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktische Ausführung im Labor eingesetzt. EI0543: Multimediatechnik für Lehramt | Multimedia Technology for lectureship Als Lehrmethode werden wöchentliche Laborsitzungen mit intensiver Betreuung mit mehreren Frontaleinheiten zu Beginn der Veranstaltung kombiniert.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet\n- Übersichtsartikel aus der Fachliteratur\n- Tutorials und Software-Dokumentationen\n- Software-Demonstrationen",
    "literature": "Folgende Literatur wird empfohlen:\n- R. Steinmetz, „Multimedia-Technology“ Springer-Verlag, 3. überarb. Auflage, 2000.\n- U. Schmidt, „Professionelle Videotechnik,“ Springer-Verlag, 2000. Foley et al, „Computer\nGraphics: Principles and Practice,“ Addison Wesley, zweite Auflage, 1995.\n- G. Geiser, Mensch-Maschine-Kommunikation, Oldenbourg, 1990\n- K.-F. Kraiss (Ed.), Advanced Man-Machine Interaction, Springer Verlag Berlin Heidelberg New\nYork, 2006\n- S. Russell, P. Norvig, Artificial Intelligence: A Modern Approach, Prentice Hall, 2002\n- L. Rabiner, B.H. Juang, Fundamentals of Speech Recognition, Prentice Hall, 1993",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nVorlesung und Übung Medientechnik (4 SWS)\nVorlesung und Übung Mensch-Maschine-Kommunikation 1 (5 SWS)\nProjektpraktikum Multimedia (4 SWS)\nEckehard Steinbach (Eckehard.Steinbach@tum.de)\nGerhard Rigoll (rigoll@tum.de)"
  },
  {
    "module_id": "EI0554",
    "title": "Blockpraktikum C++",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfungsleistung setzt sich aus an die Lernziele angepasste Teilleistungen zusammen:\n- Das Verständnis der in der Vorlesung und der praktischen Übung im ersten Teil vermittelten\nGrundlagen zur Programmiersprache C++ sowie zur objektorientierten Programmierung wird während der zweiten Hälfte des vierwöchigen Blocks in Form einer 60 minütigen schriftlichen Prüfung nachgewiesen. In dieser müssen allgemeine Fragen aus diesem Bereich beantwortet, kleinere Code-Schnipsel erarbeitet und Fehler in vorgegebenem Code gefunden und korrigiert werden.\n- Die Fähigkeit zur praktischen Umsetzung des Erlernten wird durch die erfolgreiche Bearbeitung\nder im Projekt im zweiten Teil der Veranstaltung gestellten Aufgabe nachgewiesen. In diesem Projekt entwickeln die Studierenden in Kleingruppen ein Programm unter Verwendung der Programmiersprache C++.\n- In einer Abschließenden Präsentation wird von den Studierenden die Qualität der praktischen\nArbeit nachgewiesen. Hierbei müssen die Studierenden auf ausgewählte Problemstellungen im Projekt (wie beispielsweise auf die Umsetzung der Objektorientierung) eingehen. Eine gezielte Befragung zur abgegebenen C++-Implementierung ergänzt diese Präsentation (Dauer ca. 30 Minuten). Die Endnote setzt sich zu 60% aus der schriftliche Klausur und zu 40% aus der Benotung von Präsentation und Beantwortung der mündlichen Fragen zusammen. Die praktische Arbeit muss als bestanden bewertet sein.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundpraktikum C, Algorithmen und Datenstrukturen oder vergleichbare Vorlesung\nEI0554: Blockpraktikum C++ | C++ lab course",
    "content": "Im Rahmen des Elektrotechnik-Studiums ist eine Ausbildung in einer führenden, in der Industrie weit verbreiteten Programmiersprache wie C++ unabdingbar. Dieses Blockpraktikum zum Thema C++ wird in den Semesterferien angeboten. Es gliedert sich in einen Grundlagen- und einen Projektteil. Im Grundlagenteil werden fundamentale Sprachkonzepte von C++, wie Objekte, Klassen und Templates, in Vorlesungen erklärt und anschließend anhand praktischer Beispiele umgesetzt und vertieft. Dieser Grundlagenteil soll 2 Wochen lang in Vollzeit bearbeitet werden. Es stehen dabei stets Tutoren für Fragen zur Verfügung. Im zweiten Teil sollen die Lehrinhalte vertieft werden, indem ein kleines Projekt aus dem Tätigkeitsfeld des Lehrstuhls umgesetzt werden muss. Hierfür haben die Studierenden 4 Wochen Zeit, und können sowohl zu Hause als auch in den Räumen der TUM arbeiten. Über eine Prüfung am Ende wird die Bewertung durchgeführt. Das Praktikum ist als Veranstaltung mit zwei SWS praxisorientierter Vorlesung und vier SWS Praktikum konzipiert.",
    "learning_outcomes": "Nach der Teilnahme an der Modulveranstaltung haben die Studierenden Grundlagen und erweiterte Kenntnisse in der Programmiersprache C++ erworben und sind in der Lage ihr wissen praktisch anzuwenden. Auch können die Studierenden Template Klassen und Funktionen entwickeln und die Standard Template Library (STL) im Rahmen von Programmieraufgaben mit C++ anwenden. Sie haben die Bedeutung guter Lesbaren und gut Dokumentation von Code verstanden und sind in der Lage solchen Code in C++ zu entwickeln. Zudem haben die Studierenden die Konzepte der objektorientierte Programmierung (OOP) verstanden und sind in der Lage, auf Basis dieser Konzepte eigene objektorientierte Programme - unter Verwendung von Klassen, Vererbung, Polymorphie, virtuelle Funktionen, etc. - in der Programmiersprache C++ zu entwickeln.",
    "teaching_methods": "Vorlesung mit anschließenden praktischen Übungen im Labor in der ersten Phase, Eigenstudium in der zweiten Phase",
    "media": "Skript, Moodle",
    "literature": "Programming - Principles and Practice Using C++, Addison-Wesley ISBN 978-0321543721.\nDecember 2008.\nThe C++ Programming Language\n(Third Edition and Special Edition)\nAddison-Wesley, ISBN 0-201-88954-4 and 0-201-70073-5.\nFundamental Algorithms\nThe Art of Computer Programming\nEI0554: Blockpraktikum C++ | C++ lab course\nAddison-Wesley, ISBN 0-201-89683-4",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBlockpraktikum C++ (Forschungspraktikum, 4 SWS)\nPehl M ( Hepp A )\nBlockpraktikum C++ (Vorlesung, 2 SWS)\nPehl M ( Hepp A )"
  },
  {
    "module_id": "EI05551",
    "title": "Internetkommunikation",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "In einer benoteten schriftlichen Klausur (75 min) werden Fragen zu Grundkonzepten und Protokollen etc. der Internetkommunikation gestellt, die Studierende ohne Hilfsmittel entweder in Textform, durch Rechnungen und/oder grafische Darstellung beantworten. Die Fähigkeit zum praktischen Entwurf von Kommunikationsprotokollen werden mittels Programmieraufgaben überprüft und benotet. Die Studierenden bearbeiten dabei eine konkrete Aufgabenstellung hinsichtlich einer Kommunikationsanwendung im Internet in Gruppenarbeit und demonstrieren und präsentieren ihre Ergebnisse. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen: eine Prüfung bestehend aus zwei Modulteilprüfungen\n- 60 % Abschlussklausur\n- 40 % benotete Programmieraufgaben",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlegende Programmierkenntnisse. In den Programmieraufgaben wird die\nProgrammiersprache Python verwendet.",
    "content": "Inhalt * Grundlegende Konzepte von Kommunikationsnetzen * Protokollschichten und Dienstmodelle * Grundlegende Analysemethoden für IP-basierte Kommunikationsnetze (analytische Leistungsbewertung, Simulation, Prototyping) EI05551: Internetkommunikation | Internet Communication [INT] * Anwendungsschicht im Internet (HTTP, FTP, P2P, Socket) * Transportschicht (TCP, UDP) * Netzschicht (Routing, IP) * Sicherungsschicht und Medienzugriffsverfahren (LAN, WLAN, MAC) * QoS-Mechanismen im Internet (IntServ, DiffServ)",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme an der Modulveranstaltung ist die Studierende/der Studierende in der Lage, Grundkonzepte der Internetkommunikation mit Protokollen zu verstehen und anzuwenden sowie Internetprotokolle und Mechanismen zu analysieren.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden/des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Zusätzlich erarbeiten die Studierenden selbsständig anhand wissenschaftlicher Fachartikel weitere Grundlagen und üben damit das Lesen und Verstehen wissenschaftlicher Literatur. Im Class Project erarbeiten die Studierenden eigenständig eine Lösung (Konzept und Programmierung) für eine technische Fragestellung. Die technische Fragestellung wird in der Vorlesung/Übung vorgestellt und varriiert jedes Semester.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download\n- ausgewählte wissenschaftliche Aufsätze\n- Programmieraufgaben",
    "literature": "Folgende Literatur wird empfohlen:\n- Kurose J. F., Ross W. K.: Computernetzwerke, Pearson Verlag",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEI05551: Internetkommunikation | Internet Communication [INT]"
  },
  {
    "module_id": "EI0572",
    "title": "Kommunikationstechnik für Lehramt",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Zweisemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 16,
    "hours_total": 480,
    "hours_self_study": 300,
    "hours_presence": 180,
    "examination_achievements": "Das Modul schließt mit einer 225-minütigen Klausur ab. Die Klausurdauer verteilt sich wie folgt auf die Modulteile: Broadband Communication Networks (BCN): 90 Minuten; Internetkommunikation (INT): 75 Minuten; Praktikum Kommunikationsnetze: 60 Minuten. Zusätzlich ist eine Übungsleistung vorgesehen. Klausur und Übungsleistung werden im Verhältnis 17:3 zueinander gewichtet. Im Rahmen der Vorlesung Internetkommunikation ist die zur freiwillige Teilnahme an einem ein Class Project möglich, das zur Notenverbesserung herangezogen werden kann.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Inhalte von Kommunikationsnetze sollten vertraut sein",
    "content": "V Broadband Communication Networks: Arten von Breitbandnetzen; Local Area Networks LAN: Netzstrukturen, dezentral gesteuerte Vielfach Zugriffsprotokolle (Ethernet, Token Passing), Hybridnetze (DQDB), Performance-Analyse, Standardisierung; ATM-Netze: Zellenvermittlung, Signalisierungsprotokolle, Verkehrsmodellierung, Statistisches Multiplexen, Traffic Engineering, Virtuelle Netze; Optische Netze: Komponenten, Vermittlungsverfahren, Netze mit Wellenlängenmultiplextechnik WDM). V. Internetkommunikation: Grundlegende Konzepte von Kommunikationsnetzen, Protokollschichten und Dienstmodelle, Grundlegende Analysemethoden für IP-basierte Kommunikationsnetze (analytische Leistungsbewertung, Simulation, Prototyping), Anwendungsschicht im Internet (HTTP, FTP, P2P, Socket), Transportschicht (TCP, UDP), EI0572: Kommunikationstechnik für Lehramt | Communications Technology for lectureship Netzschicht (Routing, IP), Sicherungsschicht und Medienzugriffsverfahren (LAN, WLAN, MAC), QoS-Mechanismen im Internet (IntServ, DiffServ), Mobilitätsmanagement im IP-basierten Netzen P Kommunikationsnetze: Von der Studierenden/dem Studierenden eigenständig unter Anleitung durchgeführte Versuch an praktischen Systemen der Kommunikationsnetze: Routingverfahren und Netzkopplungen im Internet, ARQ Fensterprotokolle (TCP), Voice over IP mit SIP, Wireless LAN, Mobilkommunikation mit GSM, Verkehrsmodellierung und -analyse, Werkzeuggestützter Protokollentwurf",
    "learning_outcomes": "Nach der Teilnahme an der Modulveranstaltung ist der Studierende in der Lage, Technologien und Architekturen von Kommunikationsnetzen sowie die Leistungsfähigkeit von Redundanzschaltungen bei Kommunikationsnetzen zu verstehen und dieses Wissen sowohl auf Lokale Netze wie auch auf Weitverkehrsnetze (ATM, Optische Netze) anzuwenden. Die Studierenden erhalten vertiefte Kenntnisse über die Architektur und die Protokolle des Internet, über grundlegende Konzepte zur Kopplung heterogener und mehrschichtiger Netze einschließlich der zugehörigen Beschreibungsmethoden. Nach der Teilnahme an den Modulveranstaltungen hat der Studierende grundlegende praktische Erfahrungen in der Nutzung und Bedienung von Messgeräten und Simulatoren auf ausgewählten Gebieten der Netze (vgl. Beschreibung der Themenblöcke) erworben.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Im Praktikum hat der Studierende die einzelnen Versuche gründlich in Heimarbeit vorzubereiten und dabei Vorbereitungsfragen zu beantworten. Im Praktikum steht an jedem Versuch ein Tutor unterstützend zur Seite.",
    "media": "Folgende Medienformen finden Verwendung: - Präsentationen - Skript - Übungsaufgaben mit\nLösungen als Download im Internet - Skript mit Versuchsanleitungen",
    "literature": "Folgende Literatur wird empfohlen:\n- Kurose J., Ross K., Computernetzwerke, Pearson Verlag, 2012 (5. Aufl.)\n- Halsall, F., Data Communication, Computer Networks and Open Systems, Addision-Wesley\n- Hammond, J. L., O´Reilly, P. J., Local Computer Networks, Addison-Wesley\n- Rathgeb E., Wallmeier E., ATM - Infrastruktur für die Hochleistungskommunikation, Springer\n- Ramaswami, R. Sivarajan, K., Optical Networks: A Practical Perspective, Morgan Kaufman\n- A, Badach, E. Hoffmann: Technik der IP-Netze. 2007.",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nEI0572: Kommunikationstechnik für Lehramt | Communications Technology for lectureship\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\n-Vorlesung und Übung Broadband Communication Networks (BCN, 4 SWS)\n-Vorlesung und Übung Internetkommunikation (INT, 4 SWS)\n-Praktikum Kommunikationsnetze (4 SWS)\nWolfgang Kellerer (Wolfgang.Kellerer@tum.de)"
  },
  {
    "module_id": "EI0602",
    "title": "Audiokommunikation",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Das Verständnis und die Fähigkeit zur individuellen Problemlösung werden in einer 60- minütigen schriftlichen Prüfung evaluiert, in der Rechenaufgaben zu Akustikgrundlagen, beispielsweise anhand von Schallwandlern, zu lösen sind und weiterführende Fragen zu Aspekten der Hörwahrnehmung beantwortet werden sollen. Studierende weisen so die Fähigkeit zu Berechnungen in der Akustik und das Verständnis der Hörwahrnehmung nach.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Mathematische Grundlagen (komplexe Rechnung), Grundlagen der Signaldarstellung\n(Fouriertransformation)",
    "content": "Komponenten der Audiokommunikation. Physik: Schallgrößen (Druck, Schnelle, Intensität, Impedanz), Schallfelder, Schallwandler (dynamische, elektrostatische Wandler, Kolbenmembran), Schallspeicher (Schallplatte, CD, MP3, SACD, DVD-Audio). Physiologie: peripheres Hörsystem, Otoakustische Emissionen (OAE), zentrales Hörsystem. Psychoakustik: Methoden, Hörfläche, Maskierung, Frequenzgruppen, Lautheit, Schärfe, Tonhöhe, Ausgeprägtheit der Tonhöhe, Unterschiedsschwellen, Schwankungsstärke, Rauigkeit, Binaurales Hören: binaurale Information, Richtungshören und binaurale Entmaskierung. Anwendungen: Auswahl aktueller Forschungsergebnisse aus Audiologie, Geräuschdesign, Raumakustik, Sprachgütebeurteilung, Tonstudiotechnik.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, die Theorie und Praxis von Schallwandlern und Schallspeichern zu verstehen und auf die Berechnung von EI0602: Audiokommunikation | Audio Communication Schallfeldern einfacher Schallstrahler anzuwenden. Die Studierenden haben ein grundlegendes Verständnis der Physiologie und Psychoakustik des Gehörs und sind in der Lage, dieses auf Fragestellungen in der Audiologie, Signalcodierung und Studiotechnik, sowie der gehörgerechten Beurteilung der akustischen Produktqualität anzuwenden.",
    "teaching_methods": "Die Studieninhalte werden primär in einer Vorlesung und einer Übung vermittelt. In der Übung werden Vorlesungsinhalte u.a. durch Rechenbeispiele vertieft und auf praktische Fragestellungen angewandt. Umfangreiche Hörbeispiele helfen dem Verständnis. Der Anwendungsbezug wird durch die Vorstellung von aktuellen Forschungsarbeiten der Arbeitgruppe vertieft. Die Studenten erhalten weiterhin Material zum Selbststudium in ausgewählten Themenbereichen.",
    "media": "Vorlesung mit akustischen Demonstrationen, (Tafel-)Anschrift, Umdrucke, Erläuterungen an\nFallbeispielen, multimediale Darbietung von weiterführender Information, Übung mit Fällen und\nLösungen, vertiefende Information online zum Selbststudium",
    "literature": "Fastl, H., Zwicker, E.: Psychoacoustics - Facts and Models, 3. Auflage, Springer, Heidelberg, 2007.\nTerhardt, E.: Akustische Kommunikation, Springer-Verlag, Berlin Heidelberg, 1998.\nYost, W.: Fundamentals of Hearing, An Introduction, 5. Auflage, Brill Academic Pub, 2013.",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAudiokommunikation (Vorlesung mit integrierten Übungen, 3 SWS)\nSeeber B, Kuntz M"
  },
  {
    "module_id": "EI0625",
    "title": "Kommunikationsnetze",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Im Rahmen einer 90 minütigen schriftlichen Klausur wird überprüft, inwieweit Studierende die Kommunikationsnetzen und deren Funktionsblöcken zugrundeliegenden Konzepte wiedergeben können. Dafür müssen Studierende Fragen beantworten und Analysemethoden zur Netzbewertung einsetzen und Optimierungsmöglichkeiten aufzeigen können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "keine Voraussetzungen.",
    "content": "* Übertragungsverfahren, Multiplextechniken, Durchschalte- und Paketvermittlung, Signalisierung, Adressierung, Nachrichtenaustausch * Leistungsbewertung, Einführung in die Verkehrstheorie (Berechnung von Verlust- und Wartesystemen) * Grundlegende Kommunikationsprotokolle (ARQ, Fensterprotokolle) * Netzstrukturen, Netzgraphen, Algorithmen, Routing * Einführung in die Netzplanung und Optimierung * Fehlertoleranz und Verfügbarkeit * Mobilitätsmanagement * Beispiele heutiger Netze (Internet, Telefonnetz, Mobilfunknetz), Dienste, Anwendungen, Architekturkonzepte",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls ist die Studierende/der Studierende in der Lage, grundlegende Konzepte von Kommunikationsnetzen und deren Funktionsblöcke zu verstehen, EI0625: Kommunikationsnetze | Communication Networks grundlegende graphen- und verkehrstheoretische Analysemethoden zur Netzbewertung, grundlegende Methoden des Protokollentwurfs, der Netzplanung und Optimierung sowie Routingverfahren anzuwenden.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden/des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Zusätzlich erarbeiten die Studierenden selbsständig anhand wissenschaftlicher Fachartikel weitere Grundlagen und üben damit das Lesen und Verstehen wissenschaftlicher Literatur.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet\n- ausgewählte wissenschaftliche Aufsätze",
    "literature": "Folgende Literatur wird empfohlen:\n- Tanenbaum A. S.: Computer Netzwerke, Wolframs Verlag\n- Killat U.: Entwurf und Analyse von Kommunikationssystemen, Vieweg+Teubner Verlag\n- Krüger G., Reschke D.: Telematik, Fachbuchverlag Leipzig",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nKommunikationsnetze (Vorlesung mit integrierten Übungen, 4 SWS)\nDiederich P [L], Kellerer W, Zerwas J"
  },
  {
    "module_id": "EI0631",
    "title": "Medientechnik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung ist schriftlich. Im Rahmen der 90 minütigen schriftlichen Klausur lösen die Studierenden ausgewählte Anwendungsprobleme unter Verwendung der eingeführten Methoden und Formeln. Sie beantworten weiterhin Verständnisfragen zu den behandelten Konzepten der Medientechnik und erklären in Worten die Funktionsprinzipien ausgewählter medientechnischer Verfahren. Als Hilfsmittel sind 4 Seiten handschriftliche Notizen sowie ein nichtprogrammierbarer Taschenrechner zugelassen. Matlab Aufgaben mit freiwilliger Bearbeitung werden während des Semesters angeboten und können genutzt werden um die Note des Moduls zu verbessern. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 100 % Abschlussklausur\nDie erfolgreiche Bearbeitung der Matlab Aufgaben führen zu einem Bonus von 0,3 falls die Abschlussklausur bestanden ist. Eine erfolgreiche Bearbeitung liegt vor, wenn im Mittel alle Aufgaben zu mindestens 65% korrekt implementiert werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Höhere Mathematik, Lineare Algebra, Signalverarbeitung\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Signale\n- Grundlagen der Signalverarbeitung\nEI0631: Medientechnik | Media Technology\n- Systeme",
    "content": "Grundlagen multimedialer Informationsverarbeitung, Bildentstehung, Kameramodelle und Kamerakoordinaten, Zusammenhang zwischen Welt- und Pixelkoordinaten, Kamerakalibrierung, Stereokamerasysteme, Bildwiedergabe, Bildsynthese, Rastern von Linien, Geometrische Szenenmodellierung, Polygonnetze, Parametrische Kurven und Flächen, B-Splines, Rendering von Polygonnetzen, Rendering von parametrischen Oberflächen, lokale Beleuchtungsmodelle, Rendering-Pipeline, Bildbasierte Szenen-Modellierung, Information Retrieval, schnelle Textsuche und Bildersuche, analoges Video, Farbfernsehsignale, Farbfernsehnormen, digitales Video.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage ausgewählte Ansätze und Methoden aus dem Bereich der Medientechnik zu analysieren und zu bewerten. Die Studierenden können die Grundprinzipien der schnellen Text- und Mediensuche charakterisieren und die Leistungsfähigkeit verschiedener Ansätze bewerten. Sie sind in der Lage, ein einfaches System für die Mediensuche zu entwickeln und zu beurteilen. Weiterhin sind die Studierenden in der Lage den Bildentstehungsprozess mathematisch zu beschreiben und die Abbildung von Weltkoordinaten in Pixelkoordinaten für reguläre Kamerasysteme und Stereokamerasysteme unter Verwendung von Kameramodellen zu berechnen. Die Teilnehmer können die verschiedenen Schritte zur Kalibrierung eines Kamerasystems durchführen und den Kalibrierungsfehler analysieren. Sie sind in der Lage Grundprinzipien der Bildsynthese (Rastern von geometrischen Primitiven, Geometrische Szenenmodellierung unter Verwendung von Polygonnetzen bzw. Parametrischen Oberflächen, Beleuchtungsrechnung, Schattierung von Oberflächen, Texture Mapping) darzustellen. Sie können die wichtigsten Schritte der Rendering-Pipeline skizzieren und für einfache Szenen mit Punktlichtquellen beurteilen. Darüber hinaus sind die Studierenden in der Lage die Eigenschaften und Unterschiede von analogen und digitalen Videosignalen zu erklären. Sie können den Einfluss von Phasenfehlern für die Farbfernsehsysteme NTSC, SECAM und PAL berechnen. Für digitale Videosequenzen können die Studierenden die Umrechnung zwischen verschiedenen Formaten durchführen.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Zusätzlich erarbeiten die Studierenden selbstständig anhand wissenschaftlicher Fachartikel weitere Grundlagen und üben damit das Lesen und Verstehen wissenschaftlicher Literatur. Weiterhin werden ausgewählte Konzepte mittels Matlab implementiert. EI0631: Medientechnik | Media Technology",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "Folgende Literatur wird empfohlen:\n- R. Steinmetz, Multimedia-Technology Springer-Verlag, 3. überarb. Auflage, 2000.\n- Foley et al, Computer Graphics: Principles and Practice, Addison Wesley, zweite Auflage, 1995.\n- Manning et al., Introduction to Information Retrieval, Cambridge University Press, 2008.\n- U. Schmidt, Professionelle Videotechnik, Springer-Verlag, 2000.",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMedientechnik (Vorlesung mit integrierten Übungen, 4 SWS)\nSteinbach E, Xu X"
  },
  {
    "module_id": "EI0635",
    "title": "Nachrichtentechnik 2",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Für eine erfolgreiche Teilnahme an dem Modul muss der Student eine schriftliche Abschlussprüfung (90 min) bestehen. Die Gesamtnote berechnet sich ausschließlich aus dem Prüfungsresultat in der Abschlussprüfung. Die Studierenden sollen in der Prüfung zeigen, dass sie gelernt haben digitale Übertragungssystemen bewerten und nachrichtentechnische Basiskomponenten zu entwickeln. Sie müssen Fragen mit selbst-formulierten Antworten beantworten und quantitative Berechnungen vornehmen. Als Hilfsmittel sind ausschließlich zwei Blätter DIN-A4 Papier (beidseitig beschrieben) mit handschriftlichen Notizen, sowie ein nicht programmierbarer Taschenrechner und eine mathematische Formelsammlung erlaubt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Mathematisches Verständnis, Signalbeschreibung im Zeit- und Frequenzbereich, Systemtheorie,\nGrundlagen der Wahrscheinlichkeitsrechnung und der Statistik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1-3\n- Mathematik 4\n- Signaldarstellung\n- Stochastische Signale\n- Systeme",
    "content": "* Die Struktur des optimalen Empfängers Signale und Vektorräume, Maximum a posteriori Entscheider, Theorem der Irrelevanz, Entscheidungsregionen und Fehlerwahrscheinlichkeit EI0635: Nachrichtentechnik 2 | Telecommunications 2 * Bandpass-Signale und -Systeme Tiefpass-Darstellung von Bandpass-Signalen und Bandpass-Systemen * Digitale Modulationsarten Verfahren, die kohärente Demodulation erfordern (OOK, BPSK, ASP, PSK, QAM, FSK, MSK), Nicht-kohärente Demodulationsverfahren (OOK, FSK, DPSK) * Entzerrung Optimaler Empfänger, Lineare Entzerrer (Zero-Forcing-Ansatz, Lineares Minimum Mean-Square- Error (LMMSE) Kriterium), Nichtlineare Entzerrer (Decision-Feedback-Entzerrer, Tomlinson- Harashima Precoding), Maximum-Likelihood Entzerrung * Multiplexverfahren Frequenz Multiplex (FDM), Orthogonales Frequenzmultiplex (OFDM) * Informationstheoretische Grundbegriffe Elemente der Quellencodierung und der Kanalcodierung, Shannon-Grenze für AWGN und BSC",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen ist der Studierende in der Lage digitale Übertragungssystemen zu bewerten und nachrichtentechnische Basiskomponenten zu entwickeln.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Ausgewählte Probleme werden in der Übung durch Programmieraufgaben weiter vertieft behandelt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet\n- Programmieraufgaben und Beispielprogramme",
    "literature": "Ein begleitendes Skript wird zur Verfügung gestellt.\nFolgende Literatur wird empfohlen:\n- Kammeyer, K.D.: Nachrichtenübertragung. 4. Auflage, 2004\n- Proakis, J. G.: Digital Communications. 3. Auflage, 2001 - Wozencraft, J.M., Jacobs,\nI.M.: Principles of Communication Engineering, 1990\nEI0635: Nachrichtentechnik 2 | Telecommunications 2",
    "lv_sws_lecturer": "Wachter-Zeh, Antonia; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNachrichtentechnik 2 (Vorlesung mit integrierten Übungen, 4 SWS)\nWachter-Zeh A, Deppe C, Plabst D, Ritterhoff S"
  },
  {
    "module_id": "EI06631",
    "title": "Praktikum Regelung und Automation",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Durch die Aufteilung in acht Experimente zu unterschiedlichen Themen des linearen Reglerentwurfs und der Prozesssteuerung werden acht Laborleistungen erbracht. In häuslicher Vorbereitung lernen die Studierenden sich den theoretischen Hintergrund von linearen Reglerentwurfsverfahren und der Prozesssteuerung eigenständig zu erarbeiten und zu verstehen. Das Erreichen dieses Ziels wird durch die Benotung der schriftlichen Hausaufgabe bewertet. Der Transfer der Methodenkenntnis auf verschiedene Regelungs- und Steuerungsprobleme wird während der Versuchsdurchführung vertieft. Die fachliche Kompetenz und die Eigeninitiative werden im Rahmen der Versuchsdurchführung bewertet. Zusätzlich wird eine abschließende schriftliche Prüfung (60 min) in die Bewertung miteinbezogen, um die Lernergebnisse und Kompetenzen, die während der Versuchsdurchführung erarbeitet wurden, zu überprüfen.",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen der Regelungstechnik\nFolgendes Modul sollte vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
    "content": "Das Praktikum umfasst Versuche zu folgenden Themenschwerpunkten: Rechnergestützter Reglerentwurf, Reglerentwurf im Zustandsraum, Beobachterentwurf, optimierungsbasierter EI06631: Praktikum Regelung und Automation | Laboratory on Automation and Control [P-RA] Reglerentwurf, mobile Roboter, Steuerung mit Petrinetzen, Steuerung mit SPS und Neuronale Netze",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage für unterschiedliche, praxisnahe steuerungs- und regelungstechnische Problemstellungen systematisch Lösungen zu erarbeiten, diese auf einem realen Versuchsaufbau umzusetzen und das Ergebnis kritisch zu bewerten.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren sowie durch kritisches Auseinandersetzen mit den Ergebnissen angestrebt. Als Lehrmethode werden folgende Elemente eingesetzt\n- selbstständige, gründliche Einarbeitung in die Thematik zu Hause\n- weitestgehende selbstständige Durchführung von Experimenten (falls notwendig Unterstützung\ndurch einen Betreuer)\n- Dokumentation und Diskussion und kritische Bewertung der Ergebnisse mit Unterstützung des\nBetreuers",
    "media": "Folgende Medienformen finden Verwendung:\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten. Diese können auch zur\nVorbereitung auf die Veranstaltung genutzt werden.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.\n- Zu dem Praktikum wird ein Skript zur Verfügung gestellt, welches eine Einführung in die\neinzelnen Versuche gibt.",
    "literature": "Skript \"Regelungssysteme 1\"\nDetallierte Praktikumsanleitung",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum Regelung und Automation (Praktikum, 4 SWS)\nBrüdigam J, Buss M, Chen Y, Daniels A, Evangelisti G, Hirche S, Kerz S, Leibold M, Renner-Smid\nB, Sosnowski S"
  },
  {
    "module_id": "EI06691",
    "title": "Schaltungssimulation",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfung ist schriftlich, die Prüfungsdauer beträgt 60 Minuten. Schriftliche Unterlagen sind erlaubt. Anhand beispielhafter Problemstellungen wird die Fähigkeit zum Aufstellen von Knotenspannungssystemen für die Arbeitspunktanalyse, für die AC-Analyse und für die Einschwinganalyse abgeprüft. Es werden weiterhin Basisaspekte der numerischen Lösungsverfahren für diese drei Simulationstypen abgeprüft.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Module, die in Schaltungstheorie und Signaldarstellung einführen, sollten vorab belegt worden\nsein.",
    "content": "Entwurfsablauf mikroelektronischer Systeme (Design Flow), Entwurfsraum (Y-Chart), Entwurfsstile; Simulation analoger Schaltungen; Systembeschreibung, erweitertes Knoten-Spannungssystem; Wechselstrom-(AC-)Analyse, parallele Simulation, schwach besetzte Matrizen; Gleichstrom- (DC-)Analyse, Newton-Raphson, linearisierte Schaltungsmodelle; Einschwinganalyse, numerische Integrationsverfahren, diskretisierte Schaltungsmodelle; Großsignalmodelle.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende mit der grundlegenden Funktionsweise von Algorithmen in der analogen Schaltungssimulation vertraut. Er versteht, wie ein Schaltungssimulator funktioniert und ist damit in der Lage, ihn kompetent und effizient einzusetzen. Gleichzeitig ist er über die Schaltungssimulation hinaus mit den grundlegenden Verfahren der Simulation kontinuierlicher Systeme vertraut. Im einzelnen versteht er folgende EI06691: Schaltungssimulation | Circuit Simulation Algorithms [SCS] Konzepte und kann sie anwenden: Aufstellen des Knotenspannungssystems für eine rechnergerechte Darstellung von Transistorschaltungen; Lösung linearer Gleichungssysteme für die AC-Analyse mittels Gauss-Verfahren; Arbeitspunktbestimmung mittels numerischer Nullstellensuche; Einschwinganalyse dynamischer Schaltungen mittels numerischer Integration.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch exemplarisches Erläutern in Übungen angestrebt. Als Lehrmethode wird in Vorlesung wie Übung Frontalunterricht gehalten. Die Übung besteht aus anwendungsnahen Aufgaben. Die Vorlesung umfasst viele Beispiele. Durch online verfügbares Unterstützungsmaterial können Studierende Anschauung wie Verständnis vertiefen.",
    "media": "Folgende Medienformen finden Verwendung:\n- Tafelanschrieb\n- Umfassende Formelsammlung\n- Übungskatalog mit Musterlösungen\n- Interaktive Aufgaben sowie anschauliche Beispiele und Demos online verfügbar",
    "literature": "Folgende Literatur wird empfohlen:\n- L. T. Pillage, R. A. Rohrer and C. Visweswariah: Electronic and System Simulation Methods.\nMcGraw-Hill, Inc., 1995\n- D. Johns, K. Martin, Analog Integrated Circuit Design, John Wiley & Sons, 1997",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSchaltungssimulation (Vorlesung mit integrierten Übungen, 3 SWS)\nGräb H"
  },
  {
    "module_id": "EI0679",
    "title": "Basic Laboratory Course on Telecommunications",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Studierenden bearbeiten vier Programmieraufgaben und Kurzberichte zu den Themen Quellencodierung, codierte Modulation, Pulsformung sowie Trägermodulation und Entzerrung. Durch die erfolgreiche Bearbeitung der Programmieraufgaben und Kurzberichte zeigen die Studierenden, dass sie Kommunikationssysteme mit Hilfe von Computersimulationen modellieren und analysieren können. Die Endnote ergibt sich aus den Ergebnissen der drei besten Abgaben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits absolviert worden sein:\n- Nachrichtentechnik\n- Stochastische Signale\n- Signaltheorie\nEs wird empfohlen begleitend an folgenden Modulen teilzunehmen:\n- Nachrichtentechnik 2",
    "content": "Die folgenden Komponenten eines Kommunikationssystems werden untersucht:\n- Quellenkodierung (Huffman)\n- Kanalkodierung (Wiederholungscode)\n- Digitale Modulationsverfahren (ASK, PSK, QAM, DPSK)\n- Digitale Signaldarstellung (Abtasttheorem)\n- Digitale Basisbandübertragung (Pulsformung, Signaldetektion)\n- Bandpasssignalübertragung\nEI0679: Basic Laboratory Course on Telecommunications | Basic Laboratory Course on Telecommunications [BLCT]\n- Entzerrung von Kanälen mit Intersymbolinterferenz (Zero Forcing Entzerrer, Wiener Filter)",
    "learning_outcomes": "Nach der Teilnahme an dieser Veranstaltung sind die Studierenden in der Lage, die theoretischen Grundlagen aus den Modulen „Nachrichtentechnik“ und „Nachrichtentechnik 2“ praktisch mittels Computersimulationen anzuwenden. So können sie Kommunikationssysteme hinsichtlich von Leistungsindikatoren charakterisieren und vergleichen.",
    "teaching_methods": "- Vorbesprechung des Themenbereichs\n- Bearbeitung der Programmieraufgaben in kleinen Gruppen von 2-3 Studierenden\n- Individuelle Betreuung durch Tutoren und Doktoranden\n- Selbstständiges Verfassen von Kurzberichten",
    "media": "- Skript\n- Beschreibung der Programmieraufgaben\n- Präsentationsfolien\n- Tafelanschrieb während der Vor- und Nachbesprechung\n- Moodle",
    "literature": "- Skript \"Basic Laboratory Course on Telecommunications\"\n- Skript „Nachrichtentechnik“\n- Skript „Nachrichtentechnik 2“\n- Kammeyer, K.D.: Nachrichtenübertragung. 3. Auflage, 2004",
    "lv_sws_lecturer": "Kramer, Gerhard\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBasic Laboratory Course on Telecommunications (Praktikum, 4 SWS)\nWiegart T [L], Kramer G, Plabst D, Wiegart T"
  },
  {
    "module_id": "EI0685",
    "title": "Einführung in die Roboterregelung",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote wird durch eine schriftliche Abschlussklausur (90 min) bestimmt. In der Klausur wird überprüft, ob die Studierenden auch unter Zeitdruck in der Lage sind die gelernten und eingeübten Methoden der kinematischen und dynamischen Beschreibung, Bahnplanung und Regelung auf neue Probleme anzuwenden. Dies wird durch Aufgabenrechnen überprüft",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Kenntnisse der Regelungstechnik",
    "content": "- Roboterarme und fahrzeuge\n- Räumliche Objektrepräsentation und Transformationen\n- Programmiersprachliche Formulierung des Aktionsplanes\n- Kinematik-Modelle von Manipulatoren und Roboterfahrzeugen (direkte und inverse Kinematik,\ndifferentielle Kinematik, Jakobimatrix, Redundanz und Singularitäten, Prinzip der virtuellen Arbeit)\n- Kinematische Bahnplanung und -erzeugung\n- Dynamik-Modellierung (Euler-Lagrange Modell und rekursive Newton-Euler Formulierung, direkte\nund inverse Dynamik)\n- Manipulatorregelung (Positions-, Impedanz-, Kraft-, Hybridregelung, Arbeitsraumregelung vs.\nGelenkraumregelung, dezentrale vs. zentrale Regelung, Inverse-System-Technik)\n- Rechen- und Entwurfsübungen\nEI0685: Einführung in die Roboterregelung | Introduction to Robot Control [ERR]",
    "learning_outcomes": "Nach der Absolvierung des Moduls kennen und verstehen die Studierenden die grundlegenden Konzepte der Robotik und der Roboterregelung. Sie sind in der Lage diese Konzepte auf verschiedenste Arten von Problemstellungen aus der Robotik anzuwenden. Die Vorlesung liefert insbesondere das theoretische Fundament für zahlreiche Spezialvorlesungen und Praktika im Bereich Robotik. Zudem sind die Inhalte auch für die industrielle Anwendung relevant.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Zusätzlich zu den individuellen Methoden des Studierenden wie Vor-/Nachbereitung wird eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen erreicht.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen",
    "literature": "Von FSEI vertriebenes Skriptum zur Vorlesung",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Roboterregelung (Vorlesung mit integrierten Übungen, 4 SWS)\nBrüdigam J, Hoischen N, Sosnowski S"
  },
  {
    "module_id": "EI06871",
    "title": "Regelungssysteme 2",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In einer schriftlichen Prüfung von 90 Minuten Dauer wird geprüft, ob die Studierenden in der Lage sind, die erlernten Methoden für Mehrgrößenregelungssysteme und lineare Regelungstechnik in begrenzter Zeit auf ähnliche Fragestellungen in Form kurzer Rechen- und Implementierungaufgaben transferieren können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Regelungstechnik und erweiterte mathematische\nKenntnisse.",
    "content": "Analyse von Mehrgrößensystemen: Pole und Nullstellen, Steuerbarkeit und Beobachtbarkeit, Stabilität: MIMO-Nyquist-Kriterium, Gershgorin, quadratische Stabilität, Lyapunov-basierte Analysewerkzeuge, strukturelle Analyse, fundamentale Performanzschranken, Regelungsentwurf für Mehrgrößensysteme: Vorfilter-Entwurf, vollständige modale Synthese, Entkopplungsregelung, Loopshaping, H-unendlich-Regelung, LMI-basierte Entwurfsmethoden, rechnergestützter Regelungsentwurf. - Anwendungsbeispiele.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage Mehrgrößenregelungssysteme zu analysieren, zu entwickeln und zu implementieren. Sie sind danach mit erweiterten Konzepten der linearen Regelungstechnik vertraut und in der Lage, Regelungen selbst zu konzipieren und umzusetzen. Die dazu notwendigen methodischen Grundlagen werden in den Vorlesungen vermittelt und Studierende sind durch die begleitenden Übungen befähigt diese auf konkrete Problemstellungen anzuwenden. EI06871: Regelungssysteme 2 | Control Systems 2 [RS2]",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Programmierübungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen und Praktikum Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen\n- Programmierhausaufgaben mit Lösungen",
    "literature": "Skriptum\nLunze \"Regelungstechnik 2: Mehrgrößensysteme, Digitale Regelung (Springer-Lehrbuch)\"",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRegelungssysteme 2 (Vorlesung mit integrierten Übungen, 4 SWS)\nEvangelisti G, Hirche S, Lefringhausen R"
  },
  {
    "module_id": "EI0690",
    "title": "Entwurf digitaler Systeme mit VHDL und System C",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Abschlussklausur, 60 min (50%)\n- Benotete Hausaufgaben und Projekte (Unterschiedliche Module und Architekturelemente eines\nRISC-V-Prozessors) (50%) In der Abschlussklausur wird über alle Teilschritte des Entwurfs eines elektronischen Systems hinweg nachgewiesen, dass der Studierende in einer vorgegebenen Zeit ein Entwurfsproblem analysieren und entsprechende Lösungsschritte finden kann. Während des Semesters zeigt der Studierende anhand von vier wesentlichen Systemkomponenten, dass er/sie in der Lage ist, Entwurfsaufgaben als Projekt eigenständig zu bearbeiten.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Digitaltechnik und eine Programmiersprache (am besten C oder C++) sind absolut\nnotwendig",
    "content": "Hardware-Beschreibungssprachen VHDL und SystemC, Entwurfsmethodik mit VHDL und SystemC, VHDL-/SystemC-Modellierung, -Simulation und -Synthese, Methoden der Logik-, Register-Transfer- und High-Level-Synthese; praktische Übungen am Rechner zur Modellierung mit VHDL/SystemC und zur automatischen Schaltungssynthese, Übungen zu ausgewählten Synthesemethoden. EI0690: Entwurf digitaler Systeme mit VHDL und System C | Digital System Design with VHDL and System C",
    "learning_outcomes": "Die Studierenden sind nach der Teilnahme in der Lage, elektronische Systeme hierarchisch und ein Teilschritten zu modellieren, zu abstrahieren und zu entwerfen. Sie haben als Werkzeuge hierfür ein Entwurfssystem und die Modellierungssprachen VHDL (WS) und SystemC (SS) verwenden gelernt, die in weiten Teilen der Industrie eingesetzt werden.",
    "teaching_methods": "Als Lernmethode wird exemplarisches Lernen eingesetzt. Anhand eines Beispiels - eines MIPS2 Subsystems - werden die Anforderungen motiviert, dargestellt und danach verallgemeinert. Der Lerninhalt wird in Teamarbeit und unter Einbeziehung industrieller Arbeitstechniken vertieft.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen in Englisch als Handouts\n- Fallbeschreibungen\n- Musterlösungen",
    "literature": "Folgende weiterführende Literatur wird empfohlen:\n* Computer Organization And Design The Hardware/Software Interface;\nDavid A. Patterson, John L. Hennessy, Elsevier\n* John L. Hennessy, David A. Patterson: Computer Architecture - A\nQuantitative Approach, Elsevier / Morgan Kaufmanns Publishers.\n* Dominic Sweetman: See MIPS Run Linux, Elsevier / Morgan\nKaufmanns Publishers.\n* Peter Ashenden: The Designer s Guide to VHDL, Morgan Kaufmann\nSeries in Systems on Silicon)\n* Thinking in C++ 2nd Edition by Bruce Eckel\n* SystemC: From the Ground Up (the Kluwer International Series in Engineering & Computer\nScience) (Hardcover)\n* Transaction-Level Modeling with SystemC: TLM Concepts and Applications for Embedded\nSystems\nInternet Resources:\nhttp://en.wikipedia.org/wiki/MIPS architecture\nhttp://www.mips.com/products/processors/\nhttp://tams--www.informatik.uni--hamburg.de/vhdl/doc/cookbook/VHDL--Cookbook.pdf",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEntwurf digitaler Systeme mit VHDL und SystemC (Vorlesung mit integrierten Übungen, 4 SWS)\nEI0690: Entwurf digitaler Systeme mit VHDL und System C | Digital System Design with VHDL and System C\nEcker W\nEntwurf digitaler Systeme mit VHDL und SystemC (Vorlesung mit integrierten Übungen, 4 SWS)\nEcker W"
  },
  {
    "module_id": "EI0692",
    "title": "Mathematische Methoden der Signalverarbeitung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In einer Abschlussklausur (90 min) berechnen die Studierenden vorgegebene Signalverarbeitungsprobleme und wenden die in Vorlesung und Übung erworbenen Fähigkeiten der Funktionalanalysis darauf an. Es können bis zu 20% der Klausur durch Ankreuzen von vorgegeben Mehrfachantworten abgenommen werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Elemente der linearen Algebra, der Analysis, der Fourierreihen und der Fouriertransformation.\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Analysis 1\n- Analysis 2\n- Analysis 3\n- Lineare Algebra\n- Signaldarstellung\n- Stochastische Signale",
    "content": "Mathematische Methoden der Signalverarbeitung werden eingeführt und anhand praktischer Anwendungsbeispiele in Systemen der Informationstechnik und Kommunikationstechnik demonstriert. Elemente der Funktionalanalysis Orthogonale Reihenentwicklung EI0692: Mathematische Methoden der Signalverarbeitung | Mathematical Methods in Signal Processing Verallgemeinerte Basissysteme Lineare Funktionale und Operatoren Spektrale Zerlegungen und Matrixzerlegungen Inverse Probleme Approximationen von Signalen",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, die Bedeutung der Funktionalanalysis für moderne Signalverarbeitungskonzepte zu verstehen, sowie die vorgestellten mathematischen Konzepte und Verfahren zu beschreiben und anzuwenden.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden eine vertiefende Wissensbildung durch Besprechung und Lösung von Problemstellungen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Besprechung und Lösung von Problemstellungen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download",
    "literature": "Auf die Modulinhalte bezogene Literatur ist im Allgemeinen zu spezifisch und wird daher nicht\nempfohlen.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI06931",
    "title": "Praktikum Roboterregelung",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Durch die Aufteilung in sieben Versuche zu unterschiedlichen Themen der Robotermodellierung, Robotersteuerung und Roboterregelung werden sieben Laborleistungen erbracht. Vier der sieben Versuche werden als Programmierhausaufgabe gestellt, die entweder selbstständig zu Hause oder in einem betreuten Praktikum gelöst werden kann. Mit der Bewertung der Korrektheit und der Vollständigkeit der elektronisch eingereichten Hausaufgaben wird bewertet, ob die Studierenden in der Lage sind, die theoretisch bekannten Algorithmen auch in praktischen Problemstellungen in der Simulation einzusetzen. Drei der sieben Versuche finden im Roboterlabor statt: Fachkenntnis und Engagement während der Versuchsdurchführung werden bewertet, um zu überprüfen, wie gut die Studierenden in der Lage sind, mit Ergebnissen aus Simulationen auch eine reale Strecke in Betrieb zu nehmen. Eine jewels daran anschliessende mündliche Prüfung prüft die Tiefe des Verständnisses und die kritische Auseinandersetzung.",
    "repetition": "",
    "recommended_prerequisites": "Regelungssysteme 1, Einführung in die Roboterregelung",
    "content": "Das Modul wird als ergänzendes vertiefendes Modul begleitend zum Modul \"Einführung in die Roboterregelung\", in dem die Studierenden die theoretischen Grundlagen der Roboterregelung erlernen, angeboten. EI06931: Praktikum Roboterregelung | Robot Control Laboratory [P-ERR] Das Praktikum umfasst sieben Versuche zu folgenden Themenschwerpunkten: programmiertechnische Grundlagen für die Roboterprogrammierung, Kinematik und inverse Kinematik von Robotermanipulatoren, Dynamik von Robotermanipulatoren, Roboterregelung, praktische Evaluierung der Verfahren an einem dreigelenkigen SCARA-Roboter, Steuerung eines sechsgelenkigen Industrieroboters, Steuerung und Regelung eines humanoiden Roboters",
    "learning_outcomes": "Nach der Absolvierung des Moduls sind die Studierenden in der Lage die grundlegenden Algorithmen der Roboterregelung im Detail zu verstehen und auch in der Praxis auf neue Fragestellungen anzuwenden, Das gilt sowohl für Umsetzungen in der Simulation als auch am realen Roboter.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren sowie durch kritisches Auseinandersetzen mit den Ergebnissen angestrebt. Als Lehrmethode werden folgende Elemente eingesetzt - selbstständige, gründliche Einarbeitung in die Thematik zu Hause, - weitestgehende selbstständige Programmierung der Aufgaben (falls notwendig Unterstützung durch einen Betreuer in einer wöchentlich stattfindenden Programmierübung.)",
    "media": "Folgende Medienformen finden Verwendung:\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.",
    "literature": "Skriptum zur Vorlesung Einführung in die Roboterregelung",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum Roboterregelung (Praktikum, 3 SWS)\nBianchin F, Sosnowski S, Wang S"
  },
  {
    "module_id": "EI0697",
    "title": "Mobile Communications",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "For succesful participation in the lecture, the student has to pass a written exam (90 min). The overall grade will be solely based on the student's result in the written exam. Students will demonstrate that they have gained both fundamental and deeper understanding in various aspects of mobile communications. They have to answer the questions with self-formulated responses and do quantitative calculations. The allowed support material is constraint to a non-programmable calculator.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Signal description in time and frequency, System theory, Basic knowledge in theory of probability,\nBasic knowledge in digital communications engineering\nThe following modules should be passed before the participation:\n- Höhere Mathematik 1-3\n- Signale\n- Nachrichtentechnik 1 (Part of Systeme)\n- Nachrichtentechnik 2",
    "content": "Introduction to mobile communication systems; models for mobile radio channels: path loss models, slow fading (shadowing), fast fading channel, frequency and time selective channels, delay and Doppler spread, multipath propagation. Derivation of error probabilities due to fading and noise, equalization for mobile communication systems: maximum ratio combining, zero-forcing, MMSE equalizer, Viterbi algorithm; channel and noise estimation. The physical layer of the existing EI0697: Mobile Communications | Mobile Communications UMTS and its successor LTE, associated with an introduction of CDM(A), OFDM(A), MIMO and scheduling techniques. The modul is offered only in English.",
    "learning_outcomes": "After successful completion of the module the student knows about wave propagation in mobile communications and resultant effects. He further knows how to adapt transmitter and receiver to combat these effects. He finally gets an insight into the physical layer of the three mobile communications standards used in Europe: GSM, UMTS, and its successor LTE.",
    "teaching_methods": "Lerning method: In addition to the students' personal study, additional knowledge is acquired by lab exercises which are supported by tutor hours. Teaching method: During the lectures students are instructed in a teacher-centered style with demonstrations at the PC. The lecture is supported by lab exercises to gain hands-on experience with selected problems.",
    "media": "The following media will be used:\n- Presentations\n- Demonstrations at the PC\n- Script\n- Downloadable exercises with solutions\n- Matlab-programs to illustrate the content",
    "literature": "The following literature is recommended:\n- Molisch, A. F.: Wireless Communications. Wileys, 2005\n- Sklar, B.: Digital Communications. Prentice Hall, 2nd edition, 2001\n- Tse, D.; Viswanath, P.: Fundamentals of Wireless Communications. Cambridge 2006",
    "lv_sws_lecturer": "Kramer, Gerhard\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMobile Communications (Vorlesung mit integrierten Übungen, 4 SWS)\nKramer G ( Mahvari Habibabadi M ), Diedolo F ( Ibrahim A )"
  },
  {
    "module_id": "EI07041",
    "title": "Praktikum Industrie 4.0",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Studierenden weisen die Fähigkeit nach zur Implementation, Messung, Analyse und Bewertung von (a) Echtzeitanwendungen über Paketvermittlungsnetze, (b) Paketvermittlungsknoten in Hardware und Software, (c) Verzögerung bei Videoübertragung, (d) Vertraulichkeit und Datenschutz, (e) auditorischen Displays, und (f) FDM Verfahren und Unterdrückung von Störeinflüssen beim 3D-Druck im industriellen Umfeld. Die Laborleistung besteht aus Vorbereitung, Versuchsdurchführung und Datenauswertung mit schriftlicher Zusammenfassung. In die Laborleistung kann ein Anteil von bis zu 20 % über \"Multiple Choice\"-Fragen eingehen. Die Note ergibt sich aus dem Durchschnitt der Bewertung der Laborleistungen für die 6 Versuche.",
    "repetition": "",
    "recommended_prerequisites": "Empfohlen werden Kenntnisse der Vorlesungen Signaldarstellung, Messsystem- und\nSensortechnik, Regelungssysteme, und Kommunikationsnetze.",
    "content": "Schlüsselaspekte von Industrie 4.0: Virtualisierung, Echtzeitfähigkeit, Flexibilität und Modularität.\n- Theorie und Praxis von Echtzeitanwendungen über Paketvermittlungsnetze, Messen des\nEinflusses von Netzwerkeffekten auf latenzkritische Regelungsanwendungen.\n- Funktionsweise und Eigenschaften von Paketvermittlungsknoten in Hardware und Software.\nEI07041: Praktikum Industrie 4.0 | Industry 4.0 Laboratory [PI4.0]\n- Theorie zu Verzögerung bei Videoübertragung, Implementierung einer Latenzmessung.\n- Konzepte zu Vertraulichkeit und Datenschutz im Internet der Dinge, Anwendung eines\nkryptografischen Algorithmus in RFID-Verbindungen.\n- Verwendung und Auslegung von auditorischen Displays im industriellen Umfeld.\n- Datenverarbeitungskette, FDM-Verfahren und Unterdrückung von Störeinflüssen beim 3D-Druck.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, ein Rapid Prototyping Werkzeug basierend auf Simulink zu verwenden um Signale in Echtzeit aufzunehmen, zu verarbeiten und wiederzugeben. Ausserdem sind die Teilnehmer in der Lage die Einflüsse von Paketvermittlungsnetzen und –knoten auf Bandbreite und Latenz abzurufen und zu beschreiben. Des Weiteren können die Studierenden aussagekräftige Messreihen durchführen und analysieren. Weiterhin sind sie in der Lage, die Performanz- und Flexibilitätseigenschaften verschiedener Implementierungskonzepte von Paketvermittlungsknoten zu verstehen. Sie können die Latenzen in Videoübertragungen darstellen und Teile einer Videoverzögerungsmessung implementieren. Weiterhin kennen sie RFID-Systeme, verstehen sicherheitsrelevante Konzepte und können einen kryptografischen Algorithmus anwenden. Darüber hinaus können die Studierenden auditorische Displays und deren perzeptuelle Eigenschaften analysieren. Schließlich können sie die elementaren Schritte von 3D-Druck erklären und Störeinflüsse erkennen und klassifizieren.",
    "teaching_methods": "Eigenständige Vorbereitung mit Skript. Kurzpräsentation durch die Betreuer, eigenständige Bearbeitung der Praktikumsversuche mit Hilfe des Skripts und der empfohlenen Literatur in Studierendengruppen zu 2 Studierenden. Bei Problemen erfolgt Unterstützung durch den Betreuer.",
    "media": "Versuchsunterlagen/Skriptum zu jedem Versuch",
    "literature": "Entsprechende Literatur wird separat bei jedem Versuch angegeben und ist vorab am Lehrstuhl\nerhältlich",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nKlaus Diepold, Andreas Herkersdorf, Wolfgang Kellerer, Bernhard Seeber, Georg Sigl, Eckehard\nSteinbach"
  },
  {
    "module_id": "EI0705",
    "title": "Systeme der Signalverarbeitung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfung ist schriftlich (90 min, mit bis zu 20 % Multiple Choice Fragen). Mit maximal 5 DIN A4 Blätter als erlaubten Hilfsmitteln wenden die Studierenden die gelehrten Konzepte und Resultate an, um zeitkontinuierliche und zeitdiskrete Systeme zu analysieren, deren Zeitantworten und Übertragungsfunktionen zu bestimmen und deren Stabilität zu beurteilen. Sie können Realisierungen für diese Systeme entwickeln und diese mit Zustandsvariablen- Rückführung stabilisieren. Kriterien für den Entwurf von statistischen Schätzern zu formulieren und zu lösen. Sie beantworten Verständnisfragen, können selbständig Filter entwerfen und die Eigenschaften statistischer Schätzer beurteilen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra, Analysis, Signaldarstellung, elementare Stochastik.",
    "content": "Grundlagen der Synthese linearer zeitkontinuierlicher und zeitdiskreter Filter sowie des Entwurfs statischer Schätzer. Zeitkontinuierliche Systeme: Zustandsraum-Darstellung, Zeitantwort, Impulsantwort, Übertragungsfunktion, Realisierungsformen, Empfindlichkeit, Standardapproximationen, Frequenztransformationen. Zeitdiskrete Systeme: Zustandsraum-Darstellung, Zeitantwort, Impulsantwort, Übertragungsfunktion, FIR- und IIR-Systeme, Fensterung, linearphasige FIR-Filter, Remez- Algorithmus, minimalphasige FIR-Filter, IIR-Filterentwurf, Frequenztransformationen. Stabilität: externe Stabilität, Beobachtbarkeit, Steuerbarkeit, asymptotische Stabilität, Rundungsfehler, Feedback der Zustandsvariablen, asymptotische Beobachter. EI0705: Systeme der Signalverarbeitung | Signal Processing Statistische Signalverarbeitung: suffiziente Statistik, lineares Gaußmodell, Maximum-Likelihood (ML) Schätzung, Maximum-A-Posteriori (MAP) Schätzung, Least Squares (LS) Schätzung, lineare Schätzer, Best-Linear Unbiased Estimator (BLUE), linearer Minimum Mean Square Error (MMSE) Schätzer, Bias-Variance Trade-Off, Multiple-Input Multiple-Output (MIMO) Detektion, ML Detektion, Suboptimalität der symbolweisen Detektion, MMSE Metrik, Sphere Decoder.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, zeitkontinuierliche und zeitdiskrete Systeme zu analysieren, deren Zeitantworten und Übertragungsfunktionen zu bestimmen, deren Stabilitätseigenschaften zu beurteilen und Realisierungsformen anzugeben. Sie können zeitkontinuierliche und zeitdiskrete Filter für realistische Anforderungen entwerfen. Die Studierenden beherrschen die Stabilisierung instabiler Systeme mithilfe der Zustandsvariablen-Rückführung und können einen asymptotischen Beobachter entwerfen. Die Studierenden sind in der Lage, basierend auf dem Konzept der suffizienten Statistik und mithilfe des Maximum Likelihood oder des Maximum A-Posteriori Kriteriums praktische Schätzprobleme zu formulieren sowie zu lösen und können lineare Filter für Schätzaufgaben in linearen Systemen entwickeln. Sie können die Eigenschaften der resultierenden Schätzer beurteilen. Die Studierenden sind auch in der Lage, die obigen Konzepte auf das Problem der MIMO Detektion anzuwenden.",
    "teaching_methods": "Lernmethode: Neben den indiviuellen Methoden der Studenten wird fundiertes Wissen durch wiederholtes Aufgabenrechnen in Übungen angestrebt. Lehrmethode: In den Vorlesungen werden die Studenten dozenten-zentriert unterrichtet. Die Übungen werden studenten-zentriert gehalten.",
    "media": "Die folgende Medien werden verwendet:\n- Präsentationen (Tafel, Overhead-Folien, Beamer)\n- Skriptum\n- Übungsaufgaben mit Lösungen zum Download",
    "literature": "- T. Kailath: Linear Systems.\n- A. Papoulis: Probability, Random Variables, and Stochastic Processes.\n- H. Stark and J. Woods: Probability and Random Processes with Applications to Signal\nProcessing.\n- S.M. Kay: Fundamentals of Statistical Signal Processing, volume I, Estimation Theory, volume II,\nDetection Theory.\nEI0705: Systeme der Signalverarbeitung | Signal Processing",
    "lv_sws_lecturer": "Joham, Michael; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSysteme der Signalverarbeitung (Vorlesung mit integrierten Übungen, 4 SWS)\nJoham M, Baur M"
  },
  {
    "module_id": "EI0711",
    "title": "Ereignisdiskrete Systeme",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote wird zu 100% durch die mündliche Abschlussprüfung bestimmt. In der mündlichen Prüfung wird überprüft, ob die Studierenden in der Lage sind, die gelernten und eingeübten Methoden der Automatisierungstechnik verstanden haben und auf Problemstellungen anwenden können. Zusätzlich wird geprüft, ob ein vertieftes Verständnis der Methoden erlangt wurde.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Regelungstechnik",
    "content": "Modellierung automatisierter Prozesse; Automaten: Modellierung, Sprachen, Steuerungsentwurf; Petri-Netze: Modellierung, Erreichbarkeit, Steuerungsentwurf, Zeitbedingungen; Markov-Prozesse für Produktionsanlagen; Warteschlangentheorie: Geburts- und Sterbeprozesse, Markov-Ketten.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage die Methoden und Technologien für die Modellierung und Analyse ereignisdiskreter Systeme anzuwenden und zu verstehen. Durch anwendungsnahe Übungen, in denen Lösungen zu konkreten Problemen aufgezeigt werden, sind die Studierenden in der Lage die Methoden für automatisierungstechnische Systeme aus der Praxis anzuwenden.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt. EI0711: Ereignisdiskrete Systeme | Discrete Event Systems [EDS] Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Lehrbuch\n- Übungsaufgaben mit Lösungen",
    "literature": "Cassandras und Lafortune, \"Introduction to Discrete Event Systems\", Springer, 2nd edition, 2008.",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEreignisdiskrete Systeme (Vorlesung mit integrierten Übungen, 4 SWS)\nWollherr D"
  },
  {
    "module_id": "EI0910",
    "title": "Übertragungstechnik für Lehramt",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Zweisemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 16,
    "hours_total": 480,
    "hours_self_study": 345,
    "hours_presence": 135,
    "examination_achievements": "Die Prüfungsleistung wird in zwei Klausuren über die Vorlesungen \"Leitungsgebundene Übertragungstechnik\" und \"Optische Übertragungstechnik\" sowie der Teilnote des \"Hauptseminar Digitale Kommunikationssysteme\" erbracht. In den Klausuren werden in den Veranstaltungen des Moduls vermittelte fundierte Kenntnisse leitungsgebundener Übertragungssysteme sowie von Komponenten der optischen Übertragungstechnik abgefragt sowie die Fähigkeit geprüft, diese Übertragungstechnologien zu analysieren und zu bewerten. Die Prüfungsfragen gehen jeweils über den gesamten Vorlesungsstoff. Im Hauptseminar fasst jeder Student die Ergebnisse seiner Arbeit schriftlich zusammen und hält anschließend einen wissenschaftlichen Vortrag. Die Dauer des Vortrags ist 20 Minuten gefolgt von 5-10 Minuten für Fragen und Diskussionen. Hier wird die Fähigkeit des Studenten geprüft, ein Thema in einem bekannten Fachgebiet zu bearbeiten, die Ergebnisse schriftlich zusammenzufassen, einen allgemeinverständlichen vortrag zu halten sowie die Fragen der Zuhörerschaft kompetent zu beantworten. Die Bewertung des Hauptseminars erfolgt nach folgendem Schema: Ausarbeitung 40%, Vortrag 50%, Diskussion 10%. Zur Ermittlung der Gesamtnote wird jede der 3 Teilnoten (Leitungsgebundene Übertragungstechnik, Optische Übertragungstechnik, Hauptseminar digitale Kommunikationssysteme) mit 1/3 gewichtet. Zum Bestehen des Moduls muss nicht jede Einzelprüfung bestanden werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Höhere Mathematik, Signaldarstellung im Zeit- und Frequenzbereich, Statistische Methoden der\nNachrichtentechnik, Wellenausbreitung. Grundlagen der Halbleiterbauelemente, Grundlagen\nEI0910: Übertragungstechnik für Lehramt | Transmission Technology for lectureship\nder geometrischen und physikalischen Optik, Vorlesungen, die dieses Wissen vermitteln, sind\nz. B.:Höhere Mathematik, Nachrichtentechnik 1, Signaldarstellung, Wellenausbreitung und\nÜbertragungstechnik.",
    "content": "V. Leitungsgebundene Übertagungstechnik: Struktur des Kommunikationsnetzes. Sendesignalformen und Leistungsdichtespektren digitaler Übertragungssysteme: NRZ, RZ, AMI, Duobinär, HDB3, 4B3T, QAM, CAP. Übertragungsmedium Kupfer-Doppelader: Leitungsgleichungen, Dämpfungs- und Phasenfunktion, Reflexionen, Nebensprechen. Eigenschaften von Koaxialkabeln. Digitale Übertragung: Augenmuster, Intersymbol-Interferenz, Augenöffnung, Rauschen, Bitfehlerwahrscheinlichkeit. Lineare und nichtlineare Entzerrung, optimale Empfänger. Übertragungssysteme über Kupferkabel: analoge / digitale Sprachübertragung, ISDN, xDSL, Kabel-TV. Optische Signalübertragung: Laser, Standardfaser, Photodiode, optische Verstärker, Dispersionskompensation. Optisches Netz. V. Optische Übertragungstechnik: Grundlagen: Wellenoptik, Wellengleichung, ebene Welle, Gaußscher Strahl; geometrische Optik, Brechung, Reflexion; Quanteneigenschaften, Übertragung mit chaotischem und kohärentem Träger. Lichtwellenleiter: Materialdispersion, planarer Wellenleiter; einmodige und vielwellige Fasern; Phasenraumdiagramm; Dämpfung; Herstellung. Lichtquellen: Lumineszenzdioden, Laserdioden; dynmisches Verhalten, Abstrahlcharakteristik, Modulation. Optische Empfänger: pin-Photodiode, Lawinen-Photodiode; dynamisches Verhalten; Empfängerprinzipien; Rauschen des optischen Empfängers. Verbindungstechniken: Prinzipien; Kopplung im einwelligen und vielwelligen Fall. HS. Digirtale Kommunikationssysteme: Für das Seminar werden verschiedene Themen aus den Gebieten der Digitalen Kommunikationstechnik ausgewählt, die von den Studenten selbständig bearbeitet werden. Jeder Student fasst die Ergebnisse seiner Arbeit schriftlich zusammen und hält anschließend einen wissenschaftlichen Vortrag.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhalten die Studierenden vertiefte Kenntnis über den Aufbau aktueller Übertragungstechnologien über leitungegebundene Medien. Sie haben die Fähigkeit, physikalische und systemtheoretische Modelle zur Beschreibung von Sender, Übertragungskanal, Empfänger, Entzerrer und Detektor auf die betrachteten Systeme anzuwenden und zur Bewertung der Übertragungsqualität (Analyse entstehender Verzerrungen, Berechnung der Bitfehlerrate) zu nutzen. Durch die Teilnahme an den Modulveranstaltungen baut der Studierende darüber hinaus ein Verständnis der quantenoptischen Beschreibung des Lichts und des Quantenrauschens auf und erlernt die Unterschiede bei Übertragung mit chaotischem und kohärentem Träger. Der Studierendeist in der Lage die Wellenausbreitung im dielektrischen Wellenleiter, Dispersion und Dämpfung zu beschreiben. Der Studierende kann das Betriebsverhalten von Halbleiterlichtquellen (HL-Laser und LED), das Betriebsverhalten der optischen Empfänger (Photodiode und Lawinenphotodiode, Vorverstärker) sowie die Kopplung optischer Komponenten nachvollziehen. Der Studierende ist in der Lage, eine Aufgabenstellung aus einem aktuellen Themengebiet der Nachrichtentechnik selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche EI0910: Übertragungstechnik für Lehramt | Transmission Technology for lectureship Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Student die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "In den Vorlesungen des Moduls wird der Lernstoff mittels PowerPoint-Präsentation vermittelt. Details und Beispiele werden an der Tafel präsentiert. In den Übungen werden konkrete Aufgabe und Beispiele an der Tafel vorgerechnet. Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, wobei durch häufige Fragen des Dozenten an das Auditorium die Studierenden zur eigenständigen Mitarbeit ermuntert werden. Die Übungen werden weitgehend als Arbeitsunterricht (Aufgaben rechnen) gehalten. Im Hauptseminar werden die Studenten durch einen einführenden Vortrag an die Methoden zur Erarbeitung einer ansprechenden Präsentation herangeführt. Bei der Bearbeitung des von Ihnen gewählten Themas werden sie von einem Tutor (Assistent des Fachgebietes) betreut.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "Folgende Literatur wird empfohlen:\n- T. Starr, J. Cioffi, P. Silverman: xDSL: Eine Einführung, Addison-Wesley, 2000\n- G. P. Agrawal: Fiber Optic Communication Systems, Wiley-Interscience, 2002\n- J. Eberspächer, H.-J. Vögel, C. Bettstetter: GSM Global System for Mobile Communication.\nTeubnerVerlag, 2001\nH. Holma, A. Toskala (ed.): WCDMA for UMTS. John Wiley & Sons, 2007\nH. Holma, A. Toskala (ed.): HSDPA/HSUPA for UMTS. John Wiley & Sons, 2006\n- E. Biebl, Skriptum Optische Übertragungstechnik",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nVorlesung und Übung Leitungsgebundene Übertragungstechnik (3 SWS)\nVorlesung und Übung Optische Übertragungstechnik (3 SWS)\nHauptseminar Digitale Kommuniokationssysteme (3 SWS)\nNorbert Hanik (Norbert.Hanik@tum.de)\nErwin Biebl (biebl@tum.de)"
  },
  {
    "module_id": "EI10001",
    "title": "Principles of Information Engineering",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "The module examination is based on a written exam (75 minutes) which contains questions to asses the students' knowledge about the technical systems, e.g. information transmission systems, and their theoretical background, e.g. design priciples, short mathematical problems to assess the students' mastering of the practiced mathematical concepts, and conceptual questions (e.g., about design principles or fundamental limitations) to assess the further intended learning outcomes. Up to 20% of the examination can be conducted in the form of multiple choice questions.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "The following module should be successfully completed prior to participation: MA9711\nMathematics in Natural and Economic Science 1.\nThe following module is recommended to be attended in parallel (if not already attended earlier):\nMA9712 Statistics for BWL.",
    "content": "* Fundamentals:\n- Elements of Stochastic Modeling and Analysis\n- Signals (analog/digital, deterministic/stochastic, real/complex)\n- The Frequency Domain (Fourier transform, spectrum and bandwidth, sampling theorem)\n- Information Theory (fundamentals, source coding, channel coding, channel capacity)\n* Information Transmission and Storage Systems:\n- Elements of Data Transmission (transmission chain, filtering, modulation, detection)\n- Communication Systems (real systems compared to theory, channel models, performance\ncriteria, comparison to data storage, current trends) EI10001: Principles of Information Engineering | Principles of Information Engineering [PIE]\n- Communication Networks (network structures, interference, broadcast and multiple access,\nmultihop and relaying, abstraction layers, network planning) * Elements of Information Processing\n- Data Processing Devices (abstraction layers, real systems compared to theory, digital processing,\nalgorithms and complexity)\n- Data Acquisition and Analysis (sampling and quantization, information and noise modeling,\nfeature extraction, machine learning)\n- Security Aspects (reliability, security, secrecy, encryption)",
    "learning_outcomes": "After attending the module, the students:\n- can describe the main principles of operation of information transmission systems and networks\nas well as of data processing devices and methods\n- are familiar with fundamental design principles of such systems and understand why existing\nsystems are designed the way they are\n- have an overview of the underlying physical and mathematical principles and can distinguish\nfundamental limitations from technological constraints\n- have learned to take an engineering perspective on information transmission and processing\ntasks (e.g., by structuring a system into building blocks and abstraction layers)\n- know the main mathematical methods relevant for this field of engineering and are able to apply a\nselection of these methods to example problems",
    "teaching_methods": "The module is designed for non-engineering students (in particular students in Management and Technology) who aim at understanding the fundamental principles and concepts of modern information transmission and processing. It consists of lectures, tutorials, and self-study. In the lectures, both theoretical backgrounds and technical implementations are introduced and discussed. Mathematical concepts are introduced and explained as far as it is necessary for understanding the technical systems. The relevance of each of the considered topics is motivated by, e.g., press articles, teaser questions, or examples from daily life, and an additional reflexion at the end of each topic unit aims at conveying the engineering perspective on the considered problems and systems. New concepts are presented in a teacher-centered style and discussed in an interactive manner. The aim of the tutorials is to repeatedly practice the application of the mathematical concepts as well as the ability to answer conceptual questions about the subject. The tutorials are held in a student-centered way, and problem sheets are provided. Throughout the semester, short reading assignments may be given to the students, e.g., as an introduction to a new topic. In addition, the students are expected to recapitulate the lecture contents and to individually practice the exercises. EI10001: Principles of Information Engineering | Principles of Information Engineering [PIE]",
    "media": "- Slide Presentations\n- Blackboard (e.g., for mathematical details)\n- Supporting documents (e.g., news articles, scientific publications) as downloads (reading\nassignments)\n- Problem sheets as downloads",
    "literature": "Recommendations and downloads are provided during the course separately for each topic.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPrinciples of Information Engineering (Vorlesung mit integrierten Übungen, 3 SWS)\nGründinger A, Utschick W"
  },
  {
    "module_id": "EI10005",
    "title": "Computertechnik für Nicht-Ingenieure",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 45,
    "hours_presence": 105,
    "examination_achievements": "Die Prüfungsart ist den verschiedenen Lernergebnissen angepasst: Wissensbasierte Lernergebnisse werden im Rahmen einer 75 minütigen schriftlichen Klausur überprüft. Individuelle, tätigkeitsbasierte Kompetenzen werden entsprechend dem Praktikum im Rahmen einer 45 minütigen Programmierprüfung direkt am Rechner geprüft. Der Nachweis, tätigkeitsbasierte Kompetenzen unter Zuhilfenahme typischerweise zur Verfügung stehender Hilfsmittel anwenden zu können, wird mit schriftlichen Hausaufgaben erbracht. Die Endnote setzt sich wie folgt aus den Prüfungselementen zusammen: Klausur: 50% Programmierprüfung: 50% Werden in jeder zu bearbeitenden Hausaufgabe mindestens 80% der Maximalpunktzahl erreicht, verbessert sich die Modulnote um 0,3 (Notenbonus), bestenfalls auf 1,0.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine Voraussetzungen",
    "content": "Aufbau von Computersystemen, Mikro-Architektur, Befehlssatz-Architektur, Daten- und Befehlsformate, Programmierung auf Assembler- und Hochsprachen-Ebene, Interaktion von Computer-Programmen mit dem Betriebssystem, Aufgaben des Betriebssystems, Grundzüge der Kommunikation EI10005: Computertechnik für Nicht-Ingenieure | Computer Technology for Non-Engineers",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen können die Studierenden einfache Prinzipien von Computersystemen wiedergeben. Die Studierenden kennen einfache Datenformate sowie den prinzipiellen Aufbau von Befehlsformaten, verstehen Grundzüge des Aufbaus von Prozessoren und können einfache Teilkomponenten oder vergleichbare Schaltungen skizzieren. Die Studierenden können Computerprogramme auf Assembler- und Hochsprachen-Ebene verstehen und einfache Assembler- und Hochsprachenprogramme schreiben und dabei auch typischerweise zur Verfügung stehende Hilfsmittel einsetzen. Dabei verstehen die Studierenden einfache Grundzüge der Interaktion zwischen Anwender- Programmen und Betriebssystem, die grundlegenden Aufgaben des Betriebssystems und kennen einfache Methoden zur Datenübertragung.",
    "teaching_methods": "Lernmethoden: Selbstgesteuertes Lernen anhand von Vorlesungsunterlagen und Übungsaufgaben. Lehrmethoden: Frontalunterricht und Arbeitsunterricht (Aufgaben lösen)",
    "media": "Folgende Medienformen finden Verwendung: Skriptum/Übungskatalog, Präsentationen, Online-\nÜbungen",
    "literature": "- David Patterson, John Hennessy: Rechnerorganisation und Rechnerentwurf - Die Hardware/\nSoftware Schnittstelle, Oldenburg Verlag\n- Heidi Anlauff, Axel Böttcher, Martin Ruckert: \"Das MMIX-Buch\", Springer Verlag\n- Brian Kernighan, Dennis Ritchie: Programmieren in C",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nVorlesung und Übung\nComputersysteme: 2/1/0\nÜbung und Praktikum\nProgrammierpraktikum\n0/2/2\nMichael Zwick (zwick@tum.de)"
  },
  {
    "module_id": "EI10007",
    "title": "Principles of Information Engineering",
    "level": "",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The module examination is based on a written exam (75 minutes) which contains questions to asses the students' knowledge about the technical systems and their theoretical background, short mathematical problems to assess the students' mastering of the practiced mathematical concepts, and conceptual questions (e.g., about design principles or fundamental limitations) to assess the further intended learning outcomes. Up to 20% of the examination can be conducted in the form of multiple choice questions.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "The following module should be successfully completed prior to participation: MA9711\nMathematics in Natural and Economic Science 1.\nThe following module is recommended to be attended in parallel (if not already attended earlier):\nMA9712 Statistics for BWL.",
    "content": "* Fundamentals:\n- Elements of Stochastic Modeling and Analysis\n- Signals (analog/digital, deterministic/stochastic, real/complex)\n- The Frequency Domain (Fourier transform, spectrum and bandwidth, sampling theorem)\n- Information Theory (fundamentals, source coding, channel coding, channel capacity)\n* Information Transmission and Storage Systems:\n- Elements of Data Transmission (transmission chain, filtering, modulation, detection)\n- Communication Systems (real systems compared to theory, channel models, performance\ncriteria, comparison to data storage, current trends) EI10007: Principles of Information Engineering | Principles of Information Engineering\n- Communication Networks (network structures, interference, broadcast and multiple access,\nmultihop and relaying, abstraction layers, network planning) * Elements of Information Processing\n- Data Processing Devices (abstraction layers, real systems compared to theory, digital processing,\nalgorithms and complexity)\n- Data Acquisition (sampling and quantization, information and noise modeling)",
    "learning_outcomes": "After attending the module, the students:\n- can describe the main principles of operation of information transmission systems and networks\nas well as of data processing devices\n- are familiar with fundamental design principles of such systems and understand why existing\nsystems are designed the way they are\n- have an overview of the underlying physical and mathematical principles and can distinguish\nfundamental limitations from technological constraints\n- have learned to take an engineering perspective on information transmission and processing\ntasks (e.g., by structuring a system into building blocks and abstraction layers)\n- know the main mathematical methods relevant for this field of engineering and are able to apply a\nselection of these methods to example problems",
    "teaching_methods": "The module is designed for non-engineering students (in particular students in Management and Technology) who aim at understanding the fundamental principles and concepts of modern information transmission and processing. It consists of lectures, exercise courses, and self-study. In the lectures, both theoretical backgrounds and technical implementations are introduced and discussed. Mathematical concepts are introduced and explained as far as it is necessary for understanding the technical systems. The relevance of each of the considered topics is motivated by, e.g., press articles, teaser questions, or examples from daily life, and an additional reflexion at the end of each topic unit aims at conveying the engineering perspective on the considered problems and systems. New concepts are presented in a teacher-centered style and discussed in an interactive manner. The aim of the exercise courses is to repeatedly practice the application of the mathematical concepts as well as the ability to answer conceptual questions about the subject. The exercise courses are held in a student-centered way, and problem sheets are provided. Throughout the semester, short reading assignments may be given to the students, e.g., as an introduction to a new topic. In addition, the students are expected to recapitulate the lecture contents and to individually practice the exercises.",
    "media": "- Slide Presentations\n- Blackboard (e.g., for mathematical details)\nEI10007: Principles of Information Engineering | Principles of Information Engineering\n- Supporting documents (e.g., news articles, scientific publications) as downloads (reading\nassignments)\n- Problem sheets as downloads",
    "literature": "Since text books on the topics covered in the course are designed for a different target audience\n(engineering students), it is recommended to rely on the learning material provided during the\ncourse instead of on text books. However, students who are interested in more mathematical and\ntechnical details may refer to the corresponding sections in, e.g., the following text books.\n- Bruce Hajek, \"Random Processes for Engineers,\" Cambridge University Press, 2015.\n- John G. Proakis and Dimitris G. Manolakis: \"Digital Signal Processing. Principles, Algorithms, and\nApplications,\" Pearson Prentice Hall, 4th ed., 2007.\n- Thomas M. Cover and Joy A. Thomas, \"Elements of Information Theory,\" 2nd ed. Hoboken, NJ:\nWiley- Interscience, 2006.\n- Andrea Goldsmith, \"Wireless Communications,\" Cambridge University Press, 2005.\n- David A. Patterson and John L. Hennessy, \"Computer Organization and Design. The Hardware /\nSoftware Interface,\" Elsevier/Morgan Kaufman, 5th ed., 2014.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPrinciples of Information Engineering (Vorlesung mit integrierten Übungen, 3 SWS)\nGründinger A, Utschick W"
  },
  {
    "module_id": "EI10008",
    "title": "Machine Learning and Data Science",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "",
    "repetition": "Semesterende",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nEI10008: Machine Learning and Data Science | Machine Learning and Data Science\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMachine Learning and Data Science (Vorlesung mit integrierten Übungen, 3 SWS)\nUtschick W, Fesl B"
  },
  {
    "module_id": "EI10014",
    "title": "Grundlagen der Elektrotechnik I",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfung erfolgt als schriftliche Klausur, 75 Minuten. Dabei weisen die Studierenden durch die Beantwortung von Verständnisfragen und durch die Lösung von Rechenaufgaben nach, dass sie die Funktionsweise digitaler Schaltungen verstehen, Dimensionierungsregeln anwenden und technische und wirtschaftliche Implikationen bewerten können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Abiturwissen in Physik und Mathematik",
    "content": "Das Modul vermittelt ein grundlegendes Verständnis der Bedeutung digitaler Schaltungen, dem Moore'schen Gesetz und der Architektur von Mikroprozessoren. Folgende Themengruppen werden behandelt: * Rechnen im Binärsystem, Konversion von Zahlensystemen, Wertebereich, Festkomma, Fließkomma, * Boole'sche Algebra, kombinatorische und sequentielle Logik, arithmetische Operatoren, endliche Automaten, Daten- und Kontrollpfad, synchrone Schaltungen, Zeitanalyse, Pipelining und Parallelisierung, * MOSFET Transistoren, CMOS Logikschaltungen, Zeitverhalten, Verlustleistung, * RISC Prozessor Grundlagen, Rechenwerk, Speicherhierarchie, Datenpfadpipeline, Performanz, Datenabhängigkeiten, Branch Prediction, spekulative Ausführung. EI10014: Grundlagen der Elektrotechnik I | Principles in Electrical Technology I",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, eine optimierte Realisierung endlicher Automaten zu entwerfen, und technische wie wirtschaftliche Implikationen beim Entwurf digitaler Schaltungen zu bewerten. Ferner erwerben die Studierenden ein Grundverständnis der Funktionsweise von MOS-Transistoren, von CMOS Schaltungen und von Mikroprozessoren.",
    "teaching_methods": "Das Modul enthält eine Vorlesung und wöchentliche Zentralübung. In der Vorlesung werden über einen Vortrag des Dozenten theoretische Inhalte und einführende Beispiele vermittelt. Diese werden dann in den Zentralübungen exemplarisch anhand von konkreten Aufgabenstellungen eingeübt. Zusätzlich zur Zentralübung werden Tutorübungen in mehreren parallelen Gruppen angeboten. Die Gruppengröße ist dort markant geringer als in der Zentralübung. Die Tutoren sind ältere Studierende und damit den Erstsemestern möglichst nahe stehend, um den Stoff aus deren Sicht zu vertiefen. Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt.",
    "media": "Folgende Medienformen werden verwendet:\n* Beamer Präsentationen mit handschriftlichen Ergänzungen\n* Skriptum\n* Übungsaufgaben mit Lösungen als Download in Moodle",
    "literature": "Folgende Literatur wird empfohlen:\n- J. Rabaey: \"Digital Integrated Circuits\", Prentice Hall\n- J. Wakerly: \"Digital Design Principles and Practices\", Prentice Hall\n- H. Lipp, J. Becker: \"Grundlagen der Digitaltechnik\", Oldenbourg Verlag",
    "lv_sws_lecturer": "Stechele, Walter; Apl. Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagen der Elektrotechnik I (Vorlesung mit integrierten Übungen, 4 SWS)\nLenke O [L], Biersack F, Stechele W ( Wild T ), Wild T\nGrundlagen der Elektrotechnik I - Tutorübungen (Tutorium, ,1 SWS)"
  },
  {
    "module_id": "EI10015",
    "title": "Optimierungsverfahren in der Automatisierungstechnik",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Abschlussprüfung ist eine benotete schriftliche Prüfung von 90 Minuten Dauer und bestimmt zu 100% die Note des Moduls. Es wird geprüft, ob die Studierenden in der Lage sind, den in der Vorlesung gelernten und in den Übungen vertieften Stoff in begrenzter Zeit auf ähnliche Fragestellungen in Form kurzer Rechenaufgaben transferieren können. Dazu wird in einer 5-teiligen Programmierhausaufgaben mit Prüfungsgespräch geprüft, ob die Studierenden in der Lage sind, die in der Vorlesung präsentierten Algorithmen praktisch umzusetzen und für gegebene Anwendungsprobleme anzupassen. Diese Übungsleistung geht nicht in die Note ein, muss aber bestanden werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Regelungstechnik und erweiterte mathematische Kenntnisse.",
    "content": "Einführung - Statische Optimierung: Minimierung von Funktionen einer oder mehrerer Variablen mit und ohne Gleichungs- und/oder Ungleichungsnebenbedingungen; Gradienten- und gradientenfreie Verfahren; Methode der kleinsten Quadrate; Konvexe Optimierungsprobleme; Lineare Programmierung - Dynamische Optimierung: Variationsrechnung; Optimalsteuerung; Minimum-Prinzip; Dynamische Programmierung; Numerische Verfahren. - Optimale Regelung: LQ- Regelung, Modelprädiktive Reglung; Steuerungs-, Regelungs- und Filterentwurf EI10015: Optimierungsverfahren in der Automatisierungstechnik | Optimization for Control Engineering [OAT (LB)]",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage eine technische Fragestellungen der Optimierung zu analysieren und als mathematisches Optimierungsprobleme zu formulieren. Die Studierenden sind in der Lage ein passendes numerisches Verfahren zur Lösung auszuwählen und anzuwenden und nach Bewertung der Performanz gegebenenfalls weiterzuentwickeln. Als Grundlage für die numerische Anwendung verstehen die Studierenden die wichtigsten Ergebnisse der mathematischen Theorie und können die Theorie anwenden, um einfache Optimierungsprobleme auch analytisch zu lösen.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Zusätzliche Programmieraufgaben als Hausaufgabe erlauben Erfahrung in der praktischen Umsetzung und Anwendung zu sammeln.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen",
    "literature": "Skript zur Vorlesung\nM. Papageorgiou, M. Leibold, M. Buss, \"Optimierung\". Springer Vieweg, 3./4. Auflage 2012/2015.",
    "lv_sws_lecturer": "Martin Buss (mb@tum.de)\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI10016",
    "title": "Brain, Mind and Cognition für Nicht-Ingenieure",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "Abgabe von mindestens 3 (von maximal 5) schriftlich formulierten Hausarbeiten, in denen das Verständnis der Literatur nachgewiesen wird sowie aktive Teilnahme an den Diskussionen dazu - Notengewicht von 60% zur Gesamtnote Abgabe eines zusammenfassenden Essays zum Nachweis der Fähigkeit zur Bewertung der interdisziplinären Zusammenhänge - Notengewicht von 40% zur Gesamtnote",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Ausreichende Sprachkenntnisse in Englisch, um sprachlich anspruchsvolle Literatur lesen, sowie\nverständliche Essays zum Thema verfassen zu können.",
    "content": "Im Seminarteil lesen Studierende allgemeinverständliche Literatur (bis zu 5 Bücher) zum erweiterten Themenkreis Brain, Mind and Cognition und diskutieren in der Gruppe. Es soll dabei die Frage beantwortet werden in welcher Form wir etwas aus der Literatur lernen können über den Aufbau und die Funktion von Gehirn, Geist und Kognition. Welche Inspiration können wir daraus für die technische Arbeit gewinnen? Ergänzend zum Seminar gibt es eine Vorlesung, in der Hintergrundinformation zu den Themen Neuro- und Kognitionswissenschaften mit Blick auf kognitive Roboter vermittelt werden.",
    "learning_outcomes": "Am Ende des Moduls haben die Studierenden zum einen einen breiten und interdisziplinären Zugang und Einblick zum Thema \"Brain, Mind and Cognition\" gewonnen haben und können entsprechende Konzepte verstehen und bewerten. EI10016: Brain, Mind and Cognition für Nicht-Ingenieure | Brain, Mind and Cognition for Non-Engineers Studierende sind anhand der gelesenen Literatur in der Lage wissenschaftliche Fragestellungen zu identifizieren und zu formulieren. Zudem verbessern die Studierenden ihre schriftliche und mündliche Ausdrucksweise sowie die Fähigkeit zum wissenschaftlichen Dialog.",
    "teaching_methods": "Studierende lesen die vereinbarte Literatur innerhalb eines vorgegeben Zeitrahmens und schreiben im Anschluss einen Aufsatz über das persönliche Verständnis der Literatur. Die Aufsätze werden mittels Leitfragen angeleitet. Die gelesene Literatur wird in einer Kontaktstunde mit Blick auf eine übergeordnete Fragestellung untereinander diskutiert. Abschließend schreiben die Studierenden eine Zusammenfassung der Diskussionsergebnisse und der eigenen Einsichten. Ergänzende Hintergrundinformationen zu den Büchern wird in Form von Frontalunterricht (Vorlesung) präsentiert.",
    "media": "Bücher und Literatur (kann z.T. in elektronischer Form via Webseite zum download angeboten\nwerden);\nVorlesung mit Präsentationsfolien (Frontalunterricht)",
    "literature": "Die Literaturliste des Kurses wird zu jedem Semester aktualisiert und vorab via Webseite\nveröffentlicht.",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBrain, Mind and Cognition - Alternativ 2 (Seminar, 3 SWS)\nDiepold K, Dötzer M, Lengl M, Ripoll M"
  },
  {
    "module_id": "EI19000",
    "title": "Lernen von Daten und Lineare Algebra",
    "level": "",
    "language": "Bachelor",
    "semester_duration": "Deutsch/Englisch",
    "frequency": "Einsemestrig",
    "credits": null,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "Die Studierenden benötigen zu Anfang lediglich Mathematik-Kenntnisse auf Abitur-Niveau und\nkeine speziellen Programmierkenntnisse.\n• Studierende sollten über einen eigenen internetfähigen Laptop verfügen, auf dem kostenfrei\nMatlab/Python installiert werden kann.",
    "content": "Studierenden nicht-technischer Fächer soll der Anschluss an technisch-wissenschaftliche Fächer vereinfacht werden. In diesem Modul sollen sie grundlegende Kenntnisse und praktische Erfahrungen im Umgang mit der Linearen Algebra und deren Anwendung in technischen Fächern erwerben. Das Modul fokussiert auf praktische Berechnungsverfahren und numerische Algorithmen wie sie derzeit in vielen datenzentrierten Fachdisziplinen verwendet werden (z.B. maschinelles Lernen, Simulation). Die Teilnehmenden sollen praktische Kompetenzen im Themenfeld durch Vermittlung von grundlegenden Programmierkenntnissen in Sprachen wie Matlab oder Python erwerben. Die praktischen Programmieraufgaben entstammen vorwiegend aus dem Themenfeld „Maschinelles Lernen“. Die Teilnehmer sind bei erfolgreichem Abschluss des Moduls in der Lage, typische Berechnungsprobleme des maschinellen Lernens auf Standardfragestellungen der Linearen Algebra abzubilden, entsprechende Algorithmen fachgerecht auszuwählen und in Form von lauffähigen Matlab/Python-Programmen zu implementieren. Im Anschluss sind die Teilnehmer in der Lage ein breites Spektrum von technischen Lehrveranstaltungen der TUM zu besuchen EI19000: Lernen von Daten und Lineare Algebra | Learning from Data and Linear Algebra und den Inhalten dort folgen zu können oder an anwendungsnahen Hackathons teilzunehmen und technisch beizutragen. Die nicht-technischen Studierenden sollen eine „Maker“-Haltung kennenlernen und sich zu eigener Implementierungsarbeit zu motivieren.",
    "learning_outcomes": "Das Modul „Lernen von Daten und Lineare Algebra“ vermittelt wichtige mathematische Grundlagen und Werkzeuge aus dem Bereich der Linearen Algebra und vertieft diese durch den Erwerb von praktischen Programmierkenntnissen (Python) im Anwendungsfeld „Maschinelles Lernen“. Das Modul richtet sich an Studierende nicht-technischer Studienfächer, wie z.B. Studierende der Politikwissenschaften oder im Bereich des MCTS. Ein wichtiges Ziel ist es dabei, für die teilnehmenden Studierenden eine verbesserte Anschlussfähigkeit an technische Fächer zu schaffen, d.h. dass die Studierenden in die Lage versetzt werden, auch weitergehende technische Module erfolgreich zu besuchen.",
    "teaching_methods": "Die Lehrveranstaltung findet Anfang April, in der Zeit 30.3.- 9.4.2020, also vor Beginn der Vorlesungszeit im Sommersemester über einen Zeitraum von 9 Arbeitstagen als Blockveranstaltung statt. Der Unterricht wird am Lehrstuhl für Datenverarbeitung im Stammgelände der TUM angeboten. Bei Fragen können sich Studierende an den LDV wenden - ldv@ei.tum.de. An den Kurstagen findet Vormittags 2 x 90 Minuten Vorlesungs-und Übungsstunden für Lineare Algebra statt. Nachmittags finden 2 x 90 Minuten Programmierkurse (Matlab/Python) statt. Kursunterlagen werden elektronisch zur Verfügung gestellt. Der Kurs wird insgesamt mit 3 ECTS angerechnet.",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI2195",
    "title": "Nachrichtensysteme und Kommunikationssysteme",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird einer Klausur erbracht. In dieser werden in der Veranstaltung des Moduls vermittelte fundierte Kenntnisse drahtloser Übertragungssysteme abgefragt sowie die Fähigkeit geprüft, diese Übertragungstechnologien zu analysieren und zu bewerten. Die Prüfungsfragen gehen jeweils über den gesamten Vorlesungsstoff.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Höhere Mathematik, Signaldarstellung im Zeit- und Frequenzbereich.",
    "content": "Allgemeine Beschreibung von Nachrichtensystemen (Sender, Kanal, Empfänger). Besonderheiten des Mobilfunkkanals, Fading, Doppler-Effekt, Zeitvarianter Kanal. Aktuelle drahtlose Kommunikationssysteme: GSM, GSM 2+, CDMA, UMTS, HSPA.",
    "learning_outcomes": "Durch die Teilnahme an der Modulveranstaltungen erhalten die Studierenden vertiefte Kenntnis über den Aufbau aktueller Übertragungstechnologien über drahtlose Medien, vorwiegend aus dem Bereich der Mobilfunksysteme. Sie haben die Fähigkeit, physikalische und systemtheoretische Modelle zur Beschreibung von Sender, Übertragungskanal, Empfänger, Entzerrer und Detektor auf die betrachteten Systeme anzuwenden und zur Bewertung der Übertragungsqualität (Analyse entstehender Verzerrungen, Berechnung der Bitfehlerrate) zu nutzen. EI2195: Nachrichtensysteme und Kommunikationssysteme | Telecommunication and Communication Systems",
    "teaching_methods": "In den Vorlesungen des Moduls wird der Lernstoff mittels PowerPoint-Präsentation vermittelt. Details und Beispiele werden an der Tafel präsentiert. In den Übungen werden konkrete Aufgabe und Beispiele an der Tafel vorgerechnet. Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, wobei durch häufige Fragen des Dozenten an das Auditorium die Studierenden zur eigenständigen Mitarbeit ermuntert werden. Die Übungen werden weitgehend als Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "",
    "lv_sws_lecturer": "Kramer, Gerhard\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNachrichtensysteme - Kommunikationssysteme (LB) (Vorlesung mit integrierten Übungen, 3 SWS)\nBitar R, Lentner Ibanez J"
  },
  {
    "module_id": "EI2294",
    "title": "Computertechnik für Nicht-Ingenieure",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 75,
    "hours_presence": 105,
    "examination_achievements": "Die Prüfungsart ist den verschiedenen Lernergebnissen angepasst: Wissensbasierte Lernergebnisse werden im Rahmen einer 75 minütigen schriftlichen Klausur überprüft. Individuelle, tätigkeitsbasierte Kompetenzen werden entsprechend dem Praktikum im Rahmen einer 45 minütigen Programmierprüfung direkt am Rechner geprüft. Der Nachweis, tätigkeitsbasierte Kompetenzen unter Zuhilfenahme typischerweise zur Verfügung stehender Hilfsmittel anwenden zu können, wird mit schriftlichen Hausaufgaben erbracht. Die Endnote setzt sich wie folgt aus den Prüfungselementen zusammen: Klausur: 50% Programmierprüfung: 50% Werden in jeder zu bearbeitenden Hausaufgabe mindestens 80% der Maximalpunktzahl erreicht, verbessert sich die Modulnote um 0,3 (Notenbonus), bestenfalls auf 1,0.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine Voraussetzungen",
    "content": "Aufbau von Computersystemen, Mikro-Architektur, Befehlssatz-Architektur, Daten- und Befehlsformate, Programmierung auf Assembler- und Hochsprachen-Ebene, Interaktion von Computer-Programmen mit dem Betriebssystem, Aufgaben des Betriebssystems EI2294: Computertechnik für Nicht-Ingenieure | Computer Technology for Non-Engineers",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen können die Studierenden einfache Prinzipien von Computersystemen skizzieren. Die Studierenden kennen einfache Datenformate sowie den prinzipiellen Aufbau von Befehlsformaten, verstehen Grundzüge des Aufbaus von Prozessoren bis zur Gatterebene und können einfache Teilkomponenten oder vergleichbare Schaltungen wiedergeben. Die Studierenden können Computerprogramme auf Assembler- und Hochsprachen- Ebene verstehen und einfache Assembler- und Hochsprachenprogramme schreiben und dabei auch typischerweise zur Verfügung stehende Hilfsmittel gezielt einsetzen. Dabei verstehen die Studierenden Grundzüge der Interaktion zwischen Anwender-Programmen und Betriebssystem sowie die grundlegenden Aufgaben des Betriebssystems.",
    "teaching_methods": "Lernmethoden: Selbstgesteuertes Lernen anhand von Vorlesungsunterlagen und U#bungsaufgaben. Lehrmethoden: In der Vorlesung kommt Frontalunterricht zum Einsatz, in U#bung und Praktikum findet Arbeitsunterricht (Aufgaben lo#sen) statt.",
    "media": "Folgende Medienformen finden Verwendung: Skriptum/U#bungskatalog, Pra#sentationen, Online-\nU#bungen",
    "literature": "- David Patterson, John Hennessy: Rechnerorganisation und Rechnerentwurf - Die Hardware/\nSoftware Schnittstelle, Oldenburg Verlag\n- Heidi Anlauff, Axel Bo#ttcher, Martin Ruckert: \"Das MMIX-Buch\", Springer Verlag\n- Brian Kernighan, Dennis Ritchie: Programmieren in C",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputertechnik für Nicht-Ingenieure - Fragestunde (Übung, 2 SWS)\nZwick M\nComputertechnik für Nicht-Ingenieure (Vorlesung mit integrierten Übungen, 7 SWS)\nZwick M"
  },
  {
    "module_id": "EI29821",
    "title": "Grundlagen der Informationstechnik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur (75 min) erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit und ohne Hilfsmittel in den Veranstaltungen des Moduls behandelte Grundaufgaben der Informationstechnik gelöst werden können. Die Prüfungsfragen gehen über den gesamten Vorlesungsstoff; der Schwerpunkt liegt auf dem Prüfen der erworbenen Kompetenzen in den unter \"angestrebte Lernergebnisse\" beschriebenen Gebieten.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlegende (Schul-)kenntnisse der Algebra und der Integralrechnung.",
    "content": "Klassifizierung von Signalen, Abgrenzung Datenverarbeitung - Datenübertragung. Grundlegende Elemente der Datenverarbeitung: Beschreibung von Schaltnetzen, Boolesche Algebra, Schaltfunktionen, disjunktive und konjunktive Normalform, Minimierung von Schaltfunktionen. Zahlensysteme, Rechnen im Dualsystem. Schaltwerke. Grundlagen der Maschinenprogrammierung. Grundlegende Elemente der Datenübertragung: deterministische und stochastische Signale. Periodische Signale, reelle und komplexe Darstellung, Fourier- Reihenentwicklung. Analog-Digitale- und Digital-Analoge-Wandlung von Signalen. Grundlage statistischer Methoden, Zufallsgrößen, Wahrscheinlichkeitsdichte, Verteilungsfunktionen und Momente. Berechnung der Bitfehlerwahrscheinlichkeit digitaler Übertragungssysteme. Einfache Codes zur Fehlerkorrektur. EI29821: Grundlagen der Informationstechnik | Principles of Information Engineering",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhalten die Studierenden grundlegendes Fachwissen und methodische Kenntnisse in ausgewählten Themenbereichen der Informationstechnik. Sie haben die Fähigkeit, in den behandelten Themenfeldern grundlegende Aufgaben zu bearbeiten. Die Schwerpunkte der Lehrveranstaltung liegen auf den Gebieten:\n- Analyse und Synthese einfacher binärer Schaltnetze und Schaltwerke;\n- Durchführung der Grundrechenarten im dualen Zahlensystem und die Konversion zwischen\nunterschiedlichen Zahlensystemen;\n- Erstellung einfacher Maschinenprogramme zur Lösung numerischen Aufgaben;\n- Rechnen mit komplexen Zahlen;\n- Berechnen der Fourier-Reihenentwicklung für periodische Signale;\n- Berechnen der Fehlerwahrscheinlichkeit digitaler Signale unter Einfluss von Rauschen;\n- Analyse einfacher fehlerkorrigierender Codes;.",
    "teaching_methods": "Das Modul besteht aus einer Vorlesung (2SWS) und einer Übung (2SWS). In der Vorlesung wird der Lernstoff mittels PowerPoint-Präsentation vermittelt. Details und Beispiele werden an der Tafel präsentiert. In der Übung werden konkrete Aufgabe und Beispiele an der Tafel vorgerechnet. Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, in den Übungen auch Arbeitsunterricht (Aufgaben rechnen).",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "1) Skriptum zur Vorlesung, erhältlich in FSEI.\nDas Skriptum reicht zum Verständnis der Vorlesungsinhalte völlig aus. Zur Vertiefung ist folgende\nLiteratur empfehlenswert:\n2) Charles Petzold: The Hidden Language of Computer Hardware and Software. Microsoft Press\nBooks, 2009.\nSehr schöne Einführung in die digitale Signalverarbeitung.\n3) Günter Söder: Modellierung, Simulation und Optimierung von Nachrichtensystemen, Springer\nVerlag, 1993.\nUmfassende Beschreibung von Methoden zur Darstellung von Signalen im Zeit- und\nFrequenzbereich und zur Modellierung und Optimierung von Übertragungssystemen. Geht über\nden Vorlesungsstoff hinaus.",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nEI29821: Grundlagen der Informationstechnik | Principles of Information Engineering\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagen der Informationstechnik (LB) (Vorlesung, 4 SWS)\nHanik N ( Höfler U ), Plabst D"
  },
  {
    "module_id": "EI2986",
    "title": "Nachrichtentechnik I - Signaldarstellung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur (75 min) erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit und ohne Hilfsmittel in den Veranstaltungen des Moduls behandelte Grundaufgaben der linearen Systemtheorie gelöst werden können. Mit den Prüfungsaufgaben wird das Erreichen der angestrebten Lernergebnisse des Moduls geprüft. Die Prüfungsfragen gehen über den gesamten Vorlesungsstoff.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlegende Kenntnisse der Differential- und Integralrechnung.",
    "content": "Signale und Spektren: stochastische, periodische, aperiodische Signale. Fourierreihe, Fourierintegral und Fouriertransformation. Systemtheorie linearer zeitinvarianter Systeme: Übertragungsfunktion, Impulsantwort, lineare Verzerrungen, Faltung. Beispiele linearer Systeme: elektrische Tiefpass-Filter, kohärent-optische Fouriertransformation. Einfache nichtlineare Systeme.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhalten die Studierenden fundierte Kenntnisse der der Fourier-Reihenentwicklung und Fourier-Transformation eindimensionaler Signale sowie der Analyse linearer Systeme mit Methoden der linearen Systemtheorie. Sie haben die Fähigkeit, lineare zeitinvariante Systeme im Zeit- und Frequenzbereich zu analysieren und auftretende Störungen zu berechnen und zu bewerten. EI2986: Nachrichtentechnik I - Signaldarstellung | Telecommunication I - Signal Representation",
    "teaching_methods": "Das Modul besteht aus einer Vorlesung (2 SWS) und einer Übung (1 SWS) . In der Vorlesung wird der Lernstoff mittels PowerPoint-Präsentation vermittelt. Details und Beispiele werden an der Tafel präsentiert. In der Übung werden konkrete Aufgabe und Beispiele an der Tafel vorgerechnet. Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, in den Übungen auch Arbeitsunterricht (Aufgaben rechnen).",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "Skriptum zur Vorlesung, erhältlich in FSEI",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNachrichtentechnik I - Signaldarstellung (LB) (Vorlesung mit integrierten Übungen, 3 SWS)\nHanik N, Plabst D"
  },
  {
    "module_id": "EI2988",
    "title": "Nachrichtentechnik II - Modulationsverfahren",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit und ohne Hilfsmittel in den Veranstaltungen des Moduls vermittelte Grundaufgaben zur Analyse und Bewertung analoger und digitaler Übertragungssysteme gelöst werden können. Mit den Prüfungsaufgaben wird das Erreichen der angestrebten Lernergebnisse des Moduls geprüft. Die Prüfungsfragen gehen über den gesamten Vorlesungsstoff.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Erfolgreiche Teilnahme am Modul Nachrichtentechnik I - Signaldarstellung (LB)",
    "content": "Grundlagen der Modulation. Analoge Zweiseitenband- und Einseitenband-Amplitudenmodulation und zugehörige Modulatoren/Demodulatoren. Winkelmodulation. Lineare/nichtlineare Verzerrungen. Einfluss von Rauschstörungen. Prinzip der digitalen Modulationsverfahren. Abtastung, Analog-Digitale Wandlung, Pulscodemodulation. Grundlagen der Digitalsignalübertragung: Sender, Leitungscodierung, Störungen, Detektion, Bitfehlerrate. Aktuelle digitale Übertragungstechnik: ISDN, DSL, DAB, DVB, Ethernet. Grundlagen optischer Übertragungssysteme.",
    "learning_outcomes": "Die Studenten verstehen die Funktion moderner Modulationsverfahren und das Zusammenwirken der Komponenten in einem Nachrichten-Übertragungssystem. Sie haben die Fähigkeit, analoge EI2988: Nachrichtentechnik II - Modulationsverfahren | Telecommunication II und digitale Übertragungssysteme zu analysieren und auftretende Störungen zu berechnen und zu bewerten.",
    "teaching_methods": "Das Modul besteht aus einer Vorlesung (2SWS) und einer Übung (1SWS). In der Vorlesung wird der Lernstoff mittels PowerPoint-Präsentation vermittelt. Details und Beispiele werden an der Tafel präsentiert. In der Übung werden konkrete Aufgabe und Beispiele an der Tafel vorgerechnet. Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, in den Übungen auch Arbeitsunterricht (Aufgaben rechnen).",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "Folgende Literatur wird empfohlen:\n-",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNachrichtentechnik II - Modulationsverfahren (LB) (Vorlesung mit integrierten Übungen, 3 SWS)\nHanik N, Höfler U"
  },
  {
    "module_id": "EI31811",
    "title": "Technische Elektrizitätslehre I für Lehramt",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Modulprüfung besteht aus einer Klausur (90 Minuten). Zusätzlich besteht die Möglichkeit studienbegleitende Leistungen im Übungsseminar zu erbringen (Vorrechnen der Lösung zu gestellten Aufgaben). Diese können sich positiv auf die Abschlußnote auswirken, in der Gestalt, dass eine Präsentation der Lösung von mindestens 50% der Aufgaben eines Aufgabenblatts zu einem Notenbonus von 0.3 führt. Die schriftliche Klausur enthält Fragen zum Wissen über grundlegende elektrotechnische Begriffe, Methoden der Analyse resistiver elektrischer Netzwerke (inklusive Mehrtore), und Aufgaben in denen einfache resistive elektrische Schaltungen entworfen und dimensioniert werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Befähigung in der Differential- und Integralrechnung ist empfohlen. Darüber hinaus benötigten\nmathematische Methoden werden in der Vorlesung zusammen mit deren Anwendung in der\nElektrotechnik erarbeitet.",
    "content": "Ladung, Spannung, Strom, Energie, Leistung, Pole, Tore, Mehrtore, Dissipativität, Passivität, Verlustlosigkeit, Elementare Eintore, Linearität, Modellbildung, Resistive Netzwerke, Kirchhoffsche Gesetze, Netzwerkgraphen, Analysemethoden, gesteuerte Quellen, Schaltungssimulation, Mehrtore, Transformatoren, Operationsverstärker, Grundlagen der elektromagnetische Felder und Anwendungen in der Statik. EI31811: Technische Elektrizitätslehre I für Lehramt | Technical Electricity Science I for Lectureship [TELB1]",
    "learning_outcomes": "Nach erfolgreicher Teilnahme am Modul ist der Student in der Lage: # elektrotechnische Grundbegriffe zu verstehen, # die elementaren elektrischen Eintore darzulegen und nach physikalischen Prinzipien einzuordnen, # resistive Netzwerke mathematisch zu charakterisieren, # die grundlegenden mathematischen Methoden der Netzwerkanalyse auf resistive Netzwerke anzuwenden, # einfache resistive Netzwerke zu entwerfen und zu dimensionieren, # die fundamentalen Zusammenhänge der elektromagnetischen Felder zu verstehen und auf einfache Problemstellungen der Elektro- und Magnetostatik anzuwenden.",
    "teaching_methods": "Die Zielgruppe des Moduls sind Studenten für das Lehramt an Berufsschulen. Das Modul besteht aus Vorlesung, dozentenzentrierter Übung, studentenzentrierter Übung (Seminar) und Selbststudium. In der Vorlesung werden die theoretischen Grundlagen entwickelt, wobei ein besonderer Augenmerk auf eine klare Herleitung aller mathematischen Resultate und deren Bedeutung für die Theorie gelegt wird. In dozentenzentrierten Übungen werden beispielhafte Anwendungen der in der Vorlesung entwickelten Theorie vom Dozenten vorgestellt. Die Studenten haben dabei reichlich Gelegenheit Fragen zu stellen und Unklarheiten zu beseitigen. In der studentenzentrierten Übung demonstrieren die Studenten die von ihnen selbst gefundenen Lösungen von in der Vorlesungen erteilten Aufgaben. Dadurch üben die Studenten eigene Lösungswege zu finden und gleichzeitig ihre Fähigkeit technische Inhalte effektiv zu kommunizieren.",
    "media": "Tafel, Projektionsfolien, Computerprojektion, Demonstration von Analysesoftware, Übungsblätter,\nHausaufgaben",
    "literature": "T. Harriehausen, D. Schwarzenau, \"Moeller Grudlagen der Elektrotechnik\", Springer.\nM. Ivrlac, \"Circuit Theory and Communication\", Springer.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTechnische Elektrizitätslehre I für Lehramt (Vorlesung mit integrierten Übungen, 6 SWS)\nIvrlac M"
  },
  {
    "module_id": "EI31831",
    "title": "Technische Elektrizitätslehre II für Lehramt",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Modulprüfung besteht aus einer Klausur (90 Minuten). Zusätzlich besteht die Möglichkeit studienbegleitende Leistungen im Übungsseminar zu erbringen (Vorrechnen der Lösung zu gestellten Aufgaben). Diese können sich positiv auf die Abschlußnote auswirken in der Gestalt, dass eine Präsentation der Lösung von mindestens 50% der Aufgaben eines Aufgabenblatts zu einem Notenbonus von 0.3 führt. Die schriftliche Klausur enthält Fragen zum Wissen über Beschreibung, Eigenschaften und Anwendung von linearen dynamische Systemen in der Elektrotechnik (inklusive Mehrtore mit unendlich vielen inneren Freiheitsgraden), mathematische Aufgaben, an denen der sichere Umgang mit den mathematischen Methoden der Analyse von linearen dyanmischen Systemen geprüft wird, und Aufgaben in denen einfache dynamische Schaltungen entworfen und dimensioniert werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Technische Elektrizitätslehre 1 (LB)",
    "content": "Wechselgrößen, komplexe Wechselstromrechnung, Analyse und Entwurf elektrischer Filterschaltungen, Oszillatoren, Zustandsraumbeschreibung, Stabilität, Numerische Schaltungsberechnung, Fernleitungen, Schaltungssimulation, Einschaltvorgänge, Fouriermethoden, Drehstrom, Elemente der Elektromagnetischen Feldtheorie",
    "learning_outcomes": "Nach erfolgreicher Teilnahme am Modul ist der Student in der Lage: # lineare dynamische Systeme zu beschreiben (z.B. im Zustandsraum), # komplexe Wechselstromrechnung EI31831: Technische Elektrizitätslehre II für Lehramt | Technical Electricity Science II for Lectureship [TELB2] anzuwenden, # dynamische Netzwerke zu bewerten (z.B. hinsichtlich Stabilität), # einfache dynamische Schaltungen zu entwerfen und dimensionieren, # Netzwerke mit unendlich vielen Freiheitsgraden (z.B. Fernleitungen) mathematisch zu behandeln und ihre praktische Bedeutung zu verstehen, # die fundamentalen Zusammenhänge der elektromagnetischen Wellen zu verstehen",
    "teaching_methods": "Die Zielgruppe des Moduls sind Studenten für das Lehramt an Berufsschulen. Das Modul besteht aus Vorlesung, dozentenzentrierter Übung, studentenzentrierter Übung (Seminar) und Selbststudium. In der Vorlesung werden die theoretischen Grundlagen entwickelt, wobei ein besonderer Augenmerk auf eine klare Herleitung aller mathematischen Resultate und deren Bedeutung für die Theorie gelegt wird. In dozentenzentrierten Übungen werden beispielhafte Anwendungen der in der Vorlesung entwickelten Theorie vom Dozenten vorgestellt. Die Studenten haben dabei reichlich Gelegenheit Fragen zu stellen und Unklarheiten zu beseitigen. In der studentenzentrierten Übung demonstrieren die Studenten die von ihnen selbst gefundenen Lösungen von in der Vorlesungen erteilten Aufgaben. Dadurch üben die Studenten eigene Lösungswege zu finden und gleichzeitig ihre Fähigkeit technische Inhalte effektiv zu kommunizieren.",
    "media": "Tafel, Projektionsfolien, Computerprojektion, Demonstration von Analysesoftware, Übungsblätter,\nHausaufgaben",
    "literature": "T. Harriehausen, D. Schwarzenau: \"Moeller Grundlagen der Elektrotechnik\", Springer.\nM. Ivrlac, \"Circuit Theory and Communications\", Shaker.\nM. Ivrlac, \"Physical Principles of Antenna Systems\", Shaker.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTechnische Elektrizitätslehre II für Lehramt (Vorlesung mit integrierten Übungen, 6 SWS)\nIvrlac M"
  },
  {
    "module_id": "EI4232",
    "title": "Digitaltechnik für Lehramt",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Abschlussklausur",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Für Studierende des EDU Studiengangs ist das Eigenstudium von Teilen des Skripts\n\"Schaltungstechnik 1\" zur Abdeckung der Grundlagen elektrischer Schaltnetze und elementarer\nGesetzte der Elektrotechnik dringend empfohlen.",
    "content": "Grundlagen digitaler Informationsdarstellung, Verarbeitung und Speicherung: Zahlendarstellung und Rechenoperationen im binären Zahlensystem. Basismodell für funktionales Verhalten von MOSFET Transistoren, Stromgleichungen, Verzögerungszeit und dynamischer Verlustleistung. Schaltungstechnische Realisierung von arithmetischen Rechenoperationen (Addition, Subtraktion, Multiplikation) sowie die Synthese von zwei- und mehrstufigen kombinatorischen Verknüpfungen (Konjunktion, Disjunktion, Negation) und sequentiellen Schaltwerken aus elementaren Basiskomponenten (Logikgatter, Register, MOSFET Transistoren). Logikoptimierung von kombinatorischen Schaltnetzen. Techniken zur Verbesserung des Informationsdurchsatzes getakteter, sequentieller Schaltwerke mittels Fließband- und Parallelverarbeitung. Rolle und Aufbau endlicher Automaten (Finite State Machines) als Steuer- bzw. Kontrolleinheiten vielfältiger praktischer Anwendungen. Grundlagen des methodischen Tests von Schaltungen: Fehlerdiagnose, Herleitung von Fehlerüberdeckungstabellen, Testbestimmung in kombinatorischen Schaltnetzen und sequentiellen Schaltwerken. EI4232: Digitaltechnik für Lehramt | Digital Design for lectureship Neben diesen funktionalen Aspekten digitaler Schaltungstechnik werden auch die Ursachen und Grenzen der Leistungsfähigkeit, des Zeitverhaltens, des Energiebedarfs sowie der wirtschaftlichen Aspekte digitaler CMOS (Complementary Metal Oxide Semiconductor) Technologien im Kontext von Kommunikations- und Informationstechnologie (IKT) vermittelt.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, zu analysieren, zu bewerten und auch selbst zu entwickeln. Leistungsoptimierte Realisierungen mehrstufiger kombinatorischer Logikblöcke sowie von endlichen Automaten (FSMs) können anhand der Entwurfsprinzipien Fließband- und Parallelverarbeitung hergeleitet, bewertet und entwickelt werden.Ferner erwerben die Studierenden ein Grundverständnis der Funktionsweise von MOS-Transistoren und deren Anwendung in CMOS Schaltungen.",
    "teaching_methods": "",
    "media": "Folgende Medienformen finden Verwendung:\n- Tabletanschrieb\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet\n- Online-Übungen",
    "literature": "Folgende Literatur wird empfohlen:\n- U. Tietze, Ch. Schenk, \"\"Halbleiter-Schaltungstechnik\"\", Springer, 2002\n- H. Lipp, J. Becker, \"\"Grundlagen der Digitaltechnik\"\", Oldenbourg, 2008\n- J. Rabaey, \"\"Digital Integrated Circuits - A Design Perspective\"\", Prentice Hall, 2003 B34\n- J. Wakerly, \"\"Digital Design Principles and Practices\"\", Prentice Hall, 2006",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDigitaltechnik (Vorlesung mit integrierten Übungen, 5 SWS)\nHerkersdorf A, Maurer F, Biersack F, Stechele W, Wild T\nDigitaltechnik - Tutorien (Tutorium, ,1 SWS)\nMaurer F [L], Herkersdorf A"
  },
  {
    "module_id": "EI4282",
    "title": "Digitale Schaltungen für Ingenieure (MSE)",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 60,
    "hours_presence": 60,
    "examination_achievements": "Schriftliche Prüfung von 60 Minuten Dauer",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "Zahlensysteme, Binärsystem, Moore'sches Gesetz der Halbleiterintegration, grundlegendes MOSFET Funktionsverhalten, Boole'sche Logik, sequentielle Logik (endliche Automaten, synchrone Schaltungen, Pipelining), Grundlagen der CMOS Verlustleistung und Performanz (Schaltgeschwindigkeit)",
    "learning_outcomes": "Nach der Teilnahme an der Veranstaltungen ist der Studierende in der Lage, grundlegende Schaltungskonzepte digitaler Logik und Funktionsblöcke zu verstehen, eine optimierte Realisierung endlicher Automaten anhand des Entwurfsprinzips Pipelining anzuwenden und technische wie wirtschaftliche Implikationen bei der Auswahl von IC Hardware-Plattformen zu bewerten. Ferner erwirbt der Studierende ein Grundverständnis der Funktionsweise von MOS- Transistoren und CMOS Schaltungen.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt. EI4282: Digitale Schaltungen für Ingenieure (MSE) | Digital Integrated Circuit in Engineering (MSE) [DSE] Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- PPT-Präsentationen mit handschriftlichen Ergänzungen\n- Skript\n- Übungsaufgaben mit Lösungen als Download im Internet",
    "literature": "Folgende Literatur wird empfohlen:\n- J. Rabaey, \"Digital Integrated Circuits\", Prentice Hall\n- Digital Design Principles and Practices, J. Wakerly, Prentice Hall, 2006, 4th Edition\n- Grundlagen der Digitaltechnik, H. Lipp, J. Becker, Oldenbourg, 2008, 6. Auflage.",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI4381",
    "title": "Entwurfsverfahren für Integrierte Schaltungen (MSE)",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 75,
    "hours_presence": 45,
    "examination_achievements": "Das Modul wird im Rahmen einer 60-minütigen Klausur geprüft, in der die in der Vorlesung und Übung erworbenen Lernergebnissse abgefragt bzw. angewendet werden. Es sind Hilfsmittel zugelassen, und zwar schriftliche Unterlagen und nichtprogrammierbare Taschenrechner. Durch das Beantworten von Fragen, Beschreibung von Verfahren für gegebene Problemstellungen und Rechnungen weisen die Studierenden nach, dass sie Entwurfsmethoden integrierter Schaltungen verstanden haben und sie in geeigneter Form anwenden können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Vorlesung \"Digitale Schaltungen\" (kann auch parallel gehört werden);\nKenntnis diskreter Mathematik hilfreich, wird aber nicht vorausgesetzt.",
    "content": "Logiksynthese: Grundlagen der Logiksynthese; Binäre Boolesche Funktionen; Synthese von kombinatorischen Schaltungen mit zwei Ebenen; Heuristische Minimierung von kombinatorischen Schaltungen mit zwei Ebenen; Synthese von kombinatorischen Schaltungen mit mehr als zwei Ebenen; Ordered Binary Decision Diagrams; Synthese von sequentiellen Schaltungen mittels endlicher Automaten. Simulation digitaler Schaltungen: Grundlagen Digitalsimulation; Werterepräsentation; Simulation des Zeitverhaltens. Testverfahren: Fehlerdiagnose, Fehlerüberdeckungstabelle; Testbestimmung in kombinatorischen Schaltungen; Testbestimmung in sequentiellen Schaltungen. EI4381: Entwurfsverfahren für Integrierte Schaltungen (MSE) | Design Methods for Integrated Circuits (MSE) [EDA]",
    "learning_outcomes": "Nach der Teilnahme an der Lehrveranstaltung ist der Studierende mit der Anwendung von Verfahren der diskreten Mathematik zur Beschreibung und Optimierung von Schaltungen vertraut. Er/sie kennt grundlegende mathematische Verfahren und Algorithmen, um digitale Schaltungen auf Gatterebene zu entwerfen, zu optimieren, zu simulieren und Testmuster dafür zu entwerfen. Dies gilt sowohl für kombinatorische als auch für sequentielle Schaltungen. Dem Studierenden sind damit Verfahren bekannt, mit denen der Entwurf von Schaltungen industrieller Komplexität erfolgreich automatisiert werden kann. Dem Studierenden ist auch die grundlegende Bedeutung der Automatisierung des Entwurfs für die Steigerung der Produktivität eines Ingenieurs und damit den wirtschaftlichen Erfolg bewußt. Im Deatil können Studierende digitale Schaltungen mittels Boolescher Funktionen beschreiben und verschiedene Darstellungsformen Boolescher Funktionen (SOP-Formen, Kubengraph, Reduced Ordered Binary Decision Diagram) interpretieren, erstellen und ineinander überführen; Studierende können Logikoptimierung durch verschiedene Verfahren durchführen: Minimierung Boolescher Funktionen nach Quine/McCluskey, mittels Resolventen-Methode, heuristische Ansätze; Studierende sind vertraut mit Beschreibung und Zustandsminimierung von endlichen Automaten (Finite State Machines); Studierende kennen die Grundlagen der Simulation digitialer Schaltungen auf dem Computer.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Primär erfolgt die Präsentation mittels Tafelanschrieb oder Tablet PC, sowie mittels\nPowerPoint-Folien (primär für Themeneinführungen).\nDie Vorlesungsinhalte werden den Studierenden auch als gedruckte und elektronische Unterlagen\nzur Verfügung gestellt.\nTeilweise erfolgt eine Unterstützung durch Online-Aufgaben.",
    "literature": "Zur Erarbeitung des Vorlesungsstoffs ist keine zusätzliche Literatur notwendig. Bei Interesse an\neiner alternativen Perspektive bzw. Vertiefung des Materials wird folgende Literatur empfohlen:\n* G. De Micheli: Synthesis and Optimization of Digital Circuits, McGraw-Hill, 1994\n* M. L. Bushnell, V. D. Agrawal: Essentials of Electronic Testing for Digital, Memory, and Mixed\nSignal VLSI Circuits, Kluwer Academic Publishers, 2000\nEI4381: Entwurfsverfahren für Integrierte Schaltungen (MSE) | Design Methods for Integrated Circuits (MSE) [EDA]",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI43811",
    "title": "Entwurfsverfahren für Integrierte Schaltungen",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Das Modul wird im Rahmen einer 60-minütigen Klausur geprüft, in der die in der Vorlesung und Übung erworbenen Lernergebnisse abgefragt bzw. angewendet werden. Es sind Hilfsmittel zugelassen, und zwar schriftliche Unterlagen und nichtprogrammierbare Taschenrechner. Durch das Beantworten von Fragen, Beschreibung von Verfahren für gegebene Problemstellungen und Rechnungen weisen die Studierenden nach, dass sie Entwurfsmethoden integrierter Schaltungen verstanden haben und sie in geeigneter Form anwenden können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Vorlesung \"Digitale Schaltungen\".\nKenntnisse diskreter Mathematik sind hilfreich, werden aber nicht vorausgesetzt.",
    "content": "Logiksynthese: Grundlagen der Logiksynthese; Binäre Boolesche Funktionen; Synthese von kombinatorischen Schaltungen mit zwei Ebenen; Heuristische Minimierung von kombinatorischen Schaltungen mit zwei Ebenen; Synthese von kombinatorischen Schaltungen mit mehr als zwei Ebenen; Ordered Binary Decision Diagrams; Synthese von sequentiellen Schaltungen mittels endlicher Automaten. Simulation digitaler Schaltungen: Grundlagen Digitalsimulation; Werterepräsentation; Simulation des Zeitverhaltens. Testverfahren: Fehlerdiagnose, Fehlerüberdeckungstabelle; Testbestimmung in kombinatorischen Schaltungen; Testbestimmung in sequentiellen Schaltungen. EI43811: Entwurfsverfahren für Integrierte Schaltungen | Design Methods for Integrated Circuits [EIS-MSE]",
    "learning_outcomes": "Nach em erfolgreichen Abschluss des Moduls sind die Studierenden mit der Anwendung von Verfahren der diskreten Mathematik zur Beschreibung und Optimierung von Schaltungen vertraut. Sie kennen grundlegende mathematische Verfahren und Algorithmen, um digitale Schaltungen auf Gatterebene zu entwerfen, zu optimieren, zu simulieren und Testmuster dafür zu entwerfen. Dies gilt sowohl für kombinatorische als auch für sequentielle Schaltungen. Den Studierenden sind damit Verfahren bekannt, mit denen der Entwurf von Schaltungen industrieller Komplexität erfolgreich automatisiert werden kann. Den Studierenden ist auch die grundlegende Bedeutung der Automatisierung des Entwurfs für die Steigerung der Produktivität eines Ingenieurs und damit den wirtschaftlichen Erfolg bewusst. Im Detail können Studierende digitale Schaltungen mittels Boolescher Funktionen beschreiben und verschiedene Darstellungsformen Boolescher Funktionen (SOP-Formen, Kubengraph, Reduced Ordered Binary Decision Diagram) interpretieren, erstellen und ineinander überführen; Studierende können Logikoptimierung durch verschiedene Verfahren durchführen: Minimierung Boolescher Funktionen nach Quine/McCluskey, mittels Resolventen-Methode, heuristische Ansätze; Studierende sind vertraut mit Beschreibung und Zustandsminimierung von endlichen Automaten (Finite State Machines); Studierende kennen die Grundlagen der Simulation digitaler Schaltungen auf dem Computer.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Primär erfolgt die Präsentation mittels Tafelanschrieb oder Tablet PC, sowie mittels\nPowerPoint-Folien (primär für Themeneinführungen).\nDie Vorlesungsinhalte werden den Studierenden auch als gedruckte und elektronische Unterlagen\nzur Verfügung gestellt.\nTeilweise erfolgt eine Unterstützung durch Online-Aufgaben.",
    "literature": "Zur Erarbeitung des Vorlesungsstoffs ist keine zusätzliche Literatur notwendig. Bei Interesse an\neiner alternativen Perspektive bzw. Vertiefung des Materials wird folgende Literatur empfohlen:\n* G. De Micheli: Synthesis and Optimization of Digital Circuits, McGraw-Hill, 1994\n* M. L. Bushnell, V. D. Agrawal: Essentials of Electronic Testing for Digital, Memory, and Mixed\nSignal VLSI Circuits, Kluwer Academic Publishers, 2000\nEI43811: Entwurfsverfahren für Integrierte Schaltungen | Design Methods for Integrated Circuits [EIS-MSE]",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEntwurfsverfahren für Integrierte Schaltungen (MSE) (Vorlesung mit integrierten Übungen, 3 SWS)\nSchlichtmann U, Fengler P"
  },
  {
    "module_id": "EI4692",
    "title": "Einführung in die Signalverarbeitung für MA",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfung ist mündlich (45 Minuten). Die Studenten wenden die gelehrten Konzepte und Resultate an, um zeitkontinuierliche und zeitdiskrete Systeme zu analysieren, deren Zeitantworten und Übertragungsfunktionen zu bestimmen und deren Stabilität zu beurteilen. Sie können Realisierungen für diese Systeme entwickeln und diese mit Zustandsvariablen-Rückführung stabilisieren. Die Studenten können Kriterien für den Entwurf von statistischen Schätzern formulieren und lösen. Sie beantworten Verständnisfragen, können selbständig lineare Schätzfilter entwerfen und die Eigenschaften statistischer Schätzer beurteilen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra, Analysis, elementare Wahrscheinlichkeitsrechnung",
    "content": "Zeitkontinuierliche Systeme: Zustandsraum-Darstellung, Zeitantwort, Impulsantwort, Übertragungsfunktion, Realisierungsstrukturen, Standardapproximationen. Zeitdiskrete Systeme: Zustandsraum-Darstellung, Zeitanwort, Impulsantwort, z-Transformation, Übertragungsfunktion, FIR- und IIR-Systeme, linearphasige und minimalphasige FIR-Filter, Entwurf von FIR-Filtern mithilfe des Remezalgorithmus, Entwurf von IIR-Filtern. Stabilität: externe Stabilität, Beobachtbarkeit, Steuerbarkeit, asymptotische Stabilität, Zustandsvariablen-Rückführung, asymptotische Beobachter, kombinierter Beobachter-Regler. Statistische Signalverarbeitung: suffiziente Statistik, Maximum Likelihood und Maximum A- Posteriori Schätzung, Best Linear Unbiased Estimator, Minimum Mean Square Error Schätzung, Bias-Variance Trade-off, MIMO Detektion. EI4692: Einführung in die Signalverarbeitung für MA | Introduction to Signal Processing for MA",
    "learning_outcomes": "Am Ende dieses Moduls kennen die Mathematikstudenten die Grundlagen der Analyse von zeitkontinuierlichen und zeitdiskreten Systemen, können diese Systeme kategorisieren, können deren Stabilität beurteilen und Stabilität durch Zustandsvariablenrückführung sicherstellen. Sie können zeitkontinuierliche wie auch zeitdiskrete Filter für realistische Anforderungen entwerfen. Sie können praktische Schätzprobleme basierend auf dem Konzept der suffizienten Statistik mithilfe des Maximum Likelihood oder des Maximum A-Posteriori Kriteriums lösen und können lineare Filter für Schätzaufgaben in linearen Systemen entwickeln. Auch können sie die obigen Konzepte auf das Problem der MIMO Detektion anwenden.",
    "teaching_methods": "Lernmethode: Neben den individuellen Methoden der Studenten wird fundiertes Wissen durch wiederholte Vorlesungen und Übungen angestrebt. Lehrmethode: In den Vorlesungen werden die Studenten dozenten-zentriert unterrichtet. Die Übungen werden studenten-zentriert gehalten.",
    "media": "Die folgenden Medien werden verwendet:\n- Tafel.\n- Skriptum.\n- Übungsaufgaben mit Lösungen zum Download.",
    "literature": "Empfohlene Literatur:\n- A. Papoulis: Probability, Random Variables, and Stochastic Processes.\n- H. Stark and J. Woods: Probability and Random Processes with Applications to Signal\nProcessing.\n- T. Kailath: Linear Systems.\n- S. M. Kay: Fundamentals of Statistical Signal Processing, volume I, Estimation Theory, volume II,\nDetection Theory.",
    "lv_sws_lecturer": "Joham, Michael; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Signalverarbeitung für MA (Vorlesung mit integrierten Übungen, 4 SWS)\nJoham M"
  },
  {
    "module_id": "EI4693",
    "title": "Einführung in die Signalverarbeitung für IN",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 45,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfung ist schriftlich (mit bis zu 20 % Multiple Choice Fragen), 75 min. Mit maximal 5 DIN A4 Blätter als erlaubten Hilfsmitteln wenden die Studenten die gelehrten Konzepte und Resultate an, um zeitdiskrete Systeme zu analysieren, deren Zeitantworten und Übertragungsfunktionen zu bestimmen und deren Stabilität zu beurteilen. Sie können Realisierungen für diese Systeme entwickeln und diese mit Zustandsvariablen-Rückführung stabilisieren. Die Studenten können Kriterien für den Entwurf von statistischen Schätzern formulieren und lösen. Sie beantworten Verständnisfragen, können selbständig lineare Schätzfilter entwerfen und die Eigenschaften statistischer Schätzer beurteilen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra, Analysis, elementare Wahrscheinlichkeitsrechnung.",
    "content": "Zeitdiskrete Systeme: Zustandsraum-Darstellung, Zeitanwort, Impulsantwort, z-Transformation, Übertragungsfunktion, FIR- und IIR-Systeme, linearphasige und minimalphasige FIR-Filter, Entwurf von FIR-Filtern mithilfe des Remezalgorithmus. Stabilität: externe Stabilität, Beobachtbarkeit, Steuerbarkeit, asymptotische Stabilität, Zustandsvariablen-Rückführung, asymptotische Beobachter, kombinierter Beobachter-Regler. Statistische Signalverarbeitung: suffiziente Statistik, Maximum Likelihood und Maximum A- Posteriori Schätzung, Best Linear Unbiased Estimator, Minimum Mean Square Error Schätzung, Bias-Variance Trade-off, MIMO Detektion. EI4693: Einführung in die Signalverarbeitung für IN | Introduction to Signal Processing for IN",
    "learning_outcomes": "Am Ende dieses Moduls kennen die Informatikstudenten die Grundlagen der Analyse von zeitdiskreten Systemen, können diese Systeme kategorisieren, können deren Stabilität beurteilen und Stabilität durch Zustandsvariablenrückführung sicherstellen. Sie können zeitdiskrete Filter für realistische Anforderungen entwerfen. Sie können praktische Schätzprobleme basierend auf dem Konzept der suffizienten Statistik mithilfe des Maximum Likelihood oder des Maximum A-Posteriori Kriteriums lösen und können lineare Filter für Schätzaufgaben in linearen Systemen entwickeln. Auch können sie die obigen Konzepte auf das Problem der MIMO Detektion anwenden.",
    "teaching_methods": "Lernmethode: Neben den individuellen Methoden der Studenten wird fundiertes Wissen durch wiederholte Vorlesungen und Übungen angestrebt. Lehrmethode: In den Vorlesungen werden die Studenten dozenten-zentriert unterrichtet. Die Übungen werden studenten-zentriert gehalten.",
    "media": "Die folgenden Medien werden verwendet:\n- Tafel.\n- Skriptum.\n- Übungsaufgaben mit Lösungen zum Download.",
    "literature": "Empfohlene Literatur:\n- T. Kailath: Linear Systems.\n- A. Papoulis: Probability, Random Variables, and Stochastic Processes.\n- H. Stark and J. Woods: Probability and Random Processes with Applications to Signal\nProcessing.\n- S. M. Kay: Fundamentals of Statistical Signal Processing, volume I, Estimation Theory, volume II,\nDetection Theory.",
    "lv_sws_lecturer": "Joham, Michael; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Signalverarbeitung für IN (Vorlesung mit integrierten Übungen, 3 SWS)\nJoham M"
  },
  {
    "module_id": "EI50141",
    "title": "Testing Digital Circuits",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The examination will be in an oral, highly interactive and dynamic form (30 mins). The student will show his/her ability to understand, apply, develop and evaluate test solutions for digital integrated circuits and systems, at the concrete example of a small digital circuit with single stuck-at faults. In detail, he/she will compute test patterns and develop parts of a scan path and of a built-in self- test. While doing so, the student will present his/her understanding of the underlying algorithms and methods, as there are e.g. D-algorithm, test complexity analysis, IEEE 1149.1 boundary scan testing, memory testing, IDDQ testing.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basics of digital circuit design.\nThe following modules should be passed before taking the course:\n- Digital IC-Design\n- Electronic Design Automation",
    "content": "Principles of testing digital circuits; fault models and test quality; functional and structural test generation; fault simulation; complexity theory; design for test (passive, active test methods); memory test; test standards; miscellaneous topics (Iddq test, analog test, test pattern compression, yield management); In detail: The manufacturing process of integrated circuits introduces a large variety of physical defects. In order to prevent the delivery of failing silicon devices to the customer, the correct function of EI50141: Testing Digital Circuits | Testing Digital Circuits [TDC] delivered integrated circuits has to be guaranteed by testing all devices after they have been fabricated. Testing integrated circuits is one of the core competencies of a semiconductor company. It represents a significant factor in costs and quality. Therefore, testing is considered as an outstanding part of the entire design and manufacturing process of ICs. Furthermore, testing is a domain-crossing topic: The test engineer within a semiconductor company requires a broad expertise covering circuit and system design, circuit simulation and design verification, and physical design. One of the main challenges in testing is costs which have drastically increased over the past years. The access to circuit internal transistors and nodes has to be accomplished by a limited number of external pins. This is increasingly difficult due to the continuous shrinking of device structures. This lecture conveys: * The basic idea of testing. * Relevant failure mechanisms of integrated circuits and the common fault models. * The complexity problem of testing and its resulting limitations. * Methods for test pattern generation (e.g. fault simulation and automatic test generation). * Fundamental measures for designing integrated circuits in order to raise their testability (Design- for-Testability). * Techniques for insertion of built-in self-test (BIST) in integrated circuits. * Techniques for memory testing.",
    "learning_outcomes": "Intended Learning Outcomes At the end of the module students know about the following topics and are able to employ this knowledge to define and evaluate test solutions for digital ICs and systems:\n- Definition of testing and the difference to verification\n- Fundamentals of testing: fault models, fault detection, redundant faults, fault coverage\n- Methods for test generation: Boolean differences, D-algorithm, fault simulation\n- Analysis of test complexity with the help of complexity theory\n- Principles of passive test methods: Ad-hoc measures, scan path / Principles of active test\nmethods: BIST\n- Overview over memory fault models and memory test algorithms.\n- Outline of test standards (IEEE boundary scan test) and additional topics like IDDQ testing,\nanalog testing, fault analysis",
    "teaching_methods": "Learning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons in exercises and tutorials. EI50141: Testing Digital Circuits | Testing Digital Circuits [TDC] Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way. Where applicable, each of the 10 chapters of the lectures is immediately followed by an associated exercise/tutorial block.",
    "media": "The following kinds of media are used:\n* Presentations\n* Handouts of the presentations and additional lecture notes\n* Handouts of exercises",
    "literature": "The following literature is recommended:\n* Essentials of Electronic Testing for Digital, Memory & Mixed-Signal VLSI Circuits; M. Bushnell, V.\nAgrawal; Kluwer Academic Publishers, 2000.\n* Digital Systems Testing and Testable Design; M. Abramovici, M. Breuer, A. Friedmann; Computer\nScience Press, 1990",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTesting Digital Circuits (Vorlesung mit integrierten Übungen, 3 SWS)\nOtterstedt J, Lian M"
  },
  {
    "module_id": "EI50291",
    "title": "Image and Video Compression Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "The participants complete 5 programming assignments during the first part of the laboratory. After this students team up and optimize their codec and present their optimization results in a final presentation. The final grade is composed of the following elements:\n- 70% final presentation of optimization results\n- 30% graded programming assignments",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Fundamentals of Image and Video Compression\nImage and Video Compression",
    "content": "In the past decade there have been a variety of interesting developments in multimedia representation and communications. It has become very clear that all aspects of media have and will become more and more digital. As a key development with input from many different disciplines, video coding lies at the core of multimedia signal processing. The laboratory provides the participants with a detailed overview of the theoretical background and the implementation of a video coding system. From the ninth week of the course on, each group of students (two people) can choose from divers components to develop one unique video coding/decoding system. In the end of the course all codecs will be presented by the participants and compared with respect to compression ratio, image quality, execution speed, memory consumption and program size. EI50291: Image and Video Compression Lab | Image and Video Compression Lab [IVCLab]",
    "learning_outcomes": "At the end of the module students are able to implement a fully functional still image and video compression scheme. They will be able to optimize image and video codecs towards coding efficiency, computational complexity and memory requirements. Additionally, students will be able to judge the performance of video codecs and to understand and evaluate the involved trade-offs.",
    "teaching_methods": "In addition to the individual methods of the students consolidated knowledge is aspired by weekly lab sessions where the students implement the concepts under the supervision of teaching assistants. Additionally students have to prepare homeworks before the lab session that revisit concepts that are relevant for the lab implementation work. Teaching method: The lab sessions are held in a student-centered way. Teaching assistants support the students during the implementation of the codecs.",
    "media": "- Einführungsvorträge am Anfang der Praktikumstermine\n- Praktikumsskript mit Aufgaben",
    "literature": "D.S. Taubman, M.W. Marcellin, JPEG2000-Image Compression Fundamentals, Standards, and\nPractice, Kluwer Academic Publishers, 2002.\nY. Wang, J. Osterman, Y. Zhang, Video Processing and Communications, Prentice-Hall, 2002",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nImage and Video Compression Laboratory (Praktikum, 5 SWS)\nSteinbach E, Chaudhari R, Patsch C, Zakour M"
  },
  {
    "module_id": "EI5030",
    "title": "Simulation of Optical Communication Systems Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "In an oral exam (30 min) students prove that the are able to model, simulate and optimize optical components as well as complete single-channel or WDM systems by discussing their approach during the lab course with the examiner.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Differential / Integral calculus, Vector analysis, signal representation in time and frequency domain,\nstatistical methods of communications engineering, electromagnetic field theory.\nLectures that generally cover the required topics:\nAdvanced mathematics\nCommunications engineering\nStatistical signal theory\nSignal representation\nElectromagnetic field theory / High frequency engineering\nFor a successful completion of the Laboratory it is essential to take the following module\nadditionally:\nLecture: Optical communications systems (EI5075)",
    "content": "This lab course offers an introduction into modelling, simulation and physical optimization of optical communication systems. EI5030: Simulation of Optical Communication Systems Laboratory | Simulation of Optical Communication Systems Laboratory The course employs a commercial photonic system design software (Optiwave Photonic Design Tools) that is used world-wide. In the first sessions, the transmitter and receiver components, i. e. laser, external modulator and photo detector are described and analyzed in the simulation. The following sessions are dedicated to model and understand systems using Intensity Modulation and Direct Detection, and coherent systems with advanced QAM-modulation. Final sessions treat linear and nonlinear fiber effects and the degradation of signal quality they cause, optical amplifiers, and the optimization of the link design of optical communication systems.",
    "learning_outcomes": "At the end of the module students are able to model, simulate and optimize the function of optical components as well as complete single-channel or WDM systems, and to interpret the results correctly.",
    "teaching_methods": "The students are provided with a comprehensive lab manual and are expected to study the chapters prior to the lab sessions. The manual comprises an introduction into the general handling of the photonic system design software, and introductions to the respective lab courses. During the lab courses the students create and run their own simulations according to instructions given in the manual. They are supported by well experienced tutors.",
    "media": "The lab manual is written in English, tutoring can be either in German or in English language.",
    "literature": "The following literature is recommended:\n- G. P. Agrawal: Fiber-Optic Communication Systems, Wiley-Interscience\n- G. P. Agrawal: Nonlinear Fiber Optics, Wiley-Interscience",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSimulation of Optical Communication Systems Laboratory (Praktikum, 4 SWS)\nHanik N ( Carniello P, Jia Y ), Plabst D"
  },
  {
    "module_id": "EI5032",
    "title": "Communications Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 90,
    "hours_self_study": 30,
    "hours_presence": 60,
    "examination_achievements": "Laborleistung: written exams for 5 of the experiments (PCM,DMV,DMC,DBT,SDR) Each exam counts for 20% of the total grade and takes 30 minutes. (20% x 5 = 100% , 5 x 30min) The exams contain questions about the therotetical background and principles of communications engineering (given in lecture notes) as well as the applications and the practical results obtained during each experiment.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Signal representation in time- and frequency-domain; basic knowledge about digital and analog\ncommunication systems; basic knowledge about statistics\nSignaldarstellung\nStatistische Signaltheorie\nNachrichtentechnik 1",
    "content": "Introduction to communication systems based on experiments and computer simulations: signal properties; signal processing (filtering, sampling, quantization); principles in source and channel coding; analog and digital modulation schemes; channel properties (fading, noise); optimal receiver filters; baseband transmission; time-, frequency- and space-diversity EI5032: Communications Lab | Communications Lab",
    "learning_outcomes": "After completion of the module the students are able to practically apply basic knowledge about communications engineering. They are proficient in the usage of communications measurement equipment (e.g. oscilloscope, spectrum and signal analyzers) and Matlab.",
    "teaching_methods": "",
    "media": "",
    "literature": "J. Proakis: \"Digital Communications\", McGraw Hill, 2000\nD. Tse and P. Viswanath: \"Fundamentals of Wireless Communication\" Cambridge University Press,\n2005",
    "lv_sws_lecturer": "Kramer, Gerhard\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCommunications Laboratory (Praktikum, 4 SWS)\nKramer G, Plabst D, Wiegart T"
  },
  {
    "module_id": "EI5042",
    "title": "Project Laboratory IC Design",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Examination with the following elements:\n- 30 minute oral presentation about the design results per student group (30%) - at least 5\npage written deliverable (documentation) per student (40%) about the key findings during the development process - inspection of implemented system (30%) to proof functionality",
    "repetition": "",
    "recommended_prerequisites": "Prerequisite is a completed VHDL course.\nPraktikum VHDL\nPraktikum Systemetnwurf mit VHDL\nEntwurf digitaler Systeme mit VHDL\nor equivaent VHDL cours in any approved BSc programm",
    "content": "A VLSI architecture is designed by a group of students: System design (architecture and partitioning), Hardware specification and verification (functionality and interfaces), simulation and synthesis, implementation in FPGA; Project management: Coordination, integration of submodules, verification in system enviroment",
    "learning_outcomes": "After completion of the module students know the HW system specification. They are able to implement an IC design with VHDL, applying a HW design flow from system specification to system test. EI5042: Project Laboratory IC Design | Project Laboratory IC Design",
    "teaching_methods": "teamwork (self-organized taks distribution and coordination) Presentation of work results",
    "media": "",
    "literature": "Z. Navabi, \"VHDL - Analysis and Modelling of Digital Systems\", McGraw Hill\nP. Ashenden, \"The VHDL Cookbook\"",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProject Laboratory IC Design (Praktikum, 4 SWS)\nNolte L [L], Herkersdorf A, Stechele W, Wild T, Biersack F, Twardzik T"
  },
  {
    "module_id": "EI50471",
    "title": "Wireless Sensor Networks Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulprüfung besteht aus einer mündlichen Prüfung zu den vorgegebenen Übungsaufgaben, die bis zur Mitte der Veranstaltung vollständig umzusetzen sind (30%), sowie der Bewertung des Teamprojektes (70% der Prüfungsleistung). Im Teamprojekt ist in Zweiergruppen gemeinsam eine etwas größere Aufgabe aus dem thematischen Kontext „Wireless Sensor Networks“ zu bearbeiten. Dieses Projekt ist am Ende in Form eines Fachvortrages zu präsentieren und weiterhin ist eine schriftliche Ausarbeitung (Technischer Bericht inkl. der Dokumentation der Quellen) zu erstellen. Die Prüfung soll zeigen, inwieweit die Teilnehmer die angestrebten Lernergebnisse erreicht haben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Teilnahmevoraussetzungen sind:\n- Programmierkenntnisse in C, Algorithmen und Datenstrukturen\n- Grundkenntenisse Linux (IDEs und Tools zur Softwareentwicklung, Shells, Makefiles)\nOptionale Teilnahmevoraussetzungen sind:\n- Grundlagen drahtloser Kommunikationssysteme\n- Grundlagen Kommunikationsnetze\nFolgende Module sollten vor der Teilnahme bereits erfolgreich\nabsolviert sein:\n- Programmierpraktikum C\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\nEI50471: Wireless Sensor Networks Laboratory | Wireless Sensor Networks Laboratory [WSNLab]\n-",
    "content": "Das Praktikum \"Wireless Sensor Networks Laboratory\" erlaubt den Studierenden, einen theoretischen und praktischen Einblick in die Konzepte drahtloser Sensor-Netzwerke zu erhalten, wobei der Fokus auf Netzwerkaspekten liegt. Der Kurs besteht aus 3 Teilen: 1. Vorlesungsteil: Einführung und theoretische Aspekte drahtloser Sensor-Netzwerk, MAC-Layer Protokolle und Routing-Algorithmen 2. Praktische Einführung in und Programmierung von drahtlosen Sensor-Netzwerk-Knoten 3. Hands-On Bestandteile: Implementierung einer Anwendung für drahtlose Sensor-Netzwerke durch Teams von Studierenden Im Rahmen der Lehrveranstaltung wird eine dedizierte Sensor-Netzwerk-Hardwareplattform eingesetzt. In Zweiergruppen werden die Teilnehmer in der ersten Phase Gelegenheit haben, sich im Rahmen von betreuten Programmieraufgaben in die Plattform einzuarbeiten. In der zweiten Phase wenden die Studierenden ihr Wissen zur Implementierung einer größeren Beispielaufgabe an.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende in der Lage:\n- die grundlegenden Konzepte drahtloser Sensor-Netzwerkknoten und Sensor-Netzwerke zu\nerklären und zu diskutieren\n- einen Überblick über MAC-Layer Protokolle und Routingalgorithmen zu geben\n- einfache Protokolle und Algorithmen auf den in der Lehrveranstaltung eingesetzten Software- und\nHardwareplattformen selbständig zu implementieren\n- einfache Programme in C/C++ mittels einer integrierten Entwicklungsumgebung zu erstellen,\nkompilieren, testen und auf den in dee Lehrveranstaltung eingesetzten Software- und Hardwareplattformen einzusetzen",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges prototypisches Implementieren von Anwendungen in den Übungen angestrebt. Als Lehrmethoden werden in der Lehrveranstaltung Anteile als Frontalunterricht gehalten und Anteile in Gruppenarbeit in Form von Diskussionen zur Vertiefung eingesetzt. Es werden praktische Beispiele mit steigender Komplexität durch die Studenten selbst implementiert, Gelegenheit zur Arbeit in Teams ist gegeben.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen (Vortrag) mit Folien\n- Hands-on Demonstratoren und Plattformen\n- Kurs-Wiki\nEI50471: Wireless Sensor Networks Laboratory | Wireless Sensor Networks Laboratory [WSNLab]\n- zusätzliche Unterlagen wie technische Dokumentationen und wissenschaftliche Arbeiten",
    "literature": "Nachfolgende Literatur wird empfohlen:\n- Holger Karl, Andreas Willig: \"Protocols and Architectures for Wireless Sensor Networks\", ISBN\n978-0-470-51923-3 (Hauptreferenz)\n- Feng Zhao, Leonidas Guibas: \"Wireless Sensor Netowkrs - An Information Processing\nApproach\", ISBN 978-1-55860-914-3\n- Ivan Stojemenovic: \"Handbook of Sensor Networks: Algorithms and Architectures\", ISBN\n978-0471684725\n- Jun Zheng, Abbas Jamalipour: \"Wireless Sensor Networks - A Networking Perspective\", ISBN\n978-0470167632",
    "lv_sws_lecturer": "Wolfgang Kellerer (wolfgang.kellerer@tum.de)\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nWireless Sensor Networks Laboratory (Praktikum, 5 SWS)\nDeshpande Y [L], Kellerer W, Aykurt K, Ursu R, Wietfeld A, Zerwas J"
  },
  {
    "module_id": "EI5052",
    "title": "Time-Varying Systems and Computations",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "During an oral exam students proof taht they are able to extrapolate their abilitys acquired during the module to given problems. The ability of team-oriented problem solving is assessed by problem-based homeworks (programming tasks) during the lecture period. For the assessment 4 work-sheets are handed out and graded. Reading- and understanding competence as well as written communication skills are assesses with home-written essays. For the assessment 4 reading tasks are handed out for the students to answer questions and discuss. Oral communication skills are assessed by a short presentation. Students present and explain topic-related and application-oriented literature to each other. The final grade consists of: exam: 50% programming tasks: 30% essays: 10% presentation: 10%",
    "repetition": "Folgesemester\nEI5052: Time-Varying Systems and Computations | Time-Varying Systems and Computations",
    "recommended_prerequisites": "Working Knowledge of (numerical) Linearer Algebra, Linear Time-Invariant System Theory,\nFundamentals of Signal Processing, Programming Skills in Matlab;\nWe expect students to have knowledge of material, which is taught in the following Bachelor\ncourses at TUM:\n- Signale, Systeme, Regelungstechnik, Lineare Algebra (1.Semester), Numerische Mathematik\n(4.Semester)\nIt is recommended to have particpated in the courses:\n- Projektkurs Matlab (MSc)\n- Numerical Methods of Electrical Engineering (MSc)",
    "content": "Review of time-invariant systems and signals, Large scale computations in engineering and science, Computational problems involving Toeplitz matrices, Realization theory for LTI systems, Computational linear algebra and time-varying systems, State-space representation of LTV systems, Realization theory for LTV systems, Isometric and inner operators, inner-outer factorization, and operator inversion, Semi-seperable matrix structure. Mapping algorithms onto GPU architectures.",
    "learning_outcomes": "After the course the student can create Matlab programs implementing efficient algorithms for solving large-scale and structured computational linear algebra problems for engineering applications. Students can analyse the effectiveness and efficiency of comutational linear algebra algorithms. The can analyse compuational engineering problems and express them in terms of linear time-varying systems concepts. Students can read and understand current research papers on the subject of efficient computations and explain their learnings to others in terms of oral and written communication.",
    "teaching_methods": "The course consists of a lecture given on a black board, which includes discussions of reading assignements (concept of inverted classroom; classical or current research papers on the subject), the exercises consists mainly of tipps, tricks and hints for the students to support them to accomplish their project tasks (programming), as well as answering specific questions asked by students, the exercises may also contain complementary presentations to selected mathematical topics, the students shall work in small teams (3-4 persons) in order to deliver about 5 project tasks throughout the semester, those project tasks will be problems that students need to write a program in Matlab to produce the requested results, the delivered solutions will be discussed with students to provide detailed feedback on their status. Students will also be asked to read literature, to produce correpsonding posters and present the content to all fellow students.",
    "media": "The following media types will be used:\nEI5052: Time-Varying Systems and Computations | Time-Varying Systems and Computations\n- Frontal Presentation using Blackboard\n- Guest Lecturers\n- student presentations\n- Write-up of lecture material (via download from Website),\n- Literature reading assignments\n- team-oriented programming tasks\n- Matlab-Demos",
    "literature": "The course will be based on material contained in the following books:\n- P. Dewilde, A.-J. van der Veen. Time-Varying Systems and Computations. Kluwer Academic\nPublishers, 1998.\n- G. Strang. Linear Algebra and its Applications. Hartcourt Brace Jovanovich Publishers, San\nDiego, 1988.\n- G. Strang. Computational Science and Engineering. Wellesley-Cambridge Press, 2007.\n- T. Kailath. Linear Systems. Prentice Hall, 1980.\n- A.C. Antoulas. Approximation of Large-Scale Dynamical Systems. Advances in Design and\nControl. SIAM, Philadelphia, 2005.",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTime Varying Systems and Computation (Vorlesung mit integrierten Übungen, 6 SWS)\nDiepold K, Gronauer S, Hein A, Röhrl S"
  },
  {
    "module_id": "EI5069",
    "title": "Projektpraktikum SmartCard",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Bewertung des Moduls erfolgt in einer Zweiteiligen mündlichen Prüfung. Als Basis für die Prüfung dienen die im Praktikum entwickelte Implementierung, Angriffe und Gegenmaßnahmen sowie ein zu erstellendes Labortagebuch. In den beiden Teilen der mündlichen Prüfung werden\n- in einem ca. 20-minütigen Abschlussvortrag mit anschließender ca. 10-minütiger Diskussion\ndie erlernten praktischen Fähigkeiten dargestellt und die Fähigkeit, ein komplexes eingebettete Systeme zu planen und zu realisieren, nachgewiesen. Außerdem wird in diesem Vortrag das Verständnis für Angriffe auf und Gegenmaßnahmen für eingebettete Systeme nachgewiesen.\n- in einem zehnminütigen, individuellen Gespräch wird der individuelle Beitrag zum Gruppenprojekt\nsowie das theoretische Verständnis der bearbeiteten Aufgabe nachgewiesen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Für die praktische Implementierung des Programmcodes für die Smart Card Hardware,\nbenötigen die Studierenden Basiswissen in Digitaltechnik, sowie zum Aufbau und der\ngenerellen Funktionsweise von Mikrocontrollern. Das Praktikum setzt außerdem gute C\nProgrammierkenntnisse voraus. Wir empfehlen die Vorlesung \"Embedded Systems and\nSecurity\" oder eine vergleichbare Lehrveranstaltung, sowie den Kurs \"Secure Implementation of\nCryptographic Algorithms\" vor oder begleitend zum Praktikum zu belegen.",
    "content": "Zum Schutz ihrer digitalen Inhalte und zur Zugriffskontrolle sichern Pay-TV Betreiber ihre Übertragungen mithilfe eines kryptografischen Algorithmus. Jede Person mit einem gültigen EI5069: Projektpraktikum SmartCard | Smart Card Lab [SmartCard] Abonnement verfügt über eine Smart Card mit individuellem Schlüssel. Mithilfe dieser Karte können die Inhalte entschlüsselt und angesehen werden. Eine Kompromittierung dieser Smart Cards, wie beispielsweise die Anfertigung von Kopien oder das Freischalten unbezahlter Inhalte, versprechen Angreifern ein hohes Gewinnpotential. Die weite Verbreitung der Chipkarten ermöglicht letzteren darüber hinaus einen direkten Zugang zur Hardware, mit diesem effektive, spezialisierte Angriffe möglich werden. Im Rahmen dieses Praktikums bekommen die Studierenden einen Einblick in die Herausforderungen ein Pay-TV System sicher zu implementieren. Sie beginnen damit, ein bestehendes System zunächst durch Seitenkanal- und Fehlerangriffe zu brechen und geheimes Schlüsselmaterial aus einer Smart Card zu extrahieren. Dieser Schlüssel wird im Anschluss in eine selbst programmierte Smart Card eingesetzt. Dann geschieht ein Wechsel der Rolle und die Studierenden verfolgen verschiedene Strategien mit dem Ziel ihre eigenen Implementierungen über verschiedene Gegenmaßnahmen zu schützen. Am Ende des Praktikums bewerten sie die Effektivität und Kosten dieser Gegenmaßnahmen anhand einiger geeigneter Metriken.",
    "learning_outcomes": "Nach Durchführung des Moduls sind die Studierenden in der Lage ein modernes eingebettetes System zu programmieren. Insbesondere sind sie fähig, das grundlegende Design einer Smart Card auf Basis eines ARM-Microcontrollers, selbstständig entsprechend anhand vorgegebener Spezifikationen zu realisieren. Die Studierenden verstehen die gängigsten Kommunikationsprotokolle für Smart Cards und können diese erklären. Sie sind in der Lage Mikrocontroller zu programmieren und kennen grundlegende kryptografische Algorithmen. Sie beherrschen die Funktionsweise und Implementierung gängiger Gegenmaßnahmen gegen DPA Angriffe auf Smart Cards. Zudem kennen sie die Funktionsweise grundlegender Fehlerangriffe und können diese am Beispiel einer DFA erläutern.",
    "teaching_methods": "Zur Einführung in die verschiedenen Themenbereiche werden zu Beginn des Praktikums Einführungsveranstaltungen abgehalten. Darauf folgend werden die Studierenden Gruppenweise bei der Planung und Umsetzung des Projekts unterstützt. Die Ergebnisse werden im Rahmen einer Zwischen- und Abschlusspräsentation im Plenum vorgestellt. Generell erfolgt die Durchführung des Projekts in freier Zeiteinteilung, wobei die Studierenden dazu angehalten sind regelmäßige Gesprächstermine mit dem Tutor oder Betreuer zu vereinbaren und Feedback für die jeweilige Projektphase erhalten. Die Praktikumsräume des Lehrstuhls, sowie Unterstützung durch den Betreuer oder Tutors bei Problemen, stehen den Studierenden in der gesamten Projektlaufzeit während der regulären TUM Öffnungszeiten zur Verfügung. EI5069: Projektpraktikum SmartCard | Smart Card Lab [SmartCard]",
    "media": "Folgende Medien kommen zum Einsatz:\n- Einführungsvorträge\n- Kursunterlagen mit genauer Beschreibung der Aufgaben, der eingesetzten Tools sowie einer\nÜbersicht über das Systemkonzept\n- Individuelle Diskussion mit dem Betreuer",
    "literature": "Handbuch der Chipkarten, Wolfgang Rankl und Wolfgang Effing, ISBN-13: 978-3-446-40402-1\nUnderstanding Cryptography, Christof Paar and Jan Pelzl, ISBN-13: 978-3-642-04100-6",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSmartCard Projektpraktikum (Forschungspraktikum, 4 SWS)\nMusic T [L], Sigl G, Schupp J"
  },
  {
    "module_id": "EI5075",
    "title": "Optical Communication Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nEI5075: Optical Communication Systems | Optical Communication Systems\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nOptical Communication Systems (Vorlesung mit integrierten Übungen, 4 SWS)\nHanik N ( Baran-Akin B ), Plabst D"
  },
  {
    "module_id": "EI5084",
    "title": "Seminar on Topics in Signal Processing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Module examination with the following elements:\n- written scientific paper as homework\n- regular discussions with assigned supervisor about the progress of the work\n- Student presentation of 25 minutes about the assigned scientific topic followed by Q&A\nGrading Policy * Seminar manuscript: 40% * Seminar presentation: 60%",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No special requirements.",
    "content": "Varying topics on Signal Processing The Seminar on Topics in Signal Processing is an elective course in the third semester of the Master of Science in Communications Engineering (MSCE) program. It is a joint seminar of the * Institute for Circuit Theory and Signal Processing: Prof. J.A. Nossek EI5084: Seminar on Topics in Signal Processing | Seminar on Topics in Signal Processing * Media Technology Group - Institute of Communication Networks: Prof. E. Steinbach During the preparation of and the participation in the seminar, you will acquire hands-on experience of scientific research and improve your skills of presenting complex scientific information. During the course you will guided by experienced members of our scientific staff.",
    "learning_outcomes": "Students learn how to read and comprehend scientific literature. In addition, students learn how to structure the available information and how to extract the important parts. Furthermore, participants learn how to structure and prepare the scientific content for an oral presentation which targets both a genral audience and experts. Students learn how to write a scientific paper. after completing the course students will be able investigate a scientific topic from the corresponding scientific literature (in particular conference/workshop or journal publications).",
    "teaching_methods": "Each student has to prepare an oral presentation of the topic he or she has registered for. Attending the seminar is mandatory. We expect active participation of all students in the discussion which follows every presentation. The first step after the kick-off meeting is to contact the respective adviser listed next to the who will provide you with more information regarding the topic, including relevant literature. The students have to collect the required literature, understand its contents, and prepare a manuscript which summarizes the topic. The advisers will give feedback about an initial draft paper prepared by the participants. It is a good idea to discuss unclear issues with the adviser to make sure that you have understood everything correctly. The final version of your presentation has to be submitted in electronic form at least one day ahead of your scheduled presentation.The adviser will provide feedback about a draft presentation prepared by the participants.",
    "media": "The following kinds of media are used:\n- Presentations\n- Latex templates for a scientific paper",
    "literature": "The following literature is recommended:\n- the specific literature depends on the selected topic and will be made available during the kick-off\nmeeting.",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nEI5084: Seminar on Topics in Signal Processing | Seminar on Topics in Signal Processing\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Topics in Signal Processing (Seminar, 3 SWS)\nSteinbach E, Zakour M, Xu X, Patsch C, Chaudhari R"
  },
  {
    "module_id": "EI5087",
    "title": "Seminar on Topics in Communications Networking",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The examination consists of two main parts: a written technical report and a presentation. The written report is a means to measure the student's ability to read the assigned topic, search for related papers, understand the topic and summarize it in a clear and concise way in 6 pages. Based on the first version of the report, the student will get feedback of the supervisor and two other reviews. This feedback will help the student to increase his/her ability to write technical reports. The topic and main important results will be presented in class. The presentation is a means to evaluate the student's ability to introduce the audience to the research topic, to trigger interest while presenting the motivation, methodology and results, to keep the presentation time, to have good presentation skills and to answer questions from the audience in a clear and explanatory way. The final grade consists of the following elements:\n- 50% written technical report (incl. progress discussions with the supervisor)\n- 50% presentation in seminar (incl. Q&A examination)",
    "repetition": "",
    "recommended_prerequisites": "Fundamentals of modern communication theory and communication networking principles\nThe following modules should be passed before taking the course:\n- Adaptive and Array Signal Processing\n- Broadband Communication Networks\n- Channel Coding\nEI5087: Seminar on Topics in Communications Networking | Seminar on Topics in Communications Networking\n- Information Theory and Source Coding",
    "content": "Introduction to selected current research topics in the fields of communication networking, communication protocols, network theory, information theory, queuing theory, communication systems, network resource management, signaling systems, wireless cellular and multihop communications, network planning and optimization, network performance analysis. In the seminar the participants prepare their own contributions based on literature study in form of technical papers, presentations and intensive discussions to give all students a state-of-the-art introduction to important recent research areas.",
    "learning_outcomes": "Upon completion of the module, students are able to:\n- Perform a complete literature review of an assigned topic\n- Understand the assigned topic and be able to summarize it in a technical report.\n- Improve the writing skills but learning how to structure the report, what to include in the report,\nhow to explain it in a clear and consistent way, refer to existing work, how to improve the abstract and the conclusion, etc.\n- Improve the presentation skills but preparing good slides, learning how to speak, move, look\n- Answer questions from the audience on the presented work.\n- Review available papers and technical reports.",
    "teaching_methods": "Learning method: Guided and supported by an advisor, students learn how to search and review scientifc literature. Students also learn how to write a scientific review paper and how to prepare and execute a scientific presentation. Guidelines on presentation and writting techniques are provided in addition to the individual methods of the students. Teaching method: In the beginning introductions are given by the coordinators. Tutorials on how to prepare and give a presentation, how to read and review a technical paper and how to write a technical paper are given to the students. Based on that, students give a first presentation, which is recorded and showed to each student in order to help improving their presentation skills. The students then can focus on the selected topic and work on the presentation and the technical report. This report is reviewed and discussed by the supervisor and by an english expert. At the end of the seminar, the technical report is submitted and the presentation is given. Discussions between the presenters and the audience follow the presentations.",
    "media": "",
    "literature": "EI5087: Seminar on Topics in Communications Networking | Seminar on Topics in Communications Networking",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Topics in Communications Networking (Hauptseminar, 3 SWS)\nAsadi N [L], Kellerer W, Aykurt K, Ursu R, Wietfeld A, Zerwas J"
  },
  {
    "module_id": "EI5090",
    "title": "Seminar on Signal Processing in Communications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Module examination with the following elements:\n- written scientific paper as homework\n- regular discussions with assigned supervisor about the progress of the work\n- Student presentation of 20 minutes about the assigned scientific topic followed by Q&A\nGrading Policy * Seminar manuscript: 40% * Seminar presentation: 60%",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No special requirements.",
    "content": "Varying topics on Signal Processing in Communications The Seminar on Signal Processing in Communications is an elective course in the third semester of the Master of Science in Communications Engineering (MSCE) program. During the preparation of and the participation in the seminar, you will acquire hands-on experience of scientific research and improve your skills of presenting complex scientific information. During the course you will guided by experienced members of our scientific staff. EI5090: Seminar on Signal Processing in Communications | Seminar on Signal Processing in Communications",
    "learning_outcomes": "Students learn how to read and comprehend scientific literature. In addition, students learn how to structure the available information and how to extract the important parts. Furthermore, participants learn how to structure and prepare the scientific content for an oral presentation which targets both a genral audience and experts. Students learn how to write a scientific paper. after completing the course students will be able investigate a scientific topic from the corresponding scientific literature (in particular conference/workshop or journal publications).",
    "teaching_methods": "Each student has to prepare an oral presentation of the topic he or she has registered for. Attending the seminar is mandatory. We expect active participation of all students in the discussion which follows every presentation. The first step after the kick-off meeting is to contact the respective adviser listed next to the who will provide you with more information regarding the topic, including relevant literature. The students have to collect the required literature, understand its contents, and prepare a manuscript which summarizes the topic. The advisers will give feedback about an initial draft paper prepared by the participants. It is a good idea to discuss unclear issues with the adviser to make sure that you have understood everything correctly. The final version of your presentation has to be submitted in electronic form at least one day ahead of your scheduled presentation.The adviser will provide feedback about a draft presentation prepared by the participants.",
    "media": "The following kinds of media are used:\n- Presentations\n- Latex templates for a scientific paper",
    "literature": "The following literature is recommended:\n- the specific literature depends on the selected topic and will be made available during the kick-off\nmeeting.",
    "lv_sws_lecturer": "Wolfgang Utschick utschick@tum.de\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Signal Processing in Communications (Seminar, 3 SWS)\nFesl B, Utschick W"
  },
  {
    "module_id": "EI5092",
    "title": "Seminar on Security in Information Technology",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Schriftliche Ausarbeitung über vorgegebenes Thema als Hausarbeit (50%).\n- ca. 30 minütige Präsentation des vorgegebenen Themas incl. anschließender Diskussion (50%)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Kryptologie oder gleichwertige Grundlagenvorlesung\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\n- Sichere Implementierung kryptographischer Verfahren\n- Selected Topics in System Security",
    "content": "Wechselnde Schwerpunktthemen zur Sicherheit in Informationstechnischen Systemen. Die Modulteilnehmer erarbeiten selbstständig aktuelle wissenschaftliche Beiträge und fertigen eine schriftliche Ausarbeitung. Die Resultate werden anschließend in Form von Vorträgen allen Teilnehmern präsentiert. Es erfolgt eine intensive Behandlung der Thematik in der Diskussion. EI5092: Seminar on Security in Information Technology | Seminar on Security in Information Technology",
    "learning_outcomes": "Nach erfolgreeichem Abschluss des Moduls verfügen die Studierenden über Kenntnisse der aktuellen Probleme und Aufgabenstellungen im Bereich Sicherheit in informationstechnischen Systemen. Der Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der Sicherheit in der Informationstechnik selbstständig auf wissenschaftliche Weise zu bearbeiten, eine schriftliche Ausarbeitung dazu anzufertigen sowie die Qualität von wissenschaftlichen Texten zu bewerten. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbstständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt. Darüber hinaus wird ein Präsentationstraining und eine Einführung in das Schreiben von wissenschaftlichen Arbeiten angeboten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer",
    "literature": "",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Security in Information Technology (Hauptseminar, 3 SWS)\nSchamberger T [L], Pehl M"
  },
  {
    "module_id": "EI5101",
    "title": "Regelungs- und Steuerungstechnik 1",
    "level": null,
    "language": null,
    "semester_duration": null,
    "frequency": null,
    "credits": 4,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": 5,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "EI5101: Regelungs- und Steuerungstechnik 1 | Continuous and Discrete Control Systems 1\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI5111",
    "title": "Regelungs- und Steuerungstechnik 2",
    "level": null,
    "language": null,
    "semester_duration": null,
    "frequency": null,
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "EI5111: Regelungs- und Steuerungstechnik 2 | Continuous and Discrete Control Systems 2\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI5183",
    "title": "Control Theory",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 75,
    "hours_presence": 45,
    "examination_achievements": "Die Note wird durch eine schriftliche Abschlussklausur (90 min) bestimmt. In der Klausur wird überprüft, ob die Studierenden in der Lage sind, die gelernten und eingeübten Methoden der Systemanalyse und des Reglerentwurfs auf neue Probleme anzuwenden. Dies wird durch Aufgabenrechnen überprüft. Zusätzlich wird in Kurzfragen geprüft, ob ein vertieftes Verständnis der Methoden erlangt wurde.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Studierenden sollten mit den Grundlagen von gewöhnlichen Differentialgleichung und lineare\nAlgebra vertraut sein.",
    "content": "Grundlagen der Steuerung und Regelung, Automatisierung in technischen und nichttechnischen Systemen. - Modellbildung, Linearisierung und lineare Systeme. - Zeitverhalten linearer dynamischer Systeme. - Systemdynamische Bausteine, Zeitverzögerte Systeme. - Stabilität von LTI-Systemen, Stabilitätskriterien. - Grundlagen der Regelung und Standardregler. - Reglerentwurf und Methoden zur Reglerparametrierung. - Strukturelle Erweiterungen der einschleifigen Regelungsstruktur durch Vorsteuerung und Reglerkaskaden. - Zustandsbasierter Reglerentwurf, Linearquadratische Regelung, Zustandsbeobachter von LTI-Systemen. - Anwendungsbeispiele.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls hat der Studierende ein tieferes Verständnis von Konzepten der linearen Regelung. Studierende sind in der Lage lineare Regelstrecken und Regelkreise zu analysieren und gelernte Reglerentwurfsverfahren auszuwählen und anzuwenden. EI5183: Control Theory | Control Theory Darüber hinaus haben die Studierenden ein grundlegendes Verständnis für dynamische Systeme und deren Verhalten erworben.",
    "teaching_methods": "Die Vorlesung ist als interaktiver Vortrag geplant. Der Inhalt der Vorlesung wird Schritt fuer Schritt unter der Teilnahme der Studenten besprochen. Durch die Verwendung von zahlreichen Beispielen, die waehrend der Vorlesung und Uebung von den Studenten individuell durchgerechnet werden, soll ein tiefes Verstaendnis der Materie vermittelt werden.",
    "media": "Tafelanschrieb,\nVorlesungsskript\nUebungsblaetter mit den entsprechenden Musterloesungen",
    "literature": "Dorf R., Bishop R.: Modern Control Systems, 10th ed., Pearson Prentice Hall.\nD’Azzo J., Houpis C., Sheldon S.: Linear Control System Analysis and Design with Matlab, 5th ed.,\n2005, Marcel Dekker Inc.\nK. J. Astrom, R. M. Murray: Analysis and Design of Feedback Systems, 2004.",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nControl Theory (Vorlesung mit integrierten Übungen, 3 SWS)\nBuss M, Daniels A, Das N, Kerz S"
  },
  {
    "module_id": "EI5397",
    "title": "Regelungs- und Steuerungstechnik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit in den Veranstaltungen des Moduls behandelte Grundaufgaben der Steuerung und Regelung gelöst werden können. Mit den Prüfungsaufgaben wird das Erreichen der angestrebten Lernergebnisse des Moduls geprüft. Die Prüfungsfragen gehen über den gesamten Vorlesungsstoff.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "Grundlagen der Steuerung und Regelung, Automatisierung in technischen und nichttechnischen Systemen. - Modellbildung, Linearisierung und lineare Systeme. - Zeitverhalten linearer dynamischer Systeme. - Systemdynamische Bausteine, Zeitverzögerte Systeme. - Stabilität von LTI-Systemen, Stabilitätskriterien. - Grundlagen der Regelung und Standardregler. - Stabilitätsanalyse von Regelkreisen im Frequenzbereich, Nyquist- und Bodediagramme. - Reglerentwurf und Methoden zur Reglerparametrierung. - Strukturelle Erweiterungen der einschleifigen Regelungsstruktur durch Vorsteuerung und Reglerkaskaden. - Zustandsbasierter Reglerentwurf, Linearquadratische Regelung, Zustandsbeobachter von LTI-Systemen. - Digitale Implementierung von Steuerungs-, Regelungs- und Filtergesetzen. - Ereignisdiskrete Steuerungen und Petri-Netz-Modellierung, Koordinierung von Teilsteuerungen. - Technik von Regelungs-, Steuerungs- und Automatisierungssystemen. - Anwendungsbeispiele. EI5397: Regelungs- und Steuerungstechnik | Continuous and Discrete Control Systems",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende mit grundlegenden Konzepten der Regelungs- und Steuerungstechnik vertraut und in der Lage, Regelungen selbst zu konzipieren und umzusetzen. Darüber hinaus wird den Studierenden ein tieferes Verständnis für dynamische Systeme und deren Verhalten vermittelt.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen\n- Tutorübungen",
    "literature": "Skriptum",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRegelungs- und Steuerungstechnik (LB) (Vorlesung mit integrierten Übungen, 5 SWS)\nBuss M, Daniels A, Kerz S"
  },
  {
    "module_id": "EI60004",
    "title": "Computational Neuroscience",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Franklin, David; Prof. Ph.D.\nEI60004: Computational Neuroscience | Computational Neuroscience\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputational Neuroscience (Vorlesung mit integrierten Übungen, 4 SWS)\nRattei F [L], Franklin D, Gjorgjieva J, Leib R"
  },
  {
    "module_id": "EI60005",
    "title": "Large-Scale Modeling and Large-Scale Data Analysis",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "During a take-home exam (“einmalige Übungsleistung”, deadline is 4-5 days after the task assignment in Moodle, unsupervised exam), the students will be given an opportunity to demonstrate their acquired knowledge by answering real research questions regarding the analysis of large-scale neuronal data from different sources. Problems may involve the pre- processing of raw data, aspects of dimensionality reduction, modeling and the interpretation of results. The emphasis of the exam is on understanding and originality, in order to simulate a real- life research situation.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "(1a) Neuro-Recording Methods (NRM)\n(1b) Neuro Anatomy and Neuro Physiology (NAP)\n(1c) Computational Neuroscience (CNS)\n(1d) Basic knowledge in linear algebra, calculus, probability theory, dynamical systems and\nprogramming, e.g. as acquired in 'Fundamentals in Mathematics for Neuroengineering' and\n'Fundamentals in Computer Science for Neuroengineering'",
    "content": "The first starts by introducing the principles of large-scale neural modelling, and why and when simulations and analytical approaches are needed to model empirical observations of neural activity or behavior, or to implement specific computational goals. A focus will be on models of perceptual decision making, i.e. the question of how neural systems can make decisions based on incomplete or noisy sensory inputs. We will cover goal-driven optimization of neural computations EI60005: Large-Scale Modeling and Large-Scale Data Analysis | Large-Scale Modeling and Large-Scale Data Analysis in recurrent networks, as well as statistical and computational approaches for optimizing and constraining simulations of neural networks. The second part of the course covers principles of large-scale neural analysis, in particular Methods and tools for analysis of large-scale neural recordings and simulations, e.g. cross- correlations or clustering approaches. A particular focus is on methods and tools for dimensionality reduction and visualization of large-scale neural dynamics, including state-space models and time- series applications. Finally, it includes practical example applications and visualizations using large-scale data-sets, e.g. obtained using electrophysiological and optical multi-cell recording techniques.",
    "learning_outcomes": "After successful participation, students are able to describe, understand and apply techniques for simulation and analysis of large- scale neural models. They understand differences between mechanistic and phenomenological models, and are able to select and use computational tools for different tasks in engineering and science. Additionally, students can describe, understand and apply statistical and mathematical tools for analyzing high-dimensional measurements or simulations of neural activity and/or connectivity (in particular multi-neuron neural activity measurements) and to evaluate which tools are appropriate for which measurement.",
    "teaching_methods": "Models and tools for Large Scale Neural Modelling and Data Analysis are introduced during the lectures. During exercises, students implement and apply them to analyze existing data, and individually experiment with different methods and implementations.",
    "media": "Slide-presentations, Whiteboard, Programming exercises.",
    "literature": "Analysis of Neural Data, by Kass, Eden, Brown, Springer, 2014; Neuronal Dynamics: From single\nneurons to networks and models of cognition, by Gerstner, Kistler, Naud, Paninski, Cambridge\nUniversity Press, 2014",
    "lv_sws_lecturer": "Portugues Peters, Ruben; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nLarge Scale Modelling and Data Analysis (Vorlesung mit integrierten Übungen, 4 SWS)\nRattei F [L], Duncan S, Farouj Y, Portugues Peters R"
  },
  {
    "module_id": "EI60007",
    "title": "Statistics and Probability Theory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "During a written exam (90 min) students will be asked to critically analyze data in a biomedical and engineering domain using probabilistic and statistical analysis methods, as well as to describe the fundamental theory behind such analyses. Students will be assessed on both written and computational analysis methods.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge in linear algebra and calculus, e.g. as acquired in “Fundamentals Mathematics\nfor Neuroengineering.” Programming in Python, e.g. as acquired in the MSNE Computer Science\nWorkshop.",
    "content": "The course will be divided into four interdependent core topics: 1) probability theory and distributions, 2) statistics and statistical inference, 3) information theory in neuroscience, and 4) practical and ethical considerations for real-world statistical applications. The course will begin with a refresher of mathematical tools required for probability and statistics, including sets, permutations, combinations, a review of relevant calculus, and special functions. It will then cover probability theory, including random variables, probability distributions, and descriptive statistics. We will then discuss the principles of statistical inference, hypothesis tests, and descriptive and inferential methods in regression and correlation. Finally, the course will cover practical topics such as information theory in neuroscience, experimental design, and real-world examples and ethics in the statistical analysis of data. EI60007: Statistics and Probability Theory | Statistics and Probability Theory",
    "learning_outcomes": "After completion of this course, students understand and can apply central concepts of statistical and probabilistic theory to data analysis questions, with a focus on higher-level concepts listed as topics 3) and 4) above. Students can design statistically and ethically rigorous experiments (topics 2 and 4 above), and derive and apply statistical methods to analyze acquired data, with a focus on neuroscience (topic 3 above).",
    "teaching_methods": "Theory, proofs, and dataset examples are used to describe central probability and statistics concepts during the lectures. At-home problem sets and exercise sections will provide students with practice in deriving and using analysis methods. The module laboratory sections will provide students with hands-on experience with the use of statistical data analysis software (Python/ pandas).",
    "media": "Whiteboard, programming excercises, slide-presentations",
    "literature": "M. Taboga. Lectures on Probability Theory and Mathematical Studies. (2017) 3rd Ed.,\nCreateSpace Independent Publishing Platform. ISBN: 978-1981369195.\nP. Bruce, A. Bruce, and P. Gedeck. Practical Statistics for Data Scientists. (2020) 2nd Ed., O’Reilly\nMedia, Inc. ISBN: 978-1492072942.",
    "lv_sws_lecturer": "Kozielski, Kristen; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nStatistics and Probability Theory (Lecture) (Vorlesung, 2 SWS)\nKozielski K [L], Gjorgjieva J, Kozielski K\nStatistics and Probability Theory (Excercise&Lab) (Übung, 2 SWS)\nKozielski K [L], Kumari P, Milojkovic A"
  },
  {
    "module_id": "EI60008",
    "title": "Literature Seminar 1, Scientific Debating, Colloquium",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "see english version",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "see english version",
    "content": "see english version",
    "learning_outcomes": "see english version",
    "teaching_methods": "see english version",
    "media": "see english version",
    "literature": "see english version",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nEI60008: Literature Seminar 1, Scientific Debating, Colloquium | Literature Seminar 1, Scientific Debating, Colloquium\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nLiterature Seminar, Scientific Debating, Colloquium (Vorlesung, 4 SWS)\nCheng G [L], Cheng G, Franklin D, Korver T, Leib R, Nassour J"
  },
  {
    "module_id": "EI60009",
    "title": "Neuro-inspired Systems Engineering",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "see english version",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "see english version",
    "content": "see english version",
    "learning_outcomes": "see english version",
    "teaching_methods": "see english version",
    "media": "see english version",
    "literature": "see english version",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nEI60009: Neuro-inspired Systems Engineering | Neuro-inspired Systems Engineering [NISE]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNeuro-inspired Systems Engineering (Praktikum, 1 SWS)\nBerberich N\nNeuro-inspired Systems Engineering (Übung, 1 SWS)\nBerberich N, Nassour J\nNeuro-inspired Systems Engineering (Vorlesung, 2 SWS)\nCheng G [L], Berberich N, Cheng G, Nassour J"
  },
  {
    "module_id": "EI60011",
    "title": "Neuroengineering Symposium",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 2,
    "hours_total": 60,
    "hours_self_study": 45,
    "hours_presence": 15,
    "examination_achievements": "",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nEI60011: Neuroengineering Symposium | Neuroengineering Symposium [NES]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNeuroengineering Symposium (Seminar, 1 SWS)\nCheng G [L], Berberich N, Nassour J"
  },
  {
    "module_id": "EI60012",
    "title": "Literature Seminar 2, Scientific Debating, Colloquium",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "see english version",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "see english version",
    "content": "see english version",
    "learning_outcomes": "see english version",
    "teaching_methods": "see english version",
    "media": "see english version",
    "literature": "see english version",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nEI60012: Literature Seminar 2, Scientific Debating, Colloquium | Literature Seminar 2, Scientific Debating, Colloquium\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nLiterature Seminar 2, Scientific Debating, Colloquium (Vorlesung, 3 SWS)\nCheng G [L], Al Boustani G, Cheng G, Kozielski K, Nassour J, Wolfrum B"
  },
  {
    "module_id": "EI70110",
    "title": "Computer Vision",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung besteht aus folgenden Bestandteilen: Mittels teambasierter Projektarbeit in Form eines Software Entwicklungsprojektes (Computer Vision Challenge) weisen die Studierenden den Erwerb praktischer Problemlösung- und Umsetzungsfähigkeiten nach, indem sie praxisnahe Aufgabenstellungen (z.B. Multiview- Synthese, Schätzung von Tiefenkarten für autonome Fahrzeuge, Verortung von realen und virtuellen Objekten für Augmented Reality Anwendungen) lösen. Dies betrifft vor allem die Fähigkeit Fragestellungen der Computer Vision als Berechnungsprobleme der linearen Algebra auszudrücken, diese numerisch zu lösen und elementare Computer Vision Verfahren in Matlab zu implementieren. Die Teams erarbeiten hierzu den Inhalt aktueller Zeitschriftenartikel, dokumentieren und demonstrieren die Ergebnisse ihres jeweiligen Projektes. Im Verlaufe des Semesters gibt es interaktive Hausaufgaben auf der Online Plattform „Matlab Grader“. Durch die zeitnahe und detaillierte Umsetzung der Vorlesungsinhalte wie den 8-Punkt- Agorithmus, den Harris Corner Detektor oder das RanSaC Verfahren prüfen die Hausaufgaben sowohl das algorithmische Verständnis als auch die Programmierfertigkeiten aller Studierenden individuell ab. Zur Aufzeichnung des persönlichen Kompetenzerwerbs und zur kontinuierlichen Auseinandersetzung mit den Vorlesungsinhalten wird von den Studierenden über das gesamte Semester hinweg ein individuelles Laborbuch geführt. Wöchentliche (am besten noch häufigere) Einträge belegen die Auseinandersetzung mit Fragestellungen und Erkenntnissen aus der Vorlesung. Die Bewertungsgrundlage bilden hier die Regelmäßigkeit, Gewissenhaftigkeit, Sinnhaftigkeit, Strukturiertheit und Relevanz der verfassten Einträge. Die Teilleistungen gehen in die Gesamtnote mit folgender Gewichtung ein:\n- Hausaufgaben 30 %\n- Challenge 40 %\n- Laborbuch 30 %\nEI70110: Computer Vision | Computer Vision [CV] Auf ein positives Gesamtergebnis wird bei sinnvoller Bearbeitung der Hausaufgaben ein 0,3 Notenbonus gewährt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundkenntnisse in linearer Algebra, Signalverarbeitung und Matlab-Programmierung",
    "content": "Videoanalyse, Bildsynthese, Darstellung von Bildern, Bildgradient, Harris Ecken und Kantendetektor, trifokaler Tensor, Schätzalgorithmen, numerische Methoden der linearen Algebra, Bildrektifizierung, Bewegung steifer Körper, Essenzielle Matrix und Fundamentalmatrix, Epipolargeometrie, 8-Punkt-Algorithmus, 3D-Rekonstruktion, planare Epipolargleichung, 4-Punkt- Algorithmus, Mehrkamerasysteme, Koordinatentransformationen, robuste Parameterschätzung (RanSaC), maschinelles Lernen.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls können die Studierenden elementare Algorithmen aus der 3D Computer Vision erklären, implementieren und selbstständig auf neue Probleme übertragen. Sie sind fähig, Fragestellungen der Computer Vision als Berechnungsprobleme der linearen Algebra auszudrücken, diese numerisch zu lösen und elementare Computer Vision Verfahren in Matlab zu implementieren und zu bewerten. Die Studierenden haben praktische Erfahrung in teamorientierter Problemlösung und teambasierter Software Entwicklung.",
    "teaching_methods": "Es stehen Videovorlesungen des Dozenten zur Verfügung, die den Frontalunterricht auslagern. Die Vorlesung soll mit der Methode \"Inverted Classroom\" eine hohe interaktive Komponente haben. Durch den Einsatz der Online Plattform Tweedback und Hands-On Matlab Live Scripts sind die Studierenden in der Lage direkt, am Geschehen in der Präsenzstunde mitzuwirken und haben einen direkten Feedback Kanal. Echtzeit Quizze am Anfang jeder Vorlesungsstunde aktivieren und festigen die Inhalte der vorherigen Lerneinheiten. Die Themen der Videovorlesung werden von den Studierenden selbst in der Präsenzstunde angesprochen, in Gruppendiskussionen kondensiert und durch den Dozenten fachlich und methodisch ergänzt. In den Übungen werden die mathematischen Konzepte aus der Vorlesung anhand von Beispielen veranschaulicht und diskutiert. Zudem wird in der Übungsstunde gezielt Hilfestellung zu Fragen der Programmierung und zu Fragen, die von den Studierenden gestellt werden, gegeben sowie ergänzende Inhalte zu mathematischen Themen präsentiert. Durch die Nutzung des Online Tools „Matlab Grader“ können die Studierenden in ihrem Individuellen Tempo die auf die Vorlesung abgestimmten Aufgaben bearbeiten und erhalten unmittelbares Feedback. Ein jährlich wechselndes Programmierprojekt (Computer Vision Challenge) erlaubt den Studierenden persönliche Erfahrungen bei der Umsetzung einer praxisnahen Aufgabenstellung zu erleben. EI70110: Computer Vision | Computer Vision [CV] In den Fragestunden und im Tutorium kann noch gezielter auf die unterschiedlichen Probleme und Fragen der Studierenden eingegangen werden.",
    "media": "Videovorlesungen, Powerpointpräsentationen, Tafelarbeit, teamorientierte Programmieraufgaben,\nZeitschriftenliteratur, Online Hausaufgaben im Matlab Grader, Matlab Live Scripts, Tweedback",
    "literature": "Yi Ma, S. Soatto, J. Kosecka, S. Sastry: An Invitation to 3D Vision: From Images to Geometric\nModels, 2003 Springer.\nR. Hartley, A. Zisserman: Multiple View Geometry in Computer Vision, 2004 Cambridge University\nPress",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputer Vision (Vorlesung, 2 SWS)\nDaten J, Diepold K, Gronauer S, Sacchetto L\nComputer Vision (Übung) (Übung, 2 SWS)\nGronauer S, Sacchetto L"
  },
  {
    "module_id": "EI70120",
    "title": "Dynamische Systeme",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote wird durch eine schriftliche Abschlussklausur (90 min) bestimmt. In der Klausur wird überprüft, ob die Studierenden nichtlineare Phänomene erkennen können. Weiterhin wird durch Aufgabenrechnen und Kurzfragen überprüft, ob Konzepte wie Stabilität und Passivität verstanden wurden und für einfache Beispielsysteme analysiert werden können. Um die Kompetenzen beim Reglerentwurf zu prüfen, werden Aufgaben gestellt in denen ein Reglerentwurf für ein einfaches neues System durchgeführt und analysiert werden muss.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Mathematik dynamischer Systeme und der linearen Regelungssysteme, die in den\nVorlesungen für höhere Mathematik und Grundlagen der Regelungstechnik vermittelt wird.",
    "content": "Modellbildung, Analyse und Synthese dynamischer Systeme. - Nichtlineare Modelle und Systemklassen. - Nichtlineare Phänomene. - Stabilität nichtlinearer Systeme. - Eingangs- Ausgangs-Linearisierung. - Passivität. - Backstepping. - Flachheitsbasierte Regelung. - Einführung in die geometrische Regelung. - Einführung in die schaltenden und hybriden Systeme. - Sliding Mode Regelung. - Anwendungsbeispiele.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende in der Lage nichtlineare und lineare Dynamiken anhand von Modellbeschreibungen und Phänomenen voneinander abzugrenzen und technische und nicht-technische Systeme durch ein nichtlineares dynamisches System zu modellieren. Der Studierende versteht die Zusammenhänge wichtiger Systemeigenschaften wie z.B. Stabilität oder Passivität und kann ein System auf diese EI70120: Dynamische Systeme | Dynamic Systems [DS] Eigenschaften untersuchen. Die Studierenden lernen die wichtigsten Reglerentwurfsverfahren für nichtlineare Regelsysteme kennnen, und können deren Eignung für unterschiedliche Reglerentwurfsaufgaben an verschiedenen Regelstrecken analysieren und abschliessend die Performanz der Regelung bewerten.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Abhaltungssprache im WiSe Deutsch und im SoSe Englisch",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen",
    "literature": "H.K. Khalil, Nonlinear Systems, Pearson, third edition 2017.",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDynamische Systeme (Vorlesung mit integrierten Übungen, 4 SWS)\nBuss M, Chen Y, Teutsch J"
  },
  {
    "module_id": "EI70140",
    "title": "Optimal Control and Decision Making",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote wird durch eine schriftliche Abschlussklausur von 90 Minuten Dauer bestimmt. In der Klausur wird überprüft, ob die Studierenden in der Lage sind, die gelernten und eingeübten Verfahren zur modellprädiktiven Regelung, dynamischen Programmierung und LQ Regelung auf neue Probleme anzuwenden und die Eigenschaften der geregelten Systeme zu analysieren.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Mathematik dynamischer Systeme und der linearen Regelungssysteme, die in den\nVorlesungen für höhere Mathematik und Grundlagen der Regelungstechnik vermittelt wird.",
    "content": "Model Predictive Control (MPC): Prinzip von MPC; Stabilität von MPC; Lineare modellprädiktive Regelung (DMC, GPC); Robuste und stochastische modellprädikative Regelung; Learning-Based MPC; Dynamic Programming (DP): Bellman Rekursion; Reinforcement Learning; Policy Iteration; Value Iteration; Regelung von Markov Decision Processes; LQ Regelung: LQ-Regler; Stabilität von LQ Regelungen; Iterative LQ Regelung; Numerik Optimaler Steuerungen (nichtlineare Optimierung, KKT Bedingungen, QP Verfahren, SQP Verfahren, IP Verfahren); Anwendungen in Robotik und Power Engineering. EI70140: Optimal Control and Decision Making | Optimal Control and Decision Making",
    "learning_outcomes": "Nachdem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage ein Problem der optimalen Steuerung-/Regelung zu analysieren und es, je nach Anforderung, als statisches Optimierungsproblem im Framework der modellprädiktiven Regelung, der Dynamischen Programmierung oder der LQ Regelung zu formalisieren, gegebenenfalls unter Verwendung eines Lernverfahrens. Die Studenten sind in der Lage eine numerische Methode zur Lösung des statischen Optimierungsproblems auszuwählen, anzuwenden und weiterzuentwickeln.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesung Frontalunterricht gehalten. In den Übungen wird das in der Vorlesung gelernte Methodenwissen durch Anwendung auf einfache Beispielsysteme vertieft. Entsprechende Übungsaufgaben werden zur Verfügung gestellt. Die Übungsaufgaben werden detailliert vorgerechnet und Zeit für Rückfragen ist eingeplant. Häusliche Vorbereitung der Studierenden auf die Übungen wird erwartet. In den Übungsbetrieb integriert finden interaktive Übungen statt. Hier wird demonstriert, wie aktuelle Software für den Reglerentwurf und zur Analyse von komplexeren Anwendungsproblemen eingesetzt werden kann. Entsprechende Übungsaufgaben werden zur Verfügung gestellt und werden in häuslicher Vorbereitung und/oder in den Übungsstunden von den Studierenden am eigenen Rechner gelöst.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Übungsaufgaben mit Lösungen\n- Programm Code",
    "literature": "Papageorgiou, Leibold, Buss: Optimierung: Statische, Dynamische und Stochastische Verfahren\nfür die Anwendung, Springer 2015.\nRawlings, Mayne, Diehl: Model Predictive Control, Nob Hill Publishing 2017.\nCamacho, Bordons, Model Predictive Control, Springer 2007.\nGrüne, Pannek, Nonlinear Model Predictive Control, Springer 2017.",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nOptimal Control and Decision Making (Vorlesung mit integrierten Übungen, 4 SWS)\nBari S, Benciolini T, Leibold M"
  },
  {
    "module_id": "EI70220",
    "title": "Digital Signal Processing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "During a written exam with 180 minutes duration and without aids students solve various advanced digital signal processing related tasks by calculation and answering related questions. Matlab assignments with voluntary participation are offered during the semester and can be used to improve the final grade of the course. The final grade is composed of the following elements:\n- 100% final exam\nSuccessful completion of the Matlab assignments leads to a bonus of 0.3 on the final grade in case the final is passed. The Matlab assignments are successfully completed if at least an average of 65% is obtained when submitting the solutions to the LMT mat-checker.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Linear algebra, signals and systems, stochastic signals\nThe following modules should be passed before taking the course:\n- EI00330 Signaltheorie\n- EI00340 Stochastische Signale\n- EI00440 Nachrichtentechnik\nSome programming experience in Matlab is highly recommended. For participants with no or\nvery little Matlab experience, significant additional effort at the beginning of the semester will be\nrequired.\nEI70220: Digital Signal Processing | Digital Signal Processing [DSP]",
    "content": "Differences and similarities between one-dimensional and multidimensional DSP, two-dimensional signals and systems, sampling of spatio-temporal signals, two- and multi-dimensional filters, linear block transforms, filterbank transforms, lifting implementation, geometric wavelets, inverse problems for multi-dimensional signals, selected applications of DSP in media processing",
    "learning_outcomes": "At the end of the module students are able to understand and apply advanced theoretical concepts of digital signal processing. The students also gain a deep understanding on how to apply these concepts to selected media content. Students will learn the differences between one-dimensional and multi-dimensional DSP. Students will learn to move back and forth from spatial to frequency domain. Students will understand what representation of digital signals is most suitable for manipulation and resolution adaptation. Students will learn how to solve problems in DSP both analytically and by using Matlab",
    "teaching_methods": "Learning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons in exercises and tutorials. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way. Additionally, selected concepts are implemented using Matlab",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions\n- Live Matlab demos\n- Interactive Matlab lab sessions",
    "literature": "The following literature is recommended:\n- Jens-Rainer Ohm, \"\"Multimedia Communication Technology: Representation, Transmission and\nIdentification of Multimedia Signals,\"\" Springer 2004.\n- D.E. Dudgeon, R.M. Mersereau, Multidimensional Digital Signal Processing, Prentice-Hall Signal\nProcessing Series, 1984.\nR.C. Gonzalez, R.E. Woods, Digital Image Processing, Prentice Hall International; 2007.\nA.K. Jain, Fundamentals of Digital Image Processing, Prentice Hall; 1989.",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nEI70220: Digital Signal Processing | Digital Signal Processing [DSP]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDigital Signal Processing (Vorlesung mit integrierten Übungen, 4 SWS)\nSteinbach E, Xu X"
  },
  {
    "module_id": "EI70240",
    "title": "Statistical Signal Processing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 60,
    "hours_presence": 90,
    "examination_achievements": "A written examination (90 min) assesses the students' abilities to evaluate basic and advanced concepts of statistical signal processing in typical applications in communications and data processing technology. The examination consists of calculations and short questions about problems in the field of Statistical Signal Processing. The exam is closed-book. As supporting material, it is allowed to use up to 10 DIN-A4 sheets with arbitrary (handwritten or printed) notes. The use of electronic devices such as calculators, cell phones, notebooks, and similar devices is not allowed. For students whose mother tongue is not English, a dictionary English-mother tongue in printed form is allowed as long as no handwritten notes are in it.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic classes in probability theory, calculus, linear algebra, and matrix theory.",
    "content": "Probability and stochastic processes: fundamentals revisited Parameter estimation: statistical modeling, maximum likelihood estimation, Bayesian estimation, asymptotic optimality Minimum mean squared error estimation: conditional mean estimation and MMSE, linear MMSE estimation, orthogonality principle, Wiener filtering Recursive estimation of stochastic processes: Kalman filtering, particle filtering Hypothesis testing: statistical model, Neyman-Pearson test, maximum-likelihood test, maximum-a- posteriori test, Bayesian test, risk functionals, sufficient statistics, asymptotic optimality Selected topics and applications: confidence analysis, kernel methods, neural networks, etc. EI70240: Statistical Signal Processing | Statistical Signal Processing",
    "learning_outcomes": "After successfully passing the module, the students are able to understand, apply, evaluate, and create mathematical concepts and numerical algorithms in the field of statistical signal processing for communications and data processing applications. The students are able to analyze, evaluate, and create concepts, algorithms, and systems for statistical estimation of deterministic and random parameters, variables, sequences, and processes, as they widely appear in information and communication systems and beyond.",
    "teaching_methods": "Mathematical concepts and numerical algorithms for selected topics in statistical signal processing are introduced during the lectures. They are transferred by means of case studies and applications which demonstrate the use of the introduced concepts and their respective numerical algorithms. The students further investigate the introduced concepts by solving specific problem formulations.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions as download.",
    "literature": "The following literature is recommended:\n- A. Papoulis, S. Unnikrishna Pilla. Probability, Random Variables and Stochastic Processes, Mc\nGraf Hill.\n- Steven M. Kay. Statistical Signal Processing, Vol. I: Estimation Theory and Vol. II: Detection\nTheory, Prentice Hall Signal Processing Series.\n- Louis L. Scharf. Statistical Signal Processing, Prentice Hall.\n- Geoffrey R. Grimmet, David R. Stirzaker. Probability and Random Processes, Oxford University\nPress.\n- David J. C. MacKay. Information Theory, Inference, and Learning Algorithms, Cambridge\nUniversity Press.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nStatistical Signal Processing (Vorlesung mit integrierten Übungen, 4 SWS)\nUtschick W, Semmler D"
  },
  {
    "module_id": "EI70250",
    "title": "Systemtheorie der Sinnesorgane",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Modulleistung wird in Form einer schriftlichen Prüfung (60 Min) geprüft. In der schriftliche Klausur werden die Lernergebnisse geprüft, indem die Studierenden Fragen zu den Lehrinhalten in freier Textform, mit Diagrammen und rechnerisch beantworten. In der Klausur sind keine Hilfsmittel zugelassen. In der Übung werden Programme in Matlab oder Phython entwickelt, um die Aufgaben zu lösen. Dabei werden Diagramme und ein Kurzbericht erstellt und abgegeben. Diese werden als Laborleistung bewertet und wenn 70% erreicht werden, wird die Abschlussnote um 0.3 verbessert.",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen der Systemtheorie\nProgrammieren in Matlab oder Python",
    "content": "Diese Vorlesung und das dazugehörige Praktikum behandelt die Funktion der Sinnessysteme sowie die Grundlagen der neuronalen Verarbeitung aus Sicht der Nachrichtentechnik. Im Fokus stehen dabei das Hörsystem und das visuelle System. Neben biologischen Grundlagen wird auch die Psychophysik vorgestellt, die objektiv messbare Eingangsgrößen mit der subjektiven Wahrnehmung verknüpft. Im Modul (insbesondere im praktischen Teil) werden zudem Programmierkenntnisse vertieft. Hier werden die meist nichtlinearen Verarbeitungsschritte der biologischen Systeme vereinfacht und in Matlab oder Python modelliert. Zudem lernen die Studenten wie sie Ergebnisse und Daten in Grafiken sinnvoll darstellen und zu einem Bericht zusammenfassen. EI70250: Systemtheorie der Sinnesorgane | System Theory of Sensory Processing [SystemtheorieSinne] Im Detail:\n- Grundlagen: Aufbau einer Zelle, lineare und nichtlineare Systemtheorie\n- Grundlagen Akustik und akustische Größen\n- Aufbau des Gehörs\n- Die Hörbahn: neuronale Kodierung im auditorischen System\n- Neuronale Erregung, Modulationsschwellen\n- Grundlagen der Optik und lichttechnische Größen: Linsen, Beugung, mehr-dimensionale\nSystemtheorie, Modulationsübertragungsfunktionen\n- Das Auge: Orts- und Zeitfrequenzauflösung, Farbsehen, Augenbewegungen",
    "learning_outcomes": "Die Studierenden sind nach dem erfolgreichen Abschluss des Moduls in der Lage:\n- Programme zur Analyse dynamischer Systeme zu erstellen (fortgeschrittene\nProgrammierkenntnisse)\n- nichtlineare Systeme zu modellieren sowie ihre Dynamik zu berechnen und analysieren\n- Akustik und akustische Größen zu kennen\n- die Anatomie der Sinnesorgane zu skizzieren sowie deren Funktion zu analysieren\n- grundlegende physikalische und biologische Prinzipien zu generalisieren, zu vereinfachen und zu\nmodellieren\n- Strategien der Informationsverarbeitung der Sinnesorgane zu analysieren und auf technische\nSysteme zu übertragen.",
    "teaching_methods": "Das Modul besteht aus Vorlesung (2 SWS) und Übungen (1 SWS). Die Vorlesung führt die Studierenden in die Konzepte der linearen und nichtlinearen Systemtheorie ein und vertieft diese am Beispiel der Informationsverarbeitung des Gehörs und des visuellen Systems. Im praktischen Teil werden die Konzepte anhand von Beispielen gefestigt, indem die Studierenden Programme entwickeln um Aufgaben numerisch zu lösen. Dazu geben sie einen Kurzbericht ab. Gleichzeitig werden dadurch auch die Programmierfertigkeiten der Studierenden gestärkt sowie die sinnvolle Darstellung von wissenschaftlichen Ergebnissen.",
    "media": "Vorlesung:\n- unterstützt durch Folien (Beamer) und Script\n- Entwicklung von Konzepten und Ergänzende Erläuterungen an der Tafel\n- Hörbeispiele\nPraktischer Kurs/Übung:\n- Entwicklung von Programmen (Matlab/Python) zur numerischen Lösung von linearen und\nnichtlinearen dynamischen Systemen\n- Individuelle Unterstützung der Teilnehmer durch Betreuer und Tutor\n- Lösung von Übungsaufgaben und Abgabe von Kurzberichten\nEI70250: Systemtheorie der Sinnesorgane | System Theory of Sensory Processing [SystemtheorieSinne]",
    "literature": "Script\nE. Zwicker, H. Fastl \"Psychoacoustics: Facts and Models\" (auch als eBook)\nJ. Pickles, \"An Introduction to the Physiology of Hearing\" Emerald Group (auch als eBook)\nG. Hauske \"Systemtheorie des Visuellen Systems\" Springer Verlag (auch als eBook)",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSystemtheorie der Sinnesorgane (73504) (Vorlesung mit integrierten Übungen, 3 SWS)\nHemmert W [L], Castaneda González C ( Saeedi A, Voss A ), Croner A, Hemmert W"
  },
  {
    "module_id": "EI70260",
    "title": "The Auditory System",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "20-minütige mündliche Prüfung zu drei zufällig gewählten Fragen aus einem Katalog, der entlang der Lernziele strukturiert ist. Um die Lernziele gezielt zu erreichen, wird der Fragenkatalog vorab bekannt gegeben. Die Fragen prüfen das zu den einzelnen Themenbereichen gewonnene Wissen und das Verständnis der Lerninhalte ab. Die Fähigkeit zur Anwendbarkeit des Wissens auf Fragestellungen aus dem Audioingenieursbereich nebst der Fähigkeit zur Generalisierung und dem Transfer auf neue Anwendungsbereiche wird geprüft.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "keine",
    "content": "Am Beispiel des Hörsystems vermittelt der Kurs ein tiefgehendes Verständnis menschlicher perzeptiver Mechanismen und der Grundlagen der Modellierung physiologischer und perzeptiver Prozesse für Studenten, die an Bio- und Neuroengineering interessiert sind. Basierend auf dem Verständnis der Mechnismen und Modelle lernen die Studenten, Lösungen für technische Anwendungen im Audiobereich (z.B. mp3, hearables) und zu Hörhilfen (z.B. Hörgeräte, Cochlea Implantate) zu finden. Der Kurs deckt die folgenden Themengebiete ab:\n- Physiologie des auditorischen Systems: Außen- und Mittelohr, Cochlea, Hörnerv, Hirnstamm;\n- Mechanismen und Modelle des Außen- und Mittelohres; Außenohrübertragungsfunktionen;\n- Die Cochlea: Physiologie und Wahrnehmung, auditorische Filter-Modelle (DRNL, Meddis Innere\nHaarzelle); EI70260: The Auditory System | The Auditory System [AUDSYS]\n- Auditorische/psychoakustische Maskierung: Simultanverdeckung, Nachverdeckung;\n- Unterschiedsschwellen: Intensität, binaurale Merkmale;\n- Lautheit: spektrale Lautheitsmodelle;\n- Binaurales Hören: Binaurale Merkmale, Richtungshören, Physiologie und Modelle, binaurale\nEntmaskierung, Präzedenzeffekt;\n- Schwerhörigkeit: Arten von Schwerhörigkeit, Frequenzauflösung und auditorische\nFilter, Maskierung, Lautheit und Recruitment, zeitliche und spektrale Verarbeitung, Tonhöhenwahrnehmung, Modelle der Innenohrschwerhörigkeit;\n- Sprachverstehen: Einflussgrößen, Modelle (Speech Intelligibility Index), binaurales\nSprachverstehen, Einfluss von Raumhall und Störschall auf das Sprachverstehen;\n- Auditorische Szenenanalyse;\n- Audio Anwendungen: Virtuelle Akustik, mp3;\n- Hörgeräte: Aufbau, Algorithmen;\n- Cochlea Implantate: Aufbau, Algorithmen, zeitliche und spektrale Auflösung, Modellierung der\nneuronalen Antwort, Sprachverstehen; Übung: Methoden für Hörversuche und deren Auswertung; Grundlagen der statistischen Auswertung von Experimentalergebnissen; Ethische Randbedingungen für die klinische Forschung mit Menschen; Wörter- und Satztests für die Sprachaudiometrie; Modellierung der auditorischen Verarbeitung in Matlab (monaural, binaural); Audio-Demonstrationen.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, wichtige physiologische und perzeptive Mechanismen der menschlichen sensorischen Systeme zu verstehen, hier am Beispiel des Hörsystems für das Sprachverstehen, das Richtungshören, das Hören im Störschall und Schwerhörigkeit, und auf Modelle des Hörsystems anzuwenden. Basierend auf dem Verständnis der Mechanismen und Modelle sind die Studierenden in der Lage, Lösungen für Ingenieursanwendungen im Audiobereich (z.B. mp3) und zu Hörhilfen (Hörgeräte und Cochlea Implantate) zu finden. Die Studierenden verstehen weiterhin die Methoden für die Wissensfindung über menschliche perzeptive Prozesse, hier zur Durchführung und Analyse von Hörversuchen, und sind in der Lage, diese in Forschung und Audiologie anzuwenden.",
    "teaching_methods": "Vorlesung mit praktischen Beispielen und Audiodemonstrationen. Übung mit praktischer Einführung in Hörversuche und audiometrische Methoden. Matlab Übungen zu numerischen Modellen. Selbststudium von weiterführendem Material.",
    "media": "Vorlesung mit Videoprojektion von handschriftlichen Notizen, Graphen und Abbildungen,\nVideos und interaktiven Computerdemonstrationen, sowie mit praktischen Beispielen und\nAudiovorführungen.\nKursmaterial auf Moodle.\nEI70260: The Auditory System | The Auditory System [AUDSYS]\nÜbung mit praktischer Einführung in Hörversuche und audiologische Methoden, sowie mit Matlab\nÜbungen zu den Modellen.",
    "literature": "Fastl, H., Zwicker, E.: Psychoacoustics - Facts and Models, 3rd Ed, Springer, Heidelberg, 2007.\nBlauert, J.: Spatial hearing: The psychophysics of human sound localization. Cambridge, USA: MIT\nPress, 1997.\nMoore, B. C. J.: An Introduction to the Psychology of Hearing: Academic Press, San Diego,\nLondon, 2003.\nMoore, B. C. J.: Cochlear Hearing Loss: Physiological, Psychological and Technical Issues: John\nWiley & Sons Ltd, Chichester, UK, 2007.\nPickles, J.O.: An Introduction to the Physiology of Hearing, Emerald publishing, Bingley, UK, 2008.",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nThe Auditory System (Vorlesung mit integrierten Übungen, 4 SWS)\nSeeber B, Kuntz M"
  },
  {
    "module_id": "EI70270",
    "title": "Neuroprosthetics",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Im Rahmen einer schriftlichen Prüfung (60 Min) wird die Analyse der gundlegenden Funktionsprinzipien von Neuronen, der Funktionsweise des Gehörs und von Cochlearimplantaten geprüft. Darüber hinaus wird eine Bewertung der elektrischen Stimulation von Neuronen in Neuroprothesen verlangt. Die wissensbasierten Teile können im Interrnet nachgeschlagen werden und können daher nicht sinnvoll mit dem Praktikumsbericht bewertet werden. Im begleitenden Praktikum wird die Fähigkeit zur Entwicklung von Computermodellen für Neurone und Neuroprothesen gefordert. (Motto: Nur was ich wirklich bauen kann, habe ich auch verstanden). Dazu wird die Abgabe der Lösungen der Aufgaben als Laborleistung herangezogen und benotet. Umfang: 8 Ausarbeitungen im Umfang von etwa 4-6 Seiten (aber hauptsächlich Abbildungen) basierend auf Simulationsprogrammen (Matlab oder Python). Diese Programmierkenntnisse können wiederum nicht in der schriftlichen Klausur geprüft werden. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 60 % Abschlussprüfung\n- 40 % Laborleistung (Abgabe der Ausarbeitung)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen in Matlab oder Python\nGrundlagen der Elektrotechnik (Elektrische Schaltungen, Kabelgleichung, Elektrische Felder)\nGrundlagen der Signalverarbeitung (Fouriertransformation, digitale Filter)\nEI70270: Neuroprosthetics | Neuroprosthetics [Neuroprothetik]\nGrundlagen der Systemtheorie",
    "content": "In diesem Modul werden die Grundlagen zur Neuroprothetik in der Vorlesung theoretisch hergeleitet und im begleitenden Computer-Praktikum numerisch berechnet. Der Schwerpunkt liegt dabei auf der elektrischen Stimulation von Neuronen, diese wird am Beispiel der Cochlea- Implantate eingehend untersucht. Im begleitenden Computer-Praktikum (Python oder MATLAB) werden die in der Vorlesung erarbeiteten Gleichungen numerisch gelöst. Insgesamt soll dabei ein virtuelles Modell eines gesamten Innenohrimplantats entwickelt werden und die Antwort des auditorischen Nerven durch die elektrische Stimulation berechnet werden. Themen:\n- Übersicht über Neuroimplantate\n- Numerische Lösung von linearen und nichtlinearen Differentialgleichungen\n- elektrische Modellierung von (Nerven)zellen\n- Herleitung und Lösung der Kabelgleichung für Nervenfasern (Axone)\n- Simulation der elektrischen Erregung von Nervenfasern (Axone)\n- Simulation der elektrischen Feldausbreitung im Körper\n- Anatomie und Funktion des Innenohres\n- Neuronale Kodierung von Schallsignalen im auditorischen Nerven\n- Implementierung einer Kodierungsstrategie für ein Innenohrimplantat\n- Elektrochemie an Elektroden, Biokompatibilität und Fremdkörperreaktionen",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage\n- anspruchsvolle Computerprogramme zu erstellen\n- Modelle nichtlinearer Systeme (Neurone) zu entwickeln und nichtlineare Differenzialgleichungen\nnumerisch zu lösen\n- zu verstehen wie Neuroprothesen funktionieren\n- die Prinzipien der elektrischen Stimulation von Neuronen zu verstehen und zu modellieren\n- aktuelle und in der Entwicklung befindliche Neuroprothesen zu analysieren und zu bewerten\n- Modelle neuer Implantate und der dazugehörigen Kodierungsstrategien zu entwickeln",
    "teaching_methods": "Vorlesung mit begleitendem Computer-Praktikum. Erfahrungsgemäß wird das begleitende Computerpraktikum als relativ anspruchsvoll bewertet. Abhaltungssprache im WiSe Englisch und im SoSe Deutsch.",
    "media": "Vorlesung\nEI70270: Neuroprosthetics | Neuroprosthetics [Neuroprothetik]\n- Folienunterstützung (Beamer)\n- Herleitungen und unterstützende Information an der Tafel\nÜbung/Praktikum\n- Individuelle Unterstützung während des Praktikums zur Lösung der gestellten Aufgaben am\nComputer\n- Herleitungen und unterstützende Information an der Tafel",
    "literature": "Zur Vorlesung existiert ein Script.\nWeiterführende Literatur:\n- Neuroprosthetics Theory and Practice , Kenneth W. Horch, Gurpreet S. Dhillon (Hsg), World\nScientific, 2004\n- Medizintechnik mit biokompatiblen Werkstoffen und Verfahren; Erich Wintermantel, Suk-Woo Ha\n(mit Einschränkung, dieses Werk umfasst die gesamte Thematik der Biokompatibilität, die Aspekte\nbei elektrischen Implantaten werden nur am Rande behandelt)",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNeuroprosthetics (Vorlesung mit integrierten Übungen, 4 SWS)\nHemmert W [L], Hemmert W, Voss A, Bai S, Croner A, Hauptmann C"
  },
  {
    "module_id": "EI70320",
    "title": "Channel Coding",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Im Dezember wird eine Zwischenprüfung stattfinden. Die Studierenden, welche diese Zwischenprüfung bestehen, erhalten einen 0,3 Notenbonus auf die finale Prüfung. In einer schriftlichen Prüfung (90 min) demonstrieren die Studierenden ihr Verständnis der Codierungschemata, beispielsweise verschiedene Klassen und der behandelten Anwendungen beispielsweise durch das Beantworten von Fragen. Sie zeigen ferner ohne Rückgriff auf Hilfmittel (erlaubt ist ein Blatt handgeschriebene Formelsammlug), dass sie für die entsprechenden Anwendungen Codeklassen evaluieren, designen und decodieren können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Mathematische Grundkenntnisse (lineare Algebra)",
    "content": "Dieser Kurs befasst sich mit modernen Kanalcodierungsprinzipien. Kein Vorwissen im Bereich Kanalkodierung ist notwendig.\n- Applications of Channel Coding\n- Channel Coding Principles:\nChannel Models, Decoding Principles, Hamming Metric\n- Finite Fields:\nGroups, Fields, Prime Fields, Extension Fields, Vector Spaces\n- Linear Block Codes:\nDefinition, Encoding, Coset Decoding, Bounds (Hamming Bound, Singleton Bound, Gilbert- Varshamov Bound), Hamming Codes, Perfect Codes\n- Reed-Solomon Codes:\nEI70320: Channel Coding | Channel Coding [Channel Coding] MDS Codes, Definition, Key Equation, Unique Decoding, List Decoding\n- BCH Codes:\nMinimal Polynomials, Generator and Parity-Check Polynomial, BCH Bound, Efficient Decoding\n- Convolutional Codes:\nState Diagram, Shift Register, Viterbi Decoding\n- Reed-Muller Codes:\nDefinition, Simplex Code, Plotkin Construction\n- Concatenated Codes:\nBasic Concepts",
    "learning_outcomes": "nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage\n- das Ziel der Kanalcodierung zu verstehen und zu benennen,\n- aktuelle Anwendungsbereiche der Codierungstheorie und die verwendeten Codeklassen zu\nnennen,\n- passende Codierungsschema auszuwählen, die Parameter anzupassen, es zu evaluieren und\nDecodieralgorithmen anzuwenden,\n- für ein gegebenes bekanntes Codierschema und eine gegebene Anwendung die\nKorrekturfähigkeit und Grenzen zu beurteilen, im Vergleich zu behandelten Schranken und anderen Codeklassen,\n- nicht in der Vorlesung behandelte Codierschemata nach entsprechender Literaturrecherche zu\nverstehen.",
    "teaching_methods": "VL: Die notwendigen theoretischen Inhalte werden im Vortrag vermittelt (mit Folienpräsentation und Tafelanschrieb) und durch kurze Beispiele veranschaulicht. Die Studierenden sind zur Diskussion der Inhalte angehalten und werden mit zahlreichen Zwischenfragen zur Beteiligung motiviert. T: In einem begleitenden Tutorial werden die Inhalte der Vorlesung anhand von Beispielen angewandt.",
    "media": "Die Vorlesung erfolgt mit Hilfe von Folien; Beispiele und zusätzliche Erläuterungen werden an der\nTafel vorgenommen.",
    "literature": "Lecture notes are provided.\nThe following additional literature is recommended:\n- Justesen, J. and Hoholdt, T.: “A Course in Error-Correcting Codes”, European Mathematical\nSociety, 2004.\n- Roth, R. M.: “Introduction to Coding Theory”, Cambridge Univ. Press, 2006\n- Bossert, M.: “Kanalcodierung”. 3Rd edition, Oldenburg, 2013 (English version: “Channel Coding\nfor Communications”, Wiley, 1999)\nEI70320: Channel Coding | Channel Coding [Channel Coding]",
    "lv_sws_lecturer": "Wachter-Zeh, Antonia; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nChannel Coding (Vorlesung mit integrierten Übungen, 5 SWS)\nWachter-Zeh A, Bitar R, Welter L, Xhemrishi M"
  },
  {
    "module_id": "EI70330",
    "title": "Data Networking",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Studierenden zeigen ihr Verständnis von Data Networking und den zugrundeliegenden Methoden in einer schriftlichen Prüfung (90 min) durch die Beantwortung von Fragen. Anhand von Fallbeispielen zeigen die Studierenden ihre Fähigkeit die erlernten Methoden für Protokolle und Mechanismen mittels Berechnungen anzuwenden, z.B. für ausgewählte drahtlose und drahtgebundene Datenkommunikationsnetze. Wähend des Semesters wird ein optionales schriftliches Mid Term Exam angeboten, das dazu benutzt werden kann, die Note der Abschlussprüfung zu verbessern. Die Modulnote setzt sich aus folgenden bestandteilen zusammen:\n- 100% Abschlussprüfung\nDas Ergebnis des Mid Term Exam kann mit einem Bonus von 0.3 auf das Ergebnis der Abschlussprüfung angerechnet werden, wenn das zu einer Verbesserung der insgesamten Modulnote führt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Kommunikationsnetze und deren Analyse:\n- Paket-basierte Netze\n- Protokolle für die Datenkommunikation inkl. TCP/IP\n- Methoden für dieLeistungsbewertung von Kommunikationsnetzen\nEI70330: Data Networking | Data Networking [DNET]",
    "content": "Medienzugriffsverfahren (Medium Access Control) und Resourcenmanagement für drahtlose und drahtgebundene Netze und deren Leistungsbewertung:\n- Medium Access Control (MAC)\n- Leitungsbewertung basieren u.a. auf Queueing Theory\n- (drahtlose) Contention-based MAC (z.B. in WLAN, Ethernet)\n- Ressourcenaufteilung, Polling\n- Ressourcenmanagement für zellulare Netze: OFDMA, Scheduling Algorithmen, Prinzipien\nzellularer Netze, Protokolle (z.B. LTE, 5G)\n- Packet Switching, Label Switching (MPLS), Routing\n- Software Defined Networking (SDN)",
    "learning_outcomes": "Nach erfolgreicher Absolvierung des Moduls verstehen die Studierenden die Prinzipien des Ressourcenmanagements drahtloser und drahtgebundener Paket-basierter Kommunikationsnetze mit Schwerpunkt auf Protokolle der Schicht 2 (Medium Access Control) und deren Komponenten und sie sind in der Lage die entsprechenden Methoden für den Protokollentwurf, das Ressourcenmanagement, das Traffic Engineering und die Analyse und Leistungsbewertung von Protokollen und Architekturen anzuwenden.",
    "teaching_methods": "Lernmethode: Zusätzlich zu den individuellen Lernmethoden der Studierenden wird das konsolidierte Wissen in Vorlesung, Übungen und Aufgaben wiederholt. Lehrmethode: Während der Vorlesung werden die Studierenden in einer Lehrer-zentrierten Form unterrichtet. Die Übungen werden in einer Stdierenden-zentrierten Weise indem Beispiele aus dem Stand der Technik diskutiert und berechnet werden. Zusätzlich sind die Studierenden aufgerufen, 1-4 wissenschaftliche Aufsätze zu lesen, die in der Vorlesung und in der Übung diskutiert werden, um die Methoden mit der aktuellen Herausforderungen in den Kommunikationsnetzen und Standards zu verknüpfen.",
    "media": "Die folgenden Medienformen werden verwendet:\n- Presentationen\n- Skriptum\n- Übungen und Lösungen zum Download\n- Videotutorials\n- Online Tools",
    "literature": "Ein Skript ist verfügbar. Die folgenden Bücher behandeln Themen des Moduls DNET:\nEI70330: Data Networking | Data Networking [DNET]\n- Bertsekas, Gallager: Data Networks, Prentice Hall (available online)\n- William Stallings: Data and Computer Communications. Pearson Publishers\n- Miao, Zander, Sung, Slimane: Fundamentals of Mobile Data Networks. Cambridge University\nPress\n- Kurose, Ross: Computer Networks. Pearson Publishers.",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nData Networking (Vorlesung mit integrierten Übungen, 4 SWS)\nHaider V [L], Kellerer W, Aykurt K"
  },
  {
    "module_id": "EI70350",
    "title": "Information Theory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "During a written exam (90 min) students proof their ability to apply principles of information theory (e.g., chain rule) by answering questions and apply information theory to measure the quality of the processing blocks (e.g., data compression, channel coding) of a digital transmitter and receiver as well as a mathematic methods for given problems, e.g. memoryless and stationary sources.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic principles of probability theory and statistics",
    "content": "Review of probability theory. Uncertainty, mutual information, informational divergence, Fano's inequality, convexity. Source coding: Discrete Memoryless Sources, Prefix-Free codes, Shannon-Fano codes, Huffman codes, Tunstall codes, Discrete Stationary Sources, Elias-Willems universal souce coding. Typical sequences and sets. Channel coding: Discrete Memoryless Channnels, Capacity. Relative entropy and additive white Gaussian noise channels.",
    "learning_outcomes": "After completion of the module the student is able to\n• Explain the basic quantities of information theory, i.e., entropy, mutual information, informational\ndivergence,\n• Explain important properties of these quantities, e.g., chain rule, bounds, convexity\n• Apply information theory to measure the quality of the processing blocks (e.g., data compression,\nchannel coding) of a digital transmitter and receiver, and the quality of the channel (capacity) EI70350: Information Theory | Information Theory [Information Theory]\n• Understand scientific documents in information theory.",
    "teaching_methods": "The course covers the basic concepts of information theory, including entropy and mutual information, lossless data compression for memoryless and stationary sources, and reliable communication over memoryless channels. The students are instructed in an explorative teaching style. In the tutorials students discuss with the tutor exemplary implementation of codes introduced during the lecture, e.g. for current wirless mobile communictaion systems, and why certain coding schemes are used for certain applications.",
    "media": "- Lecture notes\n- Problem sheets\n- Presentation slides",
    "literature": "Further reading:\n- Cover, T., Thomas, J.: Elements of Information Theory, Wiley-Interscience; 2nd edition",
    "lv_sws_lecturer": "Kramer, Gerhard; Prof. Dr.sc.tech.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nInformation Theory (Vorlesung mit integrierten Übungen, 5 SWS)\nKramer G ( Runge C ), Ben Yacoub E, Lentner Ibanez J, Wiegart T"
  },
  {
    "module_id": "EI70360",
    "title": "Machine Learning and Optimization",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "As examination requirement, students will take a written exam of two hours (120 Minutes) duration. In the exam, the students demonstrate their understanding of machine learning theory and algorithms. With the exam, the ability of students is tested to answer questions on machine learning theory and practice and to solve problems on machine learning theory and algorithms. The exam is open book, which means that lecture notes and any other printed material are permitted in the exam, but a computer and any other digital device is not permitted. In addition, the course has the following coursework requirement that won’t be part of the grade but is necessary to pass the course: The course has weekly homeworks, eleven in total. The homeworks contain exercises on machine learning that are solved with pen and paper (for example, deriving a mathematical proof, or explaining how an algorithm is applied to a certain problem), and of coding problems where the task is to implement a machine learning method or evaluate the method empirically. At least six out of the eleven homeworks need to be submitted and out of each homework submitted, at least half of the problems must be solved correctly. With the homeworks, the students learn to understand, apply, and develop machine leaning methods.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Analysis 1-3, Einführung in die Statistik oder Wahrscheinlichkeitsrechnung, Introduction to Machine\nLearning\nEI70360: Machine Learning and Optimization | Machine Learning and Optimization [OML]",
    "content": "The course introduces the theory and practice of advanced machine learning concepts and methods (such as deep neural networks). In particular we will discuss (statistical) learning theory, (deep) neural networks, first order optimization methods such as stochastic gradient descent and their analysis, the interplay of learning and optimization, empirical risk minimization and regularization, and modern views of machine learning in the overparameterized regime with deep neural networks. We also discuss automatic hyperparameter optimization, active learning, and aspects beyond performance such as fairness. We will start the lecture with a very brief review of the foundations of machine learning such as simple regression and classification methods, so that all students are on the same page.",
    "learning_outcomes": "Upon successful completion of the module students know the theoretical foundations of (advanced) machine learning algorithms and common optimization methods for machine learning, and how to develop and analyze such algorithms. Students are able to (i) apply advanced and build new machine learning methods by modifying existing ones (for example deep neural networks), (ii) develop and tune optimization algorithms for training such models, (iii) rigorously analyze their performance both with computational experiments as well as by proving generalization bounds and analyzing the convergence/computational complexity of training algorithms. Also, upon successful completion, students are familiar with concepts beyond the traditional supervised learning setup, in particular active learning and aspects such as fairness.",
    "teaching_methods": "Machine learning algorithms and methods are introduced and discussed during lectures, with a focus on the theory behind the methods, and including recently develop results. Exercises with both theory and coding problems are handed out every second week, and whenever a new exercise is handed out, solutions for the previous one are distributed. We will sometimes give deliberately open questions and problems, so that students practice to adapt methods, build on existing, and develop an understanding on how to approach practical and research questions in the real world. The discussion session has an interactive format in that it is a forum for asking specific questions about the exercises and the methods introduced in the lectures, and discussing certain problems or parts of the lecture in more detail on the board, but only on request by the students during the discussion session.",
    "media": "The material is presented on the boad, sometimes code and algorithms are shown with a projector.\nLecture notes and exercises are distributed.",
    "literature": "We do not follows a textbook, lecture notes will be distributed. Helpful references include:\n``Elements of Statistical Learning'' by Hastie, Tibshirani & Friedman; ``Machine Learning'' by\nTom Mitchell ; ``Foundation of Machine Learning'', by Mohri, Rostamizadeh, and Talwalkar;\n``Understanding Machine Learning: From Theory to Algorithms'' by Shalev-Shwartz and Ben-David\nEI70360: Machine Learning and Optimization | Machine Learning and Optimization [OML]",
    "lv_sws_lecturer": "Heckel, Reinhard; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMachine Learning and Optimization (Vorlesung mit integrierten Übungen, 4 SWS)\nHeckel R [L], Heckel R, Klug T"
  },
  {
    "module_id": "EI70370",
    "title": "Physical Layer Methods",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In der Abschlussklausur (75 min.) weisen die Studierenden durch Bearbeitung geeigneter Fragen nach, dass sie die in der Vorlesung behandelten Modelle und Methoden der Datenübertragungsschicht (Physical Layer) der digitalen Kommunikation auf konkrete vorgegebene Übertragungssysteme bzw. Komponenten anwenden, und diese damit analysieren und bewerten können. Beispielsweise soll die Bitfehlerrate eines Übertragungssystems mit vorgegebener Datenrate und Signalformat über Kupfer-Doppelader berechnet, und Maßnahmen zur Verbesserung der Performanz vorgeschlagen bzw. analysiert werden. Darüber hinaus weisen die Studierenden durch Bearbeitung entsprechender Aufgaben nach, dass sie Übertragungssysteme und Komponenten nach vorgegebenen Randbedingungen bzw. geforderten Zielen dimensionieren können. Beispiel: Design eines optischen Übertragungssystems für vorgegebene Datenrate und Reichweite unter Einhaltung vorgegebener Leistungsreserven.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Fundierte Kenntnisse auf folgenden Gebieten: Höhere Mathematik, Signaldarstellung im Zeit-\nund Frequenzbereich, Modulationsverfahren, Statistische Methoden der Nachrichtentechnik.\nKenntnisse über Wellenausbreitung sind von Vorteil.\nVorlesungen, die dieses Wissen vermitteln, sind z.B.:\nAnalysis und lineare Algebra,\nNachrichtentechnik,\nSignaldarstellung,\nStatistische Methoden,\nElektromagnetische Feldtheorie\nEI70370: Physical Layer Methods | Physical Layer Methods [Physical Layer Methods]",
    "content": "Kommunikationsnetze über Kupferleitungen und Glasfasern. Digitale Sendesignalformen und Leistungsdichtespektren. Leitungscodierung. Übertragungseigenschaften unterschiedlicher Leitungen: Kupfer-Doppelader, Koaxialkabel, Glasfasern. Digitale Übertragung in linearen Systemen: Intersymbol-Interferenz, Augenmuster, Augenöffnung, additive Störungen, Rauschen. Bitfehlerwahrscheinlichkeit. Optische Systeme mit Leistungsdetektion, differentieller Detektion, kohärenter Detektion. Lineare Entzerrung: Zero-Forcing- und Minimum-Mean-Square-Error-Entzerrung, Nyquist- Systeme. Nichtlineare Entzerrung: Quantisierte Rückkopplung, Tomlinson-Harashima- Vorcodierung. Optimale Empfänger: Matched Filter, ML-Detektion, Viterbi-Empfänger. Trellis-Codierte Modulation. Aktuelle Übertragungssysteme über Kupferkabel und Glasfasern: xDSL, G.fast, ausgewählte elektrische und optische Ethernet-Systeme von 10Mbit/s - 100Gbit/s.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls verfügen die Studierenden über ein fundiertes Verständnis aktueller Methoden der Übertragungstechnik über leitungsgebundene Medien (Kupfer-Doppelader, Koaxialkabel, Glasfaser). Sie haben die Fähigkeit, physikalische und systemtheoretische Modelle zur Beschreibung von Sender, Übertragungskanal, Empfänger, Entzerrer und Detektor auf reale Systeme anzuwenden, diese bezüglich entstehender Verzerrungen und der letztendlich resultierenden Bitfehlerrate zu analysieren und deren Übertragungsqualität zu bewerten. Mit den erworbenen Kenntnissen sind sie imstande, zuverlässige Übertragungssysteme über eine vorgegebene Leitungsinfrastruktur selbst zu entwerfen.",
    "teaching_methods": "Das Modul besteht aus einer Vorlesung (2SWS) und einer Übung (2SWS). In der Vorlesung wird der Lernstoff mittels PowerPoint-Präsentation vermittelt. Details und Beispiele werden an der Tafel präsentiert. In der Übung werden konkrete Aufgabe und Beispiele an der Tafel vorgerechnet. Als Lernmethode wird zusätzlich zu den individuellen Methoden der Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, in den Übungen auch Arbeitsunterricht (Aufgaben rechnen).",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben mit Lösungen zum Download im Internet",
    "literature": "K.-D. Kammeyer: Nachrichtenübertragung, Vieweg + Teubner\nJ. Reich: Ethernet. Technologien und Protokolle für die Computervernetzung, Heise Verlag\nEI70370: Physical Layer Methods | Physical Layer Methods [Physical Layer Methods]",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPhysical Layer Methods (Vorlesung mit integrierten Übungen, 4 SWS)\nHanik N, Jäger A, Höfler U"
  },
  {
    "module_id": "EI70380",
    "title": "Signal Processing and Machine Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "A written examination (90 min) assesses the students' abilities to evaluate basic and advanced concepts of signal processing and machine learning in typical applications in information and communication technology. The examination consists of calculations and short questions about problems in the field of Signal Processing and Machine Learning. The exam is closed-book. As supporting material, it is allowed to use up to 10 DIN-A4 sheets with arbitrary (handwritten or printed) notes. The use of electronic devices such as calculators, cell phones, notebooks, and similar devices is not allowed. For students whose mother tongue is not English, a dictionary English-mother tongue in printed form is allowed as long as no handwritten notes are in it.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Linear Algebra and Calculus, Statistical Signal Processing, Convex Optimization",
    "content": "Introduction of advanced mathematical methods, concepts, and algorithms for selected topics in signal processing and machine learning and their application in current cutting-edge research in communications and data processing applications, which highlights a joint perspective on both paradigms. Introduction into the basics of estimation and classification theory, support vector machine and kernel methods, random forests, neural networks, deep neural networks, recurrent neural networks, sparse signal processing and compressive sensing for machine learning. The usage of popular toolboxes will be demonstrated in selected application examples. The curriculum may change in any semester and will be announced in time. EI70380: Signal Processing and Machine Learning | Signal Processing and Machine Learning",
    "learning_outcomes": "After successfully passing the module, the students are able to understand, apply, evaluate, and create mathematical concepts and numerical algorithms in the field of signal processing and machine learning for communications and data processing applications. Furthermore, the students are able to reformulate typical problem formulations in order to apply sparse signal processing techniques and machine learning algorithms and have gained insight into current cutting-edge research problems in these fields.",
    "teaching_methods": "Mathematical concepts and numerical algorithms for selected topics in signal processing and machine learning are introduced during the lectures. They are transferred by means of case studies and applications which demonstrate the use of the introduced concepts and their respective numerical algorithms. The students further investigate the introduced concepts by solving specific problem formulations and by applying and programming own numerical algorithms and available toolboxes.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions as download.",
    "literature": "There is no general recommendation of literature because the widespread field of potential topics\nand applications. Literature relevant for the covered topics will be recommended in the course of\nthe semester.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSignal Processing and Machine Learning (Vorlesung mit integrierten Übungen, 4 SWS)\nUtschick W, Weißer F"
  },
  {
    "module_id": "EI70440",
    "title": "Numerische Methoden der Elektrotechnik",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfung ist schriftlich, sie dauert 120 Minuten, Unterlagen sind erlaubt. Es werden in beispielhaften Teilproblemen der Elektrotechnik, insbesondere der Schaltungssimulation, das Verständnis der Methoden zum Lösen linearer Gleichungssysteme, zur Modellordnungsreduktion und zur numerischen Integration abgeprüft. Weiterhin wird die Fähigkeit abgeprüft, diese Methoden zur Problemlösung einzusetzen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Gute Kenntnisse in höherer Mathematik (aus dem B.Sc.-Studium) werden benötigt.",
    "content": "• Verfahren zur Lösung linearer Gleichungssysteme wie Gauss/Cholesky-Elimination, QR-\nZerlegungen, Singulärwertzerlegung, Konjugierte-Gradienten-Ansatz, Relaxation\n• Verfahren zur Modellordnungsreduktion (Krylov-Unterraum-Transformation) wie Arnoldi-Iteration,\nLanczos-Iteration\n• Verfahren zur nichtlinearen Nullstellensuche wie Newton-Raphson, Intervallverfeinerungsansätze\n• Verfahren der numerischen Integration differentiell-algebraischer Gleichungssysteme wie z.B.\nExpliziter Euler, impliziter Euler, Trapez-Methode, Gear-Ansatz Die genannten mathematischen Grundlagen werden im unmittelbaren Zusammenhang mit Anwendungsgebieten der Elektrotechnik entwickelt. Ein herausragendes Beispiel ist die Schaltkreissimulation. Zum einen bildet sie als zeitsparende und Material schonende Alternative zur Fertigung und Messung von Prototypen eine Schlüsseltechnik beim Entwurf von komplexen Schaltungen und Systemen. Zum anderen bilden numerische Verfahren und Algorithmen den Kern EI70440: Numerische Methoden der Elektrotechnik | Numerical Methods in Electrical Engineering [NME] moderner Simulationsverfahren und kommen alle der oben erwähnten numerischen Verfahren bei der Simulation zum Einsatz. Im Einzelnen werden die vier Simulationsarten\n• Kleinsignal- oder lineare Wechselstromanalyse (AC-Analyse),\n• Arbeitspunktberechnung (DC-Analyse)\n• nichtlineare Einschwinganalyse (Transient-, TR-Analyse) und\n• nichtlineare Frequenzanalyse (Harmonic Balance, Shooting Newton)\nverwendet, um die oben genannten numerischen Verfahren beispielhaft zu lehren.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls versteht und kennt der Studierende für die Elektrotechnik grundlegende numerische Verfahren der Mathematik. Hierzu zählen insbesondere Methoden zur Lösung linearer Gleichungssysteme einschließlich Modellordnungsreduktion und zur numerischen Integration. Der Studierende ist in der Lage, diese in Aufgaben der Elektrotechnik einzusetzen.",
    "teaching_methods": "Als Lernmethode werden zusätzlich zum individuellen Lernen des Studierenden Vorrechenübungen und eigenständige Rechnungen eingesetzt. Insbesondere wird die beispielhafte Anwendung der behandelten numerischen Methoden in der elektrischen Schaltungssimulation in Vortrag und Übungen gelehrt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten. Zusätzlich werden vom Studierenden im Rahmen von Hausaufgaben eigenständige Implementierungsaufgaben in Matlab durchgeführt.",
    "media": "Folgende Medienformen werden benutzt:\n- Tafelanschrieb\n- Umfangreiche Sammlung von Formeln und Algorithmen\n- Katalog von Übungsaufgaben mit Lösungen\n- Zusätzliche Beispiele und Demos",
    "literature": "Gilbert Strang, Computational Science and Engineering, Cambridge Press.",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNumerische Methoden der Elektrotechnik (Vorlesung mit integrierten Übungen, 4 SWS)\nSchlichtmann U, Truppel A"
  },
  {
    "module_id": "EI70520",
    "title": "Circuit Design for Security",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Kenntnisse und das theoretische Verständnis\n- Wesentlicher Grundelemente Digitaler Schaltungen wie Zustandsautomaten, FIFOs, LFSRs,\nAddierer und Multiplizierer,\n- Typischer Problemstellungen des Schaltungsentwurfs wie des Clock Domain Crossings, der Wahl\nvon synchronem und asynchronem Reset oder der Testbarkeit von Schaltungen,\n- Der Einsatzszenarien von Multiplizierern und LFSRs im Security-Kontext,\nund die Befähigung\n- Zur Auswahl von Lösungen für typische Problemstellungen des Schaltungsentwurfs\ninsbesondere im Security-Kontext und\n- Zur Benennung von Vor- und Nachteilen der besprochenen Multiplizierter und LFSR Konzepte,\nwird in Form von offenen und geschlossenen Fragen in einer schriftlichen Prüfung (60 Minuten) abgeprüft. Die Fragen sind ohne zusätzliche Unterlagen als kurzer Fließtext oder stichpunktartig zu beantworten. Zur Beantwortung der Fragen können Berechnungen notwendig sein. Die praktischen Fähigkeiten,\n- Wesentliche Elemente digitaler Schaltungen selbstständig implementieren zu können,\n- Schaltungen zu synthetisieren und\n- Auf verschiedenen Abstraktionsebenen zu simulieren,\nwird durch das Lösen 3-5 Implementierungsaufgaben nachgewiesen. Für die erfolgreiche Bearbeitung der Aufgaben wird ein Notenbonus von 0,3 auf die Endnote gewährt.",
    "repetition": "Folgesemester\nEI70520: Circuit Design for Security | Circuit Design for Security [CDS]",
    "recommended_prerequisites": "Grundlegende VHDL-Kenntnisse\nGrundkenntnisse zur IT-Sicherheit wie sie bspw. in den Vorlesungen Grundlagen der IT-Sicherheit\nund Angewandte Kryptographie vermittelt werden.",
    "content": "In diesem Modul wird ausgehend von Grundschaltungen die Entwicklung digitaler Schaltungen im Security-Kontext beleuchtet. Dazu werden zunächst die Kenntnisse zur Implementierung von Zustandsautomaten aufgefrischt und erweitert. Die Implementierung wichtiger Bausteine des digitalen Schaltungsentwurfs wie FIFOs und LFSRs wird eingeführt. Unter anderem wird hierbei die Implementierung von Pseudo-Zufallszahlengeneratoren auf Basis von LFSRs und deren Anwendung im Security-Kontext besprochen. Von wesentlicher Bedeutung in vielen kryptographischen Anwendungen ist die Implementierung von Multiplizierern. Hierzu werden im Modul grundsätzliche Implementierungen, aber auch spezielle Varianten zur Modulo-Multiplikation erörtert. Auch werden Konzepte besprochen, um kryptographische Schaltungen geeignet testen zu können; Implementierungsstrategien zur Optimierung von Schaltungen bezüglich Fläche, Leistungsaufnahme, und Performance werden eingeführt. Neben der theoretischen Vermittlung der Inhalte in Vorlesungen, wird in Übungen und in einem Praktikum der Praxisbezug verdeutlicht. Dabei lernen die Studierenden auch digitale Schaltungen mit einem kommerziellen Entwurfstool zu implementieren und zu synthetisieren.",
    "learning_outcomes": "Nach erfolgreichem Bestehen des Moduls haben Studierende folgende Qualifikationen erlangt:\n- Sie kennen wesentliche Grundelemente Digitaler Schaltungen wie Zustandsautomaten, FIFOs,\nLFSRs und Multiplizierer und können diese selbstständig implementieren.\n- Sie kennen typische Problemstellungen des Schaltungsentwurfs wie des Clock Domain\nCrossings, der Wahl von Synchronem und Asynchronem Reset oder der Testbarkeit von Schaltungen und können geeignete Lösungen auswählen.\n- Sie kennen Einsatzszenarien von Multiplizierern und LFSRs im Security-Kontext, verstehen die\ntheoretischen Grundlagen der besprochenen Konzepte und können die Vor- und Nachteile dieser benennen.\n- Sie sind in der Lage Digitalschaltungen in VHDL zu beschreiben und erste Syntheseschritte\ndurchzuführen.",
    "teaching_methods": "Wissen wird mittels Folien und Tafelanschrieb vermittelt. Der Lernprozess der Studierenden wird in den Übungen unterstützt durch interaktive Lösung von Aufgaben, Gruppenarbeit und Programmiervorführungen des Übungsleiters zu beispielhaften Implementierungsaufgaben und Sicherheitsszenarien. Programmieraufgaben während des Semesters geben den Studierenden die Möglichkeit, ihre Fähigkeiten zur Implementierung und Synthese digitaler Schaltungen im Security- Kontext mit einem kommerziellen Designtool einzuüben und zu zeigen. EI70520: Circuit Design for Security | Circuit Design for Security [CDS]",
    "media": "In Vorlesung und Übung werden Folien, Tafelarbeit, Beispielcode sowie interaktive Onlinetools,\nz.B. Fragenkataloge, verwendet. Ergänzt wird das Angebot durch ein Forum auf Moodle, indem\nLehrende Fragen zum Inhalt und zu den Praktikumsaufgaben beantworten",
    "literature": "Niklaus Wirth; Digital Circuit Design for Computer Science Students - An Introductory Textbook;\nSpringer; 1995 ISBN 978-3-540-58577-0\nWeitere Literaturempfehlungen werd zu Beginn jeden Semesters im Moodle-Kurs bereitgestellt.",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCircuit Design for Security (Forschungspraktikum, 1 SWS)\nPehl M [L], Schupp J ( Stein N )\nCircuit Design for Security (Übung, 2 SWS)\nPehl M [L], Schupp J ( Stein N )\nCircuit Design for Security (Vorlesung, 2 SWS)\nSchupp J [L], Pehl M ( Stein N )"
  },
  {
    "module_id": "EI70530",
    "title": "Embedded Systems and Security",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Der Erwerb der theoretischen Kenntnisse, die benötigt werden um\n- die Organisation des Speichers\n- den Zweck der diskutierten Peripheriebausteine\n- 'memory mapped I/O'\n- Interrupts\n- Mittel und Wege zur Separation\n- MMUs/MPUs\n- Seitenkanäle\n- das Konzept von „trusted computing“\nerklären zu können,\n- die diskutierten Peripheriebausteine\n- Beispiele für typische Schwachstellen\n- Schutzziele\nbenennen zu können sowie\n- Speichertypen in Chips zu klassifizieren,\n- den Startvorgang eines Mikrocontrollers wiederzugeben,\n- Debug-Möglichkeiten vergleichen zu können,\n- Angemessene Gegenmaßnahmen auszuwählen und\n- übliche Angriffe zu diskutieren,\nwird in Form von offenen und geschlossenen Fragen in einer schriftlichen Prüfung (90 Minuten) abgeprüft. Die Fragen sind ohne zusätzliche Unterlagen als kurzer Fließtext oder stichpunktartig zu beantworten und beziehen sich teilweise auf vorgegebenen Beispielcode. Zur Beantwortung der Fragen können Berechnungen notwendig sein. Diese Teilnote fließt mit 80% in die Modulnote ein. Die praktischen Fähigkeiten,\n- Toolchains für eingebettete Systeme,\nEI70530: Embedded Systems and Security | Embedded Systems and Security [ESS]\n- 'memory mapped I/O',\n- Interrupts ,\n- Debugmöglichkeiten für eingebettete Systeme,\n- Kryptographie\nzu nutzen und einige übliche Angriffe anzuwenden wird in Form von 3-5 Programmieraufgaben abgeprüft. Diese Teilnote fließt mit 20% in die Modulnote ein.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "C-Programmierung\nGrundkenntnisse im Bereich Computerarchitekturen",
    "content": "- Einführung in Mikrocontroller und Unterschiede zu Desktopcomputern\n- Speicher in eingebetteten Systemen und dessen Nutzung durch C Compiler\n- Typische Peripheriebausteine und deren Nutzung\n- Interrupts und Exceptions\n- Debugging von eingebetteten Systemen\n- Kurzeinführung in Schutzziele und kryptographische Operationen\n- Typische Schwachstellen in eingebetteten Systemen\n- Übliche Angriffe und Gegenmaßnahmen\n- Anmerkung zu Seitenkanälen\n- Konzept von Separation und 'trusted computing'",
    "learning_outcomes": "Die Studierenden sind in der Lage, ein sicheres eingebettetes System auszulegen. Das heißt, vorgegebene Aufgaben auf einem eingebetteten System zu implementieren sowie Sicherheitsmaßnahmen zu bewerten und angemessene auszuwählen. Der erste Teil beinhaltet\n- Toolchains für eingebettete Systeme zu benutzen\n- Zu erläutern, wie Speicher organisiert ist\n- Speichertypen in Chips zu klassifizieren\n- Den Startvorgang eines Mikrocontrollers wiederzugeben\n- 'memory mapped I/O' beschreiben zu können und es zu nutzen\n- Übliche Peripheriebausteine aufzuzählen und deren Zweck zu erklären\n- Interrupts erklären zu können und sie zu nutzen\n- Debugmöglichkeiten für eingebettete Systeme vergleichen zu können und zu nutzen\nwährend der zweite Teil folgende Fähigkeiten umfasst\n- Schutzziele aufzählen zu können\n- Beispiele für typische Schwachstellen zu geben\n- Einige übliche Angriffe anzuwenden\n- Angemessene Gegenmaßnahmen auszuwählen\nEI70530: Embedded Systems and Security | Embedded Systems and Security [ESS]\n- Kryptographie zu nutzen\n- Mittel und Wege zur Separation darzulegen\n- MMUs/MPUs erklären zu können und sie zu nutzen\n- Seitenkanäle erklären zu können\n- Das Konzept von 'trusted computing' darzulegen",
    "teaching_methods": "Wissen wird mittels Folien und Tafelanschrieb vermittelt. Der Lernprozess der Studierenden wird in den Übungen unterstützt durch interaktive Lösung von Aufgaben, Gruppenarbeit und Programmiervorführungen des Übungsleiters zu beispielhaften Sicherheitsszenarien. Programmieraufgaben während des Semesters geben den Studierenden die Möglichkeit, ihre Fähigkeiten zur Implementierung von Sicherungsmaßnahmen eingebetteter Systeme, auf echter Hardware, z.B. einer ARM-Plattform, einzuüben und zu zeigen. Abhaltungssprache im WiSe Englisch und im SoSe Deutsch",
    "media": "In Vorlesung und Übung werden Folien, Tafelarbeit sowie interaktive Onlinetools, z.B.\nFragenkataloge und Etherpads, verwendet. Ergänzt wird das Angebot durch ein Forum auf\nMoodle, indem Lehrende Fragen zum Inhalt und zu den Programmieraufgaben beantworten.",
    "literature": "The definitive guide to ARM Cortex-M3 and Cortex-M4 processors\nJoseph Yiu\nUnderstanding Cryptography\nChristoph Paar, Jan Pelzl\nAccompanied lecture slides: http://www.crypto-textbook.com\nHandbook of Applied Cryptography\nAlfred J. Menezes, Paul C. van Oorschot, Scott A. Vanstone\nDownload from: http://www.cacr.math.uwaterloo.ca/hac/\nSecurity Engineering\nRoss Anderson\nDownload from: https://www.cl.cam.ac.uk/~rja14/book.html",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEmbedded Systems and Security (Übung, 2 SWS)\nProbst M [L], Brunner M ( Nöpel J )\nEI70530: Embedded Systems and Security | Embedded Systems and Security [ESS]\nEmbedded Systems and Security (Praktikum, 1 SWS)\nProbst M [L], Brunner M ( Nöpel J )\nEmbedded Systems and Security (Vorlesung, 2 SWS)\nProbst M [L], Sigl G, Brunner M ( Nöpel J )"
  },
  {
    "module_id": "EI70550",
    "title": "Timing of Digital Circuits",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 60,
    "hours_presence": 90,
    "examination_achievements": "The exam is in written form and lasts 60 minutes. The exam includes questions about the concepts of digital circuits and their timing performance improvent possibilities. In addition, problems to test the understanding of their application and the ability to apply them in practice are included. These problems cover extensive timing-related topics of digital circuits described by, e.g., netlist or HDL.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Course prerequisites:\n- Basic knowledge of VHDL and C/C++",
    "content": "The following topics are covered in the lectures:\n- Challenges and motivations in the development of digital circuits; race condition and hazard in\ncombinational circuits.\n- Concept of flipflop-based pipeline design and setup/hold time constraints; clock period and\nfrequency; gate library and static timing analysis.\n- Techniques to improve timing performance, including pipeline, retiming etc.\n- Aspects of digital design, including clock network, skews, synchronization across different clock\ndomains etc.\n- Advanced research on timing analysis: process variations and statistical timing analysis (SSTA).\nThe tutorials and the lab cover the following topics:\n- Introduction of the implementation of VHDL description by the synthesis tool; guidelines of VHDL\ndescription.\n- Pipeline and retiming of digital circuits in VHDL.\nEI70550: Timing of Digital Circuits | Timing of Digital Circuits [TDC]\n- Synthesis practice using an FPGA environment.\n- Implementation of a static timer using C/C++.\n- Clock skew optimization.",
    "learning_outcomes": "After finishing this course, students can state the concept of digital circuits. They can name the basic techniques used to improve timing performance of such circuits and tell the reasons of adopting such a design style in industry. Students can also relate the theoretical concepts of timing constraints and analysis algorithms with practical circuits and summarize the necessity of such constraints. By applying the discussed techniques to practical examples, students are able to examine their differences so that they can choose and integrate suitable methods to solve problems in real designs. They are able to expand the scope of understanding and inspect the limitations of the traditional design concept. They can thus predict and propose advanced methods in designing high- performance low-power circuits in industry.",
    "teaching_methods": "The course is partitioned into a teaching part and a self-studying part (the associated lab). The teaching part includes lectures and tutorials. In the lectures, basic concepts of digital circuits are discussed. Visual aids such as PowerPoint slides, overhead projections and handwriting on black board are used. In each lecture, some problems in circuit design are explained first. Then discussions are held to predict possible solutions. Thereafter, academic and industrial techniques are shown and evaluated together with the students. In the tutorials, the techniques introduced in lectures are demonstrated using real examples. Students then practice with small examples and thus get familiar with the design/programming environment. In the associated lab, tasks of implementation of timing algorithms are assigned. Students works individually in finishing these tasks. To achieve this goal, they also need to consult further documents such as scientific papers. Support will be given by the lecturer and teaching assistant regularly and on-demand. Additional electronic media are also used to provide information and support.",
    "media": "PPT\nTafel",
    "literature": "- Jan M. Rabaey et al., Digital Integrated Circuits - A Design Perspective, Prentice Hall, 2003.\n- N. Maheshwari and S. S. Sapatnekar, Timing Analysis and Optimization of Sequential Circuits,\nKluwer Academic Publishers, 1999.\n- S. S. Sapatnekar, Timing, Kluwer Academic Publishers, 2004.\nEI70550: Timing of Digital Circuits | Timing of Digital Circuits [TDC]",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTiming of Digital Circuits (Praktikum, 2 SWS)\nEldebiky A [L], Li B, Zhang Y, Eldebiky A, Gräb H\nTiming of Digital Circuits (Vorlesung mit integrierten Übungen, 4 SWS)\nLi B, Müller-Gritschneder D"
  },
  {
    "module_id": "EI70610",
    "title": "Electronic Design Automation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Written examination (75 minutes, open book policy, non-programmable calculator permitted) (100%) with questions that check the knowledge of synthesizing, optimizing and simulating digital circuits on logic level and the capability of modeling electronic design tasks mit mixed integer linear programming.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Fundamentals of digital logic design; fundamental engineering mathematics;",
    "content": "Logic Synthesis: Boolean functions, synthesis of 2-level combinational circuits, heuristic minimization of 2-level combinational circuits, synthesis of multi-level combinational circuits, ordered binary decision diagrams, synthesis of sequential circuits with finite state machines (FSM); Logic Simulation: event-driven simulation, modeling and simulation using VHDL; Mixed Integer Linear Programming (MILP) Modeling: properties of modeling method, mathematical modeling techniques (constraint linearization, OR-relation transformation, propositional logic modeling, absolute value modeling), modeling common EDA problems including grid routing, gridless routing, escape routing on printed circuit board (PCB), area routing on PCB, non- overlapping placement, area minimization, network flow, etc. Additional Topics: modeling applications in emerging technologies. EI70610: Electronic Design Automation | Electronic Design Automation [EDA]",
    "learning_outcomes": "Upon successful completion of the module students are capable of employing algorithms for computer-aided design of (digital) integrated circuits, electronic systems, and other emerging platforms. Students can use and develop software tools for synthesis, optimization and simulation of digital circuits on logic level. They are capable of modeling tasks of electronic design automation as mixed integer linear programming problems.",
    "teaching_methods": "Learning method: In addition to the individual learning of the students, consolidated knowledge is acquired by exemplary solutions to exercises and examples in the lectures. Teaching method: Students are instructed by blackboard writing, interactive discussions, sometimes slide presentations and enactment of solving exemplary tasks.",
    "media": "The following kinds of media are used:\n- Blackboard presentations\n- Comprehensive collection of formulas and algorithms\n- Catalog of exercises with solutions\n- Additional examples and demos are available online",
    "literature": "The following literature is recommended:\n- Algorithms for VLSI Design Automation; Sabih H. Gerez; John Wiley & Sons 1999\n- Synthesis and Optimization of Digital Circuits; De Micheli, Giovanni; McGraw-Hill 1994\n- VLSI Physical Design Automation; S. Sait, H. Youssef; McGraw-Hill 1995\n- Applied Mathematical Programming; Bradley, Hax, and Magnanti; Addison-Wesley 1977",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nElectronic Design Automation (Automatisierung des Entwurfs elektronischer Systeme) (Vorlesung\nmit integrierten Übungen, 5 SWS)\nLi B, Tseng T, Li M, Truppel A, Schlichtmann U"
  },
  {
    "module_id": "EI70630",
    "title": "HW/SW Codesign",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Klausur (schriftlich, 75 Minuten) ist auf die verschiedenen vermittelten Themen abgestimmt. Erworbenes Wissen wird auf verschiedene Arten getestet: Die Studierenden müssen sich an die Eigenschaften der vermittelten Konzepte und Algorithmen erinnern, die in den verschiedenen Schritten des Entwurfsablaufs verwendet werden, sie müssen zugehörige Algorithmen auf gegebene Entwurfsprobleme anwenden und sie müssen Entwurfsprobleme und zugehörige Lösungen analysieren. Die Abschlussnote basiert ausschließlich auf der Klausur.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine speziellen Voraussetzungen.",
    "content": "Das Modul deckt den Entwurfsablauf von einer Systemspezifikation in Form von Funktionsgraphen bis hin zu FPGA-Netzlisten und ausführbarem Objektcode für Mikroprozessoren ab und konzentriert sich insbesondere auf die Aufteilung von Unterfunktionen in einen Software- und einen Hardwareteil eines System-on-Chip ( SoC). Die Hauptthemen sind: Modellierung und Spezifikation von gemischten Hardware- / Softwarelösungen für eingebettete Systeme, Graphpartitionierung und Bindung an Ausführungseinheiten, Ablaufplanung von Aufgaben, Einschätzung der Entwurfsqualität.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, die Spezifikation und Modellierung von gemischten Hardware- / Softwarelösungen, die optimierte EI70630: HW/SW Codesign | HW/SW Codesign Aufteilung der Teilaufgaben in Hardware- oder Softwarepartitionen und deren Bindung an bestimmte Verarbeitungseinheiten sowie die zeitliche Planung dieser Aufgaben als die Hauptprobleme beim Entwurf von kombinierten HW / SW-Systemen zu verstehen. Sie sind in der Lage, die Standardmethode eines Top-Down-Entwurfsflusses anzuwenden, der aus Spezifikation, Exploration und Verfeinerung besteht. Darüber hinaus können die Studierenden verschiedene Algorithmen wie hierarchisches Clustering, Gruppenmigration, Simulated Annealing oder Tabu Search für die Partitionierung und verschiedene Algorithmen für statisches und dynamisches Scheduling anwenden, um diese Probleme zu lösen. Darüber hinaus können sie die Designqualität bewerten, die durch die Anwendung dieser Ansätze erreicht wird, und sie auf spezifische Probleme bei der Erstellung eigener SoC-Architekturen zuschneiden.",
    "teaching_methods": "Die grundlegende Lehrmethode ist die Präsentation während der Vorlesung, ergänzt durch Gruppendiskussionen. Während des Tutorials wird die Lösung von Beispielproblemen besprochen. Zum besseren Verständnis lesen die Studierenden wissenschaftliche Publikationen als Selbststudium. Es werden Fallstudien diskutiert, um ein praktisches Verständnis der zu lösenden Probleme für das HW / SW-Codesign eingebetteter Systeme / Systems-on-Chip zu erhalten.",
    "media": "Präsentationsfolien und ein Skriptum.\nDie Veranstaltung findet in englischer Sprache statt.",
    "literature": "D. Gajski, \"Specification and Design of embedded Systems\", Prentice Hall",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHW/SW Codesign (Vorlesung mit integrierten Übungen, 3 SWS)\nKantic J [L], Herkersdorf A, Wild T, Stechele W, Kantic J"
  },
  {
    "module_id": "EI70640",
    "title": "Synthesis of Digital Systems",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 60,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfung besteht aus zwei Teilen: einer schriftlichen Prüfung und drei Praktikumsaufgaben während des Semesters. Die Endnote setzt sich zusammen aus:\n- 75% Note der schriftlichen Prüfung (90 min., mit Unterlagen)\n- 25% Note für die drei Praktikumsaufgaben\nIn der schriftlichen Prüfung werden die Kenntnisse und Fähigkeiten zur Entwicklung digitaler Systeme mit HW/SW-Entwurf, Code-Analyse- und Optimierung, HW-Synthese anhand von Fragen und kleinen Entwurfsaufgaben abgeprüft. In den Praktikumsaufgaben werden die entsprechenden Entwicklungsfähigkeiten anhand der Synthese mit einem ARM-Prozessor und C- bzw. Assembler-Code auf einem FPGA-Board abgeprüft. Die beiden Prüfungsteile erleichtern den Vorbereitungsaufwand der Studierenden am Semesterende und fokussieren auf die spezifischen Prüfungseignungen von schriftlicher Prüfung und praktischer Prüfung.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen des Entwurfs digitaler Schaltungen sollten bekannt sein. Es wird empfohlen, ein\nVHDL-Praktikum vor oder neben dem Kurs zu absolvieren. Grundlagen der Programmierung mit C\nwerden vorausgesetzt.\nEI70640: Synthesis of Digital Systems | Synthesis of Digital Systems [SDS]",
    "content": "Die folgenden Inhalte werden in der Vorlesung behandelt und zudem in einem praktischem Teil bei der Entwicklung eines HW/SW Systems auf einem FPGA Board angewendet:\n- Entwurfsprozess digitaler Systeme\n- Grundlagen der statischen Code Analyse und Optimierung\n- High-Level-Hardware-Synthese mit Scheduling, Binding und Allokation zur Synthese einer RTL-\nBeschreibung eines Hardware Blocks ausgehend von einem C-Algorithmus\n- Grundlagen der SW-Compilierung\n- ARM Instruction Set und RISC Pipeline\n- Abschätzung der SW Ausführungszeiten\n- On-chip Bussysteme und das HW/SW-Interface",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls verstehen die Studierenden die grundlegenden Schritte des Entwurfsprozesses für digitale Systeme und können diese einsetzen und selbst weiterentwickeln. Sie können Software- und Hardware-Implementierungen bewerten und kennen die Grundlagen der statischen Code-Analyse und Optimierung. Die Studierenden können die einzelnen Schritte der High-Level-Hardware-Synthese in C- Algorithmen anwenden und entwickeln und die zugehörige RTL-Beschreibung synthetisieren. Zudem können die Studierenden die HW-Synthese mit einem industriellen High-level Synthese- Tool praktisch einsetzen. Die Teilnehmer kennen zudem die Grundlagen der SW-Kompilierung und können für kleine C- Funktionen das zugehörige ARM-Assembler-Programm erstellen. Auf Basis der ARM-Prozessoren können sie HW-abhängige Optimierungsschritte analysieren und können die Ausführungszeiten für SW-Programme abschätzen. Zusätzlich kennen die Teilnehmer die Grundlagen der HW/SW- Schnittstelle und können dieses Wissen praktisch umsetzen, um ein SW/HW-System auf einem FPGA-Board zu entwickeln.",
    "teaching_methods": "Ein wöchentlicher Präsenztermin besteht aus Vorlesung und Übung. Vorlesung (rezeptive Methoden) und Übung (aktivierende Methoden) werden in mehreren Teileinheiten pro Lehreinheit im Wechsel gehalten. Die Vorlesung verwendet rezeptive Lehrmethoden. Theoretische Grundlagen werden in Form einer Powerpoint Präsentation eingeführt. Algorithmen werden an Beispielen erläutert, die Schritt für Schritt und unter Beteiligung der Lernenden an der Tafel durchgerechnet werden. Die Übungsaufgaben werden mittels aktivierender und kooperativer Lernmethoden, wie Partner- und Gruppenarbeiten, behandelt. Die Studierenden bereiten sich auf Vorlesung und Übung durch Studium der Unterlagen vor, und bereiten durch Selbststudium den durchgenommenen Stoff nach. Die praktischen Arbeiten finden in Gruppen statt. Der praktische Teil besteht aus mehreren Präsenzterminen und selbstständiger Arbeit mit freier Zeiteinteilung. An den Präsenzterminen wird die grundlegende Bedienung der Software und FPGA Boards erklärt. EI70640: Synthesis of Digital Systems | Synthesis of Digital Systems [SDS]",
    "media": "",
    "literature": "* Philippe Coussy, Adam Morawiec: High-level synthesis from Algorithm to digital circuit, Springer\n2008\n* Alfred Aho, Monica Lam, Ravi Sethi, Jeffrey Ullman: Compilers Principles, Techniques & Tools,\nPearson Education 2007",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSynthesis of Digital Systems (Vorlesung mit integrierten Übungen, 3 SWS)\nMüller-Gritschneder D, Geier J\nSynthesis of Digital Systems (Praktikum, 3 SWS)\nMüller-Gritschneder D, Geier J, Tseng T, Zhang Y"
  },
  {
    "module_id": "EI71004",
    "title": "Communication Acoustics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die schriftliche Prüfung (90 min) ist dem Charakter der thematisch breit angelegten Vorlesung angepasst, die ein grundlegendes Verständnis der Kommunikationsakustik, Audiotechnik und Hörwahrnehmung vermitteln soll. Das Verständnis und die Fähigkeit zur individuellen Problemlösung werden in einer 90-minütigen schriftlichen Prüfung evaluiert, in der Rechenaufgaben zu Akustikgrundlagen zu lösen sind und weiterführende Fragen zu Aspekten der akustischen Kommunikation beantwortet werden sollen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Mathematische Grundlagen (komplexe Rechnung); Grundlagen der Signaldarstellung hilfreich\n(werden im Kurs wiederholt)",
    "content": "1. Grundlagen der Akustik (Müller, Vorländer) 1.1 Schallfeldgrößen, Wellengleichung 1.2 Ebene Wellen, Kugelwellen 1.3 Energie, Intensität, Decibel 1.4 Schallquellen: Stimme / musikalische Instrumente / Rauschen 1.5 Schallreflektion, Absorption, Beugung 1.6 Statistische Raumakustik, Hall 2. Grundlagen von Signalen und Systemen (Ahrens) 2.1 Komplexe Zahlen, harmonische Signale 2.2 Fourierreihe, Fourier Transformation, Zeit- und Frequenzdomäne (DFT, FFT) 2.3 LTI Systeme, Impulsantworten und Übertragungsfunktionen EI71004: Communication Acoustics | Communication Acoustics 2.4 Digitale Filter 2.5 Kurze Einführung in nichtlineare Systeme 3. Anatomie und Physiologie des Hörsystems(Fels) 3.1 Periphäres Hörsystem 3.2 Physikalische binaural Merkmale und binaurales Hören 3.3 Grundlagen der Binauraltechnologie 3.4 Wiedergabe binauraler Aufnahmen 4. Psychoakustik (Seeber) 4.1 Ruhehörschwelle 4.2 Auditorische Maskierung 4.3 Frequenzselektivität des Hörsystems und Frequenzgruppen 4.4 Lautheit von Schallen 4.5 Tönhöhe, Ausgeprägtheit der Tonhöhe, Klang 4.6 Schärfe 4.7 Schwankungsstärke und Rauigkeit 4.8 Binaural Entmaskierung beim Sprachverstehen 4.9 Psychophysikalische Methoden 5. Elektroakustik (Altinsoy) 5.1 Einführung in elektroakustische Systeme und Übertragung 5.2 Elektromechanische und elektroakustische Analogien 5.3 Amplitudenfrequenzgang, harmonische Verzerrungen, Intermodulationsverzerrung, Rauschpegel und Signal-Rauschabstand 5.4 Übertragerprinzipien 5.5 Mikrophone 5.6 Lautsprecher 5.7 Kopfhörer und Ohrhörer 6. Sprachakustik (Möller) 6.1 Anatomie des menschlichen Sprechapparats 6.2 Periodische und aperiodische Erregung 6.3 Klangformung 6.4 Eigenschaften des Sprachsignals 6.5 Sprachschalle 6.6 Modelle der Sprachproduktion 6.7 Analyse von Sprachsignalen 6.8 Sprachverständlichkeit 7. Schallaufnahme und -wiedergabe (Weinzierl) 7.1 Stereophone Wiedergabe 7.2 Wiedergabeformate: Von 1.0 zu 24.1.10 7.3 Aufnahmeverfahren EI71004: Communication Acoustics | Communication Acoustics 7.4 Kanalorientiere vs. Objektorientierte räumliche Audiokodierung 8. Virtuelle Akustik I: Binauraltechnologie (Weinzierl) 8.1 Das Konzept binauraler Aufnahme und Wiedergabe 8.2 Aufnahme- und Wiedergabegeräte 8.3 Dynamische Binauralsynthese und Resynthese 8.4 Qualität virtueller akustischer Umgebungen 9. Virtuelle Akustik II: Schallfeldanalyse und -synthese (Ahrens) Räumliche Reproduktion: Lautsprecher Arrays Räumliche Aufnahme: Mikrofonarrays, Beamforming 10. Anwendungen der Raumakustik 1 (Müller) Geometrische Akustik, Impulsantworten, Wahrnehmung (ISO 3382 Parameter), Beispiele von Auftrittsräumen und Klassenzimmern 11. Anwendungen der Raumakustik 2 (Vorländer) 11.1 Raumimpulsantwort und Spiegelquellenmodell 11.2 Ray Tracing Modell 11.3 Wellenmodelle, hybride geometrische und Wellenmodelle 11.4 Eingangsdaten: Quellen und Randbedingungen 11.5 Auralisation und Virtuelle Akustik 11.6 3D Audio-Schnittstellen 12. Anwendungen der Automatischen Spracherkennung (Möller) Grundlagen der Spracherkennung, Architektur eines Spracherkenners, Featureextraktion, Hidden Markov Modelle, Sprachmodelle 13. Anwendungen der Sprachsynthese (Möller) Historische Ansätze, Struktur eines Sprachsynthesizers, symbolische Vorverarbeitung, Generierung von Prosodie, Signalgenerierung 14. Anwendungen der Psychoakustik in der Produktentwicklung (Altinsoy) 15. Sound Design von Produkten (Altinsoy) 16. Perzeptive Audiokodierung (Ahrens) (mp3)",
    "learning_outcomes": "Grundlegendes Wissen und Verständnisses der behandelten Gebiete aus den Grundlagen der Akustik, der Schallausbreitung, Audiotechnik, Schallproduktion, Sprachverarbeitung, Psychoakustik, Kommunikationsakustik. Fähigkeit zur individuellen Problemlösung kommunikationsakustischer Fragen. EI71004: Communication Acoustics | Communication Acoustics",
    "teaching_methods": "Die Studieninhalte werden in einer Vielzahl von kurzen Videotutorials vermittelt. Material zur individuellen Vertiefung des Gelernten und Audio-Beispiele werden online zur Verfügung gestellt. In der Übung werden Vorlesungsinhalte u.a. durch Rechenbeispiele vertieft und auf praktische Fragestellungen angewandt. Die Übung erfolgt in Videotutorials und das Verständnis wird mit online Fragen (mit elektronischer Korrektur) geprüft. Der Anwendungsbezug wird durch die Vorstellung von aktuellen Forschungsarbeiten vertieft. Zur Diskussion der Ergebnisse steht online eine Diskussionsgruppe zur Verfügung, in der Studenten gegenseitig und die Kursbetreuer Fragen beantworten.",
    "media": "Vorlesung und Übung mit vielen kurzen Videotutorials, akustische Demonstrationen, Erläuterungen\nan Fallbeispielen, multimediale Darbietung von weiterführender Information, online-Selbsttest für\nden Lernfortschritt, online-Diskussionsgruppe.",
    "literature": "Terhardt, E.: Akustische Kommunikation, Springer-Verlag, Berlin Heidelberg, 1998.\nMöser, M.: Technische Akustik, Springer, 9. Aufl., 2012.",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCommunication Acoustics (Vorlesung mit integrierten Übungen, 4 SWS)\nSeeber B, Müller G, Bischof N, Bajool M"
  },
  {
    "module_id": "EI71013",
    "title": "System Design for the Internet of Things",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Steinhorst, Sebastian; Prof. Dr.\nEI71013: System Design for the Internet of Things | System Design for the Internet of Things\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSystem Design for the Internet of Things (Vorlesung mit integrierten Übungen, 4 SWS)\nSteinhorst S, Debnath R, Akinci M, Demicoli J"
  },
  {
    "module_id": "EI71018",
    "title": "Machine Learning for Communications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Kramer, Gerhard\nEI71018: Machine Learning for Communications | Machine Learning for Communications\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMachine Learning for Communications (Vorlesung mit integrierten Übungen, 4 SWS)\nKramer G, Lentner Ibanez J ( Diedolo F ), Wiegart T"
  },
  {
    "module_id": "EI71024",
    "title": "Einführung in die Zero-Error-Informationstheorie",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung wird in Form einer mündlichen Prüfung erbracht. In dieser soll durch das Beantworten von Fragen nachgewiesen werden, dass man die grundlegenden Probleme und Methoden der Zero-Error-Informationstheorie kennt und auf konkrete Fragestellungen anwenden kann. Die Beantwortung der Fragen schließt kurze Rechnungen und Beweisskizzen mit ein. In der Prüfung sind keine Hilfsmittel zugelassen.",
    "repetition": "Folgesemester / Semesterende",
    "recommended_prerequisites": "Mathematisches Interesse\nEs wird empfohlen, folgende Fächer zuvor belegt zu haben: Mathematik 1-4, Informationstheorie",
    "content": "Das Modul bietet eine Einführung in die Zero-Error-Informationstheorie, welche Informationstheorie und Kombinatorik/Graphentheorie verbindet. In der Zero-Error-Informationstheorie wird gefordert, dass Nachrichten über einen verrauschten Kanal mit Fehlerwahrscheinlichkeit 0 übertragen werden, wobei der Kanal diskret und gedächtnislos ist. Es wird die Zero-Error-Kapazität sowohl mit als auch ohne Feedback studiert. Da keine geschlossene Formel für die Zero-Error-Kapazität ohne Feedback bekannt ist, werden obere Schranken ausführlich behandelt. Für einige Spezialfälle kann sie berechnet werden, für den allgemeinen Fall werden außerdem Eigenschaften wie die Additivität studiert. Die Zero-Error-Kapazität mit Feedback wird vollständig charakterisiert. Die benötigten Hilfsmittel aus der Graphentheorie werden ebenfalls in der Vorlesung eingeführt. EI71024: Einführung in die Zero-Error-Informationstheorie | Introduction to Zero-Error Information Theory",
    "learning_outcomes": "Der Student ist nach erfolgreicher Teilnahme mit den grundlegenden Problemen und Methoden der Zero-Error-Informationstheorie vertraut. Dies befähigt ihn zu vertiefter Beschäftigung mit den einzelnen vorgestellten Bereichen. Zudem ist er in der Lage, kombinatorische Methoden in der Informationstheorie bzw. informationstheoretische Methoden in der Kombinatorik erfolgreich einzusetzen.",
    "teaching_methods": "In der Vorlesung wird die grundlegende Theorie der Zero-Error Informationstheorie anhand einer Tafelpräsentation des Dozenten vorgestellt und erklärt. Dazu zählt insbesondere 1) das Einführen notwendiger Begriffe und Notationen 2) das Vorstellen, Beweisen, und Erklären wichtiger Resultate und mathematischer Sätze 3) die Darstellung, wie die Theorie auf konkrete Fragestellungen der Informationstheorie angewendet werden kann In den Übungen sollen die Studenten durch das selbständige and angeleitete Lösen von Übungsaufgaben aus den angegebenen Bereichen der Vorlesung 1) ihr Wissen festigen 2) lernen die gewonnen Erkenntnisse auf konkrete Fragestellungen der Informationstheorie anzuwenden 3) lernen und erkennen wo der Einsatz von kombinatorischen Methoden in der Informationstheorie vorteilhaft sein kann",
    "media": "Präsentation an der Tafel\nÜbungsblätter",
    "literature": "J. Körner, A. Orlitsky, \"Zero-error information theory\", IEEE Transactions on Information Theory,\nvol. 44, no. 6, S. 2207-2229, 1998.\nC. E. Shannon, “The zero-error capacity of a noisy channel,” IRE Transactions on Information\nTheory, vol. IT-2, S. 8-19, 1956.\nL. Lovász, “On the Shannon capacity of a graph,” IEEE Transactions on Information Theory, vol.\nIT-25, S. 1-7, 1979.",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Zero-Error-Informationstheorie (Übung, 2 SWS)\nWiese M [L], Böck Y\nEI71024: Einführung in die Zero-Error-Informationstheorie | Introduction to Zero-Error Information Theory\nEinführung in die Zero-Error-Informationstheorie (Vorlesung, 2 SWS)\nWiese M [L], Colomer P"
  },
  {
    "module_id": "EI71025",
    "title": "Grundlagen der digitalen, analogen und Quanten Computer",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung wird in Form einer mündlichen Prüfung erbracht. In dieser soll durch das Beantworten von Fragen zu den Grundlagen der digitalen, analogen und Quanten Computer und durch Darlegung eines Lösungsansatzes für ein gegebenes Problem nachgewiesen werden, dass die Studierenden die Basisarchitekturen und Basisalgorithmen sicher einsetzen können. Während der Prüfung sind keine Hilfsmittel zugelassen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Analysis 1-3, Signaldarstellung\ngrundlegende Kenntnisse in Signal- und Systemtheorie",
    "content": "In der Vorlesung werden die Grundlagen des Turing Computers als Basis aller digitalen Computer entwickelt. Es werden Turing berechenbare Funktionen vollständig charakterisiert. Darauf aufbauend wird die berechenbare Analysis als Basis für alle Problemstellungen, die mit Hilfe eines Turing Computers gelöst werden können, entwickelt. Für zentrale Systeme der Informationstechnik wie zum Beispiel Fourier Transformation, Hilbert Transformation und Differentialgleichungen wird unter Benutzung mathematischer Techniken gezeigt, dass diese im Allgemeinen nicht auf Turing Computer berechnet werden können. Im Anschluß werden die physikalischen und mathematischen Gundlagen von universellen analog Computern entwickelt. Für die Fourier Transformation, Hilbert Transformation und Differentialgleichungen werden Implementierungen auf einem universellen analog Computer entwickelt. Es wird weiterhin gezeigt, dass jeder Turing Computer auf einem analog Computer implementiert werden kann. Damit ist der universelle analog Computer sehr viel leistungsfähiger als der Turing Computer. Im Anschluß werden die EI71025: Grundlagen der digitalen, analogen und Quanten Computer | Foundations of Analog, Digital and Quantum Computers physikalischen und mathematischen Grundlagen des Quanten Computers als Weiterentwicklung klassischer analog Computer entwickelt.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studenten mit den Grundlagen der digitalen, analogen und Quanten Computer vertraut. Sie kennen u.a. die Grenzen digitaler Computer und können für die behandelten Problemklassen entscheiden, welche Systeme nur auf einem analogen Computer implementiert werden können. Sie sind mit der neuen Theorie des Analog- und Quantencomputers vertraut und können für Basisprobleme entsprechende Implementierungen auf diesen neuen Rechnerplattformen entwicklen.",
    "teaching_methods": "Die grundlegende Theorie der digitalen, analogen, und Quantencomputer wird während der Vorlesung durch einen Tafelvortrag hergeleitet und erklärt. Dabei wird insbesondere auf eine exakte mathematische Problemformulierung Wert gelegt bei der die Hauptaussagen ausführlich an der Tafel bewiesen werden. In den Übungen werden vor allem konkrete Algorithmen betrachtet. Hier sollen die Studenten, durch das selbstständige und angeleitete Lösen von Übungsaufgaben, konkrete Implementierungen einzelner Algorithmen kennen lernen. Gleichzeitig werden durch den Übungsassistenten notwendige Hilfsresultate an der Tafel hergeleitet und erklärt.",
    "media": "Präsentation an der Tafel\nÜbungsblätter",
    "literature": "H. Boche, Vorlesungsskript \"Angewandte Funtionalanalysis\"\nKlaus Weihrauch, \"Computable Analysis - An Introduction\", Springer-Verlag Berlin/Heidelberg,\n2000\nM. A. Nielsen and I. L. Chuang, \"Quantum Computation and Quantum Information\", Cambridge\nUniversity Press, 2000.\nMarian B Pour-El and J. Ian Richards, \"An Introduction to Computable Analysis\", Computability in\nAnalysis and Physics, Springer-Verlag, 1989",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagen der digitalen, analogen und Quanten Computer (Vorlesung, 2 SWS)\nMönich U [L], Boche H\nEI71025: Grundlagen der digitalen, analogen und Quanten Computer | Foundations of Analog, Digital and Quantum\nComputers\nGrundlagen der digitalen, analogen und Quanten Computer (Übung, 2 SWS)\nMönich U [L], Huffmann J"
  },
  {
    "module_id": "EI71029",
    "title": "Physical Unclonable Functions",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Mündliche Prüfung: Die Prüfung des Moduls wird in Form einer 30-minütigen mündlichen Prüfung als Gespräch abgelegt. Dabei benennen und erläutern die Studierenden Konzepte und Anwendungen für PUFs und TRNGs. Sie zeigen, dass sie Methoden zur Qualitätsbewertung von PUFs und TRNGs kennen und anwenden können. Sie weisen nach, dass sie in der Lage sind, typische Angriffsvektoren auf PUFs zu identifizieren und geeignete Gegenmaßnahmen vorzuschlagen. Außerdem zeigen sie anhand der Dokumentation und Implementierung der im praktischen Teil realisierten Schaltung, ein vertieftes Verständnis der dort umgesetzten Konzepte. Die Note für das Modul wird anhand dieser Prüfung festgelegt. Bei hoher Teilnehmerzahl kann die Prüfung als 60-minüitige schriftliche Prüfung abgehalten werden. Praktikumsaufgaben: Die Studierenden weisen anhand des Praktikumsanteils der Veranstaltung, welcher aus drei bis vier Teilaufgaben besteht, nach, dass sie in der Lage sind, ausgewählte, in der Vorlesung besprochene Konzepte für PUFs praktisch auf einem FPGA umzusetzen. Für die erfolgreiche Bearbeitung der Teilaufgaben wird ein Notenbonus von 0,3 vergeben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Für die Durchführung des Praktikums sind Vorkenntnisse in VHDL erforderlich.\nFür die Vorlesung sind keine besonderen Vorkenntnisse erforderlich",
    "content": "Die Vorlesung behandelt konkrete Konzepte, mit denen in Hardware verfügbarer Zufall für die IT- Sicherheit nutzbar gemacht werden kann. Im ersten Teil der Veranstaltung werden hierbei Physical EI71029: Physical Unclonable Functions | Physical Unclonable Functions [PUFs] Unclonable Functions (PUFs) behandelt. Zunächst werden schaltungstechnische Konzepte für PUFs vorgestellt und die dabei ausgenutzten Effekte besprochen. Anschließend werden Methoden vermittelt um die Qualität von PUFs zu bewerten und es werden Anwendungen von PUFs erläutert. Die für die Anwendung von PUFs notwendigen Komponenten werden ebenso behandelt wie mögliche Angriffe auf PUFs und Gegenmaßnahmen. Im zweiten Teil der Vorlesung werden Zufallszahlengeneratoren und Methoden zur Analyse von Zufallszahlengeneratoren behandelt. Im praktischen Teil entwickeln die Studierenden selbstständig eine Implementierung zur Ver- und Entschlüsselung von Daten mittels PUF auf einem FPGA. Die Aufgabe besteht darin, Schlüsselspeicherung und Zufallszahlengenerierung auf einem FPGA zu implementieren wobei Schnittstellenspezifikationen eingehalten werden müssen. Module für Ver- und Entschlüsselung sowie für die Kommunikation mit dem FPGA werden vorgegeben. Die Übung dient in dieser Vorlesung einerseits dazu klassisch Vorlesungsinhalte einzuüben. Andererseits unterstützt sie dabei, Vorlesungsinhalte für den Praktikumsanteil aufzubereiten, und begleitet das Praktikum.",
    "learning_outcomes": "Nach erfolgreicher Absolvierung des Moduls kennen die Studierenden das Konzept von Physical Unclonable Functions und Zufallszahlengeneratoren. Sie können Methoden zur Bewertung von PUFs und Zufallszahlen anwenden und deren Ergebnisse interpretieren. Anwendungen von PUFs sind den Studierenden bekannt und werden verstanden. Die Studierenden können Ihr Wissen über PUFs und Zufallszahlengeneratoren anwenden und für die Implementierung von grundlegenden PUF-Anwendungen einsetzen.",
    "teaching_methods": "Um Konzepte von PUFs und Zufallszahlengeneratoren, Methoden zur Bewertung von PUFs und Anwendungen von PUFs kennenzulernen und zu verstehen findet in diesem Modul in der Vorlesung Frontalunterricht statt. Das Verständnis dieser theoretischen Inhalte wird in einer begleitenden Übung als interaktiver Frontalunterricht vertieft. Zudem wird in der Übung das Vorgehen bei der praktischen Anwendung an Beispielen vermittelt. Wichtige Aspekte der praktischen Implementierung von PUFs und Zufallszahlengeneratoren erlernen die Studierenden im Rahmen eines begleitenden Praktikums. Der theoretische Hintergrund für dieses Praktikum wird im Rahmen der Vorlesung bereitgestellt. Das Wissen zur Übertragung von der Theorie in die Praxis erhalten die Studierenden aus der Übung. Darauf aufbauend sollen die Studierenden selbstständig Lösungen für die Realisierung von typischer Komponenten einer PUF-Anwendung erarbeiten, wobei einschlägige Quellen herangezogen werden können. Eine Spezifikation für die Komponenten wird vorgegeben. Zudem steht stets ein Betreuer für Hilfestellungen zur Verfügung.",
    "media": "- Vorlesung/Übung: PowerPoint Präsentationen und Tafelanschrieb\n- Praktikum: Kurzanleitung\nEI71029: Physical Unclonable Functions | Physical Unclonable Functions [PUFs]",
    "literature": "Folgende Literatur wird empfohlen:\n- C. Böhm und M. Hofer, \"Physical Unclonable Functions in Theory and Practice\", Springer 2012\n- M. Hiller, \"Key Derivation with Physical Unclonable Functions \", Dissertation, TUM 2016\n- J. Delvaux, \"Security Analysis of PUF-Based Key Generation and Entity Authentication\", PhD\nThesis, KU Leuven, 2017",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPhysical Unclonable Functions (Vorlesung mit integrierten Übungen, 3 SWS)\nPehl M\nPhysical Unclonable Functions (Praktikum, 2 SWS)\nPehl M"
  },
  {
    "module_id": "EI71036",
    "title": "Software Architecture for Distributed Embedded Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Achievement of the intended learning outcomes is assessed in a single written exam (75 min) at the end of the semester. The written exam is performed in a closed book policy without supporting material. Assessment criteria are: Ability to make design decisions for software architecture based on design patterns which have been discussed in the course, combining theoretical concepts with practical implementation considerations. Ability to apply methods, concepts and design patterns related to software architecture for embedded and distributed systems.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Principles of embedded computing systems, object oriented programming.",
    "content": "Introduction to object oriented software development; Unified Markup Language (UML) representation; basic principles of pattern-oriented software design; specific requirements for embedded systems; challenges of distributed architectures; selected structural, behavioral and creational \"gang of four\" design patterns which are relevant to the targeted applications; design patterns in the context of resource constrained embedded systems: hardware access, concurrency and resource management, safety and reliability; patterns for event handling, service access, configuration and concurrency of distributed applications.",
    "learning_outcomes": "Upon successful completion of the module, the participants are able to explain, apply and develop software architectures for embedded and distributed systems. The students are able to discuss and evaluate different architectural design patterns and design paradigms for such systems. They are able use the learned methods for both the choice of appropriate software architectures and to solve specific problems for applications based on the insights provided in this course, as well as to apply the methods and architectural concepts in system design processes.",
    "teaching_methods": "In addition to the students’ individual methods which shall be supported by the lectures, the tutorials will repeat and deepen the course content by discussion of problems and exercises in form of learning activities.",
    "media": "The following media are used:\n- Presentations (Projector, Blackboard)\n- E-learning platform Moodle\n- Exercises with solutions available for download",
    "literature": "• Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, Volume\n2, by Douglas Schmidt, Michael Stal, Hans Rohnert and Frank Buschmann\n• Design Patterns: Elements of Reusable Object-Oriented Software, Book by Erich Gamma, John\nVlissides, Ralph Johnson, and Richard Helm\nFurther literature will be discussed in the lecture.",
    "lv_sws_lecturer": "Steinhorst, Sebastian; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSoftware Architecture for Distributed Embedded Systems (Vorlesung mit integrierten Übungen, 3\nSWS)\nSteinhorst S, Demicoli J, Ernstberger J, Debnath R, Lauinger J"
  },
  {
    "module_id": "EI71045",
    "title": "Entwurf von sicheren medizinischen Geräten und Baugruppen",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Modulleistung wird in Form einer schriftlichen Prüfung erbracht (60 Minuten). In dieser soll nachgewiesen werden, dass Maßnahmen zur funktionalen Sicherheit in medizinischen Geräten verstanden werden. Darüber hinaus sollen Fehlerbeherrschungsmaßnahmen beurteilt und Fragen dazu beantwortet werden können. Weiterhin sollen die Studierenden zeigen, dass sie die Einschränkungen und die Anwendungsgebiete nicht-idealer elektronischer Komponenten verstanden haben sowie die Grundlagen des Leiterplattenentwurfs für medizinische Systeme kennen. Während des Semesters werden freiwillige Seminarthemen angeboten, die zur Notenverbesserung herangezogen werden können. Der Seminaraspekt beinhaltet die Ausarbeitung eines Seminarvortrags, die Präsentation während der integrierten Übung und die fachliche Diskussion im Hörerkreis. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 100 % Abschlussprüfung\nBei Bestehen des freiwilligen Seminarthemas wird diese Leistung mit einem Bonus von 0,3 auf die bestandene Modulnote angerechnet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen",
    "content": "Das Modul behandelt die Anwendung von Prinzipien der funktionalen Sicherheit auf dem Gebiet der Medizintechnik und die grundlegenden Normen zur elektrischen Sicherheit in Medizinprodukten. Der Fokus wird dabei auf die Beherrschung von Hardwarefehlern und auf Softwarefehler in Microcontroller/-prozessor Umgebungen gelegt. Verschiedene Test- und Fehlererkennungsverfahren werden an einem praktischen Fallbeispiel gemeinsam erarbeitet. Weiterhin behandelt das Modul die nicht-idealen Eigenschaften von elektronischen Komponenten (passiven Komponenten, aktiven Komponenten, programmierbare Komponenten) sowie deren Einsatzmöglichkeiten und Einschränkungen beim Schaltungsentwurf. Ergänzend stehen aus allen Teilaspekten der Vorlesung Seminarthemen zur Verfügung, anhand derer die Studierenden ihr Fachwissen vertiefen können. Begleitende Übungen dienen zur Konkretisierung des Vorlesungsstoffes.",
    "learning_outcomes": "Nach erfolgreicher Teilnahme an dem Modul sind die Studierenden in der Lage\n• die grundlegenden Normen und Vorschriften der funktionalen Sicherheit und der elektrischen\nSicherheit von Medizinprodukten zu kennen\n• systematische und zufällige Fehler in elektronischen Baugruppe zu erkennen\n• fehlervermeidende und fehlerbeherrschende Maßnahmen zu analysieren\n• Schutzmaßnahmen zu entwickeln\n• Einschränkungen und Anwendungsfelder nicht-idealer elektronischer Komponenten zu kennen\nund im Schaltungsentwurf zu berücksichtigen\n• Konzepte für medizinische, elektronische Baugruppen normgerecht zu entwickeln",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesungen Frontalunterricht gehalten. Zusätzlich werden integrierte Übungen bei denen die Themen der Vorlesungen vertieft und angewendet werden angeboten. Außerdem werden freiwillige Seminarthemen angeboten, anhand derer sich die Studierenden ausführlich mit einem Teilaspekt der Vorlesung beschäftigen und dann präsentieren und diskutieren.",
    "media": "Folgende Medienformen finden Verwendung:\n• Powerpoint Präsentationen\n• Interaktive Erläuterungen und Analysen an der Tafel\n• Interaktive Übungen\n• Interaktive Seminarthemen und -vorträge",
    "literature": "• Williams: The Circuit Designer's Companion, ISBN 0-7506-6370-7\n• Harer: Anforderungen an Medizinpordukte, ISBN 978-3-446-44041-8\n, ISBN 0-7506-6370-7",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEntwurf von sicheren medizinischen Geräten und Baugruppen (Vorlesung mit integrierten\nÜbungen, 3 SWS)\nGleich B [L], Gleich B ( Knürr J, Voss A )"
  },
  {
    "module_id": "EI71056",
    "title": "Advanced Robot Control and Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Studenten sind mit fortgeschrittenen Konzepten im Bereich Regelungstechnik und maschinellem Lernen vertraut und in der Lage, die Methoden aus diesen Themengebieten auch auf echte Robotersysteme anzuwenden. Die Modulnote basiert auf der Leistung des Studenten in einem einwöchigen praktischen Kurs (praktische Demonstration und mündliche Präsentation) sowie einer mündlichen Abschlussprüfung (20 min). Hiermit wird das Wissen der Studenten in theoretischen Aspekten des maschinellen Lernens und der Regelung beurteilt und geprüft, ob sie in der Lage sind, diese auch auf reale Robotikprobleme anzuwenden und ihre Ergebnisse zu präsentieren.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Fundamentals of control engineering\n- Fundamentals of robotics\n- Fundamentals machine learning\n- Fundamentals of statistics",
    "content": "Der Abschnitt Regelung behandelt fortgeschrittene Konzepte der Roboterregelung, -modellierung und -identifikation. Ausgehend von den grundlegenden Konzepten wie der Differentialgeometrie werden die wesentlichen Ideen für den Stand der Technik im Bereich Regelungsmethoden für reale Roboteranwendungen behandelt. Darüber hinaus werden fortgeschrittene Methoden zur Modellierung und Identifizierung physikalischer Systeme und insbesondere von Robotern vorgestellt. Abschließend werden im Abschnitt adaptive Impedanzregelung die Theorien hinter der menschlichen Motorsteuerung kurz erläutert und die zugehörigen bio-inspirierten Regelalgorithmen EI71056: Advanced Robot Control and Learning | Advanced Robot Control and Learning beschrieben. Der zweite Teil des Kurses behandelt typische Probleme des Roboterlernens und dessen Lösungsansätze. Darüber hinaus werden viele praktische Aspekte und Probleme in Bezug auf reale Anwendungen behandelt. Der Überblick für diesen Kurs ist wie folgt. I. Differential Geometry in Robotics\n- Manifolds\n- Rigid Body Configuration\n- Tangent and Cotangent Space\n- Tensors\nII. Task Space Control\n- Robot Equations in Task Coordinates\n- SE3 Coordinates and Jacobian Matrix\n- Decoupled Position Control in Task Space\nIII. Redundant Robots\n- Dynamics of Redundant Robots\n- Motion/Torque Null space\n- Null space and Stability\nIV. Passivity-based Robot Control\n- Passivity\n- 1-DoF Robot\n- Passive Representation of a Robot\n- PD-g(q) Control\n- Passivity & Robustness\n- PD-g(q)-Feedforward & PD+ Control\n- Damping Design\n- Slotine & Li Control\n- Joint Control Summary\n- Cartesian Impedance Control\n- Impedance vs. Admittance Control\n- Local Nature of Cartesian Control\nV. Port-based Modeling in Robotics\n- Dirac Structure & Power Ports\n- Port-based Modeling of a Manipulator\n- Passivity Analysis\nVI. Linear Parametric Modeling and Identification of Robot Dynamics\n- Linear Parameterization of the Manipulator’s Dynamic Model\n- The Minimum Parameter Set\n- Parameter Identification\n- Trajectory Optimization\nEI71056: Advanced Robot Control and Learning | Advanced Robot Control and Learning\n- Modeling of Friction\n- Identification Procedure\n- Adaptive Control\nVII. Adaptive Impedance Control\n- Bio-inspired formulation\n- Adaptive impedance control for a manipulator\nVIII. Learning for Physical Systems – Overview\n- Latest advances in machine learning for physical systems\n- Recent applications for autonomous systems\n- Literature overview\nIX. Real-world Problem Classes\n- Motion and manipulation skill learning\n- Blind manipulation\n- Vision-based manipulation\n- Sensitive grasping\n- Compound manipulation tasks\nX. Complexity reduction\n- Expert knowledge vs. data-driven approaches\n- Smart data vs. big data\n- Interaction control architectures\n- Interaction skill formalisms\n- System limits and task context\n- Latent spaces and dimensionality reduction\nXI. Cost function design\n- Feasibility and optimality\n- Unknown constraints\n- Confidence in real-world problems\nXII. Practical implications\n- Simulation vs. real world\n- Experiment design\n- Limitations of physical systems",
    "learning_outcomes": "Die erfolgreiche Teilnahme am Modul befähigt die Studenten:\n- Problemstellungen der Robotik aus der Perspektive der Differentialgeometrie zu verstehen und\nSteuerungsziele zu interpretieren\n- Das dynamische System eines Roboters zu identifizieren und bestimmen\n- Aktuelle Problemstellungen der Steuerung mit fortgeschrittenen Methoden zu lösen\nEI71056: Advanced Robot Control and Learning | Advanced Robot Control and Learning\n- Das Konzept der Redundanz in der Robotik zu verstehen und zu nutzen\n- Stabile Regler aufzubauen\n- Biologisch inspirierte Steuerungen zu entwickeln\n- Lernmethoden der Robotik zu verstehen und anzuwenden",
    "teaching_methods": "Übungen werden während der Vorlesung zur Verfügung gestellt, präsentiert und diskutiert. Die zugehörigen Musterlösungen werden bereitgestellt. Der Robothon führt die Studenten an reale Probleme heran, die in Form eines Beispiel-Projekts gelöst werden sollten. Frühere Robothons wurden auch zur Zeit Prof. Haddadins in Hannover durchgeführt und können hier eingesehen werden: https://www.roboterfabrik.uni-hannover.de. Während des Robothons sammeln die Studenten praktische Erfahrungen bei der Lösung realer Probleme mit Robotersystemen. Die Studenten arbeiten in Teams zusammen, wobei jedes Team einen eigenen Vorschlag für ein relevantes Problem macht, das sie innerhalb einer Woche lösen können. Die Studenten sind dafür verantwortlich, ihre Lösung für das jeweilige Problem selbstständig zu planen und umzusetzen. Sie werden während des einwöchigen Kurses unterstützt, arbeiten jedoch eigenverantwortlich. Am Ende demonstrieren die Studenten ihre Lösung live und halten eine Präsentation über die von ihnen verwendeten Methoden und Ansätze. Die Beispielprobleme sollen sich sich auf drei zentrale Themen beziehen: 1. Die Zukunft der Arbeit, bei der Mensch und Roboter in einem geteilten Arbeitsbereich agieren (z.B. Durchführung des Peg-in-Loch-Verfahrens, Anwendungen im Bereich Verpackungsindustrie, und andere relevante Industrien), 2. die Zukunft der Mobilität und 3. die Zukunft der Gesundheit.",
    "media": "- Presentations\n- Exercises with solutions\n- Robot hands-on experience\n- Tutorials",
    "literature": "- Ploen, Scott Robert. Geometric algorithms for the dynamics and control of multi-body systems.\nDiss. UNIVERSITY OF CALIFORNIA IRVINE, 1997.\n- Dullemond, Kees, and Kasper Peeters. \"Introduction to Tensor calculus.\" Kees Dullemond and\nKasper Peeters - (1991).\n- Khatib, Oussama. \"A unified approach for motion and force control of robot manipulators: The\noperational space formulation.\" IEEE Journal on Robotics and Automation 3.1 (1987)\n- Ott, Christian. Cartesian impedance control of redundant and flexible-joint robots. Springer, 2008.\n- Siciliano, Bruno. \"Kinematic control of redundant robot manipulators: A tutorial.\" Journal of\nIntelligent and Robotic systems 3.3 (1990)\n- Hatanaka, Takeshi, et al. Passivity-Based Control and Estimation in Networked Robotics.\nSpringer, 2015\n- Duindam, Vincent, et al., eds. Modeling and control of complex physical systems: the port-\nHamiltonian approach. Springer Science & Business Media, 2009\nEI71056: Advanced Robot Control and Learning | Advanced Robot Control and Learning\n- Khalil, Wisama, and Etienne Dombre. Modeling, identification and control of robots. Butterworth\nHeinemann, 2004\n- Burdet, Etienne, David W. Franklin, and Theodore E. Milner. Human robotics: neuromechanics\nand motor control. MIT Press, 2013\n- Argall, Brenna D., et al. \"A survey of robot learning from demonstration.\" Robotics and\nautonomous systems 57.5 (2009): 469-483.\n- Asfour, Tamim, et al. \"Imitation learning of dual-arm manipulation tasks in humanoid robots.\"\nInternational Journal of Humanoid Robotics 5.02 (2008): 183-202.\n- Kober, Jens, J. Andrew Bagnell, and Jan Peters. \"Reinforcement learning in robotics: A survey.\"\nThe International Journal of Robotics Research 32.11 (2013): 1238-1274.\n- Van Hoof, Herke, et al. \"Learning robot in-hand manipulation with tactile features.\" 2015 IEEE-\nRAS 15th International Conference on Humanoid Robots (Humanoids). IEEE, 2015.\n- Nguyen-Tuong, Duy, and Jan Peters. \"Model learning for robot control: a survey.\" Cognitive\nprocessing 12.4 (2011): 319-340.\n- Pastor, Peter, et al. \"Skill learning and task outcome prediction for manipulation.\" 2011 IEEE\nInternational Conference on Robotics and Automation. IEEE, 2011.\n- Kalakrishnan, Mrinal, et al. \"Learning force control policies for compliant manipulation.\" 2011\nIEEE/RSJ International Conference on Intelligent Robots and Systems. IEEE, 2011.\n- Kronander, Klas, and Aude Billard. \"Learning compliant manipulation through kinesthetic and\ntactile human-robot interaction.\" IEEE transactions on haptics 7.3 (2013): 367-380.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Robot Control and Learning (Übung, 2 SWS)\nHaddadin S [L], Budiman F, Chen L, Haddadin S, Swikir A\nAdvanced Robot Control and Learning (Praktikum, 2 SWS)\nHaddadin S [L], Budiman F, Chen L, Swikir A\nAdvanced Robot Control and Learning (Vorlesung, 2 SWS)\nHaddadin S [L], Haddadin S, Budiman F, Chen L, Swikir A"
  },
  {
    "module_id": "EI71059",
    "title": "Mixed Integer Programming and Graph Algorithms for Engineering Problems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The examination will be in written form, the duration is 75 minutes. The students will demonstrate their capability to construct abstract models for commonly- seen engineering problems at given examples. They will show that they can select and apply appropriate solution algorithms and derive the corresponding mathematical constraints and objectives. They will also show that they can analyze the algorithm efficiency as well as the result quality.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Fundamental programming knowledge",
    "content": "Content covered in this course:\n- Physical modeling, mixed integer linear programming (MILP), time complexity\n- Graph: vertex, edge, directed, degree, cyclic, planarity\n- Tree: binary search tree, MILP sort, quick sort, heaps\n- Distance-oriented graph: MILP shortest path, Dijkstra, A*, MILP spanning tree, Kruskal, MILP\nsteiner tree, MILP planar routing\n- Conflict-oriented graph: vertex coloring, edge coloring, maximum independent set\n- Graph partition: max-flow min-cut, clustering\n- Set: set covering, exact covering\n- Scheduling and binding: time slot modeling, non-uniform time slot",
    "learning_outcomes": "After accomplishing this module, students are able to construct abstract models (e.g. graphs) for commonly-seen engineering problems, and apply algorithms or mathematical modeling methods to solve the problems systematically. In particular, students are able to analyze the problem space and solution space for a given engineering problem and understand that a small variance of the problem formulation can cause a significant change to the methodology. In addition, with a given method, students are able to evaluate its time complexity and measure its solution quality.",
    "teaching_methods": "Students learn the content of this course by attending the lectures and the tutorials. While the lectures focus on teaching the theories, the tutorials focus on consolidating students’ knowledge by applying learnt models and methods to solve varying problems. Both the lectures and tutorials are held in a teacher-centered style, but the students are always encouraged to interact with the lecturer and the tutor, especially when the students have different ideas regarding the models or algorithms.",
    "media": "The following kinds of media are used:\n- Slides\n- Blackboard presentations\n- Online examples and demos",
    "literature": "The following literatures are recommended:\n- Applied Mathematical Programming; Bradley, Hax, and Magnanti; Addison-Wesley 1977.\n- Introduction to Algorithms; Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and\nClifford Stein; The MIT Press 2009.\n- Introduction to Graph Theory; Douglas B. West; Pearson 2000.",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMixed Integer Programming and Graph Algorithms for Engineering Problems (Vorlesung mit\nintegrierten Übungen, 4 SWS)\nTseng T, Li M"
  },
  {
    "module_id": "EI71060",
    "title": "Security in Communications and Storage",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In einer schriftlichen Prüfung (90 min) über den Inhalt der Vorlesung demonstrieren die Studierenden ihr Verständnis der betrachteten Sicherheitsschemata und deren Anwendungen. Sie zeigen des Weiteren unter Benutzung einer handgeschriebenen Formelsammlung, dass sie diese Sicherheit- und Codierungsprinzipien evaluieren und designen können unter Berücksichtigung der betrachteten Anwendungen (post-quantum Kryptographie, Authentifizierung, verteilte Datenspeicherung, Private Information Retrieval).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Benötigt: mathematische Grundkenntnisse (vor allem lineare Algebra).\n- Empfohlen: Kenntnisse der Kanalcodierung oder Informationstheorie (Vorlesungen können\nparallel zu dieser Vorlesung gehört werden)",
    "content": "- Motivation und praktische Notwendigkeit von Sicherheit\n- Kurzer Überblick der klassischen Kryptographie: symmetrische und public-key Kryptographie\n- Kurze Einführung in lineare fehlerkorrigierende Codes: Generator und Parity-Check Matrix, dualer\nCode, Mindestdistanz, MDS Codes\n- Post-quantum Kryptographie: Bedrohung des Quantencomputers, Code-basierte Kryptographie\n(McEliece & Niederreiter Schema, Attacken), Lattice-basierte Kryptographie\n- Authentifizierung\n- Verteilte Datenspeicherung: Wahl der Parameter, Regenerating Codes, Locally Repairable\nCodes, Schranken\n- Grundlegende Definitionen der Informationstheorie: Entropie, wechselseitige Information\nEI71060: Security in Communications and Storage | Security in Communications and Storage\n- Sichere verteilte Datenspeicherung\n- Private Information Retrieval: grundlegende Idee (Sicherheit vs. Anonymität vs. Privacy),\nkleine Beispiele (1-3 Server), computational vs. informations-theoretisches PIR, Überblick über Kommunikationskomplexität\n- PIR über codierte Datenbanken: PIR Rate und Kapazität",
    "learning_outcomes": "NAch dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage\n- Maßnahmen, um Sicherheit in modernen Kommunikations- und Speichersystemem zu erreichen,\nzu benennen und zu erklären,\n- grundlegende kryptographische Schemata zu verstehen und zu analysieren,\n- die Herausforderungen von post-quantum Kryptographie zu verstehen und zu benennen, welche\nSysteme sicher bleiben,\n- für Code-basierte Kryptographie: einen passenden fehlerkorrigierenden Code zu wählen, seine\nParameter anzupassen, zu evaluieren und in Software zu implementieren,\n- bekannte Attacken auf Code-basierte Kryptographie zu verstehen und zu implementieren,\n- einen Überblick über symmetrische Kryptographie und Authentifizierung zu geben,\n- die wichtigsten Codes zu erklären, welche für verteilte Datenspeicherung verwendet werden,\n- Herausforderungen im Design und das Zusammenspiel verschiedener Parameter in verteilter\nDatenspeicherung zu identifizieren,\n- Herausforderungen der Sicherheit in der verteilten Datenspeicherung zu identifizieren,\n- das grundlegende Prinzip und die verschiedenen Formen von Private Information Retrieval zu\nverstehen,\n- einen Überblick über die bekannten Ergebnisse im Zusammenhang mit Private Information\nRetrieval über Komplexität, Kapazität und Codes zu geben",
    "teaching_methods": "Die notwendigen theoretischen Inhalte werden im Vortrag vermittelt (mit Folienpräsentation und Tafelanschrieb) und durch kurze Beispiele veranschaulicht. Die Studierenden sind zur Diskussion der Inhalte angehalten und werden mit zahlreichen Zwischenfragen zur Beteiligung motiviert. In der begleitenden Übung wird der Inhalt der Vorlesung angewandt, indem Aufgabenstellungen berechnet werden und kleine Aufgaben implementiert werden.",
    "media": "Folienpräsentation und Tafel.",
    "literature": "Die Vorlesungsfolien werden zur Verfügung gestellt. Wenn notwendig, werden aktuelle\nForschungspapers zu den jeweiligen Themen hochgeladen.",
    "lv_sws_lecturer": "Wachter-Zeh, Antonia; Prof. Dr.-Ing.\nEI71060: Security in Communications and Storage | Security in Communications and Storage\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSecurity in Communications and Storage (Vorlesung mit integrierten Übungen, 4 SWS)\nWachter-Zeh A, Weger V, Maringer G, Porwal A"
  },
  {
    "module_id": "EI71063",
    "title": "Turing Berechenbarkeit für Kommunikationsnetze und Informationstheorie",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung wird in Form einer mündlichen Prüfung erbracht. In dieser soll durch das Beantworten von Fragen und Darlegung eines Lösungsansatzes für ein gegebenes Problem nachgewiesen werden, dass die Studierenden die in Vorlesung und Übung behandelten Algorithmen zur Turing Berechenbarkeit sicher einsetzen können.",
    "repetition": "",
    "recommended_prerequisites": "Lineare Algebra, Analysis 1-3",
    "content": "Ziel der Vorlesung ist es, die Teilnehmer an die Turing Berechenbarkeit und deren Anwendung für die Berechnung von Kommunikationsnetzen heranzuführen - ein Forschungsgebiet, welches sich insbesondere in den letzten Jahren rasant entwickelt und etabliert hat. Die Turing Berechenbarkeit liefert das stärkste Modell für Simulationen, die auf einer perfekten digitalen Hardware implementiert werden kann. Sie liefert damit auch die Grundlage für Software Defined Networking (SDN) und Network Function Virtualization (NFV). Neben einer grundsätzlichen Einführung in die Turing Berechenbarkeit und Gödelschen Theorie der rekursiven Funktionen werden weitergehende Zusammenhänge zu SDN und NFV und fundamentale Grenzen für SDN und NFV vermittelt. EI71063: Turing Berechenbarkeit für Kommunikationsnetze und Informationstheorie | Turing Computability for Communication Networks and Information Theory",
    "learning_outcomes": "nach dem erfolgreicehn Abschluss des Moduls ist der Student mit den Grundlagen der Turing Berechenbarkeit vertraut. Er kann auch die behandelten Algorithmen in der Entwicklung bzw. im Entwurf von SDN- und NFV-Systemen einsetzen.",
    "teaching_methods": "Entwicklung und Präsentation der Vorlesungsinhalte an der Tafel. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispielen in den Übungen.",
    "media": "Die Inhalte werden präsentiert mittels: Präsentation an der Tafel. In den Übungen werden Turing\nvollständige Programmiersprachen eingesetzt um kleine Algorithmen zu implementieren.",
    "literature": "R. I. Soare, \"Turing Computability; Theory and Application\" Springer Verlag 2016\nH. Boche, R.F. Schaefer, H.V. Poor: Secure Communication and Identification Systems – Effective\nPerformance Evaluation on Turing Machines. IEEE Transactions on Information Forensics and\nSecurity (Early Access), 2019",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTuring Berechenbarkeit für Kommunikationsnetze und Informationstheorie (Übung, 2 SWS)\nBoche H [L], Grigorescu Vlass A\nTuring Berechenbarkeit für Kommunikationsnetze und Informationstheorie (Vorlesung, 2 SWS)\nGrigorescu Vlass A [L], Boche H"
  },
  {
    "module_id": "EI71064",
    "title": "Introduction to Quantum Networks",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung wird in Form einer mündlichen (30 bis max. 50 min) Prüfung erbracht. In dieser soll durch das Beantworten von Fragen und Darlegung eines Lösungsansatzes für ein gegebenes Problem nachgewiesen werden, dass die Studierenden die in Vorlesung und Übung behandelten Algorithmen zur verschränkungsassistierten Datenübertragung sicher einsetzen können. Die Fähigkeit zur Nutzung von QuNetSim wird zusätzlich durch die Bearbeitung von Aufgaben (alle 2 Wochen) nachgewiesen. Die Aufgaben können in Gruppen von bis zu 3 Personen erledigt werden. Die Aufgaben werden benotet und tragen 25% zur Gesamtnote bei. In der Prüfung wird die Fähigkeit, QuNetSim zu benutzen, durch Abfragen der zur Lösung der Aufgabe erforderlichen Routinen getestet.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Lineare Algebra (notwendig), Interesse an mathematischer Modellierung und Programmierung mit\nPython.\nBroadband Communication Networks und\nGrundlagen Rechnernetze und Verteilte Systeme",
    "content": "Ziel der Vorlesung ist es, die Teilnehmer an das Thema der \"Quantenkommunikation\" innerhalb eines für sie täglich erfahrbaren Rahmens heranzuführen. Die Verarbeitung von Informationen mit Hilfe von Quantentechnologie ist ein aktives Forschungsgebiet, auf welchem innerhalb der letzten 20 Jahre mit zunehmender Tendenz Industrieforschung betrieben wird. Die Industrieforschung fokussiert sich jedoch stark auf die Entwicklung von Quantencomputern. Quantenkommunikation EI71064: Introduction to Quantum Networks | Introduction to Quantum Networks wird bisher entweder als neue Möglichkeit für sichere Kommunikation oder als reine Grundlage für die Vernetzung von Quantencomputern wahrgenommen. In 2019 erzielte Ergebnisse welche auf Resultaten aus der Quanten-Spieltheorie und der klassischen Informationstheorie aufbauen zeigen jedoch auf, dass verschränkte Teilchenpaare auch als Ressource zur Koordination interferierender Kommunikationskanäle genutzt werden können. Die Arbeitsgruppe TQSD hat daher einen auf Python basierenden Netzwerksimulator entwickelt, welcher als erster Netzwerksimulator weltweit dazu gedacht ist, Quanteneffekte auf den Netzwerkschichten 2, 3 und 4 zu simulieren. Die Grundlagen der Nutzung von Verschränkung als Ressource für die Koordination in Kommunikationsnetzwerken sollen den Studierenden anhand theoretischer Modelle und konkreter Aufgaben in der Datenübertragung über den Netzwerksimulator vermittelt werden.",
    "learning_outcomes": "Am Ende der Veranstaltung kennen die Teilnehmenden die Grundlagen (mathematische Darstellung von Qubits, Postulate) der Quantenmechanik, die bekannten grundlegenden Effekte der Quanteninformationstheorie (superdense coding, teleportation) sowie Protokolle wie BB84, graph states, entanglement routing und verschränkungsassistierte Reduktion von Interferenz. Die Teilnehmenden verstehen die Zusammenhänge dieser Effekte mit der Struktur aktueller TCP/IP Netzwerke. Sie haben gelernt den Netzwerksimulator QuNetSim nutzen und können so das erlernte Wissen kreativ einzusetzen um TCP/IP Netzwerke durch die Nutzung von Quantenkommunikation zu optimieren. Idealerweise sind sie befähigt, Kommunikationssysteme auf einen potentiell nutzbringenden Einsatz von Quantenkommunikationstechnik hin zu analysieren. Sie können das erlernte Wissen nutzen um zielgerichtet weiterführende Veranstaltungen in der Quanteninformationstheorie, der Netzwerktechnik oder der Entwicklung und Simulation von grundlegender Hardware für Quantenkommunikation zu besuchen.",
    "teaching_methods": "Entwicklung und Präsentation der Vorlesungsinhalte an der Tafel. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispielen sowie durch Vorführung des Ablaufs von Algorithmen in QuNetSim während der Übung.",
    "media": "Die Inhalte werden präsentiert mittels: Präsentation an der Tafel. In den Übungen wir Python\neingesetzt um kleine Algorithmen zu implementieren. Der Ablauf der Algorithmen wird per Beamer\nvorgeführt.",
    "literature": "M. A. Nielsen, I. L. Chuang, \"Quantum Computation and Quantum Information\"\nR. Van Meter, \"Quantum Networks”",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nEI71064: Introduction to Quantum Networks | Introduction to Quantum Networks\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntroduction to Quantum Networks (Vorlesung, 2 SWS)\nNötzel J [L], Viladomat Jasso A\nIntroduction to Quantum Networks (Übung, 2 SWS)\nNötzel J [L], Viladomat Jasso A"
  },
  {
    "module_id": "EI71065",
    "title": "Manifold Optimization for Representation Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Endnote setzt sich aus den folgenden Prüfungselementen zusammen:\n- Hausaufgaben (30%)\n- Poster Präsentation eines aktuellen Forschungsartikels (10%)\n- Abschlussprüfung (60%)\nDie Studierenden sind verpflichtet, alle Übungsaufgaben fristgerecht abzugeben. Die Aufgaben sollen das Verständnis der Studierenden für grundlegende Konzepte des Faches vertiefen. Des Weiteren wird durch die Aufgaben die Fähigkeit überprüft, grundlegende Optimierungsmethoden auf Mannigfaltigkeiten zur Lösung klassischer Probleme des Repräsentation Learning anzuwenden. Die Poster Präsentation dient der Einführung in Themen der aktuellen Forschung und soll zusätzlich den Studierenden die Möglichkeit geben, ihre Präsentationsfähigkeiten zu trainieren.",
    "repetition": "",
    "recommended_prerequisites": "Grundkenntnisse in linearer Algebra, Statistik, Optimierung und maschinellem Lernen, sowie\nGrundkenntnisse in Matlab oder Python (bzw. die Motivation, diese zu lernen).",
    "content": "Das Erlernen von geeigneten Darstellungen aus Daten ist ein Schlüssel für den Erfolg moderner Algorithmen des maschinellen Lernens. Die meisten Modelle des Representation Learning erfordern die Lösung eines Optimierungsproblems, das auf eine Matrix-Mannigfaltigkeit beschränkt ist. In diesem Kurs untersuchen wir die Techniken des Lernens von Datenrepräsentationen aus der Perspektive der Optimierung auf Mannigfaltigkeiten. Wir werden die folgenden Paradigmen des Representation Learning behandeln:\n- Descriptive representation, z.B. Independent Component Analysis, Matrix Factorization,\nDictionary Learning;\n- Discriminative representation, z.B. Trace Quotient Analysis;\n- Deep Representation, z.B. Multi-Layer Perceptron (MLP), Autoencoder.\nAußderdem werden die folgenden Konzepte der Optimierung auf Mannigfaltigkeiten behandelt (nicht ausschließlich):\n- Coordinate-free derivatives in finite dimensional Hilbert spaces;\n- Geometry of unit sphere, Stiefel manifold, Grassmann manifold, etc.\n- Gradient descent algorithms on Matrix Manifolds;\n- Conjugate Gradient on Matrix Manifolds.",
    "learning_outcomes": "Nach Abschluss des Kurses sind die Studierenden in der Lage:\n- grundlegende Modelle des Representation Learning zu beschreiben;\n- die jeweiligen Randbedingungen der Mannigfaltigkeiten in den verschiedenen Representation\nLeanring Paradigmen zu erklären;\n- technische Konzepte in der Optimierung auf Mannigfaltigkeiten zu verstehen;\n- einfache Algorithmen der Optimierung auf Mannigfaltigkeiten zur Lösung klassischer Probleme\ndes Representation Lerning abzuleiten;\n- klassische Optimierungsalgorithmen auf Mannigfaltigkeiten für verschiedene Representation\nLeanring Ansätze zu implementieren.",
    "teaching_methods": "Der Kurs besteht teilweise aus Frontalunterricht mit Tafel und Beamer-Folien, aber auch aus Gruppendiskussionen, um anhand einfacher Beispiele neue Definitionen und Konzepte zu erlernen. Die Tutorials bestehen darin, die Übungen und Programmieraufgaben zu besprechen und die Studierenden bei der Lösung zu unterstützen.",
    "media": "Die folgenden Medien werden verwendet:\n- Präsentationen\n- Tafel\n- Übungen und Folien, die zum Download verfügbar sind",
    "literature": "1) P.A. Absil, R. Mahony, R. Sepulchre. Optimization on Matrix Manifolds, Princeton University\nPress, 2008\n2) A. Hyvärinen, J. Karhunen, E. Oja. Independent Component Analysis, Wiley-Interscience, 2001\n3) C.C. Aggarwal. Neural Networks and Deep Learning: A Textbook, Springer 2018",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nManifold Optimization for Representation Learning (Vorlesung mit integrierten Übungen, 4 SWS)\nGottwald M, Shen H, Wörmann J"
  },
  {
    "module_id": "EI71067",
    "title": "Digital Signal Processing for Optical Communication Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Eine schriftliche Prüfung (90 Minuten) wird am Ende des Semesters abgehalten, in der das Wissen der Studenten über optische Kommunikationssysteme, insbesondere die angewandten Methoden der digitalen Signalverarbeitung (DSP) für eine fehlerfreie Übertragung, geprüft wird. Die Prüfung basiert auf Berechnungen, offene Fragen und DSP-Programmcode in einer höheren Programmiersprache.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Kenntnisse über lineare Algebra und digitale Kommunikationssysteme (Modulation,\nSignaldarstellung im Zeit- und Frequenzbereich, Systemtheorie).\nDie Vorlesung „Optical Communication Systems“ von Prof. Hanik wird dringend empfohlen.\nErfahrung in Python / MATLAB ist vorteilhaft",
    "content": "Überblick über die wichtigsten Komponenten von optischen Kommunikationssystemen (Laser, Mach-Zehnder-Modulator, Glasfasern, optischer Verstärker, Photodiode, kohärenter Empfänger, DSP) Praktische Einführung in der Simulation von digitalen Kommunikationssystemen (QAM, Abtastung, Impulsformung, AWGN, Optimalfilter, Entzerrer, Monte Carlo Simulationen) Übersicht über typische Verzerrungen in optischen Kommunikationssystemen (Laserphasenrauschen, Frequenzversatz, chromatische Dispersion, Polarisationsmodendispersion, Fasernichtlinearitäten) Digitale Signalverarbeitungsverfahren für fehlerfreie Übertragung (Taktrückgewinnung, Trägerphasenschätzung, Frequenzversatzschätzung, statische und adaptive Entzerrung).",
    "learning_outcomes": "Am Ende des Moduls haben die Studierenden einen fundierten Einblick in optische Kommunikationssysteme und deren typische Verzerrungen wie Laserphasenrauschen, chromatische Dispersion und Polarisationsmodendispersion erhalten. Die Studierenden sind in der Lage , die wichtigsten in optischen Empfängern angewandten digitalen Signalverarbeitungstechniken zu analysieren und zu bewerten, sowie die DSP-Methoden in einer höheren Programmiersprache zu implementieren. Mit ihrem profunden Verständnis des Themas sinddie Studierenden in der Lage, die Leistungsfähigkeit und die Auswirkungen der DSP- Algorithmen auf Systemebene zu analysieren und bewerten.",
    "teaching_methods": "Lehrmethode: Während der Vorlesungen werden die Studierenden in einem lehrerzentrierten Stil unterrichtet, d.h. mittels Präsentationen, die von Erklärungen an der Tafel unterstützt werden. Das jeweilige Material einschließlich Folien sowie das Simulationsframework sind auf einer Webseite verfügbar. Die Übungen werden schülerzentriert gehalten, mit anschaulichen Beispielen und praktischen Programmierübungen für die DSP-Teile. Für die Programmierübungen wird ein Framework bereitgestellt, in dem die Studierenden die erforderlichen Funktionalitäten implementieren. Nach jeder Übung wird eine Musterlösung verfügbar gemacht. Lernmethode: Zusätzlich zu den individuellen Methoden der Studenten wird fundiertes Wissen durch wiederholten Unterricht in Übungen und Tutorien sowie durch individuelle Programmieraufgaben erlangt.",
    "media": "Die folgenden Arten von Medien werden verwendet:\nPräsentationen\nVorlesungsnotizen\nÜbungen mit Lösungen\nProgrammcode zur Simulation eines optischen Kommunikationssystems mit digitaler\nSignalverarbeitung",
    "literature": "J. Proakis, Digital communications\nS. Haykin, Adaptive filter theory\nS. Haykin, Digital communication systems: A modern introduction\nG. Agrawal, Fiber-optic communication systems\nG. Agrawal, Lightwave technology systems",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI71068",
    "title": "Solving Inverse Problems with Deep Learning",
    "level": "",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Students take a written exam of two hours duration. The exam consists of questions on the theory and algorithms of signal recovery with deep neural networks. The exam tests whether students can analyse, evaluate, and design solvers for inverse problems with deep networks. The exam is open-book, thus lecture notes and any other notes are permitted, but no computational devices are needed or are allowed. Besides the written exam, 20% of the grade will be either through a presentation of a paper or through homework submission. In either case we will test whether students can analyse, evaluate, and design solvers for inverse problems with deep networks. Specifically, if sufficiently few students are enrolled, each student has to present or defend a paper in the discussion session, and the evaluation of the paper, as well as the quality of presenting the arguments will count 20% towards the final grade. If more students are enrolled than enabling each student to present a paper, then students will not present papers. In this case the submission of the homeworks which will contain evaluation and design of solvers for inverse problems will count 20% towards the final grade. The homework will contain analysis, evaluation, and design problems on solving inverse problems with deep networks. The mode will be determined before the first lecture, and be communicated during the first lecture.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Analysis, an introduction to probability and statistics, and linear algebra. An introduction to machine\nlearning is very helpful, but not necessary.\nEI71068: Solving Inverse Problems with Deep Learning | Solving Inverse Problems with Deep Learning [Deep learning\nand inverse problems]",
    "content": "There is a long history of algorithmic development for solving inverse problems arising in sensing and imaging systems and beyond. Examples include medical and computational imaging, compressive sensing, as well as community detection in networks. Until recently, most algorithms for solving inverse problems in the imaging and beyond were based on static signal models derived from physics or intuition, such as wavelets or sparse representations. Today, the best performing approaches for the aforementioned image reconstruction and sensing problems are based on deep learning, which learn various elements of the method including i) signal representations, ii) stepsizes and parameters of iterative algorithms, iii) regularizers, and iv) entire inverse functions. Motivated by those success stories, researchers are redesigning traditional imaging and sensing systems, and deep learning based signal reconstruction methods are starting to be used in important imaging technologies, for example in GEs newest computational tomography scanners and in the newest generation of the iPhone. This course gives a graduate/master level introduction to deep learning based imaging. The course first introduces classical approaches to solving inverse problems and then aims to explain the recent advances of deep neural network based approaches for solving inverse problems in the imaging sciences. Topics include classical sparse models, optimization for fitting classical methods and for training deep networks, unrolled algorithms, convolutional neural networks for image recovery and generation, generative models for image recovery, un-trained neural networks for signal recovery. The course ends with a brief outlook on how to apply those methods beyond image recovery for the recovery of a variety of other signals.",
    "learning_outcomes": "Upon successful completion of the module, students will be able to i) apply learning based methods to inverse problems such as signal and image recovery from few and noisy images, ii) evaluate their theoretical foundations and limits, and iii) critically evaluate papers and methods in that area, and iv) design variations of existing methods.",
    "teaching_methods": "The course will take place in two sessions on the same day: In the first session the foundations of a topic are explained during lectures, with a focus on methods, ideas, and the theory behind the methods. In the second session, we will discuss the method in more detail, go through a problem, or discuss a recent paper on that topic. If we discuss a paper, all students will need to read that paper before class so that we can have a meaningful discussion.",
    "media": "The lecture will be given via zoom. Lecture notes and exercises will be distributed.\nEI71068: Solving Inverse Problems with Deep Learning | Solving Inverse Problems with Deep Learning [Deep learning\nand inverse problems]",
    "literature": "Lecture notes will be distributed.",
    "lv_sws_lecturer": "Heckel, Reinhard; Prof. Dr.sc. ETH Zürich\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDeep learning and inverse problems (Vorlesung, 4 SWS)\nHeckel R, Krainovic A, Klug T"
  },
  {
    "module_id": "EI71070",
    "title": "Advanced Cryptographic Implementations",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung setzt sich aus an die Lernziele angepasste Teilleistungen zusammen: Das Verständnis des in der Vorlesung vermittelten Wissens zur Implementierung symmetrischer kryptographischen Verfahren und Hash-Funktionen, zur Implementierung asymmetrischer kryptographischen Verfahren sowie zur Optimierung und Härtung kryptographischer Verfahren gegen Implementierungsattacke, wird mit einer 60-minütigen schriftlichen Prüfung nachgewiesen. Die Fähigkeit, aktuelle Forschungsthemen zu verstehen und deren Relevanz einzuschätzen, wird in Form von Präsentationen über aktuelle Forschungsarbeiten im Rahmen der Übungen als Stundenleistung nachgewiesen. Die Endnote ergibt sich zu 100% aus der schriftlichen Klausur. Zusätzlich können Studierende, die Präsentationsarbeit im Rahmen der Übungen durchführen und so Ihre Fähigkeit zur Anwendung des erlernten Wissens nachweisen, einen Bonus von 0,3 auf die Endnote erhalten.",
    "repetition": "Folgesemester / Semesterende",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein: Kryptologie oder\ngleichwertige Grundlagenvorlesung. Der Besuch folgender Vorlesungen ist vorteilhaft: „Sichere\nImplementierung kryptographischer Verfahren“, \"SmartCard Projektpraktikum\" und \"Seminar on\nSecurity in Information Technology\".",
    "content": "Inhalte dieser Modulveranstaltung sind Konzepte und Methode zur Optimierung von hochmodernen kryptographischen Implementierungen für eingebettete Systeme inklusive Schutzmaßnahmen gegen Angriffe physikalischer Natur wie Seitenkanal- und Fehlerangriffe. EI71070: Advanced Cryptographic Implementations | Advanced Cryptographic Implementations [ACIm] Die Veranstaltung gliedert sich in folgende Themenblöcke:\n• Sichere Implementierung symmetrischer kryptographischen Verfahren wie z.B.: AES-GCM und\nChaCha20-Poly1305.\n• Effiziente Implementierung asymmetrischer kryptographischen Verfahren inkl. quantencomputer-\nresistenter Kryptographie, wie z.B.: Kyber und Dilithium.\n• Spezialthemen: Diskussion aktueller Forschungsergebnisse.\nZu den Themenblöcke sind Hausaufgaben in Form von Implementierung und Präsentationen über aktuelle Forschungsarbeiten durchzuführen.",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls sind die Studierende in der Lage fortgeschrittene Konzepte und Methode zur Optimierung und Härtung kryptographischer Verfahren in eingebetteten Systemen umsetzten. Den Studierenden sind mögliche Angriffe auf die Implementierung der betrachteten kryptographischen Verfahren bekannt. Des Weiteren lernen sie fortgeschrittenen Implementierungsgegenmaßnahmen zur Härtung kryptographischer Implementierungen gegen Implementierungsattacke wie Seitenkanal- und Fehlerangriffe kennen.",
    "teaching_methods": "Vorlesungen bestehen aus interaktiver Präsentation mit Folien und Tafelanschrieb. Hierbei werden die Inhalte vorgetragen und ggf. anhand von Beispielen gemeinsam erarbeitet. In jeder Vorlesung werden Forschungsartikel empfohlen, um die Studierenden zu motivieren, die in der Vorlesung vorgestellten Methoden und Konzepte zu vertiefen. In den Übungen präsentieren Studierende aktuelle Forschungsergebnisse, welche sie im Rahmen von Hausaufgaben erstellen und die den Praxisbezug des erlernten Wissens über Methode zur Optimierung und Härtung kryptographischer Implementierungen zeigen.",
    "media": "Präsentationsfolien, Tabelanschrieb und Forschungsartikel.",
    "literature": "Folgende Literatur wird empfohlen:\n1. Cetin Kaya Koc, Cryptographic Engineering, Springer Verlag, 2009 2.\n2. Joseph Yiu, The Definitive Guide to ARM® Cortex®-M3 and Cortex®-M4 Processors. 2013\n3. Stefan Mangard, Elisabeth Oswald, Thomas Popp: Power Analysis Attacks Revealing the\nSecrets of Smart Cards, Springer Verlag, 2007\nWeiteres Aufgabenmaterial wird während der Vorlesung empfohlen.",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Cryptographic Implementations (Vorlesung mit integrierten Übungen, 3 SWS)\nDe Santis F ( Budak U )\nEI71070: Advanced Cryptographic Implementations | Advanced Cryptographic Implementations [ACIm]"
  },
  {
    "module_id": "EI71072",
    "title": "Selected Topics in Robotics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird zu 100% durch einen Abschlussvortrag mit Kolloquium bestimmt. Der Vortrag prüft, ob die Studenten die gelernten Methoden der Robotermodellierung und Regelung auf neue Problemstellungen transferieren und für ein Fachpublikum aufbereiten können, die Sie in Eigenstudium, Diskussionsrunden und den Vorlesungen vermittelt bekommen haben und die in den Übungen vertieft wurden. Der Abschlussvortrag ist eine benotete 10 minütige Präsentation eines zur Vorlesung passenden Projektthemas mit anschließendem 10 minütigem Kolloquium.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Einführung in die Roboterregelung\nRegelungssysteme 1\nEmpfohlen: Optimierungsverfahren in der Automatisierungstechnik",
    "content": "Kinematik & Dynamik, Roboterstrukturen, unteraktuierte Roboter, mobile Roboter (holonom / nicht- holonom), (hyper-)redundante Systeme, Parameteridentifikation / Lernen, Multi-Roboter Systeme",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls kennen und verstehen die Teilnehmer fortgeschrittene Konzepte der Robotik und Roboterregelung. Sie können Problemstellungen im Bereich der Regelung von Manipulatoren, die über einfache serielle Roboter hinausgehen, analysieren und Lösungsstrategien bewerten, die auch Modellunsicherheiten über lernende Verfahren berücksichtigen. Die Teilnehmer verstehen Konzepte der mobilen Robotik und können EI71072: Selected Topics in Robotics | Selected Topics in Robotics [STIR] diese in Kombination mit Manipulatoren anwenden. Darüber hinaus können Sie zentrale und dezentrale Regelungsstrategien mit mehreren Robotern analysieren und bewerten.",
    "teaching_methods": "Die Wiederholung der Konzepte aus der Einführung in die Roboterregelung und fundamentale Grundlagen der Kinematik und Dynamik werden durch den \"flipped classroom\" in Eigenstudium aufbereitet und in den Präsenzstunden im Plenum diskutiert. Weiterführende Konzepte werden in Vorlesungen mit Tafelanschrieb und Präsentationen vorgestellt und durch Rechenbeispiele vertieft.",
    "media": "Tafelanschrieb\nMulti-media Präsentationen\nVideos",
    "literature": "\"Modern Robotics: Mechanics, Planning, and Control,\" Kevin M. Lynch and Frank C. Park,\nCambridge University Press, 2017",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSelected Topics in Robotics (Vorlesung, 3 SWS)\nBrüdigam J, Sosnowski S"
  },
  {
    "module_id": "EI71073",
    "title": "Quantum Computers and Quantum Secure Communications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Bewertung ist individuell. Die Fähigkeiten, i) die Hauptkonzepte für Quantencomputer und Post-Quanten-Kryptographie zu verstehen; ii) mit den Quanten- und Postquantenalgorithmen vertraut zu sein; und iii) zu verstehen, dass die Schwachstellen von postquantenkryptografischen Implementierungen werden durch eine mündliche Prüfung bewertet (schriftliche Prüfung bei hoher Teilnehmerzahl). Darüber hinaus werden die Fähigkeiten i) Sicherheit und Leistung von kryptografischen Post-Quantum-Implementierungen zu bewerten und ii) Sicherheitsmaßnahmen auf postquantenkryptografische Implementierungen anzuwenden durch Übungsaufgaben und einen Projektanteil bewertet. Das Bestehen von Übungen/Projekt wird mit einem Notenbonus von 0,3 honoriert.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Gute Kenntnisse im Bereich Micro-Controller Programmierung und Basiskenntnisse im Bereich\nSecurity, wie sie beispielsweise in der Vorlesung Embedded Systems und Security vermittelt\nwerden.",
    "content": "Der Kurs besteht aus einem Vorlesungsteil und begleitenden Übungen sowie einem Projektanteil. Die Vorlesung gliedert sich in folgende Themenblöcke: 1) Einführung; 2) Quantum Computing und Methoden; 3) Quantenalgorithmen; 4) Allgemeine Beschreibung von Post-Quantum Algorithmen; 5) Implementierung und Evaluierung von Post-Quantum-Algorithmen; 6) Sichere Implementierung.",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls: 1) Verstehen die Studierenden die grundlegenden Konzepte von Quantum Computing und Post-Quantum Kryptographie; 2) kennen sie sich mit Quanten- und Postquantenalgorithmen aus; 3) verstehen sie die Schwachstellen von Post-Quanten-Cryptographie-Implementierungen; 4) können sie die Sicherheit und Leistung von kryptografischen Post-Quantum-Implementierungen bewerten; und 5) können sie Sicherheitsgegenmaßnahmen auf postquantenkryptographische Implementierungen anwenden.",
    "teaching_methods": "Individuelle Betreuung durch den Kursleiter, Einführungsvorträge, Beispiele und Betreuung der Seminarübungen. Zusätzlich werden folgende Methoden angewendet: i) Reale Use Cases der vorgestellten Konzepte; ii) Gastvorträge von Industriepartnern; iii) Videos; iv) Diskussionen und Präsentationen im Kurs; v) Übungen und Erfahrungsaustausch.",
    "media": "Tafel, Folien, Fachartikel",
    "literature": "Post-Quantum Cryptography. Daniel J. Bernstein, Johannes Buchmann, Erik Dahmen, 2009.\nSpringer-Verlag Berlin Heidelberg.\nPost-Quantum Cryptography: Code-Based Cryptography and Hash Based Signatures Schemes,\nUmaa, Valrie Gauthier, 2014, isbn 3639715500. Scholar’s Press.\nNIST Post-Quantum Submissions https://csrc.nist.gov/projects/post-quantum-cryptography/\nround-2-submissions",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nQuantum Computers and Quantum Secure Communications (Praktikum, 1 SWS)\nSepulveda Florez M ( Pehl M )\nQuantum Computers and Quantum Secure Communications (Vorlesung mit integrierten Übungen,\n3 SWS)\nSepulveda Florez M ( Pehl M )"
  },
  {
    "module_id": "EI71074",
    "title": "Effektive konvexe Optimierung auf Turing Maschinen und Quanten Computern",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung wird in Form einer mündlichen Prüfung erbracht. In dieser soll durch das Beantworten von Fragen und Darlegung eines Lösungsansatzes für ein gegebenes Problem nachgewiesen werden, dass die Studierenden die in Vorlesung und Übung behandelten Algorithmen zur Turing Berechenbarkeit von konvexen Optimierungsaufgaben sicher einsetzen können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Analysis 1-3, konvexe Optimierung",
    "content": "Ziel der Vorlesung ist es, die Teilnehmer an die Turing Berechenbarkeit, die Berechenbarkeit auf einem Quanten Computer und deren Anwendung für die effektive konvexe Optimierung heranzuführen. Hierbei handelt es sich um ein Forschungsgebiet, welches sich insbesondere in den letzten Jahren rasant entwickelt und etabliert hat. Die Turing Berechenbarkeit liefert das stärkste Modell für die konvexe Optimierung, die auf einer perfekten digitalen Hardware Plattform implementiert werden kann. Sie liefert damit auch die Grundlage für Untersuchungen, welche Basisfragestellungen der konvexen Optimierung effektiv auf einer optimalen digitalen Hardware Plattform berechnet werden können. In der Vorlesung werden hierzu die Fenchel Transformation/ konjugierte Funktion, das finden/berechnen von ausgezeichneten Maxima, die beweisbar genaue Lösungsapproximation und Anwendungen in der Wahrscheinlichkeitsrechnung und Kodierungstheorie diskutiert. Die Untersuchungen werden weiterhin für den Quanten EI71074: Effektive konvexe Optimierung auf Turing Maschinen und Quanten Computern | Effective convex optimization on Turing machines und quantum computers Computer durchgeführt. Neben einer grundsätzlichen Einführung in die Turing Berechenbarkeit und Gödelschen Theorie der rekursiven Funktionen werden weitergehende Zusammenhänge zur konvexen Optimierung und zum Quanten Computing vermittelt.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Student mit den Grundlagen der Turing Berechenbarkeit für digitale und Quanten Computer vertraut. Er kann auch die behandelten Algorithmen der konvexen Optimierung in ausgewählte Anwendungen einsetzen.",
    "teaching_methods": "Entwicklung und Präsentation der Vorlesungsinhalte an der Tafel. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispielen in den Übungen.",
    "media": "Die Inhalte werden präsentiert mittels: Präsentation an der Tafel. In den Übungen werden Turing\nvollständige Programmiersprachen eingesetzt um kleine Algorithmen zu implementieren.",
    "literature": "R. I. Soare, \"Turing Computability; Theory and Application\" Springer Verlag 2016\nH. Boche, R.F. Schaefer, H.V. Poor: Denial-of-Service Attacks on Communication Systems:\nDetectability and Jammer Knowledge. IEEE Transactions on Signal Processing (Early Access),\n2020\nH. Boche, U. Mönich: Effective Approximation of Bandlimited Signals and Their Samples. 45th\nInternational Conference on Acoustics, Speech, and Signal Processing, IEEE, ICASSP 2020\nH. Boche, V. Pohl: Can Every Analog System be Simulated on a Digital Computer? 45th\nInternational Conference on Acoustics, Speech, and Signal Processing, IEEE, ICASSP 2020",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEffektive konvexe Optimierung auf Turing Maschinen und Quanten Computern (Übung, 2 SWS)\nBoche H [L], Ezzine R, Pohl V\nEffektive konvexe Optimierung auf Turing Maschinen und Quanten Computern (Vorlesung, 2 SWS)\nEzzine R [L], Boche H, Pohl V"
  },
  {
    "module_id": "EI71075",
    "title": "Wireless Communications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "In a final written exam (90 min) the students demonstrate their understanding of coding schemes e.g. different classes, and the respective applications by answering questions e.g. to different application scenarios. They have to show, without supporting material (one sheet of handwritten notes is allowed), that they can evaluate and design coding schemes and apply decoding algorithms.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Digital Communications 1 & 2, Mobile Communications",
    "content": "Wireless channels (models, information rates); Inter-symbol interference and equalization (decision-feedback equalization (DFE), Tomlinson-Harashima precoding), Orthogonal frequency- division multiplexing (OFDM); Multiple input multiple output (MIMO) systems; coded modulation schemes for fading channels",
    "learning_outcomes": "After successful completion of the module the student knows about wave propagation in wireless communications and the resulting peculiarities of the wireless channel. He further knows how to compute the capacity of certain wireless channels and is able to adapt transmitter and receiver to combat these effects. He finally gets well-aquainted with multiple antenna systems and the corresponding approaches to maximize the throughput as well as coded modulation concepts for wireless communications. EI71075: Wireless Communications | Wireless Communications [Wireless Comm. ]",
    "teaching_methods": "In addition to the students' personal study, additional knowledge is acquired by exercises which are supported by tutor hours.",
    "media": "The lecture is given with slides; examples and additional explanations are done on the black board.",
    "literature": "Goldsmith, Andrea. Wireless communications. Cambridge university press, 2005, Tse, David, and\nPramod Viswanath. Fundamentals of wireless communication. Cambridge university press, 2005.",
    "lv_sws_lecturer": "Kramer, Gerhard; Prof. Dr.sc.tech.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nWireless Communications (Vorlesung, 4 SWS)\nKramer G ( Zaniboni L ), Bartz H, Matuz B, Wiegart T"
  },
  {
    "module_id": "EI71078",
    "title": "Interference and Noise in Electromagnetics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulprüfung erfolgt schriftlich (60 Minuten). Die Teilnehmer beantworten Verständnisfragen zu den Grundlagen von Interferenz und Rauschen in der Elektromagnetik, zu den Methoden zur Bewältigung entsprechender Modellierungsaufgaben und lösen beispielhafte Aufgaben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "keine",
    "content": "Ziel dieses Kurses ist es, eine umfassende und prägnante Einführung in die Phänomene der elektromagnetischen Interferenz (EMI) und des Rauschens von elektromagnetischen Feldern einschließlich thermischem Rauschen, elektromagnetischer Interferenz und Umgebungsrauschen zu geben. Die in diesem Kurs vermittelten Methoden bilden eine Grundlage für den EMV- orientierten Entwurf von elektronischen Komponenten, Schaltungen und Systemen. Der Kurs umfasst die Beschreibung von Rauschsignalen und stochastischen elektromagnetischen Feldern, analytische und numerische Methoden zur Modellierung von elektromagnetischem Rauschen, die Beschreibung von Rauschen in elektromagnetischen Strukturen durch äquivalente Netzwerkmodelle. Verfahren zur Messung von Rauschen und elektromagnetischen Störungen im Frequenz- und Zeitbereich werden behandelt. Der Kurs beinhaltet auch Anwendungen auf elektronische Schaltungen, Antennen und drahtlose Kommunikation. Der Kurs richtet sich an Studierende der Elektrotechnik und anderer Fachrichtungen, die sich mit den Grundlagen des elektromagnetischen Rauschens in Informations- und Kommunikationssystemen vertraut machen wollen. Die Vorlesung ist methodenorientiert. Der Kurs zielt darauf ab, eine einfache Aneignung der Grundlagen stochastischer elektromagnetischer EI71078: Interference and Noise in Electromagnetics | Interference and Noise in Electromagnetics Felder zu ermöglichen und vermittelt die Fähigkeiten für die praktische Anwendung der grundlegenden Konzepte und Werkzeuge. Neben der Entwicklung und Diskussion der grundlegenden Konzepte und der zu ihrer Quantifizierung und Analyse verwendeten mathematischen Modelle und Methoden, wird deren Anwendung durch Beispiele aus der modernen Kommunikations- und Computertechnik und der Sensorik erläutert. Nach einer Diskussion der Bedeutung von Information werden lineare Systeme und die Signaldarstellung in linearen Systemen diskutiert. Die Signaldarstellung im Zeit- und Frequenzbereich und die Darstellung statistischer Signale werden behandelt. Eine Einführung in die grundlegenden Konzepte des Elektromagnetismus wird gegeben. Das Rauschen in Schaltungen und Systemen wird auf der Grundlage von Korrelationsfunktionen und Korrelationsspektren behandelt. Diese Überlegungen werden auf die Behandlung stochastischer elektromagnetischer Felder ausgedehnt. Für elektromagnetische Felder im Zeit- und Frequenzbereich werden Korrelationsfunktionen und Korrelationsspektren eingeführt. Rauschquellen und ihre Eigenschaften (thermisches Rauschen, elektromagnetische Störungen) werden diskutiert. Es werden stationäre, zyklostationäre und nicht stationäre sowie Gaußsches und nicht Gaußsches Rauschen diskutiert. Die Beschreibung der Ausbreitung stochastischer elektromagnetischer Felder Green‘sche Funktionen und die Nah-Fernfeldtransformation stochastischer elektromagnetischer Felder werden behandelt. Netzwerkmethoden werden zur Analyse elektromagnetischer Strukturen und deren Darstellung durch Ersatzschaltungen eingeführt. Zeit- und Raumdiskretisierung und Algebraisierung dieser Methoden liefern ein effizientes Gerüst für numerische Algorithmen. Insbesondere Netzwerkmethoden und zeitdiskrete Methoden sind effiziente Werkzeuge für die Analyse rauschender elektromagnetischer Strukturen.",
    "learning_outcomes": "Nach Abschluss des Kurses haben die Studenten die folgenden Fähigkeiten erworben:\n- Die Studierenden verstehen die Ursachen von leitungsgeführten und gestrahlten\nelektromagnetischen Störungen in elektronischen Komponenten, Schaltungen und Systemen.\n- Die Studierenden sind in der Lage analytische und numerische Methoden zur Berechnung der\nAusbreitung von rauschenden elektromagnetischen Feldern und deren Einfluss auf Schaltungen anzuwenden.\n- Die Studierenden verstehen und können Messtechniken zur Charakterisierung der von\nelektronischen Komponenten, Schaltungen und Systemen abgestrahlten EMV, sowie analytische und numerische Methoden zur Berechnung der Ausbreitung der abgestrahlten EMV in die Schaltungs- und Systemumgebung anwenden.\n- Die Studierenden sind in der Lage, die Methoden für ein EMV-gerechtes Design von Geräten,\nSchaltungen und Systemen anzuwenden.",
    "teaching_methods": "Die in der Vorlesung verwendete Lehrmethode ist der Frontalunterricht. Die theoretischen Grundlagen werden ergänzt durch auf die industrielle Praxis bezogenen Beispiele. Die Übungen basieren auf einem interaktiven Unterricht. EI71078: Interference and Noise in Electromagnetics | Interference and Noise in Electromagnetics",
    "media": "keine Angabe",
    "literature": "Balanis, Constantine A. Advanced Engineering Electromagnetics. New York: John Wiley & Sons,\n1989.\nDavenport, W. B., and W. L. Root. An Introduction to the Theory of Random Signals and Noise.\nNew York: Mc Graw Hill, 1958.\nDobrowolski, J. A. Introduction to Computer Methods for Microwave Circuit Analysis and Design.\nBoston: Artech House, 1991.\nGradoni, Gabriele, Johannes Russer, Mohd Hafiz Baharuddin, Michael Haider, Peter Russer,\nChristopher Smartt, Stephen C. Creagh, Gregor Tanner, and David WP Thomas. “Stochastic\nElectromagnetic Field Propagation— Measurement and Modelling.” Philosophical Transactions\nof the Royal Society A: Mathematical, Physical and Engineering Sciences 376, no. 2134 (2018):\n20170455.\nHaider, Michael, and Johannes A. Russer. “Principal Component Analysis for Efficient\nCharacterization of Stochastic Electromagnetic Fields.” International Journal of Numerical\nModelling: Electronic Networks, Devices and Fields 31, no. 4 (2018): e2246.\nHaus, A., and R. W. Adler. Circuit Theory of Linear Noisy Networks. New York: John Wiley, 1959.\nHillbrand, H., and P. Russer. “An Efficient Method for Computer Aided Noise Analysis of Linear\nAmplifier Networks.” IEEE Trans. Circuits and Systems 23, no. 4 (April 1976): 235–238.\nMiddleton, David. An Introduction to Statistical Communication Theory. Vol. 960. Los Altos, CA:\nPeninsula Publishing, 1987.\nRusser, Johannes A., Michael Haider, and Peter Russer. “Time-Domain Modeling of Noisy\nElectromagnetic Field Propagation.” IEEE Transactions on Microwave Theory and Techniques 66,\nno. 12 (December 2018): 5415–5428. Russer, Johannes A., and Peter Russer. “Modeling of Noisy\nEM Field Propagation Using Correlation Information.” IEEE Transactions on Microwave Theory and\nTechniques 63, no. 1 (January 2015): 76–89.\nRusser, Johannes A., Nasir Uddin, Ahmed Sanaa Awny, Andreas Thiede, and Peter Russer. “Near-\nField Measurement of Stochastic Electromagnetic Fields.” IEEE Electromagnetic Compatibility\nMagazine 4, no. 3 (November 2015): 79–85. https://doi.org/10.1109/MEMC.2015.7336761.\nRusser, P., and H. Hillbrand. “Rauschanalyse von Linearen Netzwerken.” Wissenschaftliche\nBerichte AEG Telefunken 49 (1976): 127–138.\nRusser, P., and S. Müller. “Noise Analysis of Linear Microwave Circuits.” IJNM 3 (1990): 287–316.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nInterference and Noise in Electromagnetics (Vorlesung mit integrierten Übungen, 4 SWS)\nHaider M, Russer J"
  },
  {
    "module_id": "EI71080",
    "title": "Fortgeschrittene Konzepte der nichtlinearen Regelung",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 150,
    "hours_presence": 30,
    "examination_achievements": "In einem survey paper gibt jeder Teilnehmer einen Überblick über ein ausgewähltes Forschungsgebiet und stellt die wichtigsten Resultate im Detail dar. Studierende demonstrieren dadurch, dass sie einerseits einen Überblick über das Forschungsgebiet erlangt haben und mehrere Ansätze im Detail verstehen und analysieren können. Andererseits zeigen die Studierenden, dass sie in der Lage sind ihre Erkenntnisse wissenschaftlich in der Form einer Zeitschriftenveröffentlichung zu dokumentieren. In einer Review Phase erstellt jeder Teilnehmer ein ausführliches Review von 1-2 Beiträgen anderer Teilnehmer. Hier wird insbesondere die Fähigkeit der kritischen Auseinandersetzung mit wissenschaftlichen Ergebnissen und ihrer Darstellung geprüft. Abschließend hält jeder Teilnehmer einen Vortrag (Dauer: ca. 30 Minuten). Es wird geprüft, ob sich Studierende so intensiv mit den Inhalten auseinandergesetzt haben, dass sie durch eine Präsentation den Zugang für ein Publikum schaffen können. Weiterhin wird geprüft, ob die Studierenden die Techniken einer wissenschaftlichen Präsentation beherrschen. Die Note setzt sich zusammen aus der Note für den Bericht und das Verstehen der Theorie (45%), der Note für das Review (35%) und der Note für den Vortrag (20%).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Dynamische Systeme\nEI71080: Fortgeschrittene Konzepte der nichtlinearen Regelung | Advanced Nonlinear Control [ANC]",
    "content": "Ausgewählte forschungsnahe Themen der nichtlinearen Regelungstheorie: System Analysis and Identification: Nonlinear System Identification, Stability Concepts, Nonlinear Model Order Reduction; Controller Design: Lyapunov Methods, Robust Control and Perturbed Systems, Higher-order Sliding Mode Control, Nonlinear Observers, Geometric Control, Constrained Control; Demanding System Classes: Control of Switched and Hybrid Systems, Control of Distributed Parameter Systems, Control of Nonholonomic Systems, Control of Port-Hamiltonian Systems Optimization and Leaning in Control: Game Theory in Control, Robust and Stochastic Optimal Control, Data-Driven Nonlinear Control;",
    "learning_outcomes": "Es wird den Studierenden eine Vertiefung im Forschungsgebiet der nichtlinearen Regelungssysteme ermöglicht und der aktuelle Stand der Forschung kennengelernt. Nach Abschluss des Moduls sind Studierende in der Lage aktuelle Publikationen auf ihre Einordnung in den Stand der Technik zu analysieren und deren Beitrag zu bewerten. Dabei werden Studierende methodisch auf eine wissenschaftliche Arbeitsweise vorbereitet werden und haben bei Abschluss des Moduls gelernt eine eigene Publikation und einen Vortrag zu entwickeln. Es wird ein Flipped Classroom Ansatz verfolgt.",
    "teaching_methods": "Zur Realisierung des flipped classroom Konzepts wird Frontalunterricht mit dem eigenständigen Erarbeiten und Präsentieren von Inhalten aus wissenschaftlichen Veröffentlichungen kombiniert. In der ersten Phase des Moduls werden durch den Dozenten verschiedene Forschungsbereiche vorgestellt. Jeder Teilnehmer wählt dann ein Themengebiet aus und erhält, als Startpunkt, eine Liste von 5-10 relevanten Referenzen. In der zweiten Phase des Moduls lernen die Studierenden wissenschaftliche Veröffentlichungen eigenständig zu analysieren und zu bewerten und nach relevanter weiterführender Literatur zu recherchieren. Die zweite Phase besteht aus einer einführenden Veranstaltung, die vom Dozenten gehalten wird, und der eigenständigen Literatursichtung. In der dritten Phase lernen die Studierenden Techniken, eine wissenschaftliche Veröffentlichung zu entwickeln. Wiederum wird eine Einführungsveranstaltung durch den Dozenten gehalten. Nachfolgend wird von den Studenten ein erster Entwurf für einen Übersichtsartikel verfasst. In einem durch den Dozenten überwachten peer-review Verfahren werden die Artikel dann unter den Studierenden ausgetauscht, so dass jeder Studierende ein oder zwei Reviews eines Artikels anderer Teilnehmer macht und ein weiteres Mal Bewertung und Analyse wissenschaftlicher Ergebnisse trainiert. In der vierten Phase lernen die Teilnehmer einen Vortrag im Stil einer Vorlesung vorzubereiten und zu halten. EI71080: Fortgeschrittene Konzepte der nichtlinearen Regelung | Advanced Nonlinear Control [ANC]",
    "media": "Vortragsfolien werden zur Verfügung gestellt",
    "literature": "Literatur wird zur Verfügung gestellt",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced nonlinear control (Vorlesung, 2 SWS)\nHirche S, Kavianirad H"
  },
  {
    "module_id": "EI71083",
    "title": "Intelligent Machine Design - Mechatronics Fundamentals",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulnote ergibt sich durch Mittelung der Bewertungen der einzelnen Lab Assignments (gleichmäßige Gewichtung). Im Rahmen dieser Lab-Assignments werden sowohl die zu erarbeitenden mechatronischen System-Aufbauten als auch die schriftliche Dokumentation der theoretischen Lab-Assignment-Aufgaben (Entwurf) geprüft. Die erfolgreiche Absolvierung des Kurses hängt nur von der finalen Modulnote, nicht von einzelnen Lab-Assignments ab.",
    "repetition": "",
    "recommended_prerequisites": "Empfohlen:\n- Programmierung (C )\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
    "content": "Das IMDL – Intelligent Machine Design Lab Modul 1.1 ist Teil einer dreisemestrigen Modulreihe, welche zum Ziel hat Studenten in die Lage zu versetzen komplexe und sehr leistungsfähige mechatronische Systeme mit hoher gesellschaftlicher/ökonomischer Relevanz zu entwickeln und aufzubauen. Studenten lernen selbständig Produktideen zu entwickeln und schrittweise in seriennahe Produktprototypen zu überführen. Nach Abschluss der Modulreihe sind die Studenten entsprechend in der Lage mechatronische Systeme und Projekte mit beliebiger Komplexität anzugehen sowie eigene Projektideen, welche z.B. gesellschaftliche, wirtschaftliche oder ökologische Probleme lösen, zu entwickeln und erfolgreich zu realisieren. Hierbei wird insbesondere Fokus auf die Erarbeitung multi-disziplinärer Design- und Integrationsfähigkeiten sowie deren Nutzung in einem interdisziplinären Team gelegt. Die Module innerhalb eines Semesters sowie zwischen den verschiedenen Semestern bauen inhaltlich aufeinander auf. Daher wird die erfolgreiche Absolvierung der vorherigen Module dringend empfohlen (Inhalt von Modul 1.1 wird für Modul 1.2 benötigt, Modul 1.1+1.2 wird für Modul 2.1 benötigt usw.). Schwerpunkt des Moduls 1.1 dieser Reihe ist die selbstständige Entwicklung, Integration, Aufbau und Evaluierung mechatronischer Systeme auf Basis analoger Schaltungen (Verstärker, Filter, Mosfets, …), Microcontroller-Programmierung (State Machines, Timers, Interrupts, …), Digital Communication (SPI, I2C, …), Aktoren (Servos, Schrittmotoren, DC-Motoren, …), Sensoren (Infrarot, Encoder, …) und Maschinenelemente (Lager, Federn, Dämpfer, Kupplungen, Transmission, …) sowie „Fast-Prototyping-Techniques“ (3D-Printing, Laser-Cutter, …).",
    "learning_outcomes": "Nach Abschluss des Moduls sind die Studierenden in der Lage mechatronische Systeme selbstständig zu entwickeln, aufzubauen und zu testen. Hierbei können die Studierenden die Charakteristika und Wechselwirkungen der verschiedenen mechatronischen Komponenten und Software-Aspekte voraussagen sowie für die Entwicklung und Integration der geforderten Systeme entsprechend adaptieren.",
    "teaching_methods": "- Einführungs-Vorlesungen/Kurse\n- Übungen\n- Online-Vorlesungen\n- Labor-Arbeiten",
    "media": "- Präsentationen\n- Online Videos\n- Handouts (Übungen, Labore)",
    "literature": "- Paul Scherz and Simon Monk, ‘Practical Electronics for Inventors’, 4th rev. ed McGraw-Hill\nEducation\n- Eric S. Roberts, ‘The Art and Science of C’, Pearson Education\n- Robert l. Norton, ‘Design of Machinery’, Mcgraw-Hill Europe; 3rd Revised edition\n- Clarence W. De Silva, ‘Mechatronics: Fundamentals and Applications’, Apple Academic Press\nInc.\n- Shimon Y. Nof, ‘Springer Handbook of Automation’, Springer; 2009. Edition\n- Jan Awrejcewicz, ‘Mechatronics: Ideas, Challenges, Solutions and Applications’, Springer; 1st ed.\n2016 Edition\n- Rochdi Merzouki, ‘Intelligent Mechatronic Systems; Modeling, Control and Diagnosis’, Springer;\nSoftcover reprint of the original 1st ed. 2013 Edition\n- Paul Horowitz, ‘The Art of Electronics’, Cambridge University Press; 3. Edition",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntelligent Machine Design: Mechatronics Fundamentals (Vorlesung, 5 SWS)\nHaddadin S [L], Budiman F, Chen L, Le Q, Pozo Fortunic J, Swikir A, Yildirim M"
  },
  {
    "module_id": "EI71086",
    "title": "Applied Machine Intelligence",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 9,
    "hours_total": 270,
    "hours_self_study": 150,
    "hours_presence": 120,
    "examination_achievements": "The assessment of the students‘ participation in the lecture is split into three components:\n• Personal progress on theoretical and practical knowledge about information extraction from\nunstructured data shall be assessed through programming assignments and quizzes. Furthermore, each student will deliver lab reports on a given topic to reflect on the principles learned. Lab reports will be evaluated through peer reviews.\n• The students’ abilities to solve problems in the area of information extraction from unstructured\ndata by applying machine learning and the thus necessary ability to apply and adapt the theoretical knowledge will be assessed in Milestone deliverables. The milestones are designed to guide the students through the project emphasizing a clear focus on important practical and theoretical tasks in the application of machine learning. For milestones, students produce software as well as project proposals and research questions. Grading is based on completeness and meeting the deadline.\n• The ability of students to use the concepts of information extracting using machine learning\nin real-life applications taking into account constraints in realistic use-cases will be assessed by the results of the project and a corresponding presentation of these results. Moreover, the students’ general abilities of successful performing in a team including self-organisation will also be assessed by the successful completion of the project. To pass the module, each of the above parts has to be passed. If each of the above parts is passed, the overall grade is the weighted sum of the above components:\n- 20 % Personal Lab Reports (individual)\n- 20 % Programming Tasks and Quizzes (individual)\n- 30 % Project Milestones (group)\n- 30 % Project Final Report (group)\nEI71086: Applied Machine Intelligence | Applied Machine Intelligence [AMI]",
    "repetition": "",
    "recommended_prerequisites": "Successful completion of at least one of the following lectures:\nEI70360 Machine Learning and Optimization\nEI70380 Signal Processing and Machine Learning\nEI70130 Machine Learning in Robotics\nEI70150 Pattern Recognition\nFurthermore the lecture assumes basic knowledge of general topics discussed at undergraduate\nlevel (BSc.) in one of the following areas:\n- Linear Algebra\n- Computer engineering\n- Communications engineering\n- Multimedia technology and human machine interaction\nAdditionally, basic knowledge of Python (or the motivation to learn it) is recommended.",
    "content": "Process/Lifecycle of a Data Analysis/Machine Learning task, Data Preprocessing, Regression (Algorithms and Metrics), Classification (Algorithms and Metrics), Deep Learning, Model Selection, Validation Techniques, Model Interpretation, etc.",
    "learning_outcomes": "After the successful participation in the module, students know the methods, algorithms and underlying machine learning concepts for extracting information from audio, visual, and textual unstructured content. They understand the real-life constraints and resulting requirements for the design, implementation, and application of information extraction from unstructured data. Students are able to apply and modify existing information extraction algorithms, taking into account real-life requirements. They are able to evaluate information extraction algorithms and methodologies with respect to their suitability for specific applications or services.",
    "teaching_methods": "The course consists of \"inverted class-room\"-sessions to encourage the students to actively participate, frontal teaching and discussions about current research questions using literature. Practical examples will be discussed and shown with help of Jupyter Notebooks. The assignments (homework) and lab reports as well as the project work enable the students to apply the learned concepts from the lecture to real-life applications and problems. During the project, the students will be supported by dedicated tutorials.",
    "media": "The following media will be used\nEI71086: Applied Machine Intelligence | Applied Machine Intelligence [AMI]\n- Example code for problems (Jupyter Notebooks)\n- Slides\n- Lecture notes\n- Videos",
    "literature": "“Hands-On Machine Learning with Scikit-Learn, Keras and TensorFlow, 2nd Edition,” A. Géron,\nO’Reilly Media, Boston, 2017\n\"Applied Predictive Modeling,\" M. Kuhn and K. Johnson, Springer, New York, 2013\n\"Linear algebra and learning from data,\" G. Strang, Cambridge Press, Wellesley, 2019\n“Deep learning,” I. Goodfellow, Y. Bengio, A. Courville, Y. Bengio, MIT press, Cambridge, 2016\n“Design of Video Quality Metrics with Multi-Way Data Analysis: A data driven approach, “ C.\nKeimel, Springer Singapore, 2016",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI71087",
    "title": "Coding Theory for Storage and Networks",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Studierenden können einen Bericht über zwei der Praktikumsversuche abgeben. Wenn dieser positiv bewertet wird, bekommen diese Studierenden einen 0,3-Notenbonus. Das Verfassen dieses Berichts erfordert zunächst, die Inhalte der Vorlesung unter Verwendung von MATLAB im Praktikum anzuwenden und die Ergebnisse zweier Praktikumsversuche verständlich zu dokumentieren. In einer schriftlichen Prüfung (90 min) über den Inhalt der Vorlesung demonstrieren die Studierenden ihr Verständnis der vorgetragenen Codierungschemata und der behandelten Anwendungen. Sie zeigen ferner ohne Rückgriff auf Hilfmittel, dass sie für die entsprechenden Anwendungen (Network coding, distributed data storage, flash memories) Codeklassen evaluieren und designen können. Die Modulnote ist somit die Note der schriftlichen Prüfung über die Vorlesung minus dem eventuellen Notenbonus von 0,3.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Mathematische Grundkenntnisse (vor allem lineare Algebra).\n- Für das Praktikum: Grundkenntnisse in MATLAB oder einer anderen Programmiersprache.\n- Der vorherige Besuch der Vorlesung \"Channel Coding\" ist empfohlen, aber nicht notwendig.\nEI71087: Coding Theory for Storage and Networks | Coding Theory for Storage and Networks [Coding Theory for\nStorage and Networks]",
    "content": "- Decodierung von Reed-Solomon Codes über die halbe Mindestdistanz: Listendecodierung,\nPower-Decodierung.\n- Interleaved Reed-Solomon Codes und Algorithmen zur Burst-Fehler-Korrektur.\n- Network Coding: Rang-Metrik Codes, Untervektorraum Codes, Anwendung zur Fehlerkorrektur in\nNetzwerken.\n- Codierung für Flash Speichermedien: Write-Once-Memory Codes, Codierung von defekten\nSpeicherzellen.\n- Codierung für verteilte Datenspeicher: Locally Repairable Codes, Regenerating Codes.\n- Codes zur Korrektur von Insertions und Deletions.",
    "learning_outcomes": "nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage\n- aktuelle Anwendungsbereiche der Codierungstheorie zu nennen,\n- für die in der Vorlesung behandelten Anwendungen ein passendes Codierungsschema\nauszuwählen, die Parameter anzupassen, es zu evaluieren und in Software zu implementieren.\n- für ein gegebenes bekanntes Codierschema und eine gegebene Anwendung die\nKorrekturfähigkeit und Grenzen zu beurteilen, auch im Vergleich zu klassischen fehlerkorrigierenden Codes.\n- nicht in der Vorlesung behandelte Codierschemata nach entsprechender Literaturrecherche zu\nverstehen.",
    "teaching_methods": "VL: Die notwendigen theoretischen Inhalte werden im Vortrag vermittelt (mit Folienpräsentation und Tafelanschrieb) und durch kurze Beispiele veranschaulicht. Die Studierenden sind zur Diskussion der Inhalte angehalten und werden mit zahlreichen Zwischenfragen zur Beteiligung motiviert. P: In einem begleitenden Praktikum werden die Inhalte der Vorlesung in MATLAB umgesetzt. Hierzu werden Praktikumsanleitungen gestellt, welche zunächst vorgestellt und erklärt werden. Die Studierenden sollen anschließend eigenständig (in Zweier-Teams), mit Begleitung der Praktikumsbetreuer, die Programmieraufgaben umsetzen. Nach Fertigstellung des Versuches erfolgt eine Besprechung jedes Teams mit einem Betreuer.",
    "media": "Die Vorlesung erfolgt mit Hilfe von Folien; Beispiele und zusätzliche Erläuterungen werden an der\nTafel vorgenommen.\nDas Praktikum findet an Computern statt.",
    "literature": "Gegebenenfalls werden aktuelle Forschungspapers zu den jeweiligen Themengebieten vorab auf\nMoodle hochgeladen bzw. ausgeteilt.\nEI71087: Coding Theory for Storage and Networks | Coding Theory for Storage and Networks [Coding Theory for\nStorage and Networks]",
    "lv_sws_lecturer": "Wachter-Zeh, Antonia; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCoding Theory for Storage and Networks (Vorlesung mit integrierten Übungen, 4 SWS)\nWachter-Zeh A [L], Bitar R, Weger V, Banerjee A, Sauerbier Couvée H"
  },
  {
    "module_id": "EI71088",
    "title": "Variational Inference in Robotics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Evaluation will be based on the live presentation during the seminar. The presentation is supposed to take 30 minutes with 10 minutes of questions by the other students and the instructors. Criteria are\n- Understanding of the material presented, (50%)\n- Quality of the slides, (15%)\n- Quality of the presentation, (15%)\n- Ability to engage with the audience during the questions, e.g. whether questions can\nbe answered or the student clearly knows about the limits of their knowledge. (20%) The course cannot be retaken.",
    "repetition": "",
    "recommended_prerequisites": "● Math\n○ Basic linear algebra, probability theory, calculus\n● Machine Learning\n○ Neural networks\n○ Gradient-based optimization\n○ Python auto-differentiation packages like tensorflow, pytorch, or jax.\n● Control\n○ Markov Decision Processes, Bellman’s Equation (optional)\n○ PID control (optional)\n● Robotics\n○ Forward kinematics and dynamics (optional)\nEI71088: Variational Inference in Robotics | Variational Inference in Robotics [VIr]\n○ Simultaneous localisation and mapping, SLAM (optional)\n○ Navigation (optional)",
    "content": "The seminar focuses on variational inference methods that are applicable to robotic perception and control problems. In recent years, applying machine learning to sequential data of systems has developed as a promising path to the application of control methods to very complex systems, such as robotic systems perceived through noisy sensors. One promising direction is that of variational inference, where high-dimensional and hence intractable problems of Bayesian inference can be approximated through stochastic optimisation techniques. Here, the member of a family of distributions closest to the true posterior distribution is determined. This approximate distribution can then be used in place of the true one, yielding solutions to learning, inference or control problems such as system identification, state estimation, manipulation, localisation or navigation. In this course, students will familiarize themselves with the methodology of variational inference in a deep learning framework. For that, fundamental knowledge such as machine learning, control and robotics will be refreshed. Typical problems of robotics will be phrased as probabilistic inference and solutions based on recent developments will be studied and discussed. Examples are Dreamer, Learning To Fly and variational inference-based SLAM:\n- https://danijar.com/project/dreamer/\n- https://argmax.ai/blog/drone/\n- https://argmax.ai/blog/vislam/",
    "learning_outcomes": "At the end of the course, students are expected to\n● have an understanding of machine learning methods for control, in particular\nlatent-variable models;\n● be able to comprehend, critically analyze, and implement state-of-the-art research\npublications related to these topics.",
    "teaching_methods": "The course will start with four sessions that introduce the core concepts to understand current research trends. After that, the seminar will pause for four weeks to let the first students prepare their presentations. After that, students will present on a weekly basis. We will provide a selection of novel and exciting research publications. These will cover a broad range of topics and difficulty levels, which should guarantee a good choice for every participant. Students will pick one of these papers. Their task is to read, understand, and analyze the paper. The analysis can include a potential (re-)implementation, reproduction of (partial) results, interesting questions not tackled in the paper, a comparison to related papers. Finally, the student will present the paper and findings to fellow classmates. The students are encouraged to extend their presentations with showcases of their own programming. EI71088: Variational Inference in Robotics | Variational Inference in Robotics [VIr]",
    "media": "",
    "literature": "● Simo Sarkka, Bayesian Filtering and Smoothing\n○ https://users.aalto.fi/~ssarkka/pub/cup_book_online_20131111.pdf\n● Kevin Murphy: Probabilistic Machine Learning: An Introduction\n○ https://probml.github.io/pml-book/book1.html\n● Ian Goodfellow and Yoshua Bengio and Aaron Courville: Deep Learning\n○ https://www.deeplearningbook.org/\n● Richard S. Sutton and Andrew G. Barto: Reinforcement Learning: An Introduction\n○ http://incompleteideas.net/book/the-book.html\n● Steve Brunton: Control Bootcamp\n○ https://www.youtube.com/watch?v=Pi7l8mMjYVE\n○ Based on chapters 1-3 from\n■ Thomas Duriez Steven L. Brunton Bernd R. Noack: Machine Learning\nControl – Taming Nonlinear Dynamics and Turbulence\n(http://faculty.washington.edu/sbrunton/mlcbook/)",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI71089",
    "title": "Responsible Robotics 1: Voraussetzungen und Anforderungen für eine Gesellschaft des langen Lebens",
    "level": "Bachelor/Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "In the written examination students demonstrate by answering questions under time pressure and without helping material about the theoretical knowledge of demographic change, the resulting social challenges, the specific problems of the elderly and the economic, social and ethical aspects of the use of AI and assistive robotic technology for the elderly.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "",
    "content": "Die Vorlesungsreihe richtet sich an Studierende im Master-Studiengang, die sich erstmals (vertiefend) mit den umfassenden Fragestellungen einer alternden Gesellschaft, einer „Gesellschaft des Langen Lebens“ unter den verschiedensten Aspekten und Fragestellungen befassen. Die Vorlesungsreihe vermittelt zunächst Wissen und Hintergrundinformationen zu allen Themenbereichen, die mit einer Gesellschaft des Langen Lebens verbunden sind. Die Vorlesungen sollen damit aber auch einen intensiven Dialog zwischen den Studierenden in Gang setzen und dabei die Erkenntnis reifen lassen, dass man mit einer Beschäftigung mit den Auswirkungen des demografischen Wandels an einer der zentralen Herausforderungen unserer Gesellschaft mitwirkt. Insbesondere die Ingenieurwissenschaften sind gefordert, lebensdienliche, unterstützende Technik zu entwickeln, um einer immer älter werdenden Gesellschaft vor allem Selbständigkeit a) zu ermöglichen und b) so lange wie möglich zu erhalten. Nur durch den Einsatz lebensdienlicher Technik wird es möglich sein, bei einem durch den demografischen Wandel schwindenden Unterstützungspotenzial (weniger professionell und ehrenamtlich Pflegende!) und gleichzeitig wachsendem Pflegebedarf (immer mehr Pflegebedürftige!) den jetzigen Qualitätsstand der Sorgearbeit zu halten. Der Beitrag der Ingenieurwissenschaften für diese existenzielle gesellschaftliche Aufgabe kann nicht hoch genug bewertet werden. Die Vorlesung wird in deutscher Sprache angeboten; mit englischen Ergänzungen und zweisprachigen Unterrichtsmaterialien. Die Exkursionen führen zu beispielgebenden Orten und Settings, in denen alte und hochbetagte Menschen leben und / oder gepflegt und begleitet werden, sowie zu Institutionen, die zu Fragen des Alter(n)s auf unterschiedlichstem Feld und zu den verschiedensten Problemstellungen forschen.",
    "learning_outcomes": "Upon completion of the module, students are able to understand and analyze: · the process of demographic change and its significance for social action · the specific problems of the elderly which is taught through the basics of gerontology and geriatrics · the economic, social and ethical aspects of the use of AI and assistive robotic technology for the elderly Engineering students at the end of the module will be able to adopt a change of perspective towards the elderly and evaluate technological development from this perspective. Finally, students are be able to comprehend, critically analyze, and implement state-of-the-art research publications related to these topics and are able to understand KI and assistive robotic technology as a contribution to manage the challenges of demographic change.",
    "teaching_methods": "The subject matter is essentially taught through lectures. In addition, on two excursion days, the central issues of the module are practically deepened by demonstrating technologies that are already in use.",
    "media": "",
    "literature": "Kirsten Aner / Ute Karl: Handbuch Soziale Arbeit und Alter. Springer Verlag, Berlin Heidelberg\n22020.\nKarsten Hank u.a. (Hrsg.): Alternsforschung. Handbuch für Wissenschaft und Praxis. Baden-\nBaden 22019.\nHans-Werner Wahl / Vera Heyl: Gerontologie – Einführung und Geschichte. Kohlhammer Verlag\nStuttgart 2015.\nSami Haddadin u.a.: Geriatronik – Assistenzroboter für ein selbstbestimmtes Leben im Alter? In:\nRoboter als (Er-)Lösung? Orientierung der Pflege von morgen am christlichen Menschenbild. Hrsg.\nStephan Mokry / Maximilian Th. L. Rückert. Hans-Seidel-Stiftung München 2020.\nSami Haddadin: Was Robotik in der Pflege leisten kann. https://www.bmbf.de/de/was-robotik-in-\nder-pflege-leisten-kann-9638.html [Zugriff: 17.6.2021].\nÄltere Menschen und Digitalisierung. Der Achte Altersbericht der Bundesregierung. Berlin 2020.\nhttps://www.achter-altersbericht.de/bericht\nhttps://www.achter-altersbericht.de/fileadmin/altersbericht/pdf/aktive_PDF_Altersbericht_DT-\nDrucksache.pdf\n[Zugriff: 17.6.2021]\nAndreas Kruse: Lebensphase hohes Alter. Springer Verlag, Berlin Heidelberg 2017.\nThomas Klie / Stefan Arend: Arbeitsplatz Langzeitpflege. Heidelberg 2018.\nStefan Arend / Thomas Klie: Wer pflegt Deutschland? Hannover 2017.\nHartmut Remmers: Pflege und Technik. Stand der Diskussion und zentrale ethische Fragen. Ethik\nMed 31, 407–430 (2019). https://doi.org/10.1007/s00481-019-00545-2 [Zugriff: 17.6.2021].",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI71090",
    "title": "Intelligent Machine Design – Advanced Mechatronics Components",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulnote ergibt sich durch Mittelung der Bewertungen der einzelnen Lab Assignments (gleichmäßige Gewichtung). Im Rahmen dieser Lab-Assignments werden sowohl die zu erarbeitenden mechatronischen System-Aufbauten als auch die schriftliche Dokumentation der theoretischen Lab-Assignment-Aufgaben (5-8 Lab-Assignment-Aufgaben, Entwurf) geprüft. Die erfolgreiche Absolvierung des Kurses hängt nur von der finalen Modulnote, nicht von einzelnen Lab-Assignments ab.",
    "repetition": "",
    "recommended_prerequisites": "- IMD - Mechatronics Fundamentals (IMDL-Veranstaltung Semester 1)\n- IMDL - Basic System Design (IMDL-Veranstaltung Semester 1)\n- Programmierung (C )\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
    "content": "Das IMDL – Intelligent Machine Design Lab Modul 2.1 ist Teil einer dreisemestrigen Modulreihe, welche zum Ziel hat Studenten in die Lage zu versetzen komplexe und sehr leistungsfähige mechatronische Systeme mit hoher gesellschaftlicher/ökonomischer Relevanz zu entwickeln und aufzubauen. Studenten lernen selbständig Produktideen zu entwickeln und schrittweise in seriennahe Produktprototypen zu überführen. Nach Abschluss der Modulreihe sind die Studenten entsprechend in der Lage mechatronische Systeme und Projekte mit beliebiger Komplexität anzugehen sowie eigene Projektideen, welche z.B. gesellschaftliche, wirtschaftliche oder ökologische Probleme lösen, zu entwickeln und erfolgreich zu realisieren. Hierbei wird insbesondere Fokus auf die Erarbeitung multi-disziplinärer Design- und Integrationsfähigkeiten sowie deren Nutzung in einem interdisziplinären Team gelegt. Die Module innerhalb eines Semesters sowie zwischen den verschiedenen Semestern bauen inhaltlich aufeinander auf. Daher wird die erfolgreiche Absolvierung der vorherigen Module dringend empfohlen (Inhalt von Modul 1.1 wird für Modul 1.2 benötigt, Modul 1.1+1.2 wird für Modul 2.1 benötigt usw.). Schwerpunkt des Moduls 2.1 dieser Reihe ist die selbstständige Entwicklung, Integration, Aufbau und Evaluierung komplexer mechatronischer Systeme auf Basis fortgeschrittener Komponenten und Methoden wie BLDC-Motoren, Kraftsensoren, Signalverarbeitung, Feldbussysteme (CAN, …), PCB-Design, Auslegung mechanischer Komponenten, Simulation und Regelung von mechatronischen Systemen sowie weiterführende Programmierung von Microcontrollern (interrupts, advanced state-machines, …).",
    "learning_outcomes": "Nach Abschluss des Moduls sind die Studierenden in der Lage komplexe mechatronische Systeme auf Basis fortgeschrittener Komponenten und Entwicklungsmethoden selbstständig zu entwickeln, aufzubauen und zu testen. Hierbei können die Studierenden die Charakteristika und Wechselwirkungen der verschiedenen mechatronischen Komponenten und Software-Aspekte voraussagen sowie für die Entwicklung und Integration der geforderten Systeme entsprechend adaptieren.",
    "teaching_methods": "- Einführungs-Vorlesungen/Kurse\n- Übungen\n- Online-Vorlesungen\n- Labor-Arbeiten",
    "media": "- Präsentationen\n- Online Videos\n- Handouts (Übungen, Labore)",
    "literature": "- Paul Scherz and Simon Monk, ‘Practical Electronics for Inventors’, 4th rev. ed McGraw-Hill\nEducation\n- Eric S. Roberts, ‘The Art and Science of C’, Pearson Education\n- Robert l. Norton, ‘Design of Machinery’, Mcgraw-Hill Europe; 3rd Revised edition\n- Clarence W. De Silva, ‘Mechatronics: Fundamentals and Applications’, Apple Academic Press\nInc.\n- Shimon Y. Nof, ‘Springer Handbook of Automation’, Springer; 2009. Edition\n- Jan Awrejcewicz, ‘Mechatronics: Ideas, Challenges, Solutions and Applications’, Springer; 1st ed.\n2016 Edition\n- Rochdi Merzouki, ‘Intelligent Mechatronic Systems; Modeling, Control and Diagnosis’, Springer;\nSoftcover reprint of the original 1st ed. 2013 Edition\n- Paul Horowitz, ‘The Art of Electronics’, Cambridge University Press; 3. Edition",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntelligent Machine Design: Advanced Mechatronics Components (Vorlesung, 5 SWS)\nHaddadin S [L], Budiman F, Le Q, Swikir A"
  },
  {
    "module_id": "EI71095",
    "title": "Multi-criteria Optimization and Decision Analysis for Embedded Systems Design",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Schriftliche Prüfung (60 Minuten): Die Studierenden werden durch eine schriftliche Prüfung geprüft, in der sie nachweisen, dass sie die Anwendung des Multi-Kriterien-Paradigmas verstanden haben, und es für die Analyse, Modellierung, Optimierung und Entscheidungsfindung von Problemen beim Entwurf eingebetteter Systeme anwenden können. Die Fragen decken den in der der Vorlesungen vermittelten theoretischen Hintergrund sowie die Übungen aus der Vorlesung ab. Die Prüfung dauert 60 Minuten, Hilfsmittel sind nicht erlaubt. Hausaufgabe: Im Rahmen des Selbststudiums wir eine Hausaufgabe in Gruppen von 2 bis 3 Teilnehmenden erarbeitet und bewertet. Darin sollen die Studierenden nachweisen, dass sie reale Optimierungsprobleme aus einem aktuellen Forschungsgebiet lösen können. Unter Berücksichtigung der Größe derartiger Probleme können solche Aufgaben nicht im Rahmen der Prüfung behandelt werden. Die Bewertung dieses Teils erfolgt anhand von abzuliefernden Ergebnissen und eines Berichts. Die Gesamtnote ergibt sich aus dem gewichteten Mittelwert von Abschlussprüfung (60%) und Hausaufgabe (40%).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Datenstrukturen\n- Grundlegende Programmierkenntnisse in Python oder Matlab; alternativ C/C++ oder Java\n- Grundkenntnisse von Wahrscheinlichkeitsrechnung und Statistik (Wahrscheinlichkeitsaxiome\nund -theoreme, z.B. Bayes-Theorem und dessen Anwendung; typische\nWahrscheinlichkeitsverteilungen, z.B. exponentiell, Gauss, etc.)",
    "content": "1. Einführung in die Berücksichtigung mehrerer Kriterien beim Design eingebetteter Systeme\n- Notwendigkeit mehrerer Kriterien\n- Modellierung und Herausforderungen\n2. Optimierungsmethoden\n- Lineare Programmierung\n- Meta-Heuristiken (z.B. Genetische Algorithmen, Simulated Annealing)\n- Mehrdimensionale Optimierung für die Entwurfsraumexploration\n3. Entscheidungsverfahren\n- Entscheidungstheorie\n- Multikriterielle Entscheidungsanalyse\n- Spieltheorie\n- Entscheidung unter Risiko und Unsicherheit\nIn der Vorlesung werden die theoretischen Inhalte durch illustrative Beispiele zu folgenden Konzepten ergänzt: Problemabstraktion und Modellierung, Auswahl eines Algorithmus und dessen Implementierung sowie multikriterielle Entscheidungsfindung und Analyse. Dabei werden sowohl funktionale als auch nicht-funktionale Aspekte berücksichtigt. Ausführlichere Übungsbeispiele zu diesen Themen werden von den Studenten im Eigenstudium durchgeführt.",
    "learning_outcomes": "Nach erfolgreichem Abschluss dieses Module\n- verstehen die Studenten die Berücksichtigung mehrerer Kriterien beim Design eingebetteter\nSysteme und die zugehörigen Herausforderungen,\n- können die zugehörigen Probleme analysieren und modellieren,\n- verstehen, wie unterschiedliche (mehrdimensionale) Optimierungsmethoden funktionieren, und\nkönnen die - abhängig von der Problemstellung - am beste(n) geeignete(n) Methode auswählen und anwenden,\n- verstehen, wie unterschiedliche (multikriterielle) Entscheidungsverfahren funktionieren, und\nkönnen die am beste(n) geeignete(n) Methode auswählen und anwenden sowie die vom Optimierungsprozess erhaltenen Ergebnisse analysieren.",
    "teaching_methods": "Die technischen Inhalte werden mittels PowerPoint Präsentationen eingeführt und unmittelbar anhand kleinerer Beispiele oder Herleitungen veranschaulicht, die mit Hand in die Folien eingefügt werden. Zudem werden Studierende aktiv zu Fragen animiert. Zusätzlich zu den individuellen Lernmethoden der Studenten wird die Übertragung des theoretischen Wissens auf seine praktische Anwendung mittels illustrativer Beispiele während der Vorlesung und durch im Selbststudium durchzuführende Übungsaufgaben erreicht. Das Material zur Veranstaltung wird den Studierenden über Moodle verfügbar gemacht.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen mit handschriftlichen Ergänzungen\n- Beschreibung erläuternder Übungsbeispiele",
    "literature": "Optionale Literaturempfehlungen:\n- XS. Yangi, \"Engineering Optimization: An Introduction with Metaheuristic Applications\", Wiley\n2010\n- EG. Talbi, \"Metaheuristics: From Design to Implementation\", Wiley 2009\n- S. Greco, M. Ehrgott, J.R. Figueira (Eds.), \"Multiple Criteria Decision Analysis: State of the Art\nSurveys\", Springer 2016",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMulti-Criteria Optimization and Decision Analysis for Embedded Systems Design (Vorlesung, 2\nSWS)\nDoan N"
  },
  {
    "module_id": "EI71098",
    "title": "Optimal Control and Reinforcement Learning for Robotics (Seminar)",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "In this course, students are required to demonstrate their ability to conduct literature review of research papers, and to discuss and present the principles, state-of-the-art methods and their limitations in the field of Optimal Control and Reinforcement Learning for Robotics. The module grade is based on the completeness and quality of the written report (70%) as well as the presentation (30%). The report is written in teamwork. It focuses on discussing several advanced topics in optimal control and reinforcement learning with the focus being on the clear and precise summary of the most important facts and the conclusions drawn from those topics (15-20 page report). Note that, each student should be responsible for a specific part of the report in order to be assessed individually. In the oral presentation followed by a discussion, the students show that they understand important applications, perspectives, and opportunities for selected technologies in the field of optimal control and reinforcement learning. The presentation focuses on the visualization of the results and conclusive lines of argument. (20 minutes presentation, 20 minutes discussion afterward). In the 20 minutes presentation and 20 minutes discussion, each student will present a specific part of the entire presentation and he/she will be directly asked some questions in order to be assessed individually.",
    "repetition": "",
    "recommended_prerequisites": "- Fundamentals of control theory\n- Fundamentals of robotics",
    "content": "Optimal Control and Reinforcement Learning for Robotics is a seminar course which will introduce the basics and explore advanced topics in optimal control and reinforcement learning. Students will first be introduced to the foundations of optimal control theory and reinforcement learning. Students will then be guided to explore advanced topics which focus on robotic applications.",
    "learning_outcomes": "After successful completion of the course, the students have an understanding of the basics of optimal control and reinforcement learning and an overview of the state-of-the-art of research for robotic applications. Also, students aree able to identify the main research directions in the field and summarize the state-of-the-art in a specific research direction by investigating and analyzing research papers. In addition, they are capable of conducting group discussions and collaborative writing, and present fundamental principles, critical analysis and findings clearly.",
    "teaching_methods": "Students will be given introductory lectures and guided to conduct reading and discussions of research papers.\n- Introductory lectures/courses\n- Group discussion\n- Paper seminar",
    "media": "- Presentations\n- Reading materials",
    "literature": "- A. Barto and R. Sutton, Reinforcement Learning: An Introduction\n- D. Bertsekas (2019), Reinforcement Learning and Optimal Control, Athena Scientific\n- D. Bertsekas (2017), Dynamic Programming and Optimal Control, 4th Edition\n- E. Todorov (2006), Optimal Control Theory (book chapter)\n- R. Tedrake (2021), Underactuated Robotics: Algorithms for Walking, Running, Swimming, Flying,\nand Manipulation (online lecture notes)",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIN2107 Optimal control and Reinforcement Learning for Robotics (Hauptseminar, 2 SWS)\nHaddadin S [L], Chen X, Shen Z, Swikir A, Wu F"
  },
  {
    "module_id": "EI71099",
    "title": "Introduction to Human and Robotic Hand Grasping Control and Manipulation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The course grade will be determined by the midterm test (40%) and final project (60%). The midterm test consists of solving some theoretical problems in written tests of a duration of 90 min. Additionally, there will be a final project on lab experiments then presenting it with 30 min in slides. The final project evaluates whether students can transfer the methods they have learned during the course to real-life challenges. The student will have to choose between different experiments on the grasping topic then tackle the topic and the requirement of solving the proposed experimental problem. This can be done within two/four weeks' time then they will have to present their approach in 30 min presentation. Specifically, the grade will be divided as follows:\n-40% midterm test\n-60% Final project\n--20% Presentations\n--40% Solving the task",
    "repetition": "",
    "recommended_prerequisites": "Passion for human and robotic hands grasping, as well as some familiarity with mathematical\nfoundations regarding linear algebra, differential equations, and control theory.\nAdditionally, participation in the following courses is recommended:\n• Robotics I\n• Motion Planning for manipulation\n• Control Systems I\nThe interim exercises and final project will require solid knowledge of MATLAB and ROS.",
    "content": "• Chapter 1: Introduction & Basic concepts\no Introduction to the course o Power and precision grasp o The friction cone o The Grasp Matrix o Manipulation is more than pick-and-place o Open-world manipulation o Model-based design and analysis o Organization of these notes\n• Chapter 2: robot hands\no Dexterous hands o Simple grippers o Soft/underactuated hands o Other end effectors o Sensors o Putting it all together\n• Chapter 3: Grasp modeling\no Object Kinematics o Hand Kinematics o Contact models o Quasi-static model of the grasp o Grasp properties\n• Chapter 4: Grasp control\no A simple model(Direct) force control o Force Control o Hand Control o Control of the object o Limitations of the rigid-body assumption o Indeterminate grasps o Graspability",
    "learning_outcomes": "After successful completion of the course, students have learned how to write the kinematic and the dynamic equations that describe a grasp. Also, they are able to control the fingers of a robotic hand, or a team of robots, to grasp, manipulate, and move objects. In addition, students are capable of designing new controllers for robotic hands.",
    "teaching_methods": "● Lectures (for direct transfer of theoretical knowledge)\n● Exercises (for experimenting with various learned approaches)\n● Home assignments (for preparing for the final project)",
    "media": "● Presentations (Projector, Whiteboard)\n● Online videos\n● Handouts (exercises, labs)",
    "literature": "● Lecture slides\n● Prattichizzo, D., & Trinkle, J. C. (2008). Grasping. In B. Siciliano & O. Khatib (Eds.), Springer\nHandbook of Robotics (pp. 671–700). Springer-Verlag Berlin Heidelberg.\n● Bicchi A, Gabiccini M, Santello M. Modelling natural and artificial hands with synergies. Philos\nTrans R Soc Lond B Biol Sci 366: 3153–3161, 2011. doi:10.1098/rstb.2011.0152.\n● Santello M, Baud-Bovy G, Jörntell H. Neural bases of hand synergies. Front Comput Neurosci 7:\n23, 2013. doi:10.3389/fncom.2013.00023.\n● Khatib, Oussama. \"A unified approach for motion and force control of robot manipulators: The\noperational space formulation.\" IEEE Journal on Robotics and Automation 3.1 (1987)",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntroduction to human and robotic hand grasping: control and manipulation (Übung, 2 SWS)\nHaddadin S [L], Naceri A, Swikir A, Tröbinger M\nIntroduction to human and robotic hand grasping: control and manipulation (Vorlesung, 2 SWS)\nHaddadin S [L], Naceri A, Swikir A, Tröbinger M\nIntroduction to human and robotic hand grasping: control and manipulation (Praktikum, 2 SWS)\nHaddadin S [L], Naceri A, Swikir A, Tröbinger M"
  },
  {
    "module_id": "EI71102",
    "title": "Materials in Neuroengineering",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "During a written exam (90 min) students will be asked to contrast and compare various types of biomaterials, their properties, manufacturing methods, and their behavior as medical implants. The exam will also evaluate the students’ understanding of the biological response to implanted materials, with a focus on materials in the nervous system.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No mandatory prerequisites.",
    "content": "This course will cover classes of biomaterials used in neuroengineering applications, and methods for their manufacturing and modification. The course is divided into three core and interdependent topics: 1) materials science fundamentals, 2) biological responses to implanted materials, and 3) bioelectronics, particularly focused on neural devices. Material properties such as stiffness, surface charge, wettability, and electrical conductivity will be discussed, with a focus on methods to control or modify these properties, and measurement methods. The course will introduce biological responses to implanted devices, including protein adsorption, complement activation, blood clotting, and inflammation. The course will focus on how material properties modulate these biological responses. We will also discuss more advanced topics such as manufacturing and analysis of nanoscale devices and features, remote powering of materials, and material properties for specific applications in the nervous system.",
    "learning_outcomes": "After completion of this course, students understand the biomaterials used in neuroengineering, and can analyze their functionalities and behaviors in biological environments. Students are able EI71102: Materials in Neuroengineering | Materials in Neuroengineering to evaluate the physical and chemical properties of materials that determine various biological responses. Students can analyze the manufacturing methods that lead to biomaterial properties, and can analyze methods used to measure them.",
    "teaching_methods": "Fundamental principles of materials science and biomaterials are introduced during the lectures. These concepts are applied via exercises in which students apply the lecture material to case studies of medical implants. At-home task sets will provide students with practice in characterizing and analyzing biomaterial properties. The module laboratory sections will provide students with focused group work on biomaterials and neural interfaces.",
    "media": "Powerpoint presentations, whiteboard, teaching material",
    "literature": "Rahaman, Mohamed N.; Brown, Roger F. Materials for Biomedical Engineering. (2022) 1st Ed.,\nWiley. ISBN: 978-1119551119.\nB.D. Ratner, W.R. Wagner, et al. Biomaterials Science: An Introduction to Materials in Medicine.\n(2020) 4th Ed., Academic Press. ISBN: 978-0128161371.",
    "lv_sws_lecturer": "Kozielski, Kristen; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMaterials in Neuroengineering (Vorlesung mit integrierten Übungen, 4 SWS)\nKozielski K [L], Kozielski K, Kumari P, Milojkovic A"
  },
  {
    "module_id": "EI71103",
    "title": "Post Shannon Theory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulleistung wird in Form einer 30 minütigen mündlichen Prüfung erbracht. In dieser soll nachgewiesen werden, dass die grundlegenden konzeptionellen und mathematischen Zusammenhänge der Post-Shannon-theoretischen Beschreibung von Kommunikationssystemen verstanden wurden. Darüberhinaus sollen die beispielhaft behandelten Kommunikationszenarien, wie zum Beispiel Identifikation von Nachrichten, bekannt sein, sodass eine reflektierende Betrachtung im Prüfungsgespräch möglich ist. Zur Prüfung sind keine weiteren Hilfmittel zugelassen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Interesse an mathematischer Modellierung und\nGrundkenntnisse in Informationstheorie.\nEmpfohlen werden Kombinationen dieses Moduls mit der Absolvierung eines der folgenden\nModule:\n„EI7431 – Information Theory“,\n„EI7344 – Informationstheoretische Grundlagen der Informationsforensik und biometrische\nSicherheit“,\n„EI7345 - Informationstheoretische Sicherheit“,\n„EI7353 - Multi-User Information Theory\"\nEI71103: Post Shannon Theory | Post Shannon Theory [Post Shannon Theorie]",
    "content": "Heutzutage sind Maschine-zu-Maschine-Kommunikation und Maschine-zu-Mensch- Kommunikation wesentliche Komponenten der 5. Mobilfunkgeneration. Um diese hoch anspruchsvollen Anwendungen zu realisieren, müssen die notwendigen Latenz- Resilienz- und Datensicherheitsanforderungen in die physikalische Domäne eingebettet sein. Viele dieser Anwendungen sind im Sinne des Shannon Übertragungsschematas implementiert. Für diese Art der Kommunikation muss der Empfänger in der Lage sein, alle Nachrichten des Absenders zu dekodieren. Die entsprechende Kommunikationsaufgabe ist in vielen Fällen ineffizient. Im Gegensatz dazu können neue Kommunikationsmodelle zu erheblichen Leistungssteigerungen führen. Ein Beispiel ist das Identifizierungsschema von Ahlswede und Dueck wenn es für die zuvor genannten Anwendungen geeignet angewendet wird. In diesem Szenario will der Empfänger nur entscheiden, ob der Sender eine relevante Nachricht gesendet hat oder nicht. Natürlich hat der Sender keine vorherige Information über die Nachrichten, die der Empfänger für wichtig hält. Die Relevanz bestimmter Nachrichten für den Empfänger kann während der Anwendung geändert werden.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls können die Studierenden mathematische und konzeptuelle Methoden zur Behandlung von Post-Shannon Kommunikationsmodellen anwenden. Sie können Kommunikationszenarien analysieren und Kodierungssätze sowie allgemeine und spezielle Strategien entwickeln.",
    "teaching_methods": "In der Vorlesung werden anhand eines Tafelvortrags die mathematischen und theoretischen Methoden zur Behandlung von Post-Shannon Modellen erklärt sowie grundlegende Kodierungssätze bewiesen. In den Übungen werden Übungsaufgaben selbstständig und unter Anleitung des Assistenten gelöst. Darin sollen die erlernten Beweisstrategien zum Beweis und zur Herleitung von Kodierungssätzen für spezielle Kommunikationsszenarien angewendet werden.",
    "media": "Tafelvortrag, Beamervortrag, Übungsaufgaben.",
    "literature": "Ahlswede, Alexander; Althöfer, Ingo; Deppe, Christian; Tamm, Ulrich (Eds.),\nIdentification and Other Probabilistic Models\nRudolf Ahlswede's Lectures on Information Theory 6,\nSpringer-Verlag,\nSeries: Foundations in Signal Processing, Communications and Networking, Vol. 16\n1st Edition, 2021.\nEI71103: Post Shannon Theory | Post Shannon Theory [Post Shannon Theorie]\nCabrera J.; Boche H.; Deppe C.; Schaefer R.F.; Scheunert C.; Fitzek F.H.P.: 6G and the Post-\nShannon-Theory. In: Emmanuel Bertin, Noel Crespi, Thomas Magedanz (Hrsg.): Shaping Future\n6g Networks: Needs, Impacts and Technologies. Wiley-Blackwell, 2021.",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPost Shannon Theory (Vorlesung mit integrierten Übungen, 4 SWS)\nLabidi W [L], Boche H, Ezzine R"
  },
  {
    "module_id": "EI71104",
    "title": "Embedded System Design for Machine Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "1) Code submission for the lab part (coursework, 20% of final grade) 2) Written final exam (90min) (Examination, 80% of final grade) 1) The student will hand in code submissions for the three lab parts, which will be graded. This grade counts 20% of the final grade. 2) In the final exam (90min written or 30min oral), the students will answer questions from the lecture content and from the lab part to test their understanding of the theoretical and practical aspects of embedded machine learning. This grade counts 80% of the final grade. The first part (1) will test that the students have acquired the practical programming skills to deploy a ML embedded project, while part (2) tests for the understanding of the practical and theoretical concepts of embedded ML.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge on embedded C and micro-controllers (e.g. in the form of a micro-controller\nprogramming lab) is assumed to be known.\nBasic knowledge of Hardware design in VHDL or Verilog (e.g. in the form of a hardware design\nlab or the lecture \"Entwurf Digitaler Systeme mit VHDL und SystemC\" (Prof. Ecker) is\nassumed to be known.\nBasic knowledge of machine learning algorithms (e.g. in the form of the computational intelligence\nlecture or the lecture Machine Learning: Methods and Tools lecture) is recommended.\nEI71104: Embedded System Design for Machine Learning | Embedded System Design for Machine Learning [Embedded\nML]",
    "content": "The lecture will cover the following contents: * Introduction to the design flow and design steps to deploy machine learn-ing workloads on embedded devices2 * Machine learning theory to understand the typical structure, operatorsand trade-offs in accuracy, memory and performance demands of machinelearning workloads * Neural Network Model Compression Methods: Number systems, Integerand sub-byte Quantization, Quantization-aware training, Pruning, RankReduction. * Software Optimization Methods: Memory planning, target-aware operator optimization, operator fusing and tiling * Methods and basic HW blocks for embedded HW-acceleration (SIMD,Vector Instructions, loosely-coupled accelerators, memory systems) The lab part will cover the following contents to transfer the theory into practice: *Introduction to the Machine Learning Deployment Toolchain TVM * Training, model optimization and deployment of a keyword recognitionapplication onto a low- power micro-controller board using TVM * Design of a simple HW accelerator to offload machine learning workload into hardware with test by simulation.",
    "learning_outcomes": "Upon completion of this module, students are able to: * Understand the design flow and design steps for deploying machine learn-ing workloads on embedded devices. * Evaluate the trade-offs involved in executing machine learning workloads such as neural network inference in software and hardware for on embed-ded processors and dedicated accelerators. * Apply effectively model compression methods to embedded machine learn-ing workloads and understand the theory behind the methods. * Apply hardware acceleration principles (SIMD, Vector, 2D systolic arrays) for accelerating ML workloads and know about the influence of the memory system. EI71104: Embedded System Design for Machine Learning | Embedded System Design for Machine Learning [Embedded ML] * Apply a state-of-the-art machine learning deployment flow to a simple machine learning application such as keyword recognition. * Implement the deployment code on an embedded processor platform (micro-controller board) and to design a simple hardware accelerator for the application that works in simulation.",
    "teaching_methods": "The module will consist of two parts, a weekly lecture and a parallel lab with three parts. The lecture will consist of classroom sessions with slide presentation. The exercises will be integrated in the lecture flow in order to apply the learned content directly on example problems. This will be done using activating methods such as group works. The lab will be split into three major tasks, that will be tutored, each being introduced in one classroom lab session. The students will work on these tasks in small groups on their own schedule to also train team work and independent work. The lab tasks will directly put the lecture content into practise, hence, following a problem-oriented learning approach.",
    "media": "The course will be taught based on lecture material in the forms of slides and with additional\nexercises. The lab part will involve the work on a state of the art open-source simulation and\ndeployment flow (TVM) that can be used either on university lab PCs or private machines.\nAdditionally, low-power micro-controller boards will be used to demonstrate the application in real\nhardware.",
    "literature": "There exist textbooks covering the content of the lectures so far. It is planned to provide a lecture\nscript based on the lecture contents in the future.Following books cover parts of the lecture’s\ncontent and provide related information:\n* Vivienne Sze, Yu-Hsin Chen, Tien-Ju Yang, Joel S. Emer;Efficient Pro-cessing of Deep Neural\nNetworks; Morgan & Claypool Publishers\n* David Patterson, John Hennessy;Computer Organization and Design RISC-V Edition - The\nHardware Software Interface; Elsevier",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEmbedded System Design for Machine Learning (Vorlesung mit integrierten Übungen, 3 SWS)\nEcker W, Müller-Gritschneder D, van Kempen P\nEmbedded System Design for Machine Learning (Praktikum, 3 SWS)\nEI71104: Embedded System Design for Machine Learning | Embedded System Design for Machine Learning [Embedded\nML]\nvan Kempen P, Müller-Gritschneder D, Ecker W, Li B"
  },
  {
    "module_id": "EI71105",
    "title": "Advanced Topics in IoT Security",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Achievement of the intended learning outcomes is assessed by submitting a four pages seminar paper (50%), regular discussions about the progression of the project and next steps (25%), and 30-minute oral presentation with a discussion of the paper topic (25%).",
    "repetition": "",
    "recommended_prerequisites": "Basic knowledge of LaTeX typesetting for the seminar paper; Passing the following courses are\nrecommended:\n1) IoT Security\n2) System Design for the Internet of Things",
    "content": "In this seminar, students will broaden their understanding of IoT security by discussing recent attacks and vulnerabilities that threaten different IoT systems (such as intelligent vehicles, e-health systems, etc.) and countermeasure approaches proposed to mitigate these attacks. Many topics will be offered, and each student needs to choose one topic and write a short paper about it. The seminar will mimic the workflow of real conferences: Students need to submit research papers, perform peer-review to other submissions, and finally present their papers.",
    "learning_outcomes": "Upon successful completion of the course, students are able to:\n• Demonstrate knowledge of the security issues of the Internet of Things\n• Understanding the vulnerabilities that threaten IoT systems and the countermeasures used to\nprotect this system. EI71105: Advanced Topics in IoT Security | Advanced Topics in IoT Security [SEM-IOTSEC]\n• Develop critical thinking skills, lead a scientific discussion, write and presenting research ideas.",
    "teaching_methods": "Each participant prepares a seminar paper based on the topic that (s)he selects. At the end of the semester, students need to present their papers in front of the seminar participants. During the semester, one or two students need to present their progress and lead a discussion about their topic every week. Other participants need to engage in the discussion. In the introductory parts of the seminar, the skills that students need to write their papers will be taught in a teacher-centered style.",
    "media": "The following media are used:\n- Presentations (Projector, Blackboard)\n- Seminar proceedings based on the seminar papers prepared by the participants\n- E-learning platform Moodle",
    "literature": "One or more scientific papers per topic will be provided to each participant of the seminar.",
    "lv_sws_lecturer": "Steinhorst, Sebastian; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Topics in IoT Security (Seminar, 3 SWS)\nHamad M [L], Hamad M, Steinhorst S, Debnath R"
  },
  {
    "module_id": "EI71106",
    "title": "Introduction to Design, Control and Perception of Aerial Robotics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The course grade will be determined by the midterm test (40%) and final project (60%). The midterm test will be a two-hour written exam, which consists of solving a series of simple theoretical problems. While the final project will evaluate whether students can transfer the methods they have learned during the course to real-life challenges, such as autonomous drone racing. The students will be distributed in groups where each group member will be responsible for a specific component of the project, such as perception, motion planning, or control. The project tasks can be accomplished within three/four weeks timeframe. The grade of the project will be proportional to the performance of the proposed solution, for example, the time required for the drone to complete the racing track. Besides the experimental evaluation, each student will have a personal 10-minutes final presentation about the approaches he/she adopted. Specifically, the grade will be divided as follows:\n-40% midterm test\n-60% Final project\n--20% Presentations\n--40% Solving the task",
    "repetition": "",
    "recommended_prerequisites": "Passion for aerial robots, as well as some familiarity with mathematical foundations regarding\nlinear algebra, differential equations, and control theory.\nAdditionally, participation in the following courses is recommended:\n● Robotics I\n● Autonomous Systems\n● Computer Vision I\n● Motion Planning for Autonomous Vehicles\n● Control Systems I\nThe interim exercises and final project will require solid knowledge of MATLAB.",
    "content": "● Dynamics Formulation\no Frame Representations o Rigid-Body Modeling o Dynamics of a Multirotor Unmanned Aerial Vehicle o Dynamics of a Fixed-Wing Unmanned Aerial Vehicle o Design Choices\n● Machine Perception\no Representations of States and Environment o Odometric Localization o Extended Kalman Filter o Visual and Visual-Inertial Localisation o Semantic Segmentation\n● Motion Planning\no Trajectory Generation o Configuration Space o Graph-based Plan Methods o Sampling-based Planning Methods o Artificial Potential Field Methods\n● Flight Control\no Hierarchical Control Stack o Feedback Control (Proportional-Integral-Derivative) o Model-Based Control (Model Predictive Control) o Model-Free Control (Deep Learning Control) o Stability Considerations\n● Case Study: Autonomous Drone Racing Competition (Simulation-Based or MathWorks Minidrone\nCompetition)",
    "learning_outcomes": "After successful completion of the course, students are able to understand the different components of aerial robots. Besides, students are capable to evaluate various analytical state representations of unmanned aerial vehicles and derive dynamical models of multirotor and fixed- wing aircraft. Moreover, students are able to analyse the whole flight stack and apply state-of-the- art methods for perception, localization, path-planning and control.",
    "teaching_methods": "● Lectures (for direct transfer of theoretical knowledge)\n● Exercises (for experimenting with various learned approaches)\n● Home assignments (for preparing for the final project)",
    "media": "● Presentations (Projector, Whiteboard)\n● Online videos\n● Handouts (exercises, labs)",
    "literature": "● Lecture slides\n● Kimon P. Valavanis and George J. Vachtsevanos, “Handbook of Unmanned Aerial Vehicles”,\nSpringer, 2014.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI71107",
    "title": "Intelligente Verfahren in der Elektromobilität",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In der Klausur weisen die Studierenden Ihr Verständnis zu Intelligenten Verfahren im Anwendungsfall der Elektromobilität nach. Sie wenden das Wissen aus Vorlesung und Übung in Beispielszenarien an. Schriftliche Klausur, 90 Minuten, keine Hilfsmittel zugelassen mit Ausnahme von Taschenrechner und ggf. unverändertes Wörterbuch",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "mathematische Grundkenntnisse",
    "content": "Anwendung von intelligenten Verfahren im Elektrofahrzeug auf Gesamtfahrzeugebene und in den Komponenten des elektrischen Antriebsstrangs\n- Überblick Elektromobilität; Grundlagen des Elektrofahrzeugs und des elektrischen\nAntriebsstrangs; Grundlagen zu intelligenten Verfahren; Einführung in intelligente, rekonfigurierbare Batteriesysteme\n- Anwendung von modellbasierten Zustands- und Parameterschätzverfahren in rekonfigurierbaren\nBatteriesystemen, für die Fahrzeugzustandsschätzung und die elektrische Antriebsmaschine\n- Diagnose im Frequenzbereich für den Anwendungsfall Energiespeicher\n- Thermische Modellbildung zur Bestimmung der Kerntemperatur von Batteriezellen mit\nkünstlichen neuronalen Netzen\n- Datengetriebene Fehlerdiagnose in verteilten Systemen\n- Ausblick auf neuartige Konzepte des elektrischen Antriebsstrangs\nEI71107: Intelligente Verfahren in der Elektromobilität | Intelligent Processes in Electromobility",
    "learning_outcomes": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage:\n- Komponenten des elektrischen Antriebsstrangs mit Modellen zu beschreiben\n- abhängig von der konkreten Anwendung geeignete Methoden auszuwählen und einzusetzen,\num die Zustände und Parameter im Elektrofahrzeug und dessen Komponenten im Betrieb zu bestimmen\n- die Resultate der verwendeten Methode zu analysieren und zu bewerten\nNach der Teilnahme an dem Modul kennen die Studierenden:\n- Die Besonderheiten der vorgestellten Verfahren im Zeit- und Frequenzbereich\n- Die Vor- und Nachteile von modellbasierten Verfahren gegenüber datengetriebenen Ansätzen\n- Die Herausforderungen der speziellen praktischen Anwendung der erlernten Methoden",
    "teaching_methods": "- Präsentation\n- Tafelarbeit/Overhead\n- Skript\n- Übungen und Simulationsaufgaben\nPräsenzanteil (60 Stunden): Das Modul besteht aus einer Vorlesung (4 SWS) mit integrierten Übungen und Simulationsbeispielen\n- Die Inhalte der Vorlesung werden hauptsächlich durch Vortrag und Diskussion mit\nPräsentation(en), Vorführungen und Tafel vermittelt\n- Die Inhalte werden interaktiv in Übungen vertieft und angewendet, diskutiert und vorgerechnet\n- Durch Simulationen erlangen die Studierenden in Einzel- und Gruppenarbeit mit geeigneter\nHilfestellung praktische Erfahrung in der Anwendung der erlernten Methoden Eigenstudiumsanteil (90h):\n- Vor- und Nachbereitung des Präsenzteils\n- Lösen von Zusatzaufgaben (Übungen, Simulationen und Programmieraufgaben)\n- Prüfungsvorbereitung",
    "media": "- Präsentation\n- Tafelarbeit/Overhead\n- Skript\n- Übungen und Simulationsaufgaben",
    "literature": "Bohn, Christian; Unbehauen, Heinz (2016): Identifikation dynamischer Systeme. Wiesbaden:\nSpringer Fachmedien Wiesbaden.\nSchröder, Dierk; Buss, Martin (2017): Intelligente Verfahren. Berlin, Heidelberg: Springer Berlin\nHeidelberg.\nEI71107: Intelligente Verfahren in der Elektromobilität | Intelligent Processes in Electromobility",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntelligente Verfahren in der Elektromobilität (Vorlesung mit integrierten Übungen, 4 SWS)\nEndisch C ( Beyer S, Liebhart B, Schmid M, Schneider D, Vögele U )"
  },
  {
    "module_id": "EI7171",
    "title": "Projektpraktikum Kognitive Technische Systeme",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Praktische Projektarbeit inklusive regelmäßiger Gespräche mit dem zugeordneten Betreuer\n(wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das Vorgehen (50%\n- Schriftliche Ausarbeitung der Ergebnisse und Dokumentation als Hausarbeit (30%)\n- 10minütige Präsentation der Ergebnisse und anschließendes 10minütiges Kolloquium (20%)",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen der Regelungs- und Steuerungstechnik und Robotik\nProgrammieren in C/C++ oder Java\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\nGrundlagen intelligenter Roboter",
    "content": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der autonomen Robotik. Dabei ist der Fokus nicht nur auf klassischen Fragestellungen der Robotik sondern zusätzlich auf der Wahrnehmung und Verarbeitung von Umgebungsinformationen durch technische Systeme wie sie besonders für die Mensch-Roboter Interaktion von Relevanz ist.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage mit konkreten regelungstechnischen Problemen im Anwendungskompetenzbereich von autonomen und EI7171: Projektpraktikum Kognitive Technische Systeme kognitiven technischen Systemen eigenständig umzugehen. Desweiteren werden Kompetenzen im effizienten und problemorientierten Arbeiten im Team vermittelt.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren im Projektpraktikum, sowie kritisches Auseinandersetzen mit den Ergebnissen in einem Vortrag angestrebt. Jedes Team bearbeitet hierbei eine individuelle fachliche Aufgabenstellung und einen eigenen Betreuer zugeordnet. Der Betreuer hilft den Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt, die Nutzung von Experimentalaufbauten erläutert und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt Als Lehrmethode wird im Projektpraktikum unterstütztes Selbststudium angeboten. Unter fachlicher Anleitung werden im Team von max. 3 Teilnehmern abgeschlossene Projektaufgaben geplant, bearbeitet, dokumentiert und das Ergebnis durch Vortrag und praktische Demonstration vorgestellt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.",
    "literature": "",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI7172",
    "title": "Projektpraktikum Kognitive Robotik und Regelung",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Bewertung der praktischen Projektarbeit durch regelmäßige Gespräche mit dem zugeordneten\nBetreuer (wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das Vorgehen (50%). Die Studierenden sollen zeigen, dass sie ein grösseres Projekt im Team bearbeiten können. Besondere Herausforderungen sind dabei die Erstellung und Anpassung eines Projektplans und die Ausgestaltung der Teamarbeit zur Realisierung des Projektziels.\n- Bewertung der schriftlichen Ausarbeitungung der Ergebnisse und Dokumentation als Hausarbeit\n(30%). Die Studierenden sollen zeigen, dass sie die erbrachten Ergebnisse strukturiert darstellen können.\n- Bewertung einer 10minütige Präsentation der Ergebnisse und anschließendes 10minütiges\nKolloquium (20%). Die Studierenden sollen zeigen, dass sie mit den Ergebnissen der Arbeit insbesondere in Relation zum Stand der Technik im Detail vertraut sind. Vortragstechniken werden eingeübt.",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen der Regelungs- und Steuerungstechnik und Robotik\nProgrammieren in C/C++ oder Java\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\nEinführung in die Roboterregelung\nEI7172: Projektpraktikum Kognitive Robotik und Regelung | Project Laboratory Cognitive Robotics and Control [PP-KRR]",
    "content": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der autonomen Robotik. Dabei ist der Fokus nicht nur auf klassischen Fragestellungen der Robotik sondern zusätzlich auf der Wahrnehmung und Verarbeitung von Umgebungsinformationen durch technische Systeme wie sie besonders für die Mensch-Roboter Interaktion von Relevanz ist.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage ein konkretes regelungstechnisches Problem im Anwendungskompetenzbereich von autonomen und kognitiven technischen Systemen eigenständig zu lösen. Das umfasst die Analyse des Problems und die Entwicklung von passenden Lösungsstrategien. Insbesondere sind die Studierenden in der Lage effizient und problemorientiert im Team zu arbeiten. Methodisch können die Studierenden in einer schriftliche Dokumentation ihre Ergebnisse und den Stand der Technik strukturiert darstellen. Im Abschlussvortrag zeigen die Studierenden, dass sie ihre Ergebnisse vor Publikum in verständlicher Form darstellen können.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren im Projektpraktikum, sowie kritisches Auseinandersetzen mit den Ergebnissen in einem Vortrag angestrebt. Jedes Team bearbeitet hierbei eine individuelle fachliche Aufgabenstellung und einen eigenen Betreuer zugeordnet. Der Betreuer hilft den Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt, die Nutzung von Experimentalaufbauten erläutert und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt Als Lehrmethode wird im Projektpraktikum unterstütztes Selbststudium angeboten. Unter fachlicher Anleitung werden im Team von max. 3 Teilnehmern abgeschlossene Projektaufgaben geplant, bearbeitet, dokumentiert und das Ergebnis durch Vortrag und praktische Demonstration vorgestellt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.",
    "literature": "",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nEI7172: Projektpraktikum Kognitive Robotik und Regelung | Project Laboratory Cognitive Robotics and Control [PP-KRR]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Kognitive Robotik und Regelung (Forschungspraktikum, 4 SWS)\nBuss M, Kerz S, Leibold M, Wollherr D"
  },
  {
    "module_id": "EI7173",
    "title": "Projektpraktikum Automatisierung mechatronischer Systeme",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen: - Praktische Projektarbeit inklusive regelmäßiger Gespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das Vorgehen (50%) - Schriftliche Ausarbeitung der Ergebnisse und Dokumentation als Hausarbeit (30%) - 10minütige Präsentation der Ergebnisse und anschließendes 10minütiges Kolloquium (20%)",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen der Regelungs- und Steuerungstechnik oder\nRegelungssysteme 1",
    "content": "Die Projektaufgaben umfassen Hard- und Softwarethemen aus dem Bereich der Automatisierung mechatronischer Systeme, wie sie z.B. im Bereich der Robotik, im Automobil oder in der industriellen Produktion zum Einsatz kommen. Wichtige Fragestellungen beschäftigen sich dabei u.a. mit der Fusion von Sensordaten, der Implementierung geeigneter Regelungsalgorithmen und der Evaluierung des resultierenden Gesamtsystems.",
    "learning_outcomes": "Nach dem erfolreichen Abschluss des Moduls sind die Studierenden in der Lage mit konkreten regelungstechnischen Problemen im Anwendungskompetenzbereich von automatisierten mechatronischen Systemen eigenständig umzugehen. EI7173: Projektpraktikum Automatisierung mechatronischer Systeme | Project Laboratory Automation of Mechatronic Systems",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren im Projektpraktikum, sowie kritisches Auseinandersetzen mit den Ergebnissen in einem Vortrag angestrebt. Jedes Team bearbeitet hierbei eine individuelle fachliche Aufgabenstellung und einen eigenen Betreuer zugeordnet. Der Betreuer hilft den Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt, die Nutzung von Experimentalaufbauten erläutert und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt Als Lehrmethode wird im Projektpraktikum unterstütztes Selbststudium angeboten. Unter fachlicher Anleitung werden im Team von max. 3 Teilnehmern abgeschlossene Projektaufgaben geplant, bearbeitet, dokumentiert und das Ergebnis durch Vortrag und praktische Demonstration vorgestellt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.",
    "literature": "",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI7191",
    "title": "Projektpraktikum Bioanaloge Informationsverarbeitung",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "- Bearbeitung eines Projektes und schriftliche Ausarbeitung der Ergebnisse als Hausarbeit (40%)\n- Dokumentation der im Praktikum erzielten Ergebnisse und Bewertung innerhalb regelmäßiger\nGespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das weitere Vorgehen (40%)\n- 15-minütige Präsentation der Ergebnisse und anschließendes 5-minütiges Kolloquium (20%)\nDie Prüfungsart ist dabei den verschiedenen Lernergebnissen angepasst: Die Erstellung wissenschaftlicher Berichte/Publikationen wird anhand der schriftlichen Ausarbeitung bewertet. Die Fähigkeit zur strukturierten Problemlösung wird anhand der erzielten Ergebnisse bewertet. Schließlich wird die Fähigkeit zur Präsentation der Ergebnisse in einem Vortrag bewertet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Informatik\nGrundlagen der Systemtheorie",
    "content": "Entwicklung von z.B.:\n- Modellen der Sinnesorgane und der neuronalen Informationsverarbeitung sensorischer\nInformation\n- Modellen Kodierungsstrategien von Neuroprothesen\n- mikromechanischen Sensoren, Aktuatoren und Elektroden\n- elektrischen und optischen Stimulationssystemen für Neurone\nEI7191: Projektpraktikum Bioanaloge Informationsverarbeitung | Practical Course Bio-inspired Information Processing",
    "learning_outcomes": "After the practical course students are able to\n- analyze\n- evaluate\n- implement (create)\nnovel systems in the field of bio-inspired information processing",
    "teaching_methods": "Betreutes Praktikum",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Bioanaloge Informationsverarbeitung (73502) (Forschungspraktikum, 4 SWS)\nHemmert W [L], Hemmert W, Bai S, Castaneda González C, Croner A, Driendl L, Saeedi A, Voss A"
  },
  {
    "module_id": "EI72071",
    "title": "Computational Haptics Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "The final grade is composed of the following elements:\n- 80% final presentation and demo of lab project to prove their proficiency in design and implement\nhaptic communication and computing approaches as well as managing coding efficiency, computational complexity and memory requirements.\n- 20% presentation of scientific paper(s) to prove competency in reading and presenting scientific\npapers",
    "repetition": "",
    "recommended_prerequisites": "Digital Signal Processing; Communication Networks, Internet Communication\nThe following modules should be passed before taking the course:\n-\nIt is recommended to take the following modules additionally:\n-",
    "content": "Visual and auditory information are predominant in modern multimedia systems. In contrast, processing and in particular efficient communication of haptic data have not been a field of intense research so far. This is surprising given the fact that we as humans rely heavily on the haptic modality to interact with our environment. With recent advances in Virtual Reality (VR), Man- Machine Interaction, Telerobotics, Telepresence, and Teleaction, however, the topic of haptic communication and computation is rapidly gaining in relevance and is becoming an enabling EI72071: Computational Haptics Laboratory | Computational Haptics Laboratory [CHL] technology for many novel fields of application. The laboratory provides the participants with a detailed overview of the theoretical background and the implementation of haptic communication and computing approaches.",
    "learning_outcomes": "At the end of the module students are able understand the fundamental properties of computational haptics. They are able to design and implement haptic communication and computing approaches. They are able to optimize the schemes towards coding efficiency, computational complexity and memory requirements. Additionally, students are able to judge the performance of different approaches and to understand and evaluate the involved trade-offs. Students additionally know how to read and present scientific papers in the area of computer haptics and haptic communication.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students consolidated knowledge is aspired by weekly lab sessions where the students implement the concepts under the supervision of teaching assistants. Additionally students have to prepare homeworks before the lab session that revisit concepts that are relevant for the lab implementation work. Teaching method: The lab sessions are held in a student-centered way. Teaching assistants support the students during the implementation of computational haptics approaches.",
    "media": "The following kinds of media are used:\n- Introductory presentations at the beginning of every lab session\n- Lab notes\n- Selected reading material",
    "literature": "Lab script, selected book chapters and journal or magazine papers",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputational Haptics Laboratory (Praktikum, 5 SWS)\nSteinbach E, Xu X"
  },
  {
    "module_id": "EI7208",
    "title": "Projektpraktikum Kognitive Systeme",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Schriftliche Ausarbeitung der Ergebnisse als Hausarbeit (40%). Diese Arbeit soll zeigen, dass der\nStudent die Verknüpfung von Theorie und Praxis verstanden und umgesetzt hat. Außerdem soll diese Arbeit den Einsatz von Methoden nach aktuellem Stand-der-Technik sowie die Qualität der Ergebnisse des Projektes abprüfen.\n- Regelmäßige Gespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter)\nüber den Fortschritt der Arbeit und das Vorgehen (40%). Diese dienen dem Betreuer dazu die Fähigkeiten des Studenten, selbstständig ein praktisches Projekt durchführen zu können, einschätzen und wenn nötig eine Orientierungshilfe bieten zu können.\n- 10 minütige Präsentation der Ergebnisse und anschließendes 10 minütiges Kolloquium\n(20%). Dieser Prüfungsteil soll zeigen, dass der Student in der Lage ist seine Arbeit vor einem Expertenkomittee präsentieren und verteidigen zu können. Dieser Teil dienst außerdem dazu die Tiefe abzuprüfen in welcher der Student das Themengebiet erschlossen hat um das Projektziel zu erreichen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Englisch Kenntnisse und vertieftes Fachwissen (abhängig vom jeweiligen Thema / Themengebiet).\nProgrammiererfahrung ist grundsätzlich vorausgesetzt.",
    "content": "Das Hauptseminar umfasst ein praktisches Laborprojekt in Teilgebieten der humanoiden und allgemeinen Robotik sowie eine Abschlusspräsentation. Das Institut für Kognitive Systeme (ICS) kann in drei Hauptgebiete unterteilt werden welche weitere Untergebiete enthalten. Das EI7208: Projektpraktikum Kognitive Systeme | Practical Course Cognitive Systems Thema des praktischen Laborprojekts kann in Absprache mit dem thematisch verantwortlichen wissenschaftlichen Mitarbeiter definiert werden (siehe: http://www.ics.ei.tum.de). Sensoren und Aktoren, Steuerung und Regelung\n- Künstliche Haut für Robotersysteme\n- Humanoide dynamische Lokomotion\n- Restringierte Manipulation für sichere Aktuation\n- Navigation, Steuerung und Regelung von mobilen Robotern\n- Hochleistungs Aktoren\nBiologisch-inspirierte verkörperte Kognition\n- Biologisch-inspiriertes Sehen\n- Neurologisch-inspiriertes Lernen von zweibeinigem Gehen\n- Kognitive Architektur\n- Semantische Schlussfolgerung für die Erkennung menschlichen Handelns\nMensch-Maschine Schnittstelle\n- Humanoide kognitive Kommunikation\n- Roboter, Gesellschaft und Interaktion\n- Gehirn-Computer Schnittstelle (BCI)\n- Mensch-Roboter Interaktion",
    "learning_outcomes": "Nach Abschluss des Moduls ist der Student dazu in der Lage:\n- selbstständig ein praktisches Projekt im Gebiet der humanoiden oder allgemeinen Robotik\ndurchzuführen. Dies bezieht sich auf alle Phasen, von der initialen Planung, über die Realisierung und Evaluierung des Projektziels.\n- selbstständig einen ausführlichen, schriftlichen Report über das Projekt anzufertigen.\n- das Projekt vor einem Expertenkomitee vorzutragen und zu verteidigen.\n- technisches Detailwissen und -fertigkeiten, die während der Durchführung des Projektes erlangt\nwerden, hängen stark von dem gewählten Forschungsgebiet ab.",
    "teaching_methods": "begleitetes, eigenständiges Arbeiten",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden arbeiten überwiegend an zur Verfügung gestellten Rechnern und Robotik-\nSystemen.",
    "literature": "Je nach Thema\nEI7208: Projektpraktikum Kognitive Systeme | Practical Course Cognitive Systems",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Kognitive Systeme (Forschungspraktikum, 4 SWS)\nCheng G [L], Cheng G, Guadarrama Olvera J, Nassour J, Uhde C"
  },
  {
    "module_id": "EI7210",
    "title": "Humanoid Robotic Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The lecture material is verified via six exercise assignments (30%) that are equally weighted and cover a subtopic of humanoid robotics each. Grading furthermore includes a project work (70%), which has to be documented in a written report (~6-10 pages) and defended in a 15 minute presentation. The exercise assignments are necessary for understanding the details and complexities of implementing humanoid methods on a robotic platform. The project work teaches system integration of concepts from the lecture and exercise assignments, with the goal of a working humanoid robotics prototype implementation.",
    "repetition": "",
    "recommended_prerequisites": "Programming skills in C++ or Python are required. Knowledge of Linux and the \"Robot Operating\nSystem\" (ROS) is recommended.",
    "content": "This lecture teaches various topics of humanoid robotics and supplements the theoretical material with hands-on tutorials on the NAO humanoid robot platform. Aspects of robot perception and humanoid locomotion, as well as learning and action execution are covered. The lecture aims to create a holistic picture of the challenges and the state-of-the art of humanoid robotics. The various concepts are supplemented with many examples from different humanoid robotic platforms.",
    "learning_outcomes": "Upon succesful completion of the exercise assignments of this module, the students are able to:\n- outline the required components of humanoid robots\n- employ the correct terminology, exemplary state-of-the-art work and challenges related to the\ntopics EI7210: Humanoid Robotic Systems | Humanoid Robotic Systems [HRS]\n- design and implement functional modules of humanoid robotics in ROS\nUpon succesful completion of the project work of this module, the students are able to:\n- create a complete humanoid control program for a defined task on the NAO platform\n- present and explain their project in front of a jury of experts",
    "teaching_methods": "The theoretical lecture introduces foundational concepts of humanoid robotics. There are five thematic blocks: Introduction to Humanoid Robotics, Humanoid Sensing, Humanoid Perception & Action, Humanoid Locomotion and Humanoid Learning. The theoretical lectures are accompanied by supervised tutorials and programming exercises. These serve to anchor the theoretic concepts in practical tasks and provide context for experiencing challenges in designing software for humanoid robots. Students are tasked with creating and implementing vision and control methods on a humanoid robotic platform in a semi-autonomous fashion. Especially the challenge of transferring theoretical skills into a real and complex task are central. After completing the tutorials, that cover the basics, students are tasked with defining a project in the context of humanoid robotics. In these projects, students combine the practical knowledge from the tutorials into one challenge, centered around a self-defined task for a humanoid robot. These projects have to be presented and explained. Furthermore, the students have to document the development of their project in a written report.",
    "media": "The following types of media are used:\n- Presentation slides with video clips\n- Interactive sessions\n- Tutorial sheets\n- Lab coding work with NAO robot",
    "literature": "Lecture work sheets\nBehavor-Based Robotics, Arkin 1998. Autonomous Robots, Bekey, 2005.",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHumanoid Robotic Systems (Vorlesung, 4 SWS)\nCheng G [L], Cheng G, Nassour J, Uhde C"
  },
  {
    "module_id": "EI7215",
    "title": "Projektpraktikum Vernetzte und kooperative Systeme",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Bewertung der praktischen Projektarbeit durch regelmäßige Gespräche mit dem zugeordneten\nBetreuer (wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das Vorgehen (50%). Die Studierenden sollen zeigen, dass sie ein grösseres Projekt im Team bearbeiten können. Besondere Herausforderungen sind dabei die Erstellung und Anpassung eines Projektplans und die Ausgestaltung der Teamarbeit zur Realisierung des Projektziels.\n- Bewertung der schriftlichen Ausarbeitungung der Ergebnisse und Dokumentation als Hausarbeit\n(30%). Die Studierenden sollen zeigen, dass sie die erbrachten Ergebnisse strukturiert darstellen können.\n- Bewertung einer 10minütige Präsentation der Ergebnisse und anschließendes 10minütiges\nKolloquium (20%). Die Studierenden sollen zeigen, dass sie mit den Ergebnissen der Arbeit insbesondere in Relation zum Stand der Technik im Detail vertraut sind. Vortragstechniken werden eingeübt.",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen der Regelungs- und Steuerungstechnik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
    "content": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der vernetzten und kooperativen Systeme. Dabei reicht der Fokus von Fragestellungen der vernetzten kooperierenden Multi-Roboter-Systeme, über die Telepräsenzsysteme hin zu kooperierenden Mensch-Roboter-Teams.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage ein konkretes regelungstechnisches Problem im Anwendungskompetenzbereich von vernetzten, verteilten und kooperativ geregelten technischen Systemen eigenständig zu lösen. Das umfasst die Analyse des Problems und die Entwicklung von passenden Lösungsstrategien. Insbesondere sind die Studierenden in der Lage effizient und problemorientiert im Team zu arbeiten. Methodisch können die Studierenden in einer schriftliche Dokumentation ihre Ergebnisse und den Stand der Technik strukturiert darstellen. Im Abschlussvortrag zeigen die Studierenden, dass sie ihre Ergebnisse vor Publikum in verständlicher Form darstellen können.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren im Projektpraktikum, sowie kritisches Auseinandersetzen mit den Ergebnissen in einem Vortrag angestrebt. Jedes Team bearbeitet hierbei eine individuelle fachliche Aufgabenstellung und einen eigenen Betreuer zugeordnet. Der Betreuer hilft den Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt, die Nutzung von Experimentalaufbauten erläutert und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt Als Lehrmethode wird im Projektpraktikum unterstütztes Selbststudium angeboten. Unter fachlicher Anleitung werden im Team von max. 3 Teilnehmern abgeschlossene Projektaufgaben geplant, bearbeitet, dokumentiert und das Ergebnis durch Vortrag und praktische Demonstration vorgestellt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.",
    "literature": "",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Vernetzte und kooperative Systeme (PP-VKS) (Forschungspraktikum, 4 SWS)\nDas N, Hirche S, Sosnowski S, Wang S"
  },
  {
    "module_id": "EI7223",
    "title": "Information Retrieval in High Dimensional Data",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 45,
    "hours_presence": 135,
    "examination_achievements": "",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nEI7223: Information Retrieval in High Dimensional Data | Information Retrieval in High Dimensional Data\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum Information Retrieval in High Dimensional Data (Praktikum, 3 SWS)\nGronauer S, Lengl M\nInformation Retrieval in High Dimensional Data (Vorlesung, 2 SWS)\nKleinsteuber M ( Anwaar M, Khan R )\nInformation Retrieval in High Dimensional Data (Übung, 2 SWS)\nLengl M"
  },
  {
    "module_id": "EI7231",
    "title": "Humanoid Sensors and Actuators",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "(Please see English description)",
    "repetition": "",
    "recommended_prerequisites": "C/C++ Kenntnisse.",
    "content": "Introduction to sensors and actuators on a humanoid robot:\n- Humanoide Sensorik\n- Sensor Prinzipien\n- Signal Aufbereitung\n- Signal Verarbeitung\n- Humanoide Aktuatorik\n- Aktuator Typen\n- Aktuator Implementierung\n- Humanoide Regelung\n- Regler Typen\n- Regler Auslegung",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme am Modul sind die Studierenden in der Lage: EI7231: Humanoid Sensors and Actuators | Humanoid Sensors and Actuators [HSA] A) grundlegende und fortgeschrittene Prinzipien/Funktionsweisen von humanoider Sensorik und Aktorik nach aktuellem Stand der Wissenschaft zu bewerten. B) humanoide Sensorik und Aktorik in der Nutzung, Integration und Implementierung praktisch anzuwenden. C) die erworbenen theoretischen und praktischen Erkenntnisse in einem selbständigen Projekt anzuwenden und neue sensorische/aktuatorische Systeme zu entwickeln.",
    "teaching_methods": "Frontalunterricht und Laborexperimente Der Frontalunterricht dient dem Kompetenzerwerb A) und B) und die Laborexperimente dem Kompetenzerwerb B) und C).",
    "media": "Präsentationsfolien",
    "literature": "Springer Handbook of Robotics, Bruno Siciliano and Oussama Khatib, 2008.\nSensors and Actuators, C.W. de Silva, Taylor & Francis Group, LLC, 2016.",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHumanoide Sensorik und Aktuatorik (Vorlesung mit integrierten Übungen, 4 SWS)\nCheng G [L], Cheng G, Paredes Acuna Y"
  },
  {
    "module_id": "EI7243",
    "title": "Sichere Implementierung kryptographischer Verfahren",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "In der Abschlussklausur ohne Unterlagen weisen Studierende durch die Aufstellung geeigneter Programmstrukturen und das Beantworten von Verständnisfragen nach, dass Sie in der Lage sind, kryptographische Verfahren anzuwenden und den Umgang mit möglichen Angriffsszenarien zu beherrschen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nKryptologie oder gleichwertige Grundlagenvorlesung",
    "content": "Kryptographische Verfahren und die Geheimhaltung der darin verwendeten privaten Schlüssel stellen die Grundlage der Sicherheit sämtlicher digitaler Systeme dar. Gerade deshalb sind diese Elemente das klassische Ziel von Angriffen in der Praxis. Inhalte dieser Modulveranstaltung sind die Grundlagen der Implementierung von kryptographischen Verfahren in eingebetteten Systemen, die typischen Angriffe auf diese Verfahren sowie entsprechende Schutzmaßnahmen. Die Veranstaltung und gliedert sich in folgende Themenblöcke: 1. Einführung: Implementierung kryptographischer Verfahren in eingebetteten Sytemen, Angriffsszenarien, Überblick Physikalische Angriffe, Bewertung der Relevanz 2. Angriffe und Schutzmaßnahmen für symmetrische kryptographische Verfahren: Laufzeitangriffe (Timing Attacks), Stromangriffe (Power Analysis Attacks), Fehlerangriffe (Fault Attacks), Schutzmaßnahmen gegen Angriffe 3. Angriffe und Schutzmaßnahmen für asymmetrische kryptographische Verfahren: : EI7243: Sichere Implementierung kryptographischer Verfahren | Secure Implementation of Cryptographic Algorithms Laufzeitangriffe (Timing Attacks), Stromangriffe (Power Analysis Attacks), Fehlerangriffe (Fault Attacks), Schutzmaßnahmen gegen die Angriffe 4. Spezialthemen: Diskussion aktueller Forschungsergebnisse Zu jedem der Themenblöcke sind Hausaufgaben bzw. praktische Übungen im Labor durchzuführen.",
    "learning_outcomes": "Nach erfolgreichem Abschluß des Moduls sind die Teilnehmer in der Lage kryptographische Verfahren in eingebetteten Systemen zu implementieren. Des Weiteren sind den Studierenden die Grundlagen der Angriffe bekannt, die auf solche Implementierungen in der Praxis typischerweise durchgeführt werden. Außerdem lernen sie die Prinzipen von zahlreichen Schutzmaßnahmen gegen diese Angriffe kennen. Das Wissen der Studierenden beschränkt sich nicht auf die Theorie, sondern wurde durch mehrere praktische Übungen an eigenen Programmbeispielen vertieft.",
    "teaching_methods": "Die im Rahmen der Vorlesung vermittelten Kenntnisse werden durch Hausübungen und praktische Übungen im Labor vertieft. Die praktischen Übungen im Labor werden zusätzlich von einem Tutor betreut.",
    "media": "Folgende Medienformen finden Verwendung:\n- Vorlesung an Tafel und mit Folien\n- Praktische Übungen im Labor",
    "literature": "Folgende Literatur wird empfohlen:\n1. Cetin Kaya Koc, Cryptographic Engineering, Springer Verlag, 2009\n2. Stefan Mangard, Elisabeth Oswald, Thomas Popp: Power Analysis Attacks Revealing the\nSecrets of Smart Cards, Springer Verlag, 2007\n3. Alfred J. Menezes, Paul C. Van Oorschot, Scott A. Vanstone: Handbook of Applied\nCryptography, CRC Press, 1996",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSichere Implementierung kryptographischer Verfahren (Übung, 1 SWS)\nGruber M [L], Brosch M\nSichere Implementierung kryptographischer Verfahren (Vorlesung, 2 SWS)\nGruber M [L], Gammel B ( Brosch M ), Fischer W\nEI7243: Sichere Implementierung kryptographischer Verfahren | Secure Implementation of Cryptographic Algorithms"
  },
  {
    "module_id": "EI72561",
    "title": "Convex Optimization Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 150,
    "hours_presence": 30,
    "examination_achievements": "An oral examination without aids assesses the students' abilities to apply and implement basic and advanced concepts of convex optimization algorithms in the field of information and communication technology. The examination consists of calculations and short questions about the application and implementation of convex optimization algorithms, their characteristics and the considered application scenarios. The successful completion of all programming projects a mandatory for passing the final examination.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Working knowledge about convex optimization theory and algorithms as presented in the Convex\nOptimization course. Working knowledge in fundamentals of technical systems in information and\ncommunication technology. Working knowledge in the programing language MATLAB.",
    "content": "This laboratory provides insights and practical instructions for designing algorithms in the field of systems engineering (examples and application scenarios are mainly from information and communication technology) based on mathematical optimization theory by a series of successive teaching and hands-on units. Each unit includes the understanding and analysis of a typical problem of the addressed application scenarios, its mathematical modeling, and the design and implementation of an adequate solution. Designed algorithms from a previous unit of the laboratory are supposed to be reused. EI72561: Convex Optimization Laboratory | Convex Optimization Laboratory",
    "learning_outcomes": "After successfully passing the module, the students are able to conduct a mathematical modeling of typical optimization problems in the field of information and communication technology by means of a mathematical optimization perspective, and to implement algorithms for the numerical solution of these optimization problems. The students are able to reformulate given optimization problems into prior and dual optimization problems and their related primal reconstruction algorithms. The student will be able to implement gradient and subgradient based optimization methods and to implement respective algorithms for a step size control. The students are also able to apply and to implement the cutting plane method to reformulate convex optimization problems into a series of linear master problems. Finally, the students are able to implement a variety of state-of-the art algorithms, namely the simplex algorithm for linear programs, the gradient descent and the Newton algorithms for convex optimization problems, the Armijo-Goldstein rule for step-size control, and a few basis versions of interior point solvers. The students are further able to apply state-of-the-art general purpose solvers for convex optimization problems.",
    "teaching_methods": "Provided with written instructions for each laboratory unit, the students work out a solution to the given problem at home, that consists of a mathematical model, a solution concept, and the conception and implementation of the algorithm. Forming teams is supported. After the presentation and discussion of the outcomes, the subsequent unit starts. In the final unit of the laboratory, the students deal with a more complex problem of the introduced application scenarios.",
    "media": "Presentations and laboratory instructions.",
    "literature": "W. Utschick and L. Gerdes. Convex Optimization. Lecture Notes, 2017.\nM. S. Bazaara, H. D. Serail, and C. M. Shetty. Nonlinear Programming: Theory and Algorithms.\nWiley, 2006.\nD. Bertsekas and A. Neid. Convex Analysis and Optimization. Athena Scientific, 2003.\nS. Boyd and L. Vandenberghe. Convex Optimization. Cambridge, 2004.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nConvex Optimization Lab (Praktikum, 2 SWS)\nSyed S, Utschick W"
  },
  {
    "module_id": "EI7263",
    "title": "Biologically-Inspired Learning for Humanoid Robots",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Endnote wird durch die Labor-/Übungsaufgaben (40%), die Fachblatt-Präsentationen (20%) und die mündliche Prüfung (40%) bestimmt. Labor-/Übungsaufgaben evaluieren die Fähigkeit der Studierenden, die in der Vorlesung präsentierten Ansätze und Methoden für das Roboter-Lernen zu implementieren und zu testen. Die Implementierung ist in Form von Quellcode, der kompiliert und auf den Robotern getestet wird. Die Studierenden müssen ihre Resultate auf den Robotern zeigen, indem sie spezifische Fähigkeiten der Roboter nachweisen. Dies beinhaltet auch zu zeigen, wie die Roboter jene Fähigkeiten gelernt haben. Fachblatt-Präsentationen überprüfen, ob die Studierenden biologisch inspirierte Methoden und Algorithmen kurz und bündig vermitteln können. Neben der Fähigkeit zusammenzufassen, überprüfen die Präsentationen die Fähigkeit, die vorgeschlagenen Systeme hinsichltich ihrer Vorteile und Nachteile zu evaluieren. Die mündliche Prüfung evaluiert das Verständnis der Studierenden von den biologischen Prinzipien, die für das (Roboter-)Lernen verantwortlich sind. Sie müssen die wichtigsten Lernparadigmen, ihre biologische Grundlagen und ihre technische Realisierung einschließlich ihrer Grenzen bildlich darstellen und erklären können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "C/C++ Programmier-Fähigkeiten",
    "content": "1) Einleitung\n- Motivation\n- Forschung über das menschliche Gehirn\n- Menschliches Gehirn als Inspiration für motorische Steuerung\n2) Lernen\n- Warum müssen Humanoide lernen?\n- Was müssen Humanoide lernen?\n- Lernalgorithmen\n-- Überwachtes Lernen\n-- Unüberwachtes Lernen\n-- Reinforcement-Lernen\n- Lernen durch eigenständige Exploration\n- Lernen durch Demonstration\n3) Das Kleinhirn\n- Fakten\n- Anatomie\n- Neuronale Schaltkreise\n- Auswirkungen von Krankheiten, die das Kleinhirn betreffen\n4) Computermodell des Kleinhirns\n- Assoziativspeicher\n- Cerebellar Model Articulation Controller (CMAC)\n5) Basalganglien\n- Anatomie und Hauptkomponenten\n- Projektionen von und zu anderen Hirnregionen\n- Direkte und indirekte Leitungsbahn\n- Schleifen in den Basalganglien\n6) Reinforcement-Lernen (RL)\n- Eigenschaften\n- Belohnung\n- Agent und Umgebung\n- Hauptkomponenten eines RL Agenten\n- Zeitdifferenz-Lernen\n7) Selbstorganisierende Karten (SOK) 8) Zentraler Mustergenerator (ZMG)\n- Biologischer Ansatz\n- Computermodell\n- Mehrschicht ZMG",
    "learning_outcomes": "Nach diesem Kurs sind die Studierenden in der Lage:\n- Das Roboter-Betriebssystem ROS mit dem NAO Roboter zu benutzen.\n- Die wichtigsten biologischen Mechanismen zu verstehen, die für das Lernen verantwortlich sind.\n- Biologisch inspirierte Algorithmen für sensomotorische Zuordnungen/Funktionen und\nReinforcement-Lernen zu implementieren.",
    "teaching_methods": "Folgende Lehrmethoden werden benutzt:\n- Vorlesungen, die die notwendige Theorie für die Übungen vermitteln.\n- Übungen mit Laboraufgaben, die sicherstellen, dass die wesentlichen Teile der gelehrten Inhalte,\nz.B. Lernalgorithmen, realisiert und auf den Robotern getestet werden.",
    "media": "Es werden die folgenden Medienformen benutzt:\n- Präsentationen\n- Laborübungen\n- NAO humanoide Roboter",
    "literature": "R. S. Sutton and A. G. Barto: \"Reinforcement learning: An introduction\", MIT Press, 1998.",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBiologically-Inspired Learning for Humanoid Robots (Vorlesung mit integrierten Übungen, 4 SWS)\nCheng G [L], Cheng G ( Shen W ), Nassour J, Shen W"
  },
  {
    "module_id": "EI7270",
    "title": "Elektromagnetische Felder in der Biomedizin und in medizinischen Anwendungen der Nanotechnik",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Im Rahmen einer 60 minütigen schriftlichen Prüfung wird\n- anhand von Rechenaufgaben überprüft, ob Studierende die vermittelten Grundgleichungen und\nmathematischen Hilfsmittel zur quantitativen Beschreibung elektrischer und magnetischer Felder adäquat einsetzen können, um die Kenngrößen ausgewählter Medizingeräte zu berechnen und korrekt zu interpretieren\n- anhand von Verständnisfragen evaluiert, ob Studierende die bei der Vorlesung und der\nbegleitenden Übung erläuterten physikalischen Gesetze korrekt anwenden können, um die Funktionsprinzipien, sowie Vorteile und Risiken ausgewählter medizinischer Systeme zu erklären.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine",
    "content": "Die Veranstaltung behandelt elektromagnetische Effekte und Prinzipien in der Physiologie des Körpers und wie sich wiederum der Elektromagnetismus technisch in der Medizin einsetzen lässt. Ziel ist, von Prinzipien und der Theorie bis zur Übertragung dieser in technischen Anwendungen Verständnis bekannter Systeme zu geben. Am Beispiel derartiger Anwendungen soll das Handwerkszeug zur Entwicklung neuer Anwendungen erarbeitet werden. EI7270: Elektromagnetische Felder in der Biomedizin und in medizinischen Anwendungen der Nanotechnik | Electric and Magnetic Fields in Biomedical Sciences and in Medical Applications of Nanotechnology Experimente sollen den Studenten erleichtern, die Zusammenhänge dieses umfassenden Einblickes besser begreifen und insbesondere erinnern zu können. Assoziationen, die aus Vorführungen bestimmter Effekte herrühren und Wirkzusammenhänge eindrucksvoller untermauern als eine ausschließliche Formeldiskussion, sollen im späteren Alltag der Studierenden als Ingenieur(in) sowohl eine bessere Abschätzung der physikalischen Effekte und insbesondere deren relative Stärke/Größenordnung hervorrufen als auch Übertragungen auf andere Einsatzbereiche aufgrund der vielen Äquivalenzen in der Welt der Physik ermöglichen.",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage, physiologische, elektrische und magnetische Größenordnungen einzuschätzen. Sie sind in der Lage, Gefahren durch magnetische und elektrische Felder zu erkennen und zu bewerten. Sie beherrschen das Design von einfachen Messverstärkern für medizinische Zwecke und die Beschreibung physiologischer und biophysikalischer Systeme anhand elektromagnetischer Ersatzschaltbilder.",
    "teaching_methods": "Als Lehrmethode wird in den Vorlesungen Frontalunterricht gehalten, weiterhin wird auch im Seminarstil über bestimmte Themen diskutiert. Zusätzlich werden in den Übungen Aufgaben gerechnet. Außerdem wird den Studenten in einem Hands-On-Seminar die Möglichkeit gegeben, die erlernten Inhalte zu vertiefen.",
    "media": "Folgende Medienformen finden Verwendung:\n- Powerpoint Präsentationen\n- Ergänzende Erläuterungen und Analysen an der Tafel\n- Skript\n- Übungsblätter\n- Kurzfilme",
    "literature": "Folgende Literatur wird empfohlen:\n- H. Siebner, \"Das TMS-Buch\", Springer Verlag\n- J. Malmivuo, \"Bioelectromagnetism\", http://www.bem.fi/book/",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nElektromagnetische Felder in der Biomedizin und in medizinischen Anwendungen der Nanotechnik\n(Vorlesung mit integrierten Übungen, 3 SWS)\nHemmert W [L], Castaneda González C, Croner A, Dahmani C ( Croner A, Weyh T )"
  },
  {
    "module_id": "EI7271",
    "title": "Chip Multicore Processors",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "Die Klausur (schriftlich, 75 Minuten) ist auf die verschiedenen vermittelten Themen abgestimmt. Die Studierenden sollen dabei ihre Kenntnisse in Problemen und Lösungsansätzen für Parallelverarbeitung in Mehrkernprozessoren nachweisen. Das Beantworten von Fragen erfordert teils eigene Formulierungen und die Bearbeitung von vorgegebenen Modellproblemen. Die Abschlussnote basiert ausschließlich auf der Klausur.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlegende Kenntnisse der Computertechnik. Idealerweise Besuch der 'System-on-Chip\nTechnologies'-Vorlesung.",
    "content": "Motivation für Mehrkernprozessoren, Potential und Probleme paralleler Programmausführung, Kategorisierung von Mehrkern-Prozessoren, Gesetz von Amdahl, Speicherhierarchie und - kohärenz, Synchronisation, On-Chip Verbingungsnetzwerke (NoC), Programmiermodelle",
    "learning_outcomes": "Nach Abschluss des Moduls verfügen die Studierenden über grundlegende Kenntnisse zu Problemen und Lösungsansätzen der Parallelverarbeitung auf Mehrkernprozessoren. Die Studenten sind in der Lage, Prozessorarchitekturen und deren Vor-/Nachteile bewerten zu können.",
    "teaching_methods": "Als Lehrmethode wird in der Vorlesung Frontalunterricht, ergänzt durch Gruppendiskussionen, und in der Übung die exemplarische Lösung von Problemstellungen verwendet. Zusätzlich EI7271: Chip Multicore Processors | Chip Multicore Processors [IMP] sollen die Studenten im Selbststudium als Hausaufgaben wiss. Publikationen zum besseren Verständnis der Vorlesung aufbereiten. Eine vertiefende Wissensbildung wird durch anschauliche Fallstudienbetrachtungen in der Vorlesung und insbesondere in der Übung angestrebt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen mit Laptop und Beamer\n- Tafelanschrieb\n- wiss. Publikationen",
    "literature": "John L. Hennessy und David A. Patterson, Computer Architecture - A Quantitative Approach,\nAcademic Press, 4. Edition\nMaurice Herlihy und Nir Shavit, The Art of Multiprocessor Programming, Morgan Kaufmann, 1.\nEdition\nDavid E. Culler, J. P. Singh und Anoop Gupta, Parallel Computer Architecture: A Hardware/\nSoftware Approach, Morgan Kaufmann, 1. Edition",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nChip Multicore Processors (Vorlesung mit integrierten Übungen, 3 SWS)\nLiess M [L], Herkersdorf A, Wild T, Stechele W, Twardzik T"
  },
  {
    "module_id": "EI7303",
    "title": "Advanced Control and Robotics Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Durch die Aufteilung in acht Versuche zu unterschiedlichen Themen des Reglerentwurfs, der Regelkreisanalyse und verschiedener Regelstrecken werden acht Laborleistungen erbracht. Jede Laborleistung enthält die folgenden Prüfungselemente:\n• Bewertung der Vorbereitung: Hausaufgabe und Gespräche vor Ort über die Vorbereitung vor\nBeginn jedes Versuchs in Kleingruppen, ca. 10 Minuten pro Teilnehmenden. Es wird bewertet, wie vollständig und in welcher Tiefe die Studierenden den Versuchsaufbau und die verwendeten Reglerentwurfsmethoden und Regleranalyseverfahren verstanden haben. (50%)\n• Bewertung der Durchführung: kurzes Protokoll über die Durchführung und abschliessendes\nGespräch in Kleingruppen, ca. 10 Minuten pro Teilnehmenden. Es wird bewertet, wie gut die Studierenden ihr theoretisches Wissen in die Praxis übertragen können und wie reflektiert die Schlussfolgerungen aus der Versuchsdurchführung sind. (50%)",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen der linearen und nichtlinearen Regelungstechnik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nEI7303: Advanced Control and Robotics Lab | Advanced Control and Robotics Lab [P-ACRL]\nRegelungssysteme 1\n(Dynamische Systeme)",
    "content": "Das Praktikum umfasst Versuche zu folgenden Themenschwerpunkten: Phase-locked loop, Feedback-Linearisierung, Schaltende Regler, Robuste Regelung, Analyse hybrider Regelsysteme, Sliding Mode Regler, Impedanzregelung für Telepräsenzsysteme, Beobachterentwurf und LQ Regelung",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage für unterschiedliche, praxisnahe steuerungs- und regelungstechnische Problemstellungen systematisch einen über Standard-Ansätze hinausgehenden, modernen Regler zu wählen, diesen auf einem realen Versuchsaufbau anzuwenden und das Ergebnis kritisch zu bewerten.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren sowie durch kritisches Auseinandersetzen mit den Ergebnissen im entsprechenden Versuchsprotokoll angestrebt. Als Lehrmethode werden folgende Elemente eingesetzt\n- selbstständige, gründliche Einarbeitung in die Thematik zu Hause. Dabei werden sowohl\nbekannte Resultate aus vorangegangenen Modulen wiederholt als auch weiterführende Ergebnisse eingeführt, die selbstständig erarbeitet werden müssen.\n- weitestgehende selbstständige Durchführung von Versuchen (falls notwendig Unterstützung\ndurch einen Betreuer)\n- Dokumentation, Diskussion und kritische Bewertung der Ergebnisse mit Unterstützung des\nBetreuers",
    "media": "Folgende Medienformen finden Verwendung:\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten. Diese können auch zur\nVorbereitung auf die Veranstaltung genutzt werden.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.\n- Zu dem Praktikum wird ein Skript zur Verfügung gestellt, welches eine Einführung in die\neinzelnen Versuche gibt.",
    "literature": "",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nEI7303: Advanced Control and Robotics Lab | Advanced Control and Robotics Lab [P-ACRL]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Control and Robotics Lab (Praktikum, 4 SWS)\nBeger S, Benciolini T, Brüdigam J, Buss M, Chen Y, Evangelisti G, Hirche S, Leibold M, Sosnowski\nS"
  },
  {
    "module_id": "EI7331",
    "title": "Entwicklung von Integrierten Schaltungen",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Die Modulprüfung ist schriftlich (60 min) ohne Unterlagen. Die Teilnehmer beantworten Verständnisfragen zu Methoden und Werkzeugen für die Entwicklung integrierter Schaltungen, einschließlich einem Fragenblock zum Literaturstudium. Als Prüfungsleistung soll ein vertieftes Verständnis für die Leistungsfähigkeit und die Beschränkungen dieser Methoden und Werkzeuge, sowie die Kompetenz zur kritischen Reflektion bezüglich deren Einsatz nachgewiesen werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der integrierten Schaltungstechnik, z.B. aus dem Modul \"Digitaltechnik\"",
    "content": "Folgende Themen werden behandelt: Abstraktionsebenen beim Entwurf integrierter Schaltungen, Leistungsfähigkeit und Grenzen der Simulation und der einzelnen Werkzeuge, Leistungsfähigkeit und Grenzen verschiedener Testmethoden, Technisch-organisatorische Aufgaben eines Projektleiters bei der ASIC-Entwicklung, Umsetzen der weltweit wichtigsten Qualitätssicherungs- Vorschriften (ISO 9000) bei der ASIC-Entwicklung.",
    "learning_outcomes": "Die Teilnehmer sollen nach der Veranstaltung Methoden und Werkzeuge für die Entwicklung Integrierter Schaltungen analysieren und bewerten können. Dies schließt technische, organisatorische und wirtschaftliche Themen ein, mit denen ein zukünftiger VLSI- Entwicklungsingenieur konfrontiert wird. EI7331: Entwicklung von Integrierten Schaltungen | Design of Integrated Circuits",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch anschauliche Fallstudienbetrachtungen angestrebt. Als Lehrmethode wird in der Vorlesung Frontalunterricht, ergänzt durch Gruppendiskussionen, verwendet. Eigenstudium des ausgeteilten Materials. In der Vorlesung werden Publikationen zu den prüfungsrelevanten Fallstudien ausgegeben, die von den Studierenden selbständig analysiert werden.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen mit Laptop und Beamer\n- Tafelanschrieb\n- Skript, gedruckt von der Fachschaft und online über e-learning verfügbar\n- Literatur (wird in der Vorlesung verteilt)",
    "literature": "Folgende Literatur wird empfohlen:\n- Reifschneider: \"\"CAE-gestützte IC-Entwurfsmethoden\"\", Prentice Hall\n- Weste, Harris: \"\"CMOS VLSI Design, A Circuits and Systems Perspective\"\", Addison Wesley",
    "lv_sws_lecturer": "Stechele, Walter; Apl. Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEntwicklung von Integrierten Schaltungen (Vorlesung, 2 SWS)\nStechele W"
  },
  {
    "module_id": "EI7341",
    "title": "Image and Video Compression",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Knowledge-based learning results are examined during a first written exam with 60 minutes duration after about half the lecture period and a second written (final) exam with 90 minutes duration. For the first exam, participants need to be able to apply the discussed concepts for the lossless and lossy compression of random processes and in particular pictures. In the final exam, students need to show that they can design efficient algorithms and solve related problems for lossless and lossy compression of both still images and video. The final grade is composed of the following elements:\n- 30 % first exam\n- 70 % final exam",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Linear Algebra, Digital Signal Processing, Information Theory, Analog and Digital Video Signals\nThe following modules should be passed before taking the course:\n- Information Theory and Source Coding\nIt is recommended to take the following modules additionally:\n- Image and Video Compression Lab\nEI7341: Image and Video Compression | Image and Video Compression",
    "content": "Theory and practice of digital still image and video compression. Detailed treatment of fundamental concepts and explanation of the relationship to specific algorithms employed in existing and emerging compression standards. Content: Motivation for image and video compression, review of important concepts from Information Theory, scalar and vector quantization, human visual perception, transform coding, resolution pyramids and subband coding, still image compression standards (JPEG, JPEG 2000), interframe coding, differential PCM, motion compensated prediction, video compression standards (H.26x, MPEG x).",
    "learning_outcomes": "At the end of the module students are able to apply selected concepts from information theory to video coding. The participants are able to derive the main fundamental bounds of both lossless and lossy compression. The students also gain a deep understanding of modern still image and video compression standards and are able to judge why particular techniques and algorithms are used in theses standards. They are able to evaluate the performace of a proposed image and video compression schemes and predict its complexity.",
    "teaching_methods": "Lerning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons in exercises and tutorials. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions as download",
    "literature": "The following literature is recommended:\n- D.S. Taubman, M.W. Marcellin, JPEG2000-Image Compression Fundamentals, Standards, and\nPractice, Kluwer Academic Publishers, 2002.\n- Y. Wang, J. Osterman, Y. Zhang, Video Processing and Communications, Prentice-Hall, 2002.",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nImage and Video Compression (Vorlesung mit integrierten Übungen, 4 SWS)\nSteinbach E, Chaudhari R\nEI7341: Image and Video Compression | Image and Video Compression"
  },
  {
    "module_id": "EI73441",
    "title": "Informationstheoretische Grundlagen der Informationsforensik und biometrischen Sicherheit",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Beurteilung erfolgt am Semesterende durch eine mündliche Einzelprüfung bei der keine Hilfsmittel zugelassen sind. Bei hoher Teilnehmerzahl erfolgt die Beurteilung durch eine 60 minütige schriftliche Klausur. Die Prüfung soll feststellen inwiefern die Studierenden die in der Vorlesung und Übung eingeführten Quellenmodelle kennen, und die darauf basierenden Konzepte zur Messung der Sicherheit und zum Schutz der biometrischen Identität erklären können. Des weiteren sollten die Studierenden die wichtigsten Attacken und entsprechende Schutzmechanismen erklären können. In der Prüfung wird erwartet, das die Studierenden Beweisskizzen zu einzelnen Aussagen angeben können.",
    "repetition": "Folgesemester / Semesterende",
    "recommended_prerequisites": "Voraussetzungen:\n- Grundlagen der Nachrichtentechnik und Informationstheorie\n- Grundlagen der Wahrscheinlichkeitstheorie\n- Mathematisches Interesse\nEs wird empfohlen folgende Fächer zuvor abgelegt zu haben:\n- Nachrichtentechnik\n- Information Theorie\nEI73441: Informationstheoretische Grundlagen der Informationsforensik und biometrischen Sicherheit | Information\nTheoretic Foundations of Information Forensics and Biometrics Security\n- Mathematik 1-4",
    "content": "Die Vorlesung gibt eine Einführung in die informationstheoretischen Methoden der Informationsforensik und der biometrischen Sicherheit. Es werden grundlegend informationstheoretische Quellenmodelle eingeführt. Diese Modelle erlauben es Konzepte zur Messung der Sicherheit und zum Schutz der biometrischen Identität einzuführen. Es werden weiterhin unterschiedliche Attacken auf biometrische Sicherheitssysteme eingeführt und Schutzmechanismen diskutiert.",
    "learning_outcomes": "Am Ende der Vorlesung kennen die Studenten die wichtigsten Modelle und Analysemethoden zur Informationsforensik und biometrischen Sicherheit. Sie haben wichtige Basisprotokolle für diese Anwendungen kennengelernt. Sie kennen die Beweise zur Charakterisierung der erreichbaren Sicherheitsrate. Sie haben Techniken zum Schutz der biometrischen Identität kennen gelernt und können entsprechende Beweise hierfür entwickeln.",
    "teaching_methods": "Entwicklung und Präsentation der Vorlesungsinhalte an der Tafel. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispiele in der Übung.",
    "media": "Die Inhalte werden präsentiert mittels:\n- Präsentation an der Tafel,\n- Vorlesungsskript,\n- Übungsblätter",
    "literature": "I. Csiszár and J. Körner, \"Information Theory: Coding Theorems for Discrete Memoryless\nSystems\", 2nd edition, Cambridge University Press",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nInformationstheoretische Grundlagen der Informationsforensik und biometrischen Sicherheit\n(Vorlesung mit integrierten Übungen, 4 SWS)\nGrigorescu Vlass A [L], Boche H, Grigorescu Vlass A"
  },
  {
    "module_id": "EI73451",
    "title": "Informationstheoretische Sicherheit",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Im Rahmen einer 60 minütigen schriftlichen Klausur wird durch geeignete Fragestellungen überprüft, ob die Studierenden ohne Hilfsmittel die wesentlichen Eigenschaften von Modellen und Konzepten der informationstheoretischen Sicherheit und kryptographische Verfahren abrufen können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Voraussetzungen:\n- Grundlagen der Nachrichtentechnik und Informationstheorie\n- Grundlagen der Wahrscheinlichkeitstheorie\n- Mathematisches Interesse",
    "content": "Die Vorlesung gibt eine Einführung in das Gebiet der informationstheoretischen Sicherheit. Dazu werden neue Konzepte zur Modellierung von Sicherheit entwickelt, es werden die Grenzen von kryptografischen Verfahren diskutiert, es werden Kanalmodelle für eine sichere Kommunikation in Netzen entwickelt, es werden Modelle über mögliche Attacken von Abhörern eingeführt, und es werden Übertragungsverfahren, die beweisbar die Sicherheit garantieren, entwickelt. Für einfache Kommunikationssysteme werden Ansätze dargestellt, wie sichere Kommunikation in einen Netzwerk eingebettet werden kann. EI73451: Informationstheoretische Sicherheit | Information Theoretic Security",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls kennen die Studierenden die wichtigsten Modelle und Konzepte der informationstheoretischen Sicherheit, und sie können die Grenzen und Möglichkeiten der wichstigsten kryptografischen Verfahren beurteilen und abschätzen. Die Studierenden haben ein Verständnis für kooperative Techniken in drahtlosen Mehrnutzersystemen entwickelt, sie sind in der Lage einen aktuellen wissenschaftlichen Beitrag zu verstehen und zu analysieren, und sie können dazu einen wissenschaftlichen Vortrag halten.",
    "teaching_methods": "Entwicklung und Präsentation der Vorlesungsinhalte an der Tafel. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispiele in der Übung.",
    "media": "Die Inhalte werden präsentiert mittels:\n- Präsentation an der Tafel,\n- Vorlesungsskript,\n- Übungsblätter",
    "literature": "M. Bloch, J. Barros - \"Physical-Layer Security: From Information Theory to Security Engineering\",\nCambrigde University Press 2011",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nInformationstheoretische Sicherheit (Vorlesung mit integrierten Übungen, 5 SWS)\nGrigorescu Vlass A [L], Boche H, Grigorescu Vlass A"
  },
  {
    "module_id": "EI7352",
    "title": "Multimedia Communications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The ability to recall the specific properties of multimedia communication principles and their deployment are examined during a written exam with 90 minutes duration. Individual problem solving and programming capabilities are examined via programming assignments during the semester. In addition, students have to read 1-4 scientific papers per chapter of the lecture during the semester. The final grade is composed of the following elements:\n- 70% final exam\n- 30% programming assignments (3 graded programming assignments)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Communication networks, Internet Protocols, Media Technology\nThe following modules should be passed before taking the course:\n- Communication Networks\nIt is recommended to take the following modules additionally:\n- Image and Video Compression",
    "content": "The lecture discusses basics and applications of multimedia networking and communication. The main focus of the lecture is on characterizing the requirements multimedia applications have and the support that networks can provide to meet these requirements: Network and Application EI7352: Multimedia Communications | Multimedia Communications Quality-of-Service, Example: Streaming Media over VBR Channels, Example: Voice over IP (VoIP), IP QoS Parameter, Measuring QoS, Packet Dispersion Techniques, Multimedia Data Transport, TCP/IP, UDP, RTP, RTSP, Packet Loss Detection, QoS Architectures, Traffic Specification, Resource Allocation, Scheduling, Subjective and Objective Quality Assessment, Content Delivery Networks, Peer-to-Peer Media Delivery.",
    "learning_outcomes": "At the end of the module students are able to understand the basics concepts of multimedia communications. They will be able to judge if specific applications can be deployed on specific networks. The students also gain a deep understanding of how to close the gap between application requirements and network support.",
    "teaching_methods": "Lerning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons in exercises and tutorials. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way. The students are expected to read 1-4 scientific articles for every chapter of the lecture to train and improve their scientific reading skills.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions as download\n- Programming assignments (introductory material)",
    "literature": "The following literature is recommended:\n- P. Chou and M. van der Schaar (eds.), Multimedia Networking and Communication, Elsevier. April\n2007.\n- Fred Halsall, Multimedia Communications: Applications, Networks, Protocols, and Standards,\nAddison-Wesley, 2001, ISBN-0-201-39818-4",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEI7352: Multimedia Communications | Multimedia Communications"
  },
  {
    "module_id": "EI7353",
    "title": "Multi-User Information Theory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "By answering questions during a written exam (90 min) the students proof their ability to recall the theory behind multi-user information systems.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Recommendations:\n- Basic Course on Information Theory\n- Basic Knowledge in Discrete Probability",
    "content": "General Description: Fundamental Concepts of Multi-User Information Theory Topics: Review of Typical Sequences and Sets; Review of Capacity-Cost; Rate-Distortion Theory; Distributed Source Coding; Lossy Source Coding with Side Information; Coding for Channels with State; Broadcast Channels; Multiaccess Channels; Interference Channels; Network Flow; Network Coding; Relay Channels; Memoryless Networks; Digital Network Coding; Multiaccess Channels with Generalized Feedback",
    "learning_outcomes": "After completion of the module students are able to comprehend adanced topics in information theory;\n- Students will understand how multi-user information theory applies to modern communcations\nsystems, especially wireless systems. They developed an appreciation for optimal strategies, EI7353: Multi-User Information Theory | Multi-User Information Theory as well as for limitations of the existing theory based on idealistic assumptions. Based on the gained knowledge, the student will be able to apply, analyze, evaluate, and create new network communication methods.",
    "teaching_methods": "Lerning method: In addition to the students' personal study, additional knowledge is acquired by lab exercises which are supported by tutor hours. Teaching method: During the lectures students are instructed in a teacher-centered style. The lecture is supported by lab exercises to gain hands-on experience with selected problems.",
    "media": "The following media will be used:\n- Presentations\n- Downloadable exercises with solutions",
    "literature": "The following literature is recommended:\n- G. Kramer: \"\"Topics in Multi-User Information Theory\"\", Foundations and Trends in Networking,\n2008",
    "lv_sws_lecturer": "Kramer, Gerhard\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMulti-user Information Theory (Vorlesung mit integrierten Übungen, 4 SWS)\nKramer G ( Zaniboni L ), Deppe C ( Han Y, Mahvari Habibabadi M ), Straßhofer A"
  },
  {
    "module_id": "EI7356",
    "title": "Network Planning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The type of examination is adapted to the different learning outcomes: Knowledge-based learning results are examined during a written exam with 60 minutes duration. During the semester an optional mid term exam will be offered, which can be used to improve the final grade. The final grade is composed of the following elements:\n- 100% final exam\nIf the mid term exam is passed, this leads to an improvement of the overall grade by a bonus of 0,3. The mid term exam evaluates the students knowledge of the lecture content, reading additional scientific articles and pratical experience with a network planning tool.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic Knowledge of Communication Networks\nThe knowledge of the following modules is strongly recommended for this course:\n- Broadband Communication Networks",
    "content": "Introduction: Motivation, Range of Tasks, Application Areas, Classification, Planning Process, Traffic Engineering EI7356: Network Planning | Network Planning Related Optimization Fundamentals: Mathematical Formulation, Categories, Solution Methods (principles of exact and heuristic methods) Traffic and Demand Modeling: Traffic Types, Modeling, Forecasting Network Topology Design: Initial Planning, Extension Planning, Site Selection Network Dimensioning: Approaches for Circuit and Packet Switched Networks, Optimization Problems, Representative Heuristics Resilience Planning: Redundancy Concepts, Disjointness, Resource Sharing Generalizations: Multilayer Planning, Multiperiod Planning Access Networks Planning: Overview, Selected Problems Mobile Networks Planning: Overview (delineation with Resource Management in Wireless Networks course) Post-Planning Analysis: Network Simulation, Availability Analysis In Practice: Network Planning Tools, Economics Aspects",
    "learning_outcomes": "With this module, students gain a detailed knowledge of methods for planning of communication networks and the skills to apply and analyse them. Students will be able to practically create models and solve planning problems.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students further knowledge is gained by own lab experiments and reading of books and articles. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are a mixture of question-based exercises and lab experiments. Interaction between students and teacher is steadily performed. The students are guided to solve problems independently using a computer based network planning tool.",
    "media": "The following kinds of media are used:\n- Presentations: slides, software usage\n- Exercises and solutions and slides as download\n- Whiteboard\n- Computer-based network planning tool",
    "literature": "The following literature is recommended:\n- W: D. Grover, Mesh-based Survivable Networks,\"\" Prentice Hall, 2003.\n- M. Pioro and D. Medhi, \"\"Routing, Flow, and Capacity Design in Communication and Computer\nNetworks,\"\" Morgan Kaufmann, 2004.\nEI7356: Network Planning | Network Planning",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNetwork Planning (Vorlesung mit integrierten Übungen, 3 SWS)\nSchupke D"
  },
  {
    "module_id": "EI73751",
    "title": "Quantum Nanoelectronics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In an oral examination (25 minutes) students prove their understanding of nanoelectronics for information technology. By answering questions and performing calculations they show their ability to anlyze quantum mechanical effects on devices.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "No prerequisites",
    "content": "The influence of quantum mechanics on electronics, nanoelectronics and information theory, early quantum theory of radiation, Planck s radiation law, the photoelectric effect, spontaneous and induced emission, quantum properties of matter, the matter wave, the Schrödinger equation, the observability of physical quantities, expectation values of observables, eigenfunctions and eigenvalues of operators, stationary states, particle in square well potential, the one-dimensional harmonic oscillator, the hydrogen Atom, atoms, molecules, solids, nanostructures, the Hilbert space representation of states and observables, Dirac vectors, dynamics of quantum systems, the Schrödinger Representation, the Heisenberg representation, the Interaction representation, algebraic treatment of the harmonic oscillator, quantum information theory, the Einstein Podolsky Rosen experiment, entangled states, the quantization of the electromagnetic field, quantum theory of electric circuits, coherent states, interaction of radiation and matter, emission and absorption of radiation, the natural line width of an atom, quantum statistics, the density operator, the coherent state and the Poisson distribution, signal and noise, the characteristic function, photon field coupled to a reservoir of a two-level atom, laser theory, superconductivity, the Josephson effect, quantization of the JC circuit, quantum computing, basic operations in quantum computing, the no- cloning theorem, quantum teleportation EI73751: Quantum Nanoelectronics | Quantum Nanoelectronics",
    "learning_outcomes": "At the end of the module students are able to analyse effects of quantum mechananics in quantum nanoelectronics. They understand the relevance of nanoelectronics in information theory and information technology.",
    "teaching_methods": "Lerning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons in exercises and tutorials. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions as download",
    "literature": "The following literature is recommended:\n- Additional reading material, class notes and useful web sources will be provided to the students\nby a sharepoint system",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nQuantum Nanoelectronics (Vorlesung mit integrierten Übungen, 4 SWS)\nJirauschek C, Haider M, Russer J, Yuan Y"
  },
  {
    "module_id": "EI7384",
    "title": "System-on-Chip Technologies",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "The module exam is a written exam (75 min). Students demonstrate that they have gained both fundamental and deeper understanding in various aspects of System on Chip Technologies and their analysis, from combinatorial logic to complete Embedded Systems. They have to answer the questions with self-formulated responses, checking boxes of multiple choice questions, sketch circuit or qualitative performance diagrams and do quantitative calculations. The allowed support material is constraint to a single sheet, individually prepared reminder notice.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Bachelor courses on semiconductor devices and digital circuits, basics in computer architecture",
    "content": "This course provides basics, current trends and challenges in the development of digital system- on-chip (SoC). We start with the main steps for building arbitrary CMOS-based combinatorial logic and sequential digital data processing and control circuitry (e.g. Finite State Machines) and explaining their role and significance in the scope of key system-on-chip components: microprocessors, memories and interconnects. The microarchitectural structure and building blocks of processor elements (RISC cores), on-/off-chip memory technology (SRAM, DRAM, Flash), bus and point-to-point interconnect standards (Processor Local Bus, Advanced Microcontroller Bus Architecture, FIFO) as well as the design of communications specific arithmetic blocks (adder, multipliers, shift and comparators) will be introduced and analyzed. Finally, we will introduce main implementation methods for SoCs, such as FPGA, standard cell and full custom design, and discuss methods for low power design, which is vital for the development of SoCs in embedded systems. EI7384: System-on-Chip Technologies | System-on-Chip Technologies",
    "learning_outcomes": "At the end of the module students are able to analyze and evaluate the structure and operation of systems-on-chip, including its main building blocks, e.g. processor, on-/off-chip memories, and interconnect, as well as implementation methods and techniques for low power consumption.",
    "teaching_methods": "Lecture material is accompanied by corresponding tutorials. Students will analyze technical publications (as distributed during the course) like data-sheets as representation of building blocks and for usage in own developments of building blocks during the tutorials.",
    "media": "- Presentations\n- Lecture notes\n- Exercises with solutions as download\n- Publications (distributed during the course)",
    "literature": "- J. Hennessy, \"Computer Architecture. A Quantitative Approach\", Elsevier\n- J. Rabaey, \"Digital Integrated Circuits\", Prentice Hall\n- N. Weste, K. Eshraghian, \"\"Principles of CMOS VLSI Design\"\", Addison Wesley",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSystem-on-Chip Technologies (Vorlesung mit integrierten Übungen, 3 SWS)\nSurhonne A [L], Herkersdorf A, Wild T, Biersack F, Stechele W"
  },
  {
    "module_id": "EI73871",
    "title": "Technische Akustik und Lärmbekämpfung",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "In einer 90-minütigen schriftlichen Prüfung wird grundlegendes Wissen und Verständnis der Vorlesungsinhalte der technischen Akustik geprüft. Die Prüfung besteht aus mehreren Fragen, von denen eine das Ankreuzen von Mehrfachantworten beinhaltet, während andere akustische Rechnungen mit Praxisbezug und vor theoretischem Hintergrund beinhalten. Die Fragen prüfen das Verständnis der grundlegenden akustischen Zusammenhänge und die Fähigkeit zur Gestaltung von Lärmabwehrmassnahmen und schließen die Reproduktion von erlangtem Wissen mit ein. Für die Prüfung wird eine vorgegebene Formelsammlung mit grundlegenden Formeln bereit gestellt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlegende Ingeniersmathematik, Grundlagen der Schallausbreitung aus der Vorlesung\nAudiokommunikation erwünscht.",
    "content": "Einführung: Akustik und Lärmbekämpfung, Prinzipien der Lärmminderung, Schallfeldgrößen, Pegelrechnung. Entstehung und Ausbreitung von Schallen: Einfache Schwinger, Resonatoren, Wellenarten. Punktstrahler, geometrische Akustik, Absorption, Schallfeldern in Räumen: Raummoden, statistische Raumakustik, Nachhallzeit, Simulationsmethoden, Perzeptive Aspekte in Räumen. Luftschalldämmung, Körperschalldämmung. Schallmesstechnik und Schallwirkungen: Messmikrofone, Bewertete Schallpegel (A, C, D), Zeitkonstanten (I, F, S), äquivalenter Dauerschallpegel, Leq. Schallanalyse mit absolut und relativ konstanter Bandbreite, Drehklang. Terzpegelanalyse, Einfügungsdämm-Maß, EI73871: Technische Akustik und Lärmbekämpfung | Technical Acoustics and Noise Abatement [TAL] Berechnungsverfahren. Lautstärke, Lautheit, Lästigkeit, Psychoakustische Lästigkeit, speech interference level (SIL), Hörschwellenverschiebung (TTS), permanenter Hörverlust (PTS). Schallabwehr, Vorschriften und Normen: Arbeitslärm, Maschinenlärm, Gewerbelärm (TA Lärm), Straßenlärm, Schienenlärm, Fluglärm. Praktische Einführung in akustische Messungen: Anwendbare Normen, Nutzung von Messgeräten, Durchführung von Messungen im reflexionsarmen Raum, Analyse der Messungen, Erstellen eines Messberichts.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, das erworbene Verständnis von akustischen Grundlagen auf Geräuschprobleme anzuwenden, diese zu analysieren und Vorschläge zur Lösung der Geräuschprobleme zu entwickeln. Dafür lernen die Studierenden einfache akustische Messungen selbständig durchzuführen und die Ausbreitung von Schallen und Schalldämm-Maßnahmen zu berechnen. Weiterhin lernen Studierende Lärmschutzsituationen hinsichtlich wichtiger Normen, Messvorschriften und Grenzwerte der Technischen Akustik zu bewerten.",
    "teaching_methods": "Vorlesung mit vielen Demonstrationen, Übung für das Rechnen der Schallausbreitung von Schallquellen (entfernungsabhängige Richtcharakteristiken), der Schallausbreitung in Räumen, sowie der Berechnung von Schalldämmmaßnahmen und Resonatoren; eigenständige, betreute akustische Messungen im reflexionsarmen Raum; Selbststudium von Grundlagen, Normen, mathematischen Methoden und multimedialen Inhalten (u.a. Videotutorials).",
    "media": "Experimentalvorlesung mit umfangreichen Demonstrationen, Anschrift auf Laptop, Material-\nund Formelsammlung (Moodle), multimediale Darbietung von weiterführender Information,\nErläuterungen an Fallbeispielen, Übung mit praktischen Anwendungsfällen und Lösungen;\npraktische Einführung in akustische Messungen im reflexionsarmen Raum.",
    "literature": "M. Möser: Technische Akustik, 10. Aufl. Springer, 2015.\nG. Müller, M. Möser (Hrsg.): Taschenbuch der Technischen Akustik, 3. Auflage, Springer, 2004.",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTechnische Akustik und Lärmbekämpfung (Vorlesung, 4 SWS)\nBischof N, Seeber B"
  },
  {
    "module_id": "EI7391",
    "title": "Vernetzte Regelungssysteme",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote wird zu 100% durch die schriftliche Abschlussklausur (90 min) bestimmt. In der Klausur wird überprüft, ob die Studierenden auch unter Zeitdruck in der Lage sind die gelernten und eingeübten Methoden auf neue Probleme anzuwenden. Dies wird durch Aufgabenrechnen überprüft. Zusätzlich wird in Kurzfragen geprüft, ob ein vertieftes Verständnis der Methoden erlangt wurde.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Regelungstechnik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
    "content": "Einführung in vernetzte Regelungssysteme (NCS): Regelung von Multi-Agentensystemen, kooperative Regelung, Konsensus, Synchronisation, Methoden der Regelung und Optimierung in verteilten dynamischen Systemen, Stabilisierung und optimale Regelung, Regelung über Kommunikationsnetze, regelungstechnische Modellierung von Kommunikationsprotokollen, Stabilität bei Totzeit, Paketverlust, Kommunikationsbeschränkungen, Regelungsentwurf für determininistische/stochastische Kommunikationskanäle, Anwendung in Infrastruktursystemen, Robotik, vernetzten eingebetteten Systemen. EI7391: Vernetzte Regelungssysteme | Networked Control Systems [NCS]",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, vernetzte Regelungssysteme zu modellieren und deren Verhalten zu analysieren. Die Studierenden erhalten ein vertieftes Verständnis ueber das Verhalten von vernetzten Regelungssystemen und deren Analyse. Desweiteren, werden Kompetenzen im Bereich der Synthese von verteilten Regelungen vernetzter dynamischer Systeme vermittelt.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen und Tutorübungen angestrebt. Als Lehrmethode wird in der Vorlesungen Frontalunterricht, in den Übungen Arbeitsunterricht (Aufgaben rechnen) gehalten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Arbeitsblättersammlung zur Vorlesung\n- Übungsaufgaben mit Lösungen",
    "literature": "Arbeitsblättersammlung zur Vorlesung\nD. Hristu-Varsakelis et al.: Handbook of Networked and Embedded Control Systems, Birkhäuser,\n2004.",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nVernetzte Regelungssysteme (Vorlesung mit integrierten Übungen, 4 SWS)\nDai X, Hirche S, Zhang D"
  },
  {
    "module_id": "EI7402",
    "title": "SystemC Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Bewertung erfolgt anhand einer semesterbegleitenden Übungsleistung und einer Klausur am Ende des Semesters: Während des Semesters wird die Fähigkeit zur Erstellung und Simulation von System- Level Modellen in der Beschreibungssprache SystemC anhand vorgegebener Aufgaben aus dem Bereich der Datenkommunikation (IP packet processing) geprüft. Es handelt sich um zwei Übungsaufgaben aus dem genannten Anwendungsgebiet, die den direkten Transfer von Konzepten der SystemC Modellierung zum praktischen Einsatz im genannten Anwendungsgebiet erfordern. Die Übungsaufgaben fokussieren nur konkrete Teilaspekte der möglichen Anwendungsfelder und damit der vermittelten Methoden (z.B. Kommunikation auf unterschiedlichen Abstraktionsebenen bzw. Architekturexploration mittels TLM Modellen). In einer abschließenden schriftlichen 60 minütigen Klausur wird das umfassende theoretische und methodische Verständnis zur Systemmodellierung in SystemC sowie die Fähigkeit zur problembezogenen Anwendung in einer vorgegebenen Modellierungsaufgabe geprüft. Der Nachweis über diese umfassenden Kompetenzen ist wichtig, wenn sich Studierende im weiteren Verlauf des Studiums der Entwicklung komplexer elektronischer Systeme, die sowohl Hardware- als auch Softwarekomponenten umfassen, widmen. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 60% Note der Abschlussklausur\n- 40% Note der zwei Übungsaufgaben",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Programmierkenntnisse in C++ (oder zumindest C)\nEI7402: SystemC Laboratory | SystemC Laboratory [SYSC]",
    "content": "Das SystemC Praktikum bietet eine Einführung in die System-Level Beschreibungssprache SystemC, mit der digitale Systeme aus Hard- und Softwarekomponenten modelliert und simuliert werden können. Die folgenden Hauptaspekte werden behandelt: Motivation für SystemC, Einsatz im Entwurfsablauf, Anwendung auf unterschiedlichen Abstraktionsebenen, Sprachelemente von SystemC. Ein besonderer Schwerpunkt liegt auf der Modellierung auf der Transaktions-Ebene (TLM, transaction level modeling). Als Anwendungsbeispiel wird eine Applikation aus dem Bereich der Datenkommunikation (IP packet processing) auf einer HW/SW Plattform exploriert, um die Möglichkeiten und den praktischen Einsatz von SystemC zu zeigen. Die einzelnen Teilaufgaben werden von den Teilnehmern selbständig an Linux-Rechnern gelöst, auf denen frei verfügbare Tools zum Einsatz kommen.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls kennt der Studierende die Grundkonzepte der System-level Beschreibungssprache SystemC und ist in der Lage, entsprechende Modelle zu erstellen, zu simulieren und damit unterschiedliche Architekturkonzepte zu bewerten.",
    "teaching_methods": "Als Lehrmethode werden zu Beginn der Veranstaltung die theoretischen Grundlagen in mehreren Einführungsvorlesungen dargestellt. Die Praktikumsaufgaben werden von den einzelnen Teilnehmern selbständig bei freier Zeiteinteilung anhand der Aufgabenbeschreibung gelöst. Begleitend hierzu werden Tutorstunden angeboten, in denen den Teilnehmern Hilfestellung zur Durchführung der Aufgaben angeboten wird.",
    "media": "Folgende Medienformen finden Verwendung und sind auch online verfügbar:\n- Präsentationen\n- Praktikumsanleitung mit Beschreibung der zu modellierenden Funktionalitäten",
    "literature": "Folgende Literatur wird empfohlen / Recommended reading:\n- T. Grötker, et. al., \"System Design with SystemC\", Kluwer\n- D.C. Black, \"SystemC: From the Ground Up\", Springer",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSystemC Laboratory (Praktikum, 4 SWS)\nZyla K [L], Herkersdorf A, Wild T, Stechele W\nSystemC Laboratory (Praktikum, 4 SWS)\nZyla K [L], Herkersdorf A, Wild T, Stechele W, Maurer F, Biersack F, Twardzik T\nEI7402: SystemC Laboratory | SystemC Laboratory [SYSC]"
  },
  {
    "module_id": "EI7403",
    "title": "VHDL System Design Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Examination with the following elements: * Written examination, 60 min (40%) * project (60%) During an oral exam students dicuss with the examiner about their analysis of a given System-on- Chip or embedded systems scenario. Capabilities of designing a System on Chip are examined by a project consisting of design tasks on the System components and the system composition using a hardware description language. The examination is in form of software code and of a documentation of the design.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Fundamentals of digital logic design\nFundamentals of programming",
    "content": "Concept of System-on-Chip (SoC); build an example of an embedded system with microcontroller, bus and peripherals; first implement an encryption algorithm using a standard hardware description language; then wrap the security module as a peripheral attached to bus; design an interface between peripheral and bus; apply an FPGA design flow for embedded systems, and embedded software for testing the encryption algorithm. EI7403: VHDL System Design Laboratory | VHDL System Design Laboratory",
    "learning_outcomes": "At the end of the module students will be able to analyze and evaluate System-on-Chip and embedded system concepts. They are capable of designing and creating SoCs and embedded systems with their complex system components.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students consolidated knowledge is acquired by providing subtasks of increasing complexity and difficulty in the laboratory notes. Teaching method: Students are free to work on their own, according to their own schedule, on the laboratory tasks. Students can work on the laboratory either in institute rooms, or at home. An adviser is available who will support them in case of significant difficulties.",
    "media": "The following kinds of media are used:\n* Introductory lectures\n* Lecture slides available\n* Laboratory notes with detailed descriptions of tasks and tool environments\n* Individual discussions with advisor",
    "literature": "The following literature is recommended:\n* ANSI, IEEE Standards Board, IEEE Standard VHDL Language Reference Manual: IEEE Std\n1076-1993 , New York, 1988, ISBN 1559373768\n* Peter J. Ashenden, Designer s Guide to Vhdl, Morgan Kaufmann Publishers, 1995, ISBN\n1558602704\n* More literature listed in laboratory notes",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nVHDL System Design Laboratory (Praktikum Systementwurf mit VHDL) (Praktikum, 4 SWS)\nZhang Y, Eldebiky A, Truppel A, Tseng T"
  },
  {
    "module_id": "EI7408",
    "title": "Multi-Sensory Based Robot Dynamic Manipulation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Laboraufgaben, Einzelprojekt und mündliche Prüfung Jedes Tutorium besteht aus einer Aufgabe, durch die die Studierenden nachweisen, dass sie in Eigenarbeit Probleme der Multi-sensorische dynamische Roboter-Manipulation lösen können. Die Studenten haben eine Arbeit durchzuführen, welche die theoretischen Kenntnisse der Einzelaufgaben erfordert. Die Arbeit ist im Anschluss durch die Studierenden zu präsentieren und schließt mit einer mündlichen Prüfung (15 min) bezüglich Details zur Durchführung des Projekts. Die Endnote setzt sich wie folgt zusammen: individuelle Tutoriumsaufgaben: 50% Einzelprojekt: 40% Abschlusspräsentation: 10%",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Starker mathematischer Hintergrund in linearer Algebra, Trigonometrie und Analysis.\nGrundkenntnisse in der Robotik (bevorzugt).\nGrundkenntnisse in C++ und ROS\nAlle Übungen werden in Matlab und ROS (ubuntu) implementiert, bitte installieren Sie auf Ihrem\nLaptop ubuntu (18.04) und ROS (Kinetic).",
    "content": "1. Einleitung 1.1. Motivation EI7408: Multi-Sensory Based Robot Dynamic Manipulation | Multi-Sensory Based Robot Dynamic Manipulation 1.2.Mathematische Grundlagen und Werkzeuge für Robotermodellierung 1.2.1. Homogene Transformation 1.2.2. Tutorium 1: Einarbeitung in die Simulation (Matlab/Simulink) und räumliche Beschreibung 1.2.3. Vorwärts/Invers Kinematic 1.2.4. Tutorium 2: D-H Konvention 1.2.5. Differentielle Kinematics 1.2.6. Tutorium 3: Roboter Jacobians 1.2.7. Allgemeine Dynamik 1.2.8. Tutorium 4: Dynamisches Modell einfacher Systeme 1.2.9 Roboter Dynamik 1.2.10 Tutorium 5: Roboter Dynamik via iterativen Methoden 2. Passivitäts-basierte Regelung (Modellbasierte Regelung) 2.1. Gelenkwinkel Regelung 2.1.1 Tutorium 6: Gelenkwinkel Regelung 2.2. Regelung im Betriebsbereich 2.2.1 Tutorium 7: Regelung im Betriebsbereich 2.2.6 Redundanz 2.2.7 Tutorium 8: Regelung redundanter Roboter 3. Passivitäts-basierte Regelung (visuelles Servoing) 3.1 Positionsbasiertes (visuelles Servoing) 3.2 Tutorium 9: Positionsbasiertes (visuelles Servoing) 3.3 Bild-basiertes visuelles Servoing 3.4 Tutorium 10: Bild-basiertes visuelles Servoing 4. Passivitäts-basierte Regelung (Kraftregelung) 4.1 Impedanzregelung 4.3 Tutorium 11: Impedanzregelung 4.2 Prinzip der Orthogonalisierung 4.3 Tutorium 12: Kraftregelung 5. Passivitäts-basierte Regelung (visuell-taktile Regelung) 5.1 Fusion visueller und kraftbasierter Signale 5.2 Tutorium 13: visuell-taktile Regelung",
    "learning_outcomes": "Nach Abschluss des Moduls ist der Studierende in der Lage serieller Roboter mit iterativen Methoden zu modellieren. Dazu kann er die symbolischen Gleichungen, die von diesem Prozess abgeleitet werden, zur Modellierung der Kinematik und Dynamik von Roboter einsetzen. Er kann diese Modelle zum Design von passivitäts-basierten Regelungsverfahren und der Fusion verschiedener Sensoren einsetzten. EI7408: Multi-Sensory Based Robot Dynamic Manipulation | Multi-Sensory Based Robot Dynamic Manipulation",
    "teaching_methods": "Vorlesungen werden ex cathedra gehalten. Die Laborübungen festigen das erlangte Wissen, die Prinzipien des Themengebiets. Die Theorie, welche in dieser Vorlesung behandelt wird, wird durch praktische Übungen unterstützt in welchen der Student Modellierungs und Regelungsbeispiele in Matlab/Simulink implementiert.",
    "media": "Die folgenden Medien werden verwendet:\n- Präsentationen\n- Laborübungen",
    "literature": "",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMulti-sensory Based Robot Dynamic manipulation (Vorlesung mit integrierten Übungen, 6 SWS)\nCheng G [L], Armleder S, Cheng G, Guadarrama Olvera J"
  },
  {
    "module_id": "EI74091",
    "title": "Adaptive Control",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote wird zu 100% durch die schriftliche Abschlussklausur (90 min) bestimmt. In der Klausur wird überprüft, ob die Studierenden auch unter Zeitdruck in der Lage sind die gelernten und eingeübten adaptiven Regelungsmethoden auf neue Probleme anzuwenden. Dies wird durch Aufgabenrechnen überprüft. Zusätzlich wird in Kurzfragen geprüft, ob ein vertieftes Verständnis der Methoden erlangt wurde.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Regelungstechnik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1",
    "content": "Einführung in adaptive Regelungsprinzipien - Online-Parameterschätzung und adaptive Beobachter - Adaptive Regelung mit Modellreferenz; adaptive Polplatzierung; iterativ lernende Regler; Gain-Scheduling; robuste adaptive Regelungen - nichtlineare adaptive Regelungen; stochastische adaptive Regelungen, Anwendungen.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, adaptive Regelungen zu konzipieren und auszulegen. Die Studierenden erhalten ein vertieftes Verständnis ueber die Grundprinzipien und der wesentlichen Auslegungsmethoden der adaptiven Regelung. EI74091: Adaptive Control | Adaptive Control [AC]",
    "teaching_methods": "Die Grundidee der adaptiven Regelung und die wichtigsten Verfahrensklassen der adaptiven Regelung werden in der Vorlesung präsentiert. Weiterhin werden in der Vorlesung Anwendungsbereiche der adaptiven Regelung vorgestellt. Die Übungen dienen zur Vertiefung des Verständnisses der Konzepte und Verfahren der adaptiven Regelung. Dafür werden Rechenaufgaben mit unterschiedlichem Fokus zur Verfügung gestellt: die Verfahren aus der Vorlesung werden praktisch umgesetzt, weitere Anwendungsbereiche werden eingeführt und Erweiterungen der Verfahren der Vorlesung werden erarbeitet. Die Aufgaben der Übungen sollen von den Studenten in häuslicher Vorbereitung erarbeitet werden. Eine Musterlösung wird in den Übungsstunden präsentiert und diskutiert. Weiterhin wird eine schriftliche Musterlösung zur Verfügung gestellt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Arbeitsblättersammlung zur Vorlesung\n- Übungsaufgaben mit Lösungen",
    "literature": "K.J. Astrom, B. Wittenmark: Adaptive Control, 1995.",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdaptive Control (Vorlesung mit integrierten Übungen, 4 SWS)\nBevanda P, Huang T, Sosnowski S"
  },
  {
    "module_id": "EI7411",
    "title": "Channel Codes for Iterative Decoding",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In a written exam without aids (90 min) the students prove that they are able to recall the principles and techniques for channel coding by answering questions, e.g. name suitable techniques to solve given channel coding problems. They have to create communication code examples, e.g. for a given application scenario.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Recommendations:\n- Basics of digital communications;\n- Basics of statistics\nFollowing should be passed before taking the course:\n- UG level Communications Engineering\nIt is recommended to take the following modules additionally:\n- Information Theory",
    "content": "1. Preliminaries: Communication channels, channel capacity. Summary of binary linear block/ convolutional codes, decoding algorithms: MAP, ML. Soft-output decoding of binary convolutional codes and of binary block codes. Factor graphs. 2. Codes for iterative decoding. Product codes. EI7411: Channel Codes for Iterative Decoding | Channel Codes for Iterative Decoding Turbo codes: Decoding, decoder analysis via EXIT charts, distance spectrum properties, interleaver design. Turbo code classes (PCCC, SCCC). Turbo codes in standards. Low-Density Parity-Check (LDPC) codes: Decoding, decoder analysis via EXIT charts, distance spectrum properties, finite-length code design. LDPC codes in standards. 3. Advanced topics. Non-binary LDPC Codes: Decoding / code structures. Coded modulation: Principles of bit interleaved coded modulation. Coding for erasure channels: LDPC, Luby-Transform and Raptor codes, EXIT analysis on the binary erasure channel. Iterative and inactivation decoding.",
    "learning_outcomes": "At the end of the module students are able to understand the principles, common techniques and major applications of channel coding. They are thereby able to apply, analyse, evaluate, and create codes for communications.",
    "teaching_methods": "During the lectures students are instructed in a teacher-centered style. During the exercises a tuor presents example problems and their solutions to enable students to solve such examples themselves in class.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions",
    "literature": "Lecture notes with all relevant information are available.\nThe following literature could be used in addition:\n- W. E. Ryan and S. Lin: Channel Codes - Classical and Modern,\nCambridge University Press, 2009.\n- T. Richardson and R. Urbanke. 2008. Modern Coding Theory. Cambridge University Press, New\nYork, NY, USA.\n- Costello, D. und Lin, S. Error Control Coding. May 2004.",
    "lv_sws_lecturer": "Kramer, Gerhard\nEI7411: Channel Codes for Iterative Decoding | Channel Codes for Iterative Decoding\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nChannel Codes for Iterative Decoding (Vorlesung mit integrierten Übungen, 4 SWS)\nLiva G, Ben Yacoub E, Straßhofer A ( Asgari H )"
  },
  {
    "module_id": "EI74121",
    "title": "Coded Modulation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "For succesful participation in the lecture, the student has to pass a written exam (90 min). The overall grade will be solely based on the student's result in the written exam. Students will demonstrate that they have gained both fundamental and deeper understanding in various aspects of coded modulation. They have to answer the questions with self-formulated responses and do quantitative calculations. The allowed support material is constraint to a non-programmable calculator.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Recommendations:\n- Basics of digital communications\n- Basics of channel coding\nIt is recommended to take one the following modules additionally:\n- Information Theory, Channel Coding, Channel Codes for Iterative Decoding",
    "content": "This course is all about how to use channel coding for reliable data transmission at high rates over discrete-time continuous-valued channels. Covered topics:\n- Introduction\no Brief overview of the course, system model, information theory, decision rules, probability of error analysis, channel coding\n- Trellis Coded Modulation (TCM)\no Concept of TCM, design of TCM schemes EI74121: Coded Modulation | Coded Modulation\n- Multilevel Coding\no Concept, chain rule, error propagation\n- Bit-Interleaved Coded Modulation (BICM)\no Parallel channels, capacity\n- Signal Shaping\no Geometric shaping, probabilistic shaping, ultimate shaping gain o Probabilistic Amplitude Shaping, ASK capacity, systematic channel code with uniform check symbol assumption, bit-metric decoding",
    "learning_outcomes": "At the end of this course, the student knows how to analyze and design digital communication systems for reliable data transmission at high data rates and understands the key principles that are used in current and future standards.",
    "teaching_methods": "Lerning method: Personal study and repeated lessons in exercises and tutorials. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions",
    "literature": "Lecture notes with all relevant information are available.\nThe following literature could be used in addition:\n- Coded Modulation Systems, Anderson & Svensson (2003)",
    "lv_sws_lecturer": "Kramer, Gerhard; Prof. Dr.sc.tech.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHannes Bartz\nBalazs Matuz"
  },
  {
    "module_id": "EI7413",
    "title": "Project Laboratory Human Centered Robotics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Bewertung der praktischen Projektarbeit durch regelmäßige Gespräche mit dem zugeordneten\nBetreuer (wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das Vorgehen (50%). Die Studierenden sollen zeigen, dass sie ein grösseres Projekt im Team bearbeiten können. Besondere Herausforderungen sind dabei die Erstellung und Anpassung eines Projektplans und die Ausgestaltung der Teamarbeit zur Realisierung des Projektziels.\n- Bewertung der schriftlichen Ausarbeitungung der Ergebnisse und Dokumentation als Hausarbeit\n(30%). Die Studierenden sollen zeigen, dass sie die erbrachten Ergebnisse strukturiert darstellen können.\n- Bewertung einer 10minütige Präsentation der Ergebnisse und anschließendes 10minütiges\nKolloquium (20%). Die Studierenden sollen zeigen, dass sie mit den Ergebnissen der Arbeit insbesondere in Relation zum Stand der Technik im Detail vertraut sind. Vortragstechniken werden eingeübt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Regelungs- und Steuerungstechnik und Robotik\nProgrammieren in C/C++ oder Java\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\nEI7413: Project Laboratory Human Centered Robotics | Project Laboratory Human Centered Robotics",
    "content": "Die Projektaufgaben umfassen Hard- und Softwarethemen v.a. aus dem Bereich der human- centered Robotik. Der Fokus liegt auf der Regelung, Planung, Interaktion und adaptiven Algotithmen für Roboter in der Mensch-Roboter Interaktion.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage ein konkretes Problemen im Anwendungskompetenzbereich human-centered Robotik eigenständig zu lösen. Das umfasst die Analyse des Problems und die Entwicklung von passenden Lösungsstrategien. Insbesondere sind die Studierenden in der Lage effizient und problemorientiert im Team zu arbeiten. Methodisch können die Studierenden in einer schriftliche Dokumentation ihre Ergebnisse und den Stand der Technik strukturiert darstellen. Im Abschlussvortrag zeigen die Studierenden, dass sie ihre Ergebnisse vor Publikum in verständlicher Form darstellen können.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren im Projektpraktikum, sowie kritisches Auseinandersetzen mit den Ergebnissen in einem Vortrag angestrebt. Jedes Team bearbeitet hierbei eine individuelle fachliche Aufgabenstellung und einen eigenen Betreuer zugeordnet. Der Betreuer hilft den Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt, die Nutzung von Experimentalaufbauten erläutert und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt Als Lehrmethode wird im Projektpraktikum unterstütztes Selbststudium angeboten. Unter fachlicher Anleitung werden im Team von max. 3 Teilnehmern abgeschlossene Projektaufgaben geplant, bearbeitet, dokumentiert und das Ergebnis durch Vortrag und praktische Demonstration vorgestellt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden haben die Möglichkeit, an zur Verfügung gestellten Rechnern mit\nentsprechenden Simulations- und Berechnungsprogrammen zu arbeiten.\n- Die Studierenden haben die Möglichkeit, an entsprechenden Versuchsständen praktisch zu\narbeiten, sofern die Aufgabenstellung dies vorsieht.",
    "literature": "",
    "lv_sws_lecturer": "Lee, Dongheui; Prof. Dr. Ph.D.\nEI7413: Project Laboratory Human Centered Robotics | Project Laboratory Human Centered Robotics\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Human Centered Robotik (Forschungspraktikum, 4 SWS)\nCheng G [L], Abdelwadoud Y, Schulleri K"
  },
  {
    "module_id": "EI7429",
    "title": "Projektpraktikum Verstärkerschaltungen zur Messung bio-elektrischer Signale",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- Bearbeitung eines Projektes und schriftliche Ausarbeitung der Ergebnisse als Hausarbeit (40%)\n- Dokumentation der im Praktikum erzielten Ergebnisse und Bewertung innerhalb regelmäßiger\nGespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das weitere Vorgehen (40%)\n- 15-minütige Präsentation der Ergebnisse und anschließendes 5-minütiges Kolloquium (20%)\nDie Prüfungsart ist dabei den verschiedenen Lernergebnissen angepasst: Die Erstellung wissenschaftlicher Berichte/Publikationen wird anhand der schriftlichen Ausarbeitung bewertet. Die Fähigkeit zur strukturierten Problemlösung wird anhand der erzielten Ergebnisse bewertet. Schließlich wird die Fähigkeit zur Präsentation der Ergebnisse in einem Vortrag bewertet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen Schaltungstechnik",
    "content": "In diesem Projektpraktikum werden Verstärkerschaltungen mit folgender Analog-Digitalwandlung und Computerinterface für Messungen bio-elektrischer Signale entworfen, aufgebaut und charakterisiert. Für die Arbeiten stehen am IMETUM gut ausgestattete Labors zur Verfügung (Messtechnik, halbautomatische Bestückung von SMD Bauteilen). Der Kurs beinhaltet auch die EI7429: Projektpraktikum Verstärkerschaltungen zur Messung bio-elektrischer Signale | Practical Course Development of Bio-Signal Amplifiers Vermittlung von Sicherheitsaspekten, die bei elektrischen Messungen an menschlichen Probanden einzuhalten sind.",
    "learning_outcomes": "Nach der Teilnahme am Projektpraktikum sind die Studierenden in der Lage\n- Verstärker für bio-elektrische Signale mit AD_Wandler zu entwickeln, charakterisieren und zu\nbewerten\n- Verstärkerschaltungen mit A-D Wandler und Computerinterface für die geforderte Messaufgabe\nzu entwickeln und aufzubauen.",
    "teaching_methods": "Intensiv betreutes Praktikum",
    "media": "",
    "literature": "Wird individuell zusammengestellt und recherchiert",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Verstärkerschaltungen zur Messung bio-elektrischer Signale\n(Forschungspraktikum, 4 SWS)\nGleich B [L], Hemmert W, Gleich B"
  },
  {
    "module_id": "EI7432",
    "title": "System Aspects in Communications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In a written exam (90 min) without aids students answer questions and conduct calculations on mobile and cellular communication systems to proof their ability to deal with constraints and modulation schemes.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Signal description in the time- and frequency-domains\n- Knowledge of digital signal processing\n- Basic knowledge of mobile communications (e.g. Rayleigh Fading), system theory and in\nstatistics\nThe following modules should be passed before taking the course:\n- Digital Communications 1 and 2, Mobile Communications",
    "content": "1. Basic Propagation Effects: Antenna Pattern, Pathloss, Shadowing, Mobility/Handover/Cell Selection, Link Budget Calculations (Cell Sizes), SINR Calculations, Cell Layout 2. OFDM: Cyclic Convolution, FFT, Subcarrier Spacing/Symbol Length, Cyclic Prefix, Delay/ Doppler Spread, Aliasing, Synchronization, 3. Access Systems: Broadcast/Multiple Access, Uplink/Donwlink, TDMA/FDMA/CDMA, CDMA with orthogonal and non-orthogonal codes, OFDMA, Single Carrier FDMA, Duplex Methods 4. Link Adaptation: Power Control, Adaptive Modulation and Coding, Hybrid/Outer ARQ, Link Adaptive Scheduling EI7432: System Aspects in Communications | System Aspects in Communications 5. Intercell Interference: Downlink/Uplink, Statistical Properties, Frequency Reuse, Interference Averaging, Soft Handover, Interference Coordination, Interference Cancellation 6. Protocol Stack: Packet/Circuit Switched, Segmentation/Concatenation, Protocol Headers, PDCP/RLC/MAC Layer, OSI Model, X-Layer Design 7. Scheduler: Multi-user Diversity, Fairness, Quality of Service, Frequency Domain Scheduling 8. System Architecture: Network Elements/Nodes, Interfaces, Hierarchical Structure, Impact on Performance and Costs 9. Traffic Types: Voice/VoIP, Streaming, Gaming, WWW, FTP, Full Buffer 10. (depending on time) Operator's business case, MIMO, Relaying, Self-organizing Networks",
    "learning_outcomes": "At the end of the module students are able to put all details which they have learned in previous modules (Signal Processing, Mobile Communications, etc.) into the context of a mobile and cellular communication system such as LTE. They understand practical constraints and interactions of many different mechanisms (Cross-layer view). Furthermore the students are able to understand dependencies between commercial and technical aspects. Finally the student are able to set up own simulations of a mobile communication network. He or she is thereby able to apply, analyse, and evaluate the knowledge and methods of modulation techniques like ODFM, and to create simulation tools for mobile communication networks.",
    "teaching_methods": "Lerning method: The topics of the lecture will be further illustrated in the tutorial. Students are motivated to ask questions during the lecture. It is recommended to recapitulate the slides with short temporal distance to the lecture, and also the material discussed in the tutorials. The lecture notes are provided 2 days before the lecture, the students shall look at the material before the lecture. Students shall use and extend the provided programming examples to deepen the understanding. In the tutorials there will additional problems to encourage students to support their learning process by solving them at home and bring open issues back into the next tutorial. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way.",
    "media": "The following media are used:\n- Presentations (the presented slides are available as downloads)\n- Exercises with solutions as downloads\n- Additional exercises to be solved at home\n- Matlab scripts for deeper understanding of the mechanisms. The students shall use those\nprograms and extend them autonomously.\n- Demonstrations to illustrate the material.\nEI7432: System Aspects in Communications | System Aspects in Communications",
    "literature": "The following literature is recommended:\n- Harri Holma, Antti Toskala (Editors), LTE for UMTS - OFDMA and SC-FDMA Based Radio\nAccess, Wiley, June, 2009.\n- Erik Dahlman, 3G Evolution: HSPA and LTE for Mobile Broadband, Academic Press, 2007.",
    "lv_sws_lecturer": "Kramer, Gerhard\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSystem Aspects in Communications (Vorlesung mit integrierten Übungen, 4 SWS)\nViering I, Ben Yacoub E"
  },
  {
    "module_id": "EI7433",
    "title": "Adaptive and Array Signal Processing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In a 90 minutes written examination students proof by answering short questions and calculations that they are able to process algorithms both in the temporal and spatial domain by remembering necessary requirements for wireless and wired communication and combining building blocks. During the semester, there are four mandatory home-works. The students demonstrate with the reports that they have gained deeper knowledge of the specific MatLab programming skills. The weights of these exams are:\n- 90 % Final Examination\n- 10 % Homework\nIn addition, there is a voluntary written mid-term examination which will be graded, but it will be credited only if it results in an improvement of the overall grade according to the following weights:\n- 65 % Final Examination\n- 25 % Mid-term Examination\n- 10 % Homework",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Pre-requisite are basic knowledge of linear algebra, linear discrete time systems and linear\ntransforms on an undergraduate level.",
    "content": "- Motivation:\nApplication areas of adaptive filters; Adaptive Equalization; Single channel (single-sensor) temporal processing; Multichannel (multi-sensor) spatial/spatio-temporal processing. EI7433: Adaptive and Array Signal Processing | Adaptive and Array Signal Processing\n- Mathematical Background:\nGradients; Complex analysis; Quadratic Optimization with Linear Constraints; Method of Lagrangian multipliers for complex-valued problems; Stochastic processes, correlation and covariance matrices; Matrix decomposition (eigenvalue and singular value decomposition); Solving linear system of equations and least-squares problems.\n- Linear Optimum Filtering:\nWiener filtering; Spatial Filtering: Minimum Variance Distortionless Response (MVDR) Beamforming and Generalized Sidelobe Canceller (GSC); Iterative solution of normal equations: Gradient descent and Least Mean Square (LMS) algorithm;\n- High Resolution Direction of Arrival (DoA) Algorithms:\nSubspace Estimation; Multiple Signal Classification (MUSIC); Estimation of Signal Parameters via Rotational Invariance Techniques (ESPRIT); Unitary ESPRIT",
    "learning_outcomes": "At the end of the module students are able to analyze and to design signal processing algorithms both in the temporal and spatial domain to support wireless and wired communication. Students are able to create those algorithms in Matlab code.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons in exercises and tutorials. In the tutorials students apply mathematic formulas acquired in the lecture on examples to prepare the algorithms consequently programmed in Matlab. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way.",
    "media": "For teaching purposes, various media are useded such as blackboard, beamer presentation,\nslides, lecture script and moodle.",
    "literature": "-Strang G.: Linear Algebra and its Applications\n-Haykin, S.: Adaptive Filter Theory.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nEI7433: Adaptive and Array Signal Processing | Adaptive and Array Signal Processing\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdaptive and Array Signal Processing (Vorlesung mit integrierten Übungen, 4 SWS)\nIvrlac M"
  },
  {
    "module_id": "EI74351",
    "title": "Convex Optimization",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Written examination, 90 min (evaluation of basic theoretical concepts presented in the lecture and tutorials). Up to 20% of the examination can be conducted in the form of multiple choice questions.With maximally 5 sheets of A4 paper as helping material, the students formulate, classify, and solve convex optimization problems. They answer comprehension questions and are able to discuss the different algorithms to obtain the solutions.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Linear Algebra and Calculus.",
    "content": "Introduction: basic definitions and fundamentals, problem statement. Convex analysis: convex sets, convex functions. Linear programming: extremal points and directions, simplex algorithm. Optimality conditions: Fritz John conditions, Karush-Kuhn-Tucker conditions, constraint qualifications. Lagrangian duality: duality theorems. Algorithms: general concept, unconstrained optimization, constrained optimization. Solutions for the dual problem: sub gradient method, cutting plane algorithm. Interior-point method: barrier functions, IP algorithm. Applications: problems form multi-user information theory, resource allocation, parameter optimization in layered and distributed communication systems. EI74351: Convex Optimization | Convex Optimization",
    "learning_outcomes": "After successfully passing the module, the students are able to characterize given mathematical optimization problems in terms of convex analysis on convex sets and convex functions and to derive optimality conditions related to F. John (FJ) and W. Karush, H. W. Kuhn and A. W. Tucker (KKT) for equality and inequality constraints, including the discussion of qualification constraints. Furthermore, the students are able to derive and to apply the weak and strong duality theorem and the saddle point theorem for the analysis and the appropriate reformulation of given optimization problems into prior and dual optimization problems and their related primal reconstruction algorithms. The student will be able to derive and apply gradient and subgradient based optimization methods and to take into account respective algorithms for a step size control. The students are also able to derive and apply the cutting plane method to reformulate convex optimization problems into a series of linear master problems. Finally, the students are able to derive and to apply a variety of state-of-the art algorithms, namely the simplex algorithm for linear programs, the gradient descent and the Newton algorithms for convex optimization problems, the Armijo-Goldstein rule for step-size control, and a few basis versions of interior point solvers.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students, consolidated knowledge is aspired by repeated lessons in exercises and tutorials. Teaching method: During the lectures, students are instructed in a teacher-centric style. The exercises are held in a student-centenered way.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions as download.",
    "literature": "The following literature is recommended:\n- M. S. Bazare, H. D. Serail, and C. M. Shetty. Nonlinear Programming: Theory and Algorithms.\nWiley, 2006.\n- D. Bertsekas and A. Nedic. Convex Analysis and Optimization. Athena Scientific, 2003.\n- S. Boyd and L. Vandenberghe. Convex Optimization. Cambridge, 2004.",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nConvex Optimization (Vorlesung mit integrierten Übungen, 4 SWS)\nUtschick W, Böck B\nEI74351: Convex Optimization | Convex Optimization"
  },
  {
    "module_id": "EI7436",
    "title": "MIMO Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The examination is written (with up to 20% multiple choice questions, 90 min). Without helping material, the students apply the taught concepts and results to analyze, optimize, and design systems based on MIMO technology. They answer comprehension questions and discuss the applicability of the different MIMO schemes. Additionally, voluntary projects can be done by the students that help them to gain in-depth understanding by programming related algorithms and evaluating practical scenarios. The voluntary projects account for maximally forty-five percent of the final grade, if they improve the exam result.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Linear algebra, analysis, constrained optimization, signal processing, communications, information\ntheory.",
    "content": "Linear and non-linear algorithms for baseband signal processing in multiple input multiple output (MIMO) communication systems (point-to-point, multiple access, and broadcast setup). For point-to-point channels: capacity for error-free knowledge about the channel state at the transmitter, waterfilling, diagonalization of the MIMO channel, capacity for fast fading channels, capacity for statistical channel knowledge of the transmitter, rate bounds for erroneous channel state knowledge at the receiver. For multiple access channels (MAC): general MAC, successive decoding; scalar Gaussian MAC, rate splitting and time sharing; vector Gaussian MAC, weighted sum capacity; MIMO Gaussian MAC, capacity region, iterative waterfilling. EI7436: MIMO Systems | MIMO Systems For broadcast channels (BC): general BC, degraded BC, scalar Gaussian BC, coding with known interference, dirty paper coding; Marton's achievable region, Sato's bound; vector Gaussian BC, duality of vector Gaussian BC and vector Gaussian MAC, sum capacity.",
    "learning_outcomes": "At the end of the module, students are able to formulate and analyze single-user and multi- user multiple-input multiple-output (MIMO) systems. They can apply the waterfilling principle to reach capacity and can use the minimum mean square error to bound the mutual information. The students are able to design single-user MIMO systems under full and partial CSI at the transmitter. They are capable of analyzing and designing vector and MIMO multiple access and broadcast channels together with the corresponding capacity regions by applying the principles of successive interference cancellation (combined with time sharing and rate splitting) and dirty paper coding. The students can formulate and apply the duality between the MIMO multiple access and broadcast channels to design a MIMO broadcast channel system.",
    "teaching_methods": "In addition to the individual methods of the students, consolidated knowledge is aspired by repeated lessons in exercises and tutorials. The students can deepen and broaden their competences by completing additional voluntary projects where they are analyzing, evaluating and creating own solutions for practical problems.",
    "media": "The following kinds of media are used:\n- Presentations (blackboard, slides, beamer)\n- Lecture notes (lecture and tutorials)\n- Exercises with solutions as download",
    "literature": "- E. Biglieri, R. Calderbank, A. Constantinides, A. Goldsmith, A. Paulraj, and H. V. Poor. MIMO\nWireless Communications, Cambridge University Press, 2007.\n- D. Tse and P. Viswanath. Fundamentals of Wireless Communications, Cambridge University\nPress, 2005.\n- A. Goldsmith. Wireless Communications, Cambridge University Press, 2005.\n- S. M. Kay, Fundamentals of Statistical Signal Processing - Estimation Theory. Prentice Hall,\n1993.\n- T. M. Cover and J. A. Thomas. Elements of Information Theory, Wiley, 1991.",
    "lv_sws_lecturer": "Joham, Michael; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMIMO Systems (Vorlesung mit integrierten Übungen, 4 SWS)\nJoham M, Ben Amor D\nEI7436: MIMO Systems | MIMO Systems"
  },
  {
    "module_id": "EI74371",
    "title": "Technik autonomer Systeme",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Verständnis für autonome Systeme und das Zusammenspiel verschiedener Module in autonomen Robotern wird in Grundlagenvorlesungen vermittelt sowie durch praktische Implementierung und kritisches Analysieren der Systeme gefördert. Daher wird die Lehrveranstaltung durch drei Prüfungsleistungen bewertet: 1) die praktische Implementierung von Modulen für autonome Robotersysteme und deren Evaluierung. Hier werden sowohl praktische Programmierfähigkeiten sowie wissenschaftlich korrekte Umsetzung bewertet (40%); 2) eine Abschlusspräsentation, in der technische Zusammenhänge erläutert werden, sowie Ergebnisse und Erkenntnisse der Projektarbeit dem Kurs kritisch auseinandergesetzt werden (30%); 3) Vorbereitende Übungen und Hausaufgaben, in denen der Umgang mit der Simulationsumgebung geübt wird (20%); 4) Engagement und Teamarbeit, wobei Kursteilnehmer innerhalb des Kurses die technischen Möglichkeiten zu Dokumentation, Kommunikation und Fehlerlösung aktiv nutzen sollen, um die Ergebnisse des gesamten Kurses zu verbessern (10%).",
    "repetition": "",
    "recommended_prerequisites": "Programmieren in Python oder C/C++\nGrundkenntnisse der Regelungstechnik und Robotik\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nRegelungssysteme 1\nGrundlagen intelligenter Roboter\nProjektkurs C++\nEI74371: Technik autonomer Systeme | Introduction to Autonomous Systems [TAS]",
    "content": "Einführung: automatisierte und autonome technische System mit engem Kontakt zu Menschen, Semiautonomie, autonomes Verhalten,\n- Perzeption: Multisensordatenfusion, Lokalisierung, Navigation und Kartographierung, Objekt\nErkennung;\n- Planung und Ausführung: Aufgabenzerlegung, reaktives Verhalten, vorgeplantes auf Wissen und\nFähigkeiten basiertes Verhalten, Verhaltensübermittlung, Lernen;\n- Architekturen: verhaltensorientiertes Vorgehen, Experten Systeme, Wissensbasen, Mehrebenen-\nSteuerungs-/Regelungskonzepte;\n- Anwendungen: autonome mobile Service Roboter, humanoide Laufmaschinen,\nTelepräsenzsysteme.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, Probleme in der autonomen Robotik zu analysieren und Lösungsansätze zu entwickeln. Weitere angestrebte Lernergebnisse sind Kompetenzen im effizienten und problemorientieren Bearbeiten von Projekten im Team.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren von Vorlesungsinhalten im Rahmen eines Projektpraktikums, sowie kritisches Auseinandersetzen mit den Ergebnissen in einem Vortrag angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, das Projektpraktikum erfolgt im unterstützten Selbststudium.",
    "media": "Folgende Medienformen finden Verwendung:\n- Vorlesung gestützt auf diverse Standardwerke aus dem Bereich\n- Vorlesungsfolien als Download im Internet\n- Projektpraktikum in Simulation und Experiment\n- Abschlusspräsentationen der Projektteilnehmer",
    "literature": "Weiterführende Informationen finden sich in folgenden Werken:\n- R. Siegwart and I. R. Nourbakhsh, Autonomous Mobile Robots, MIT Press 2004.\n- S. Thrun, W. Burgard, and D. Fox, Probabilistic Robotics, MIT Press 2005.\n- S. M. LaValle, Planning Algorithms, Cambridge University Press 2006, http://planning.cs.uiuc.edu/\n- M. Wooldridge, An Introduction to MultiAgent Systems, Wiley 2009.",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nEI74371: Technik autonomer Systeme | Introduction to Autonomous Systems [TAS]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTechnik autonomer Systeme (Praktikum) (Praktikum, 2 SWS)\nBari S, Benciolini T, Wollherr D\nTechnik autonomer Systeme (Vorlesung, 2 SWS)\nBari S, Benciolini T, Wollherr D"
  },
  {
    "module_id": "EI7440",
    "title": "Circuit Theory and Communications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulleistung wird in Form einer mündlichen Prüfung erbracht. In dieser soll nachgewiesen werden, dass funktionelle Zusammenhänge und wichtige Begriffe der schaltungstechnischen Mehrtortheorie korrekt angewendet werden können. Die Studierenden sollen den Bezug zu Mehrantennensystemen herstellen können. Die Fähigkeit zur individuellen Problemlösung wird im Rahmen von 10 problembezogenen Hausaufgaben semesterbegleitend geprüft. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 100 % Abschlussklausur\nDie Hausaufgaben müssen mit \"bestanden\" bewertet sein.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundwissen:\n- Lineare Algebra,\n- Elektrische Netzwerke,\n- LTI Systeme\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Schaltungstechnik\n- Adaptive and Array Signal Processing\n- Lineare Signalverarbeitung\nEI7440: Circuit Theory and Communications | Circuit Theory and Communications",
    "content": "The high level of abstraction makes information theory a versatile and powerful tool for the analysis and optimization of a wide variety of communication systems. On the other hand, information theory has no concept of the flow of energy that accompanies the flow of information. Consequently, some important aspects of communication, like transmit power or noise covariance are by no means straight forward. In this lecture, we introduce effective methods which overcome this inherent limitation of information theory. We deal with this problem from a classic circuit theory point of view. This allows correct assessment of the energy flow in communication systems and thereby enables an information theoretic analysis and optimization which is consistent with the underlying physics of the communication system under investigation. After developing appropriate circuit theoretic channel models, we analyze the performance potential of different kinds of multi- antenna radio communication systems. Besides the study of channel capacity, we also develop interesting insight into receive and transmit antenna gain, super-directivity and super-resolution. A knowledge of circuit- and information theory is helpful but not strictly required, as all necessary methods are introduced during the lecture.",
    "learning_outcomes": "Nach der Teilnahme an der Modulveranstaltung sind die Studierenden in der Lage die schaltungstechnische Mehrtortheorie anzuwenden und damit eine physikalisch konsistente Modellierung von Kommunikationssystemen vorzunehmen. Durch diese Modellierung gewinnen die Studierenden eine tiefere Einsicht in das Verhalten komplexer Mehrantennensysteme und können diese optimieren. Damit können die Studierenden den Anschluss zu den Nachbardisziplinen Informationstheorie und Signalverarbeitung herstellen.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch mehrmaliges Aufgabenrechnen in Übungen angestrebt. Als Lehrmethode wird in der Vorlesungen und Übungen Frontalunterricht gehalten, in den Übungen auch Arbeitsunterricht (Aufgaben rechnen).",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Skript\n- Übungsaufgaben",
    "literature": "Folgende Literatur wird empfohlen:\n- N. Balabanian, Fundamentals of Network Theory, Allyn & Bacon, Prentice-Hall, 1961",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nEI7440: Circuit Theory and Communications | Circuit Theory and Communications\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCircuit Theory and Communications (Vorlesung mit integrierten Übungen, 4 SWS)\nIvrlac M"
  },
  {
    "module_id": "EI7450",
    "title": "Analysis, Modeling and Simulation of Communication Networks",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The examination consists of a written exam and a number of simulation projects. In the written and graded exam of 45 minutes duration without any helping material the students demonstrate their theoretical knowledge of principles and methods for communication network analysis, modeling and simulation and show their ability to apply these methods with case-based examples. Individual problem solving skills for the design and programming of software components for network simulation and analysis will be shown through mandatory programming exercises that will be assigned during the semester and have to be completed by the students and will be graded. The final grade is composed of the following elements:\n- 50% programming exercises\n- 50% final exam",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basics in communication networks (protocols and performance analysis). The knowledge of\nfollowing modules are therefore recommended:\n- Broadband Communication Networks\nBasic knowledge in object-oriented programming and basic knowledge in the Python programming\nlanguage",
    "content": "Simulation and modeling basics (traffic modeling, link-, system-, packet level simulation, SW/HW in the loop), probability theory fundamentals, random number generation, mobility models, channel models, topology models, graph theory and algorithms, queuing models, queuing networks, network calculus, discrete event-based simulation, monte carlo simulation, rate-based simulation, analysis of simulation results, statistical analysis, visualisation of results, simulation languages and tools, simulation packages; as part of the course a simulation tool will be stepwise designed by the students during the tutorial and as homework",
    "learning_outcomes": "After completion of the module, students gained an in-deep understandig of network analysis, modeling and simulation techniques. They are able to analyse and evaluate communication networks using analytical and simulation-based methods including traffic models, graph models and mobility models and they are put in the position to create tools for network simulation and to get acquainted with example simulation frameworks.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students, consolidated knowledge is aspired by repeated lessons in exercises, practical programming assignments and tutorials. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises and programming assignments are held in a student-centered way. In addition, students are asked to stepwise design a simulation tool and perform simulation and analysis projects in class and as homework.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Programming exercises and solutions",
    "literature": "The following books are recommended:\n- Averill M. Law, Simulation Modeling and Analysis, Fifth Edition, McGraw-Hill, 2015.\n- Klaus Wehrle, Mesut Günes, james Gross (Eds.): Modeling and Tools for Network Simulation,\nSpringer, 2010.\n- Thomas Bonald, Mathieu Feuillet, Network Performance Analysis, Wiley, 2011.",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAnalysis, Modeling and Simulation of Communication Networks (Vorlesung mit integrierten\nÜbungen, 4 SWS)\nKellerer W, Kutsevol P, Ursu R"
  },
  {
    "module_id": "EI7480",
    "title": "Data-Driven Innovation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "- In order to evaluate the ability to recall the theory behind the business models and the\nimplementation of data-driven innovations, the students will work on a project with a written report and a presentation including questionnaire\n- In order to assess the skills in the area of team work and organization as well as in the area of\nconceptual thinking, the students will work in a team on a semester project\n- The students’ skills in the area of individual problem solving will be assessed in the context of\nwritten homeworks during the semester. The final grade is composed as follows · homework (Innovation Logbook) 40% · individual: project with 40% containing o written report 20% o presentation including questionnaire 20% · group work with 20% including o written report 10% o oral presentation 10%",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "The lecture is based on basic knowledge in\n- machine learning\n- statistics\n- R or Matlab\nEI7480: Data-Driven Innovation | Data-Driven Innovation [DDI]\n- programming skills, e.g.python",
    "content": "The course Data-Driven Innovation focuses on acquiring practical skills for developing data-driven innovation. The main objective of the course is to develop a basic understanding for and practical skills in implementing data-driven innovations. Students will be able to investigate and discover user / customer needs and align those to identified data opportunities. The students will be familiar with the necessary data processing steps along the data value chain. In addition, they have acquired skills to scope data-driven business models as well as to position new offerings in the associated ecosystem/network. We will discuss and work with methods that allow us\n• to understand the nature and characteristics of data driven innovation\n• to investigate and explore user needs of a particular customer segment\n• to systematically acquire and manage data sources\n• to explore the data value chain covering the range of necessary data processing steps\n• for developing insights in data analytics models\n• to get practical insights for generating business models\n• to understand the dynamics and impact of the associated ecosystems\nAll methods are presented along the phases underlying the development of data-driven innovations. The content of the course is focusing on conceptual steps for implementing data- driven innovations. The content is built on top of practical data analysis skills and their associated theoretical foundations. The necessary prerequisites will be covered by courses delivered by Prof. Diepold and Prof. Kleinsteuber.",
    "learning_outcomes": "At the end of the course, students have developed a basic understanding of and practical skills in developing and implementing data-driven innovations. They are able to investigate and discover user / customer needs and align those to identified data opportunities. The students are familiar with the necessary data processing steps along the data value chain. In addition, they have acquired skills to scope data-driven business models as well as to position new offerings in the associated ecosystem/network.",
    "teaching_methods": "The course consists partially on frontal teaching with beamer slides and black/white board. This is complemented with discussions and working session in small teams to learn and explore new approaches and concepts by means of practical examples, exercises, video production and guiding questions. The working sessions will cover all steps required for developing data-driven innovations, such user needs analysis, problem definition, data preprocessing and loading, data modeling and evaluation, business model development and ecosystem design. EI7480: Data-Driven Innovation | Data-Driven Innovation [DDI] Students will work in a small team on a semester project. Intermediate results will be presented during the semester. The homeworks and semester project will guide students in aquiring skills in problem solving as well as conceptual thinking by combining a) the content presented in the lecture with b) practical investgiations and b) insight received by studying scientific literature.",
    "media": "The following kinds of media are used:\n- Beamer presentation\n- White or black board\n- Story telling with video production\n- Worksheets, checklists and guiding questions\n- Exercise and course-slides will be available for download",
    "literature": "A.Bari, M. Chaouchi, T. Jung (2014). Predictive Analytics For Dummies. John Wiley & Sons.\nJ.M. Cavanillas , E. Curry , W.Wahlster (editor) (2016) New Horizons for a Data-Driven Economy –\nA Roadmap for Big Data in Europe, Springer, 2016. Open Access: http://tiny.cc/NewHorizons\nT. Davenport (2014) Big Data at Work: Dispelling the Myths, Uncovering the Opportunities, Harvard\nBusiness Review Press.\nD. Loshin (2013). Big Data Analytics: From Strategic Planning to Enterprise Integration with Tools,\nTechniques, NoSQL, and Graph, Morgan Kaufmann\nOECD (2015), Data-Driven Innovation: Big Data for Growth and Well-Being, OECD Publishing,\nParis. DOI: http://dx.doi.org/10.1787/9789264229358-en\nA.Osterwalder, Y.Pigneur (2010) Business Model Generation: A Handbook for Visionaries, Game\nChangers, and Challengers, John Wiley & Sons.\nA.Osterwalder, Y.Pigneur, G. Bernarda, A. Smith, T. Papadakos (2014) Value Proposition Design:\nHow to Create Products and Services Customers Want, John Wiley & Sons.\nC.Tsai et al.(2015) Big data analytics: A survey. In Journal of Big Data, Springer Open Access.\nS. Zillner, B.Krusche.(2012) “Systemisches Innovationsmanagement: Grundlagen - Strategien –\nInstrumente“, Schäffer-Poeschel Verlag, Stuttgart\nS. Zillner, S. Rusitschka, M. Skubacz. (2014) “Big Data Story: Demystifying Big Data with Special\nFocus on and Examples from Industrial Sectors”. Whitepaper, Siemens AG, online available: http://\nbig-project.eu/sites/default/files/BigDataStory_Whitepaper_long-version_final_2014-06-03_oU.pdf\nS. Zillner et al.(2015) Big Data Value – Strategic Research and Innovation Agenda. Online\navailable: www.bdva.eu\nN.Zumel, J. Mount (2014) Practical Data Science with R, Manning, Shelter Island.",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nEI7480: Data-Driven Innovation | Data-Driven Innovation [DDI]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nData Driven Innovation (Praktikum, 1 SWS)\nHein A\nData Driven Innovation (Vorlesung, 2 SWS)\nZillner S ( Hein A )"
  },
  {
    "module_id": "EI7485",
    "title": "Physical Principles of Electromagnetic Fields and Antenna Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "In a written exam (90min), the students prove that they can describe qualitatively the principles of classical electrodynamics and quantitatively solve for fields and particle motions in simple scenarios. They calculate all relevant electrodynamic and circuit parameters of wire antennas, arrays made of such antennas, and systems of multiple arrays.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "The lecture is self contained. All physical concepts and necessary mathematical tools\nare developed in the course of the lecture.",
    "content": "1. The principles of the classical electromagnetic field theory\n- Forces, fields and inertial frames\n- The magnetic field is a relativistic effect\n- Explicit field formulation (Feynman)\n- Differential field equations (Maxwell)\n- When to use quantum electrodynamics\n- The great conservation laws: charge, energy, and momentum\n- Uniqueness theorem for the field solutions\n- The equivalence of energy and mass (Einstein)\n- Scalar and vector potential\n- Gauge transformations\n- The wave equation\n- Special relativity (Lorentz-covariance, 4-vector notation)\n- Field invariants\n- Relativistic effects\n- Duality transformations\n- Solution of the field equations\n- Sinusoidal time dependence and complex fields\n2. Dipole Radiation\n- Hertzian dipole\n- Radiated power and radiation resistance\n- Antenna pattern and directivity\n- Effective area\n- The reciprocity theorem\n- Antenna current distribution\n- Effective antenna length\n- Long dipoles\n- Antenna efficiency\n- Canonical minimum scattering\n3. Antenna Array Theory\n- Element coupling part I (partial-field analysis)\n- Radiated power\n- Antenna pattern\n- Optimum excitation\n- Directivity and superdirectivity\n- Antenna array efficiency\n- Arrays of dipoles\n- A theory of the array of isotrops\n4. Multi-antenna systems\n- Multiport model\n- Element coupling part II (full-field analysis)\n- Thermal equilibrium antenna noise\n- Non-equilibrium receiver noise\n- Matching and decoupling\n- Near-field MIMO Systems (full interaction)\n- Far-field MIMO Systems (partial interaction)\nMathematical preliminaries (reviewed in lecture):\n- vectors\n- general coordinates\n- differential vector operators\n- vector integration\n- integral theorems (Gauss, Stokes, Green)\n- gradient fields and scalar potential\n- solenoidal fields and vector potential\n- Lemma of Poincare",
    "learning_outcomes": "The student has obtained a firm understanding of the physical principles of classical electrodynamics (such as forces and fields, moving charges, waves in free-space, Lorentz- covariance, reciprocity, conservation laws, relativistic effects...) and their application to antenna systems. Based on these principles, the student can calculate e.g., radiated power, received voltage, radiation patterns, directivity, efficiency, height, element coupling, excitation, noise and matching of wire antennas and arrays and is able to derive and use multiport circuit models for multi-antenna systems of both near-field and far-field type.",
    "teaching_methods": "Classical lecture with lecturer presenting the lecture material in the lecture hall. The students can participate by asking question during and after the lecture, and contact the lecturer by email or in person.",
    "media": "Lecture notes (printed, perhaps also ebook)\nHomework assignments and detailed solutions\nWorking on blackboard, projection slides, sometimes beamer slides",
    "literature": "Main resource for the lecture:\nM.T. Ivrlac, \"Lecture notes on the Physical Principles of Antenna Systems\"\n(Course material, text-book style of writing, self-study possible, all mathematical tools developed.\nAvailable from lecturer.)\nAdditional reading (selection):\n1. L.D. Landau & E.M. Lifshitz, \"The Classical Theory of Fields\", 4th revised English\nedition, Pergamon Press, Oxford, and Addison-Wesley, Reading, MA, 1987.\n2. S.A. Schelkunoff & H.T. Friis, \"Antennas, Theory and Practice\", Wiley, New York, 1952.\n3. A. Sommerfeld, \"Electrodynamics\", Academic Press, New York, 1964.\n4. J.D. Jackson, \"Classical Electrodynamics\", John Wiley&Sons, 3rd. edition, 1999.\n5. R.P. Feynman, R. Leighton, M. Sands, \"The Feynman Lectures on Physics\", Definitive Edition,\nVolume 2, Pearson Addison Wesley, 2006.\n6. A. Einstein, H.A. Lorentz, H. Minkowski & H. Weyl, \"The Principle of Relativity. Collected Papers\nwith notes by A. Sommerfeld\", Dover, New York, 1952.\n7. M.T. Ivrlac, \"Lecture notes on Circuit Theory and Communication\" (Available from Lecturer)",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPhysical Principles of Electromagnetic Fields and Antenna Systems (Vorlesung mit integrierten\nÜbungen, 4 SWS)\nIvrlac M"
  },
  {
    "module_id": "EI7493",
    "title": "Signal Processing for Audio Technology",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfungsart ist den verschiedenen Lernergebnissen angepasst: Wissensbasierte Lernergebnisse werden im Rahmen einer 20 minütigen mündlichen Prüfung überprüft.Die Fähigkeit zur individuellen Problemlösung, sowie problemübergreifende, tätigkeitsbasierte Kompetenzen werden entsprechend dem Praktikum semesterbegleitend geprüft. Dazu werden ≥5 Arbeitsblätter mit Praktikumsaufgaben ausgegeben, von denen zu 5 Blättern der individuelle Fortschritt während der Praktikumstermine und der erstellte und eingereichte Computercode bewertet werden. Neben einem Einführungstermin wird eine individuelle Betreuung an den Praktikumsterminen angeboten. Die Endnote setzt sich wie folgt aus den Prüfungselementen zusammen: 50% mündliche Prüfung 50% Praktikumsaufgaben",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Vorlesung Audiokommunikation (BSc) empfohlen\nVorlesung Psychoakustik und audiologische Anwendungen hilfreich\nGrundkenntnisse in Signalverarbeitung hilfreich\nProgrammierkenntnisse in Matlab hilfreich",
    "content": "Das Modul setzt sich aus einer Vorlesung und einem Praktikum zusammen. Die Vorlesung behandelt folgende Themen:\n- AD-DA Wandlung (Sampling), z-Transformation, Ratenänderung, DFT\n- Prinzipien der Realzeitverarbeitung: blockweise Faltung mit DFT (overlap-add/overlap-save)\nEI7493: Signal Processing for Audio Technology | Signal Processing for Audio Technology [PASV]\n- Filterung von Audiosignalen: IIR und FIR-Filter, Equalizers (Hochpass, Tiefpass und Bandpass/\nShelving-Filter), Frequenzgruppenfilter (BARK-Filterbank, Gammatone)\n- Inverse Filterung zur Frequenzgangentzerrung\n- Dynamikbeeinflussung: Kompressor und Limiter, Attack- und Releasezeiten, Verzerrungen,\nMultiband-Kompressoren\n- Musikeffekte: Echo, Chorus und Phaseneffekte (Flanger, Phaser), Verzerrer, Gateing, Wah-Wah,\nRöhrenverstärker\n- Vocoder für Sprache und Musik (Time stretching, pitch shifting, Whisperization)\n- Richtmikrofone: Beamformer\n- Binauraltechnik: Messung und Anwendung von Außenohrübertragungsfunktionen und\nRaumimpulsantworten für die Auralisation,\n- Simulation von Raumhall,\n- Klangsynthese.\nIm Praktikum bearbeiten die Teilnehmer im Kleingruppen verschiedene Aufgaben, in denen grundlegende Methoden der digitalen Audio-Signalverarbeitung in Matlab praxisrelevant erarbeitet werden. Diese entsprechen ausgewählten Themen aus der begleitenden Vorlesung, beispielsweise für Implementierungen von Realzeitfilterung, Musikeffekten, Dynamikkompressoren, Raumhallgenerierung oder die binaurale Synthese. Neben den fachlichen Methoden werden Programmierkenntnisse in Matlab vermittelt.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, grundlegende Techniken der Audio-Signalverarbeitung zu verstehen und praktisch anzuwenden. Im Modul werden weiterhin Kenntnisse in Matlab erworben.",
    "teaching_methods": "Vorlesung und Nachbereitung des Vorlesungsinhaltes; Praktikum mit Programmierung der Praktikumsaufgaben unter Betreuung und im Selbstudium; Selbststudium von begleitendem Material.",
    "media": "Vorlesung mit Anschrift, Audiodemonstrationen, gedruckten Materialien, Erläuterungen an\nFallbeispielen;\nProgrammierpraktikum mit Erstellung von Computercode zu vorgegebenen Aufgaben unter\nAufsicht eines Tutors.",
    "literature": "Oppenheim, A. V., and Schafer, R. W. (2009) Discrete-time signal processing, Prentice-Hall\nInternational, Englewood Cliffs, NJ.Zölzer (2008) Digital Audio Signal Processing, John Wiley &\nSons. Porat (1996) A Course in Digital Signal Processing, John Wiley & Sons.",
    "lv_sws_lecturer": "Bernhard Seeber seeber@tum.de\nEI7493: Signal Processing for Audio Technology | Signal Processing for Audio Technology [PASV]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSignalverarbeitung für die Audiotechnik (Vorlesung, 2 SWS)\nSeeber B\nSignalverarbeitung für die Audiotechnik, Praktikum (Praktikum, 4 SWS)\nSeeber B, Kuntz M, Azaripasand P, Bajool M, Guo Z"
  },
  {
    "module_id": "EI7494",
    "title": "Numerical Linear Algebra for Signal Processing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The examination is written, 90 min (with up to 20% multiple choice questions). With maximally 5 sheets of A4 paper as helping material, the students apply the taught concepts and results to analyze, optimize, and design numerical algorithms for signal processing. They answer comprehension questions and discuss the applicability of the different numerical algorithms.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Linear algebra, calculus, basics in signal processing.",
    "content": "Floating-point arithmetics: IEEE standard, error of floating-point arithmetic. Preliminaries from linear algebra: singular value decomposition (SVD), projectors, matrix norms, Householder reflection, Givens rotation. QR factorization: Gram-Schmidt orthogonalization, Householder triangularization, applications of QR factorization. Back substitution: solving a triangular equation system, inversion of a triangular matrix and application to channel equalization. Least squares: least squares with Cholesky factorization, QR factorization, and SVD; rank-deficient least squares, application to least squares estimation. Condition of a problem: norm-wise & component-wise condition numbers, condition number of basic operations, condition of inner product, matrix-vector product, unitary matrix, and equation system. EI7494: Numerical Linear Algebra for Signal Processing | Numerical Linear Algebra for Signal Processing Stability of an algorithm: backward stability, accuracy based on backward stability; stability of floating-point arithmetic, algebraic operations, Householder triangularization, back substitution; stability of solving equation systems via Householder triangularization. Systems of equations: Gaussian elimination, pivoting, stability of Gaussian elimination; Cholesky factorization, pivoting, stability, application to MIMO detection. Eigenvalues: Hessenberg form; Rayleigh quotient iteration, QR algorithm, application to principal component analysis; SVD, bi-diagonal form, implicit Q-theorem, Golub-Reinsch SVD, application to blind channel estimation.",
    "learning_outcomes": "At the end of the module, the students can apply the concepts and algorithms of numerical linear algebra for the optimal design and operation of practical signal processing systems with finite precision. The students are able to analyze and evaluate the computational complexity of an algorithm, the condition of a problem and the stability of an algorithm to solve the problem by forward and backward error analysis. In particular, the students can analyze the complexity and stability properties of the Householder QR factorization, back substitution, Gaussian elimination together with Cholesky factorization, and the different schemes to solve a least squares problem. They can impose a defined structure to a matrix with Householder reflections and Givens rotations. Furthermore, the students are able to implement the basic steps of an eigenvalue and singular value decomposition.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students, consolidated knowledge is aspired by repeated lessons in exercises and tutorials. The students can deepen and broaden their competences by completing additional voluntary projects where they are analyzing, evaluating, and creating own solutions for practical problems. The voluntary projects account for maximally twenty-five percent of the final grade. Teaching method: During the lectures, students are instructed in a teacher-centered style. The exercises are held in a student-centered way.",
    "media": "The following kinds of media are used:\n- Presentations.\n- Lecture notes.\n- Exercises with solutions as download.",
    "literature": "The following literature is recommended:\n- L. N. Trefethen and D. Bau III. Numerial Linear Algebra. Society for Industrial and Applied\nMathematics (SIAM), 1997.\nEI7494: Numerical Linear Algebra for Signal Processing | Numerical Linear Algebra for Signal Processing\n- N. J. Higham. Accuracy and Stability of Numerical Algorithms. Society for Industrial and Applied\nMathematics (SIAM), 2002.\n- J. W. Demmel. Applied Numerical Linear Algebra. Society for Industrial and Applied Mathematics\n(SIAM), 1997.\n- G. H. Golub and C. F. van Loan. Matrix Computations. Johns Hopkins University Press, 1989.",
    "lv_sws_lecturer": "Joham, Michael; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNumerical Linear Algebra for Signal Processing (Vorlesung mit integrierten Übungen, 4 SWS)\nJoham M, Syed S"
  },
  {
    "module_id": "EI7564",
    "title": "Themen der Signaltheorie",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 45,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung umfasst eine mündliche Prüfung am Ende des Semesters",
    "repetition": "",
    "recommended_prerequisites": "Kenntnisse der mathematischen Analysis und der Grundzügen von Banachräumen",
    "content": "Wir werden unteschiedliche Basen für Signalen auf dem Einheitsinterval untersuchen. Wir fangen mit einigen mathematischen Voraussetzungen an, vor allem einigen Theoremen der Funktionanalysis, und wenden dies dann an die Fourier, Walsh und Prolate Spheroidal Wave Functions an. Zu untersuchen ist bei jeder Basis vor allem die Konvergenz von Approximationen unter unterschiedlichen Normen.",
    "learning_outcomes": "Erzielt ist, dass Teilnehmer ein theoretisches Verständnis für Approximationen bezüglich unterschiedlichen Basen entwickeln.",
    "teaching_methods": "",
    "media": "Tafelvorträge. Ein Skript wird auch zum Semesterbeginn verteilt.",
    "literature": "EI7564: Themen der Signaltheorie | Topics in Signal Theory",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI75671",
    "title": "Ringvorlesung Systemsicherheit",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "In einer schriftlichen Prüfung (60 min) bearbeiten Studierende offene Fragestellungen zu vorgestellten Anwendungen der Systemsicherheit. Durch das Beantworten von Fragen weisen sie nach, dass Sie die Kernaussagen der verschiedenen Ausprägungen der Systemsicherheit verstanden haben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Der vorherige Besuch des Moduls Grundlagen der IT-Sicherheit oder gleichwertig erleichtert das\nVerständnis.",
    "content": "In der Vorlesung werden von verschiedenen Referenten aus der Industrie und aus Forschungseinrichtungen aktuelle Problemstellungen der IT Sicherheit von Systemen und Anwendungen vorgestellt und vorhandene Lösungen präsentiert.",
    "learning_outcomes": "Nach Abschluss des Moduls sind die Studierenden in der Lage grundlegende Problemstellungen von sicherheitskritischen Systemen zu verstehen und aktuelle Lösungsansätze für diese Probleme wieder zu geben.",
    "teaching_methods": "Vorlesung u.A. mit praktischen Demonstrationen EI75671: Ringvorlesung Systemsicherheit | Lecture Series System Security [RISEC]",
    "media": "Foliengestützter Vortrag",
    "literature": "Aktuelle Publikationen in den behandelten Themengebieten",
    "lv_sws_lecturer": "Prof. Dr.-Ing. Georg Sigl\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRingvorlesung Systemsicherheit (Vorlesung, 2 SWS)\nBudak U [L], Sigl G, Schupp J"
  },
  {
    "module_id": "EI7584",
    "title": "Multirate Signal Processing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "The exam will take place at the end of the term in written form, 60 min. It comprises two independent problems to be solved. Training during the lessons will be done based on similar problems. The exam focuses to verify the learning effects of the multi rate signal processing principles. The scriptum which is provided accompanying the lessons may be used during the exam. In alignment with the students the exam may also be held oral. Usually the exam is held during the last lesson of a term.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Digital Signal Processing Basics\nSignal Analysis in Frequency Domain\nz-Transform\nSampling Theorem",
    "content": "The module offers a detailed insight in the digital signal processing domain with focus on multi rate signal processing the importance of which is still increasing in leading edge communication technologies. Multi rate signal processing is employed in almost all state-of-the-art communication systems for audio, video and data. In particular, due to Moore s law complexity and speed of modern signal processing technology are increasing and even more parts of a communication system are implemented in the digital domain. Therefore, sampling rate conversion is a key factor, especially when coupling digital systems as well as for compression of data. Examples of implementations of multi rate signal processing are given for audio, video and mobile communication. EI7584: Multirate Signal Processing | Multirate Signal Processing",
    "learning_outcomes": "Students shall learn in this module to design and dimension sampling rate converters, to understand the theory and background and to employ various implementation forms. Furthermore, at the end of the term students shall be able to combine sampling rate converts with other signal processing techniques, e.g. band-pass sub-sampling, and also to understand the economical aspects of different implementations.",
    "teaching_methods": "Teaching method is based on presentation using the projector and the script for explanation of the content. In addition to the individual learning techniques of the students an intensive training is provided solving problems and presenting additional examples on the black board.",
    "media": "The following media are used:\n- Presentation of the content using the projector during the lessons\n- Examples are presented on the black board\n- Script is available as download\n- Problems available as download (included in script)",
    "literature": "Fliege, N.: Multiraten-Signalverarbeitung; Crochiere, R. E., Rabiner, L. R.: Multirate Digital Signal\nProcessing\nVaidyanathan, P. P.: Multirate Signal Processing",
    "lv_sws_lecturer": "Utschick, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMultirate Signal Processing (Vorlesung, 2 SWS)\nWenzel D"
  },
  {
    "module_id": "EI7585",
    "title": "Clinical Applications of Computational Medicine",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 150,
    "hours_presence": 30,
    "examination_achievements": "After three introductory lectures, the students work in small groups on different projects. Projects are focused on actual clinical applications from some of these areas: multiple sclerosis, obstetrics, cardiovascular disease, fall prevention/detection and sport medicine. The projects will be fixed in detail after the introductory lectures according to the special interests and expertise of the students and the resources. The work done in previous semesters are available at the website of the department to serve as orientation. In general, a project encompasses these tasks: study design, data collection, algorithm development and validation, data analysis and summary of results. Students should prepare a report (maximum 4 pages) including the details of their work as well as a set of slides for the final presentation. The The results will be presented to the audience and defended at the end of the semester. External guests are invited to attend and participate in the final presentation. The quality of the written report, the presentation and the discussion contribute each as 1/3 of the final grade.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Analysis, classical mechanics, fundamentals in electrical engineering, basics in social psychology,\nbasic knowledge of R/Matlab and statistics\nEI7585: Clinical Applications of Computational Medicine | Clinical Applications of Computational Medicine",
    "content": "Computational Medicine is a new scientific field in the intersection between mathematics, physics, biostatistics, computer science, electronics, biomedical engineering and medicine. We focus on actual clinical applications of complex, interdisciplinary solutions for problems in healthcare. Using examples from areas mostly from multiple sclerosis, obstetrics, cardiovascular disease, fall prevention/detection and sport medicine we will explore some of the following important aspects: data collection, biostatistical modelling, filtering, pattern recognition, alarms, prediction, validation, development & certification of web-based tools for clinical decision making.",
    "learning_outcomes": "At the end of the module the students are able to understand the problems and key success factors for business models in computational medicine/telemedicine with examples in selected medical areas (multiple sclerosis, obstetrics, cardiovascular disease, fall prevention/detection, exercise therapy). They are able to apply basic signal processing techniques to solve specific problems (filtering and analysis of data from mobile accelerometry/ECG). They also should be able to understand the scientific method to conduct exploratory research generating and testing hypothesis, looking at events, collecting data, analyzing information and reporting the results. In addition, it is expected that they improve their written and oral communications skills by the creation of a scientific report and holding a public presentation.",
    "teaching_methods": "Zunächst wir in einer Reihe von 3 Vorlesungen das Basiswissen zu den einzelnen Themen vermittelt. Darufhin erfolgt eine den Fähigeiten und Interessenslage angepassten Themenauswahl (\"matching\") zur Vertiefung. Kleingruppen (1-3 Studenten) führen mit entsprechender Unterstützung ein kleines Projekt durch, das am Ende präsentiert und diskutiert wird. Also ist die Lehr- und Lernmethode ein Mix aus Vorlesung, Seminar, Übung und Labor.",
    "media": "multimediale Präsentationen, \"\"hands-on\"\" Erfahrung mit Medizinprodukten/Messgeräten,\ninteraktive OLAP-Web-Tools, Besuche bei Medizintechnikfirma/klinischen Partnern.",
    "literature": "\" Motl RW, Weikert M, Suh Y, Sosnoff JJ, Pula J, Soaz C, Schimpl M, Lederer C, Daumer M:\nAccuracy of the actibelt® Accelerometer for Measuring Walking Speed in a Controlled Environment\namong Persons with Multiple Sclerosis. Gait and Posture (2011 Sep 22. [Epub ahead of print])\n\" Schimpl M, Moore C, Lederer C, Neuhaus A, Sambrook J, Danesh J, Ouwehand W, Daumer\nM: Association between walking speed and age in healthy, free-living individuals using mobile\naccelerometry - a cross-sectional study. PLoS ONE 6(8): e23299. doi:10.1371/journal.pone.\n0023299\n\" Schimpl M, Lederer C, Daumer M: Development and validation of a new method to measure\nwalking speed in free-living environments using the actibelt platform. PLoS ONE 6(8): e23080.\ndoi:10.1371/journal.pone.0023080\nEI7585: Clinical Applications of Computational Medicine | Clinical Applications of Computational Medicine\n\" Scalfari A, Neuhaus A, Daumer M, Ebers GC, Muraro PA: Age and disability accumulation in\nMultiple Sclerosis. Neurology (published ahead of print September 14, 2011)\n\" Daumer M, Neuhaus A, Herbert J. Ebers G: Prognosis of the individual course of disease: the\nelements of time, hetereogeneity and precision, Journal of the Neurological Sciences 287: S50-\nS55, 2009\n\" Ebers G., Heigenhauser L., Daumer M., Lederer C., Noseworthy J.: Disability as an outcome in\nclinical trials . Neurology 71 (9), 624-631, 2008\n\" Daumer M, Held U, Ickstadt K, Heinz M, Schach S, Ebers G: Reducing the Probability of\nfalse positive Research Findings by pre-publication Validation Experience with a large Multiple\nSclerosis Database. BMC Medical Research Methodology 8:18, 2008\n\" Schunkert, H. et al. for the Cardiogenics Consortium: Repeated Replication and a Prospective\nMeta-Analysis of the Association Between Chromosome 9p21.3 and Coronary Artery Disease.\nCirculation 117, 1675-1684, 2008\n\" Daumer M, Scholz M, Boulesteix AL, Pildner von Steinburg S, Schiermeier S, Hatzmann\nW, Schneider KTM: The Normal Fetal Heart Rate Study: Analysis Plan , Available at Nature\nPrecedings http://precedings.nature.com/documents/980/version/2, 2007\n\" Daumer M., Neuhaus A., Lederer C., Scholz M., Wolinsky JS and Heiderhoff M.: Prognosis of\nthe individual course of disease steps in developing a decision support tool for Multiple Sclerosis.\nBMC Medical Informatics and Decision Making 2007, 7:11\n\" Daumer M, Thaler K, Kruis E, Feneberg W, Staude G, Scholz M: Steps towards a miniaturized,\nrobust and autonomous measurement device for the long-term monitoring of the activity of patients\nActiBelt . Biomedizinische Technik, Biomedical Engineering 52: 149-55, 2007\n\" Noseworthy J., Kappos L., Daumer M.: Competing interests in Multiple Sclerosis research , The\nLancet 361, S. 350f, 2003\n\" Daumer M.: Online Monitoring von Changepoints in: Biomedizinische Technik, 42,\nErgänzungsband 2, Verlag Schiele und Schön, S. 214-215, 1998\n\" Daumer M., Nahm W., Scholz M., Dannegger F., Kochs E., Morfill G.: Konzept für eine internet-\nbasierte Datenbank zur Unterstützung von Projekten in der Biosignalanalyse , Ergänzungsband\nBiomed Tech, 43 (3), S. 23-27, 1998",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nClinical Applications of Computational Medicine (Vorlesung, 2 SWS)\nDaumer M ( Baumhoer R )"
  },
  {
    "module_id": "EI7605",
    "title": "Gassensorik für biomedizinische Anwendungen",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Die Modulprüfung besteht aus einer schriftlichen Klausur von 30 Minuten Bearbeitungsdauer. Außer Taschenrechner sind keine Hilfsmittel erlaubt. Die Klausur prüft das Erreichen der angestrebten Lernergebnisse durch Aufgabenstellungen mit überwiegend offenem Antwortformat. Dabei werden Antworten in Form kurzer beschreibender Texte oder Skizzen (Lernziele 1 und 2), Berechnungen und Skizzen (Lernziel 3) bzw. stichpunktartiger Texten, Berechnungen oder Skizzen als Lösung von Problemen aus gegebenen Fallstudien (Lernziel 4) erwartet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Experimentalphysik, Mathematik von Differentialgleichungen",
    "content": "Das Modul vermittelt das Wissen über Verfahren zur Bestimmung von medizinisch relevanten Parametern im Atemgas. Folgende Kapitel werden behandelt: Kapitel 1 – Physik und Chemie der Atmosphäre Kapitel 2 – Anatomie und Physiologie der Atemwege Kapitel 3 – Gasaustausch in Lunge und Körpergeweben Kapitel 4 – Infektionen von Lungen und Atemwegsorganen Kapitel 5 – Metabolische Abbauprodukte im Atemgas Kapitel 6 – Die Messungen von Gasmassenfluss EI7605: Gassensorik für biomedizinische Anwendungen | Gas Sensing in Biomedical Applications [Gassensorik für biomedizinische Anwendungen] Kapitel 7 – Amperometrische Messverfahren am Atemgas (Elektrochemie) Kapitel 8 – Resistive Messverfahren (Elektrochemie) Kapitel 9 – Kapazitive Messverfahren (Elektrochemie) Kapitel 10 – Impedanz- bzw. Kapazitätsspektroskopie Kapitel 11 – Massenspektroskopie und optische Verfahren",
    "learning_outcomes": "Nach der Teilnahme am Modul sind die Studierenden in der Lage, 1. die Anatomie und Physiologie der äußeren und inneren Atmung mit ihren biomechanischen und biochemischen Prozessen korrekt zu beschreiben, 2. pathologische und gesunde Zustände der Atmung und der Atmungsorgane zu unterscheiden, 3. die Sensorik für Parameter des Gasflusses und des Atemgases zu charakterisieren, 4. die Implementierung dieser Sensorik in medizinisch-diagnostische Anwendungen zu beurteilen.",
    "teaching_methods": "Die Inhalte werden in der Vorlesung vermittelt und anhand von Fallbeispielen und aufgetretenen Problemen aus der beruflichen Praxis des Dozenten erläutert. Soweit möglich und sinnvoll werden diese Fallbeispiele mit praktischen Demonstrationen und digitalen Medien illustriert. Die Studierenden vertiefen diese Inhalte in der Auseinandersetzung mit den angebotenen Literaturempfehlungen und in gestellten Übungsaufgaben.",
    "media": "Präsentationen, Videomaterial, Tafelarbeit",
    "literature": "Gerhard Wiegleb, Gasmesstechnik in Theorie und Praxis, Springer Verlag;\nPeter Gründler, Chemische Sensoren, Springer Verlag;\nFan Ren and Stephen J. Pearton, Semiconductor device-based sensors for gas, chemical and\nbiomedical applications, CRC Press;\nSunipa Roy and Chandan Kumar Sarkan, MEMS and Nanotechnology for Gas Sensors, CRC\nPress;",
    "lv_sws_lecturer": "Hayden, Oliver; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGassensorik für biomedizinische Anwendungen (Vorlesung, 2 SWS)\nHayden O [L], Scholz A"
  },
  {
    "module_id": "EI7607",
    "title": "Integrierte Systeme für den Mobilfunk",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "In einer mündlichen Prüfung weisen die Studierenden in einem Zwiegespräch mit dem prüfer ihre Kenntnisse im Bereich der Algorithmen in Mobilfunksystemen und deren Implementierung in integrierte Systeme nach. Anhand eines Praxisbeispiels müssen Studierende ein Systemkonzept analysieren und mögliche Optimierungsmöglichkeiten erklären.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Oberstufenmathematik, Grundlagen Nachrichtentechnik & Kommunikationsnetze",
    "content": "Die Vorlesung vermittelt einen Einblick in die Implementierung und Optimierung von Chipsätzen für Endgeräte aktueller und künftiger Mobilfunksysteme. Es werden einzelne Komponenten zur Signalverarbeitung erläutert und Ansatzpunkte sowie Beispiele für eine System-Optimierung gezeigt. * Einführung: Mobilfunkendgeräte als hoch integrierte Systeme; * Grundlagen: WCDMA und HSPA; * Signalverarbeitung (Algorithmen, Architekturen, Implementierung): Transceiver, Searcher, Rake, Entzerrer, Kanal-Decoder; * 3G-Protokoll-Stapel (Implementierung, Software-Architektur): MAC, RLC, RRC; * Optimierung: Verbindungsabbrüche, extreme Szenarien; * Projektplanung: Chip-Entwicklung, Plattform-Integration, Verifikation; * Ausblick: 3G LTE: OFDMA, MIMO, Implementierungsaspekte. EI7607: Integrierte Systeme für den Mobilfunk | Integrated Systems for Cellular Radio [ISM]",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls verstehen Studierende den Zusammenhang zwischen den in Mobilfunksystemen verwendeten Algorithmen bzw. Standards und deren Umsetzung auf integrierten Systemen. Dies umfasst Empfängeralgorithmik, die Interaktion Endgerät - Netzwerk, und insbesondere auch bei der Realisierung zu berücksichtigende wirtschaftliche Rahmenbedingungen. Basierend auf den Erläuterungen anhand aktueller Mobilfunksysteme sind sie in der Lage, Architekturkonzepte und mögliche Systemoptimierungen zu analysieren und sie im Hinblick auf ihre Eignung für die Weiterentwicklung der Systeme und ihre Anwendung auf andere Funksysteme zu bewerten.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch anschauliche Fallstudienbetrachtungen angestrebt. Als Lehrmethode wird in der Vorlesung Frontalunterricht, ergänzt durch Gruppendiskussionen, verwendet. Eigenstudium des ausgeteilten Materials. In der Vorlesung werden Publikationen und Datenblätter zu den prüfungsrelevanten Fallstudien ausgegeben, die von den Studierenden selbständig analysiert werden.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen mit Laptop und Beamer\n- Tafelanschrieb\n- Literatur, Datenblätter (werden in der Vorlesung verteilt)",
    "literature": "Folgendes Buch wird empfohlen:\nH. Holma, A. Toskala (Editors), \"\"WCDMA for UMTS: HSPA Evolution and LTE, 4th Edition\"\", Wiley\n2007",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntegrierte Systeme für den Mobilfunk (Vorlesung, 2 SWS)\nDrewes C, Wild T"
  },
  {
    "module_id": "EI7622",
    "title": "Zulassungsverfahren und Qualitätsmanagement in der Medizintechnik",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "In einer schriftlichen Klausur (60 min) weisen die Studierenden durch das Beantworten von Fragen ohne Hilfsmittel Ihre Kenntnis der einschlägigen Vorschriften und Normen nach sowie das Verständnis für ihre Umsetzung. Während des Semesters muss verpflichtend ein Vortrag gehalten werden, mit dem sich Studierende auf ein Schwerpunktthema gezielt vorbereiten. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 100 % Abschlussklausur",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Bachelorlevel.",
    "content": "Sicherheit und Zuverlässigkeit von Prozessen, Sicherheitskonzepte für Medizinprodukte, Maintenance, Regulatorische Vorgaben für Zertifizierungsprozesse (93/42 EEC, FDA 21 CFR 800), Anzuwendende Gesetze und Richtlinien für Hersteller und Betreiber, Medizinproduktegesetz, Medizinprodukte Betreiber Verordnung, CE Zertifizierungverfahren, FDA 510 (k) Verfahren, Relevante Normen und Nachweis der Konformität, Software in Medizinprodukten, Risikomanagementakte, notwendige Organisationsstrukturen anhand KMU, Erläuterung am Projektbeispiel. EI7622: Zulassungsverfahren und Qualitätsmanagement in der Medizintechnik | Regulatory affairs and quality management for the design and development of medical devices",
    "learning_outcomes": "Nach dem erfolgreichen Abshcluss des Moduls sind die Studierenden in der Lage die Sicherheit und Zuverlässigkeit von Prozessen charakterisieren zu können. Gültige Normen zum Zertifizierungsprozess in EU und USA werden verstanden und die Prinzipien können auf internationale Bestimmungen übertragen werden. Die gängigen Normen zur Sicherheit von Medizinprodukten wurden erlernt der Nachweis der Konformität kann umgesetzt werden. Strukturelle, organisatorische Voraussetzungen für KMU / Projektdurchführung werden verstanden. Die Prozesse der Auditierung im Projekt / Fachbereich werden verstanden. Die Studierenden können die Anforderungen und Normen umsetzen und eigene Risikomanagementakten für neue Produkte analysieren und selber entwerfen.",
    "teaching_methods": "Vorlesung, eigene Materialrecherche und Partnerarbeit mit abschliessenden Vortrag.",
    "media": "Präsentation",
    "literature": "",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nZulassungsverfahren und Qualitätsmanagement in der Medizintechnik (Vorlesung mit integrierten\nÜbungen, 3 SWS)\nHeitmann N [L], Oswald J"
  },
  {
    "module_id": "EI7623",
    "title": "Fortgeschrittene Konzepte der Wahrnehmung für Robotersysteme",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Das angestrebte Verständnis für die Rolle und das Zusammenwirken verschiedenster Komponenten und Methoden in robotischen Wahrnehmungssystemen lässt sich am besten in einer mündlichen Prüfung überprüfen. Der fortschreitende Lernerfolg soll während des Semesters anhand der Ergebnisse von Hausaufgaben überwacht werden, in denen die Studenten den Lehrstoff wiederholen und weiterdenken sollen. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 100 % Mündliche Abschlussprüfung\nEine vollständige Erledigung der Hausaufgaben wird mit einem Bonus von 0,3 auf die bestandene Modulnote angerechnet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Programmieren in C/C++\nGrundkenntnisse der Robotik\nGrundkenntnisse der Bildverarbeitung\nFolgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nGrundlagen intelligenter Roboter\nProjektkurs C++",
    "content": "Einführung: Rolle der Wahrnehmung in autonomen und semiautonomen (Roboter-)Systemen EI7623: Fortgeschrittene Konzepte der Wahrnehmung für Robotersysteme | Advanced Robotic Perception [ARP]\n- Sensortechnologien für robotische Wahrnehmungssysteme\n- Schwächen und Stärken unterschiedlicher Sensoren\n- Umgang mit unsicherer Information\n- Sensordatenfusion und Zustandsschätzung\n- Modellierung von Sensoren\n- Statische und dynamische Umgebungs- und Szenenmodelle\n- Wahrnehmung als kognitiver Prozess",
    "learning_outcomes": "Nach Teilnahme an den Modulveranstaltungen kennen die Studenten die wesentlichen Komponenten und Konzepte robotischer Perzeptionssysteme und sind in der Lage Wahrnehmungsaufgaben für autonome (Roboter-) Systeme zu analysieren sowie das passende Perzeptionssystem zu konzipieren.",
    "teaching_methods": "Als Lernmethode wird zusätzlich zu den individuellen Methoden des Studierenden eine vertiefende Wissensbildung durch praktisches Implementieren von Vorlesungsinhalten im Rahmen der Hausaufgaben, sowie kritisches Auseinandersetzen mit den Ergebnissen in der Diskussion im Plenum angestrebt. Als Lehrmethode wird in der Vorlesung zum einen Frontalunterricht gehalten, die Hausaufgaben erfolgen im unterstützten Selbststudium, deren Ergebnisse werden von den Studenten im Plenum vorgestellt und gemeinsam mit dem Dozenten diskutiert.",
    "media": "Folgende Medienformen finden Verwendung:\n- Vorlesung gestützt auf diverse Standardwerke aus dem Bereich\n- Vorlesungsfolien als Download im Internet\n- Beispielprobleme und Lösungen in Simulation und Experiment",
    "literature": "Weiterführende Informationen finden sich in folgenden Werken:\n- S. Thrun, W. Burgard, and D. Fox, Probabilistic Robotics, MIT Press 2005.\n- R. Hartley, and A. Zisserman, Multiple View Geometry in Computer Vision, Cambridge University\nPress, 2004\n- C. M. Bishop, Pattern recognition and machine learning. Springer, 2006.",
    "lv_sws_lecturer": "Buss, Martin; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nFortgeschrittene Konzepte der Wahrnehmung für Robotersysteme (Vorlesung, 2 SWS)\nvon Wichert G\nEI7623: Fortgeschrittene Konzepte der Wahrnehmung für Robotersysteme | Advanced Robotic Perception [ARP]"
  },
  {
    "module_id": "EI7624",
    "title": "Techno-Economic Analysis of Telecommunication Networks",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The achievement of this course will be evaluated with a project (40%) and a final exam (60%). Both are mandatory. The project helps students to apply the modeling concepts presented in the course to a self- selected process. The project gives students hands-on on process modeling and the simulation tools learned during the course. The students will select one telecom-related operational process and model it based on BPMN. The model will be presented and discussed in class, before starting with the implementation and evaluation. Tools like arena or TIBCO will be used. The final step is the comparison of a default scenario with two case studies. This comparison will allow the students to understand the value of such techno-economic analysis and to face problems that operators are dealing with. The final analysis will be summarized in a small report (~10 pages) and a presentation in class. The exam will take place at the end of the semester (90 minutes duration). The exam will include theoretical questions regarding the most important concepts as well as exercises related to the cost modeling, process modeling, cost assessment, etc. The exam evaluates the use of techno- economic evaluation metrics, cost modeling of telecom operators, main cost drivers of networks, etc.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "The knowledge of following modules are recommended:\n- Broadband Communication Networks\nEI7624: Techno-Economic Analysis of Telecommunication Networks | Techno-Economic Analysis of Telecommunication\nNetworks",
    "content": "Value analysis studies are an integral part of every strategic marketing and business plan related with new products and services in the ICT industry. They are commonly used to compare important parameters such as capital and operational expenditures (CapEx, OpEx), life cycle costs, revenue streams, discounted cash flows, and techno economic evaluation measures such as the net present value (NPV) and the internal rate of return (IRR). Such studies offer a measurable output and can be used to support the decision making process related with the business or the market that a company should be in, the potential of certain technology solutions, or, the future of internal R&D projects, etc. A good modelling of the network operational process is necessary to identify the key cost factors and find ways to reduce cost and increase benefits. Some process modeling exercises will be performed with the students to perform consistent and complete cost assessments.",
    "learning_outcomes": "After completion of the module, students understand the different processes of telecommunication networks (life cycle) as well as how their economic cost can be evaluated. They are able to apply important economic concepts as well as their application on networks. Students will also have the opportunity to model the process, its implementation, and simulation using a tool such as Arena or TIBCO.",
    "teaching_methods": "Learning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons with exercises and tutorials. The students will apply their knowledge with a process modeling tool (TIBCO or Arena). Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way. In the exercise part, the students have access to computer-based tool and will be guided through several problem studies, which they have to model, implement, solve and present independently or in small groups.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises and solutions\n- Computer-based tool environment for process modeling",
    "literature": "TIBCO/Arena on-line manuals\nBPMN tutorials",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nEI7624: Techno-Economic Analysis of Telecommunication Networks | Techno-Economic Analysis of Telecommunication\nNetworks\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI76251",
    "title": "Topics in Audio Information Processing Research",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Die Studierenden lesen wissenschaftliche Veröffentlichungen als Vorbereitung zu jedem Termin und tragen zur Diskussion über die Inhalte bei. Der qualitative Beitrag zu wissenschaftlichen Diskussion wird bewertet (20%). Die Studierenden wählen mindestens ein Thema zum Selbststudium und zur Präsentation vor der Gruppe mit Leitung der Diskussion aus. Das Verständnis und die Aufbereitung des Materials (u.a. wissenschaftliche Methoden, Ergebnisse), sowie die Anleitung der Diskussion während der 2-stündigen Präsentation werden bewertet (40%). Bei mehr als einer Präsentation wird die bessere bewertet. In der abschließenden mindestens 20-minütigen mündlichen Prüfung (3 Fragen, davon eine über das eigene Thema) wird das Gesamtverständnis des Kursmaterials geprüft (40%).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Vorlesung \"The Auditory System\" oder\nVorlesung \"Audiokommunikation\";\nModul \"Signalverarbeitung für die Audiotechnik\" hilfreich",
    "content": "Wissenschaftliche Veröffentlichungen (Zeitschriftenartikel, Patente) zu aktuellen Themen aus der Audio-Informationsverarbeitung werden in einer kleinen Gruppe vorgestellt und umfangreich besprochen („Journal Club“). Jeder Teilnehmer stellt mindestens einmal eine Veröffentlichungen vor und leitet die Diskussion. Um die Diskussion zu ermöglichen, ist das Material vor jedem Termin von jedem Teilnehmer vorab zu lesen. Der Fokus liegt auf dem Verständnis und der Diskussion des Inhalts. Die Teilnehmer lernen aktuelle Fragestellungen der Audio-Informationsverarbeitung kennen, schulen das Lesen von englischsprachigen wissenschaftlichen Veröffentlichungen und üben sich in der wissenschaftlichen Diskussion sowie der Diskussionsleitung. Das Seminar wendet sich an fortgeschrittene Studenten, Doktoranden und Post-Docs mit Schwerpunkt Audio- Informationsverarbeitung.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, aktuelle Fragestellungen der Audio-Informationsverarbeitung zu identifizieren, aktuelle Lösungsansätze zu verstehen und zu bewerten, englischsprachige wissenschaftliche Veröffentlichungen aus dem Gebiet zu lesen und zu verstehen, sowie an wissenschaftlichen Diskussionen teilzunehmen und diese zu leiten.",
    "teaching_methods": "Die Studierenden lesen wissenschaftliche Veröffentlichungen als Vorbereitung zu jedem Termin und sie wählen eine wissenschaftliche Publikation zum Selbststudium und zur Präsentation vor der Gruppe aus. Der Inhalt der Veröffentlichungen wird umfangreich in der Gruppe diskutiert. Vor der abschließenden mündlichen Prüfung rekapitulieren die Studierenden das Kursmaterial.",
    "media": "Zeitschriftenartikel (gedruckt/PDF)\nBücher\nInternet Recherche\nPräsentationen (Powerpoint/pdf)",
    "literature": "Die semesterweise wechselnden Themen und Publikationen werden im ersten Kurstermin\nvorgestellt und ausgewählt. Das Material wird überwiegend gestellt.",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nTopics in Audio Information Processing Research (Seminar, 2 SWS)\nSeeber B, Kuntz M, Zhang H, Azaripasand P, Bajool M, Bischof N"
  },
  {
    "module_id": "EI7630",
    "title": "Datenübertragung mit Rückkopplung",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Im Rahmen einer 60 minütigen schriftlichen Klausur wird überprüft, ob die Studierenden wichtige Modelle und Konzepte der Rückkopplung in der Informatonstheorie verinnerlicht haben. Dazu ist die Beantwortung von Fragen und das Lösen von beispielhaften Problemstellungen ohne zusätzliche Unterlagen notwendig. Die Fähigkeit zur individuellen Problemlösung wird im Rahmen problembezogener Übungsaufgaben semesterbegleitend geprüft. Die Bearbeitung und Abgabe der Übungsaufgaben wird mit bewertet. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 75% Abschlußprüfung\n- 25% Bewertung der Übung",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Voraussetzungen:\n- Grundlagen der Nachrichtentechnik und Informationstheorie\n- Grundlagen der Wahrscheinlichkeitstheorie\n- Mathematisches Interesse\nEs wird empfohlen folgende Module zuvor abgelegt zu haben:\n- Nachrichtentechnik\n- Information Theory\n- Höhere Mathematik\nEI7630: Datenübertragung mit Rückkopplung | Communication with Feedback",
    "content": "Die passive Rückkopplung gilt als Standard in Kommunikationssystemen. Hierbei existiert ein Rückkanal vom Empfänger zum Sender. Über diesen Kanal erhält der Sender Auskunft über das empfangende Bit. In dieser Veranstaltung nehmen wir an, dass der Kanal passiv ist, das heißt, dass der Empfänger die Rückkopplung nicht beeinflussen kann. Wir betrachten das kombinatorische Modell (fehler-korrigierende Codes) und das probabilistische Modell (diskrete gedächtnislose Kanäle). Shannon hat gezeigt, dass passive störungsfreie Rückkopplung die Kapazität des diskreten gedächtnislosen Kanals nicht vergrößert. Ahlswede zeigte jedoch, dass es einfachere Codes gibt um die Kapazität zu erreichen. Bei robusten Informationsübertragungen vergrößert Rückkopplung die Kapazität. Berlekamp hat gezeigt, dass die Kapazitätsfehlerfunktion für fehlerkorrigierende Blockcodes mit Rückkopplung immer größer ist als ohne Rückkopplung. Wir haben gezeigt, dass dies auch für nicht-binäre Codes gilt. Bei der Analyse des Problems stellt sich heraus, dass man gleichzeitig eine Lösung zu dem Ulam-Millionenspiel erhält. In dieser Veranstaltung werden beide Modelle vorgestellt und analysiert. Es werden gleichzeitig offene interessante Probleme vorgestellt.",
    "learning_outcomes": "Nach erfolgreicher Teilnahme an diesem Modul kennen die Studierenden die wichtigsten Modelle und Konzepte der Rückkopplung in der Informationstheorie aus. Und können die wichstigsten Verfahren beurteilen und abschätzen. Die Studierenden haben ein Verständnis für kooperative Techniken in drahtlosen Mehrnutzersystemen entwickelt, sie sind in der Lage einen aktuellen wissenschaftlichen Beitrag zu verstehen und zu analysieren, und sie können dazu einen wissenschaftlichen Vortrag halten.",
    "teaching_methods": "Entwicklung und Präsentation der Vorlesungsinhalte an der Tafel. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispiele in der Übung.",
    "media": "Die Inhalte werden präsentiert mittels:\n- Präsentation an der Tafel,\n- Vorlesungsskript,\n- Übungsblätter\nComputergestützte Präsentation des Seminarvortrags",
    "literature": "E. Berlekamp, \"Block Coding with Noiseless Feedback\", PhD thesis, 1964,\nR. Ahlswede, \"A constructive proof of the coding theorem for discrete memoryless channels in\ncase of complete feedback\", Sixth Prague Conf. on Inf. Th., Stat. Dec. Fct's and Rand. Proc.,\nPubl. House Czechosl. Academy of Sc., 1-22, 1971, F. J. MacWilliams and N. J. A.\nSloane, \"The Theory of Error-Correcting Codes\", North-Holland Mathematical Library, Volume 16,\nEI7630: Datenübertragung mit Rückkopplung | Communication with Feedback\n1977 (11th reprint, 2003), Thomas M. Cover and Joy A. Thomas,\n\"Elements of information theory\", Wiley-Interscience publication.",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI7633",
    "title": "Optical Networks",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The ability to analyse an optical network from components to functions is examined during a written exam with 90 minutes duration. The capability for learning some particular topics more in detail and bring them into context with current developments will be examined through specific literature studies during the semester and the presentation of selected topics. The final grade is composed of the following elements:\n- 70% final exam\n- 30% literature search and presentation of targeted topic.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "The knowledge of following modules are recommended:\n- Broadband Communication Networks",
    "content": "Introduction to optical networks: why optical networks? Main drivers; Optical fiber and transmission effects; Most important optical network components; Routing and Wavelength Assignment; Optical Circuit Switched networks; Optical Packet Switched networks; Optical Burst Switched networks; Prevention, detection and reaction to failures; Optical access networks; from MPLS to GMPLS; actual research topics.",
    "learning_outcomes": "After completion of the module students have an understandig of optical networks (covering aspects from the physical layer to networking functions), and are able to analyse them in the EI7633: Optical Networks | Optical Networks aspects of what the components of an optical network are, how optical networks are evolving, how optical networks can be reliable, how optical networks are planned, controlled and managed.",
    "teaching_methods": "Lerning method: In addition to the individual methods of the students consolidated knowledge is aspired by repeated lessons in exercises and tutorials. Teaching method: During the lectures students are instructed in a teacher-centered style. The exercises are held in a student-centered way. Furthermore, a list of hop topics and research issues will be provided so that students are encouraged to study on of these topics in detail and give a presentation.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Invited tutorials\n- Exercises and solutions as download",
    "literature": "The following books are recommended:\n- Optical Network Design and Planning by Simmons, Jane M.\n- Optical networks by Ramaswami, Rajiv\n- Mesh based survivable networks by Grover, Wayne D.\n- Optical WDM networks by B. Mukherjee",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nOptical Networks (Vorlesung mit integrierten Übungen, 4 SWS)\nMas Machuca C"
  },
  {
    "module_id": "EI7638",
    "title": "Compressive Sampling",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Modulprüfung wird in Form einer mündlichen Prüfung erbracht. In dieser soll durch das Beantworten von Fragen und Darlegung eines Lösungsansatzes für ein gegebenes Problem nachgewiesen werden, dass die Studierenden die in Vorlesung und Übung behandelten Algorithmen der Parameterschätzung sicher einsetzen können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Lineare Algebra, Mathematisches Interesse, Systemtheorie, Signalbeschreibung im Zeit- und\nFrequenzbereich.\nFolgende Module sollten bereits erfolgreich absolviert worden sein: Analysis 1-3, Signale, System",
    "content": "Ziel der Vorlesung ist es, die Teilnehmer an \"\"Compressive Sampling\"\" heranzuführen - ein Forschungsgebiet, welches sich insbesondere in den letzten Jahren rasant entwickelt und etabliert hat. Hierbei liegt die Annahme zugrunde, dass aus einer großen Gesamtheit an Parametern letztlich nur eine deutlich geringere - aber unbekannte - Teilmenge die Signale wirklich bestimmen wird. Diese sparse Parametrisierung der Signale ermöglicht es alternative Messverfahren und Algorithmen zu verwenden, welche entscheidend weniger Messungen benötigen als klassische Abtastverfahren (Sampling). Neben einer grundsätzlichen Einführung in diese Theorie werden weitergehende Zusammenhänge zu Gebieten der Geometrie und Approximation vermittelt. EI7638: Compressive Sampling | Compressive Sampling",
    "learning_outcomes": "Am Ende der Veranstaltung ist der Student mit den Grundlagen der Parameterschätzung mittels \"Compressive Sampling\" vertraut. Er kann u.a. auch die behandelten Algorithmen in der Entwicklung bzw. im Entwurf von Signalverarbeitungs- und Schätzverfahren einsetzen.",
    "teaching_methods": "Entwicklung und Präsentation der Vorlesungsinhalte an der Tafel. Vertiefung des Vorlesungsstoffes durch die Lösung von Aufgaben und Rechenbeispielen in den Übungen.",
    "media": "Die Inhalte werden präsentiert mittels: Präsentation an der Tafel. In den Übungen wir MATLAB\neingesetzt um kleine Algorithmen zu implementieren.",
    "literature": "D. Luenberger, \"Optimization by vector space methods\"\nS. Foucart, H. Rauhut, \"A mathematical introduction to compressed sensing\"\nY. Eldar, G. Kutyniok, \"Compressed Sensing: Theory and Applications\"\nR. Baraniuk, E. Candes, Romberg, Davenport - Lecture Notes and Tutorials (on http://dsp.rice.edu/\ncs)",
    "lv_sws_lecturer": "Pohl, Volker; PD Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCompressive Sampling (Vorlesung mit integrierten Übungen, 3 SWS)\nPohl V [L], Kangani P, Pohl V"
  },
  {
    "module_id": "EI7641",
    "title": "Applied Reinforcement Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "The final grade is composed of the following examination elements:\n- Project proposal and intermediate reports (20%)\n- Delivery of codes and results (30%)\n- Final project demonstration and presentations (as the final oral exam) (50%)\nThe lecture consists of two phases: (1) two week (six days) frontal teaching sessions before the semester starts; (2) weekly tutorial sessions (two hours per week) throughout the semester. The students are required to hand in all their project proposal and intermediate reports in time. These writing exercises are designed to examine the students’ understanding of basic concepts of the subject in a formal way, and their capability of applying fundamental reinforcement learning methods to solve real problems proposed on the platform of e-Puck, with or without instructions. The project presentations aim to assess the capability of students in understanding, realizing, and demonstrating the basic concepts in reinforcement learning, as well as to provide them with an opportunity to practice their oral presentation skills.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basic knowledge of linear algebra, statistics, optimization, and machine learning, as well as basic\nknowledge in Matlab or Python (or the motivation to learn it).\nEI7641: Applied Reinforcement Learning | Applied Reinforcement Learning",
    "content": "Reinforcement learning (RL) is one most powerful approach in solving sequential decision making problems. A reinforcement learning agent interacts with its environment and uses its experience to make decisions towards solving the problem. The technique has succeeded in various applications of operation research, robotics, game playing, network management, and computational intelligence. This lecture provides an overview of basic concepts, practical techniques, and programming tools used in reinforcement learning. Specifically, it focuses on the application aspects of the subject, such as problem solving and implementations. By design, it aims to complement the theoretical treatment of the subject, such as mathematical derivation, convergence proves, and bound analysis, which are covered in the lecture \"\"Approximate Dynamic Programming and Reinforcement Learning\"\" in winter semesters. In this lecture, we will cover the following topics (not exclusively):\n- Reinforcement learning problems as Markov decision processes\n- Dynamic programming (value iteration and policy iteration)\n- Monte Carlo reinforcement learning methods\n- Temporal difference learning (SARSA and Q learning)\n- Simulation-based reinforcement learning algorithms\n- Linear value function approximation, e.g. tile coding\n- Programming skills on e-Puck.",
    "learning_outcomes": "On completion of this course, students are able to:\n- describe classic scenarios of reinforcement learning problems;\n- explain basics of reinforcement learning methods;\n- model real engineering problems using reinforcement learning methods;\n- compare performance of the reinforcement learning algorithms that are covered in the\ncourse practically in the specific projects;\n- select proper reinforcement learning algorithms in accordance with specific problems, and argue\ntheir choices;\n- construct and implement reinforcement learning algorithms to solve simple robotics problems on\nthe e-Puck platform.",
    "teaching_methods": "The course consists partially of frontal teaching with black board and beamer slides, but also of group and individual discussions to learn new definitions and concepts by means of simple examples. The tutorials consist of discussing the specific group projects proposed by the students and supporting the students in solving these problems.",
    "media": "The following kinds of media are used:\n- Presentations\nEI7641: Applied Reinforcement Learning | Applied Reinforcement Learning\n- Black board\n- Exercises and course-slides available for download",
    "literature": "1) Sutton, R. S. & Barto, A. G., Reinforcement Learning: An Introduction. The MIT Press, 1998\n2) Bertsekas, D. P. & Tsitsiklis, J., Neuro-dynamic programming. Athena Scientific, 1996\n3) Szepesvári, S., Algorithms for Reinforcement Learning. Morgan & Claypool, 2010",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI7644",
    "title": "Communication Network Reliability",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The module examination consists of a graded written exam of 90 minutes duration and an exercise on network reliability (simulation and analysis). In the written exam students demonstrate by answering questions their theoretical knowledge of network reliability including the parameters, methodologies, and solutions. Students also demonstrate their ability to evaluate and analyse connection availiability and network reliability. The capability for learning some particular topics more in detail will be examined through specific literature studies during the semester and the presentation of selected topics. The final grade is composed of the following elements:\n- 60% final exam\n- 40% exercise of reliability.",
    "repetition": "Folgesemester / Semesterende",
    "recommended_prerequisites": "The knowledge of following modules are recommended:\n- Broadband Communication Networks",
    "content": "Introduction to network realiability and main concepts and parameters. Mathematical models (including failure and repair models). Basic span- and path- restoration techniques. Logical network desgn. Operational aspects of real-time restoration and self-organizing pre-planning agains failures. Restoration in IP networks. Techniques for mesh-restorable networks. p-Cycles. Dual- failure restorability and availability in mesh networks. EI7644: Communication Network Reliability | Communication Network Reliability [CNRel]",
    "learning_outcomes": "Upon succesful completion of the module students gained an understanding of network reliability, and learn how to model and analyze connection availability and network reliability. Students also understand different protection and restoration techniques.",
    "teaching_methods": "Lectures, Presentation, Individual work",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises and solutions",
    "literature": "The following books are recommended:\n- “Mesh-based Survivable Transport Networks: Options and Strategies for Optical, MPLS, SONET\nand ATM Networking ” by Wayne D. Grover\n- “Reliability of Computer Systems and networks” by L. Shooman",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCommunication Network Reliability (Vorlesung mit integrierten Übungen, 4 SWS)\nMas Machuca C"
  },
  {
    "module_id": "EI7646",
    "title": "Computational Neuroscience: Eine Ringvorlesung von Modellen bis zu Anwendungen",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Die Studenten nehmen an der Vorlesung teil und lernen zusätzlich den Kursinhalt im Selbststudium mit Materialien, die durch die Vortragenden zur Verfügung gestellt werden (Handouts, referenzierte Literatur). Die Vorlesung wird durch Experten in Computational Neuroscience gehalten, die auf ihrem Spezialgebiet referieren. Wissensbasierte Lernergebnisse und das Verständnis des Kursinhalts werden in einer 60- minütigen schriftlichen Prüfung evaluiert, die den Kursinhalt von den neurobiologischen und mathematischen Grundlagen sowie den Anwendungen auf Hörprothesen bis hin zur Messung physiologischer Antworten abdeckt. Die Prüfung basiert auf Fragen von den einzelnen Vortragenden und wird ebenso die Fähigkeit zum Wissenstransfer und zur Problemlösung einfacher praktischer Fragestellungen evaluieren.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagenwissen in Biologie und Mathematik empfohlen",
    "content": "Allgemeiner Überblick: Anatomische und physiologische Grundlagen der Neurowissenschaften:\n- Grundlagen der Neurowissenschaften, Evolution, Modellsysteme, grundlegende Funktionen\n(sensorisches Organ → ZNS → Motorantwort), Anatomie (Wirbeltier/Mensch), genereller Aufbau des auditorischen und visuellen Systems und der wichtigsten Verarbeitungsstufen\n- neuronale Informationsübertragung: Grundlagen Ruhe- und Aktionspotenzial, synaptische\nÜbertragung, neuronale Morphologie, Verarbeitung im Dendriten, kleine Netzwerke etc., in vitro electrophysiology (+ imaging) Modellierung: Neuronale Dynamik und Kodierung\n- Modellierung einzelner Neurone (klassische computational neuroscience, spiking models, current\nmodels, firing rate models)\n- Neuronenpopulationen; (Sparse) coding, Theorie neuronaler Netzwerke, assoziatives Lernen\n(Hebbian, STDP), reinforcement learning, supervised vs. unsupervised learning\n- Grundlagen der neuronalen Signalverarbeitung und Modellierung; neurale Kodierung/\nDekodierung; Korrelationen, reverse correlations, rezeptive Felder; Informationstheorie Integration im Nervensystem\n- Lernen und Gedächtnis: Hippocampal formation, episodic memory and space representation\nEngineering für Neurowissenschaften und Neuroprothesen\n- Messung neuraler Aktivität in vivo, Mehrkanal-Electrophysiologie, Datenaufnahme, -analyse und -\ninterpretation\n- Cell-chip interface, network patterning on chip, on-chip neuroscience\n- Machine learning and information retrieval in hochdimensionalen Daten\n- Cochlea Implantate: Elektrische Stimulation des Hörnerven, phenomenologische und\nbiophysikalische Modelle, Aufbau und Stimulationsalgorithmen\n- Retina Implantate und Deep Brain Stimulation\n- Hauptprobleme bei Neuroimplantaten",
    "learning_outcomes": "Diese interdisziplinäre Ringvorlesung wird von Experten der TUM und LMU in den Neurowissenschaften gehalten und bietet eine Einführung in die Computational Neuroscience. Nach der Teilnahme an diesem Kurs sind die Studenten mit den Grundlagen der Neuroanatomie und -physiologie und den neuronalen Prozessen in verschiedenen sensorischen Systemen (auditorisch, visuell) vertraut. Studenten kennen die grundlegenden Ansätze für die Modellierung des neuronalen Verhaltens von einzelnen Zellen wie auch Zellverbünden und sie wissen, wie Daten zur Parametrisierung derartiger Modelle in Experimenten gewonnen werden können. Weiterhin haben die Studenten verstanden, wie derartige Modelle für die Entwicklung technischer Anwendungen, wie Neuroprothesen, genutzt werden können.",
    "teaching_methods": "Vorlesung mit Videoprojektion, praktischen Beispielen und Demonstrationen gehalten von Experten im jeweiligen Thema.",
    "media": "Vorlesung mit praktischen Beispielen und Präsentationen, Notizen an der Tafel und\nVideoprojektion, Erklärung an praktischen Beispielen, Multimedia Präsentation wichtiger Konzepte\nund Informationen.",
    "literature": "Allgemeine Lehrbücher und Lehrmaterialien werden zu Beginn der Ringvorlesung bekannt\ngegeben. Jeder Vortragende wird zusätzlich vertiefendes Material bekannt geben und auf Moodle\nzur Verfügung stellen.",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputational Neuroscience: Eine Ringvorlesung von Modellen bis zu Anwendungen (Vorlesung,\n2 SWS)\nSeeber B, Luksch H, Hemmert W, Gjorgjieva J, Hladek L"
  },
  {
    "module_id": "EI76471",
    "title": "Quantum Information Theory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Modulleistung wird in Form einer mündlichen Prüfung erbracht. In dieser soll nachgewiesen werden, dass die grundlegenden konzeptionellen und mathematischen Zusammenhänge der Shannon-theoretischen Beschreibung von Quanten-Kommunikationssystemen verstanden wurden. Darüberhinaus sollen die beispielhaft behandelten Kommunikationszenarien sowie die relevanten Ergebnisse ihrer Betrachtung in Vorlesung und Übung bekannt sein, sodass eine reflektierende Betrachtung im Prüfungsgespräch möglich ist. Zur Prüfung sind keine weiteren Hilfmittel zugelassen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Interesse an mathematischer Modellierung,\nGrundkenntnisse in Linearer Algebra,\nGrundkenntnisse in klassischer Informationstheorie.\nEmpfohlen werden Kombinationen dieses Moduls mit der Absolvierung eines der folgenden\nModule:\n„EI7431 – Information Theory“,\n„EI7344 – Informationstheoretische Grundlagen der Informationsforensik und biometrische\nSicherheit“,\n„EI7345 - Informationstheoretische Sicherheit“,\n„EI7353 - Multi-User Information Theory\"\nEI76471: Quantum Information Theory | Quantum Information Theory",
    "content": "Die Idee der Datenübertragung und -speicherung unter Verwendung der Eigenschaften physikalischer Systeme auf der atomaren Skala hat in den vergangenen Jahrzehnten ganze Gebiete experimenteller sowie theoretischer Forschung eröffnet. Das vorliegende Modul soll in die mathematische Modellierung von Quanten- Kommunikationssystemen mittels des aus der klassischen Informationstheorie bekannten Shannon'schen Zugang einführen. Sowohl von der Themenauswahl als auch der methodischen Herangehensweise stellt das Modul eine konsequente Fortführung des Inhaltes entsprechender Module im Themenbereich klassische Informationstheorie dar. Explizit behandelt werden:\n- die mathematischen und konzeptuellen Grundlagen der Beschreibung von Quantensystemen\nmit endlichen Freiheitsgraden mit besonderem Fokus auf einen operationellen Zugang zur Quantentheorie\n- Quanten-Hypothesentests; Quanten-Stein's Lemma\n- Quellenkodierung für gedächtnislose Quanten-Quellen\n- Kodierungssätze für Übertragung klassischer Nachrichten über Semiklassische und\nQuantenmechanische gedächtnislose Kanäle\n- Fortgeschrittene Themen aus den Bereichen Informationstheoretische Sicherheit für\nQuantenmechanische Kanäle und Quellen, Verschränkungstheorie, Optimale Protokolle für die Generierung quantenmechanischer und klassischer Kommunikationsresourcen.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls haben die Studierenden ein Verständnis für mathematische und konzeptuelle Methoden zur Behandlung von Kommunikationszenarien für diskrete gedächtnislose Semiklassische und quantenmechanische Systeme. Sie kennen die wichtigsten Kommunikationszenarien und die dazugehörigen Kodierungssätze sowie allgemeine und spezielle Strategien zu deren Beweis.",
    "teaching_methods": "In der Vorlesung werden anhand eines Tafelvortrags die mathematischen und theoretischen Methoden zur Behandlung von semi-klassischen and quantenmechanischen Systemen erklärt sowie grundlegende Kodierungssätze bewiesen. In den Übungen werden Übungsaufgaben selbstständig und unter Anleitung des Assistenten gelöst. Darin sollen die erlernten Beweisstrategien zum Beweis und zur Herleitung von Kodierungssätzen für spezielle Kommunikationsszenarien angewendet werden.",
    "media": "Tafelvortrag\nÜbungsblätter",
    "literature": "M. M. Wilde, \"Quantum Information Theory\", Cambridge University Press, 2012\nEI76471: Quantum Information Theory | Quantum Information Theory\nT. Heinosaari, M. Ziman, „The Mathematical Language of Quantum Theory – From Uncertainty to\nEntanglement“, Cambridge University Press, 2012\nI. Csiszar, J. Körner, „Information Theory – Coding Theorems for Discrete Memoryless Systems“,\n2nd Ed., Cambridge University Press, 2011\"",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nQuantum Information Theory (Übung, 2 SWS)\nBöck Y [L], Böck Y, Pohl V\nQuantum Information Theory (Vorlesung, 2 SWS)\nBöck Y [L], Böck Y, Pohl V"
  },
  {
    "module_id": "EI7649",
    "title": "Approximate Dynamic Programming and Reinforcement Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "The final grade is composed of the following examination elements:\n- Assignments (50%):\n- Written examination, 90 min (50%)\nThe students are required to hand in all their assignments in time. The assignments are designed to examine the students’ understanding of basic concepts of the subject, and their capability of applying fundamental ADP/RL methods to solve simple problems, with or without instructions. The final written examination tests the students’ overall understanding of the subject. It consists of:\n- lecture part: questions that cover the theoretical knowledge of the course contents\n- exercise part: questions about details and insights discussed in the exercise with the focus\nchallenges arising from the application\n- assignments: transferring elements of the assignment to new unseen problems",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Basic knowledge of linear algebra, statistics, optimization, analysis and machine learning, as well\nas basic knowledge in Python (or the motivation to learn it).",
    "content": "Approximate dynamic programming (ADP) and reinforcement learning (RL) are two closely related paradigms for solving sequential decision making problems. ADP methods tackle the problems by developing optimal control methods that adapt to uncertain systems over time, while RL algorithms take the perspective of an agent that optimizes its behavior by interacting with its environment and learning from the feedback received. Both technologies have succeeded in applications of operation research, robotics, game playing, network management, and computational intelligence. We will cover the following topics (not exclusively):\n- Markov decision processes\n- Dynamic programming\n- Approximate dynamic programming\n- Reinforcement learning\n- Policy gradient algorithms",
    "learning_outcomes": "On completion of this course, students are able to:\n- describe classic scenarios in sequential decision making problems;\n- explain basic models of ADP/RL methods;\n- derive ADP/RL algorithms that are covered in the course;\n- characterize convergence properties of the ADP/RL algorithms covered in the course;\n- compare performance of the ADP/RL algorithms that are covered in the course, both theoretically\nand practically;\n- select proper ADP/RL algorithms in accordance with specific applications;\n- construct and implement ADP/RL algorithms to solve simple (robotic) problems.",
    "teaching_methods": "The course consists partially of frontal teaching with black board and beamer slides, but also of group and individual discussions to learn new definitions and concepts by means of simple examples. The exercise partially introduces also new topics, but the main focus lies on practicing concepts of the lecture. Tutorials focus on discussing the assignments and programming tasks and on supporting the students in solving them.",
    "media": "The following kinds of media are used:\n- Presentations\n- Black board\n- Exercises and course-slides available for download",
    "literature": "1) Bertsekas, D. P. & Tsitsiklis, J., Neuro-dynamic programming. Athena Scientific, 1996.\n2) Powell, Warren B. Approximate Dynamic Programming: Solving the Curses of Dimensionality.\nWiley-VCH, 2011.\n3) Bertsekas, D. P. Dynamic Programming and Optimal Control (two volumes). Athena Scientific,\n2005 & 2012.",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nApproximate Dynamic Programming and Reinforcement Learning - Fragestunde (Übung, 1 SWS)\nGottwald M, Gronauer S\nApproximate Dynamic Programming and Reinforcement Learning (Vorlesung mit integrierten\nÜbungen, 4 SWS)\nGottwald M, Hein A, Shen H"
  },
  {
    "module_id": "EI77001",
    "title": "Seminar Embedded Systems and Internet of Things",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Steinhorst, Sebastian; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Embedded Systems and Internet of Things (Hauptseminar, 3 SWS)\nSteinhorst S, Akinci M, Debnath R, Hamad M, Lauinger J"
  },
  {
    "module_id": "EI77007",
    "title": "Seminar on Robotics Science and Systems Intelligence",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "In diesem Kurs müssen die Studierenden ihre Fähig keit unter Beweis stellen, Robotik und KI- Forschungsarbeiten zu verstehen und zu synthetisieren sowie sie im Kontext der grundlegenden Prinzipien und Themen des Fachgebiets zu präsentieren und zu diskutieren. Die Modulnote basiert auf der Vollständigkeit und Qualität der Zusammenfassung sowie der Präsentation.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Grundlagen der Robotik (Kinematik , Kinetik, Regelungstechnik)\n- Grundlagen des maschinellen Lernens",
    "content": "Im Mittelpunkt dieses Kurses stehen aktuelle Forschungsthemen aus den Bereichen Robotik und Künstliche Intelligenz. Die Studierenden erkunden die spezifischen Themen anhand der relevanten Forschungbeiträge und präsentieren ihre Ergebnisse in einem Kolloquium. Der Schwerpunkt liegt auf den wichtigsten und am häufigsten zitierten Artikeln in diesen Bereich. Die folgenden Themengebiete stehen zur:\n- Imitation learning, Bayesian/probabilistic learning, neural networks\n- Bio-inspired learning and control\n- State estimation, mapping\n- Multimodal perception and sensor fusion\n- Model identification\n- Motion planning\n- Motion and force control\n- Applications in manipula tion, mobility, driving, flight, and space\nEI77007: Seminar on Robotics Science and Systems Intelligence | Seminar on Robotics Science and Systems Intelligence\n- Soft robotics\n- Robot hands\n- Manipulation and grasping\n- Rehabilitation and healthca re robotics\n- Humanoids\n- Physical hu man-robot interaction\n- Cognitive architectures\n- Computational learning theory\n- Evolutionary systems\n- Reinforcement learning\n- Space robotics\n- Robotic vision and perception",
    "learning_outcomes": "Nach Abschluss dieses Kurses sind die Studierenden in der Lage, die wichtigsten Forschungsrichtungen der Robotik und Künstlichen Intelligenz zu identifizieren sowie relevante Forschungsthemen selbstständig zu untersuchen und kritisch zu analysieren. Darüber hinaus werden sie in der Lage sein, die grundlegenden Prinzipien und Themen in diesem Bereich in verständlicher Form zu diskutieren und zu präsentieren.",
    "teaching_methods": "Die Studenten lernen, Forschungsarbeiten zu lesen, zu präsentieren und zu diskutieren.",
    "media": "Die folgenden Medientypen werden verwendet:\n- Präsentationen\n- Konferenz- und Journal-Papers",
    "literature": "- The most famous conferences and journals in the area of robotics, AI and machine learning such\nas ICRA, IROS, NIPS, The International Journal of Robotics Research, IEEE Transactions on\nRobotics, etc.\n- B. Siciliano, O. Khatib, ‘Springer Handbook of Robotics’, Springer, 2016.\n- C. M. Bishop, ‘Pattern Recognition and Machine Learning’, Springer-Verlag New York. Inc.,\nSecaucus, NJ, USA, 2006.\n- K. M. Lynch, ‘Modern Robotics-Mechanics, Planning, and Control: Video supplements and\nsoftware’, 2017.\n- S. Russell, P. Norvig, ‘Artificial intelligence: a modern approach’, Pearson Education Limited,\n2016.\n- S. Thrun, W. Burgard, D. Fox, ‘Probabilistic robotics’, MIT press, 2005.\n- S. Kajita, H. Hirukawa, K. Harada, K. Yokoi, ‘Introduction to Humanoid Robotics’, Springer, 2014.\n- A. Goswami, P. Vadakkepat, ‘Humanoid Robotics: A Reference’, Springer, 2018.\n- A. Ellery, ‘An introduction to space robotics’, Springer-Verlag New York, Inc., 2000.\nEI77007: Seminar on Robotics Science and Systems Intelligence | Seminar on Robotics Science and Systems\nIntelligence",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIN2107 Seminar on Robotics Science and Systems Intelligence (Hauptseminar, 2 SWS)\nHaddadin S [L], Laha R, Lakshminarayanan S, Swikir A, Zwirnmann H"
  },
  {
    "module_id": "EI77009",
    "title": "Seminar Machine Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Heckel, Reinhard; Prof. Dr.sc. ETH Zürich\nEI77009: Seminar Machine Learning | Seminar Machine Learning\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Machine Learning (Hauptseminar, 3 SWS)\nHeckel R, Weindel F, Klug T"
  },
  {
    "module_id": "EI77013",
    "title": "Seminar on Digital Communications",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Verständnis des wissenschafftlichen Themas: Inhalt von Ausarbeitung und Präsentation (30%).\n- Schriftliche Ausarbeitung (Struktur, Formatierung, Klarheit, Orginalität, etc.) (30%).\n- Präsentation des Themas (Struktur, Folien, Klarheit, etc.) und Moderation/Diskussion (40%).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Vorlesung über Digitale Kommunikation\n- abhängig vom gestellten Thema ggf. einschlägige Fachvorlesungen",
    "content": "Für das Seminar werden verschiedene aktuelle Themen aus den Gebieten der Digitalen Kommunikationstechnik (z.B. Quellen-, Kanal- und Netzcodierung, optische Übertragungstechnik, Informationstheorie) ausgewählt, die von den Studenten selbständig bearbeitet werden. Jeder Student fasst die Ergebnisse seiner Arbeit schriftlich zusammen und hält einen wissenschaftlichen Vortrag, an den sich eine fachliche Diskussion anschließt.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält der Student Kenntnisse aktueller wissenschaftlicher Entwicklungen auf dem Gebiet der digitalen Kommunikationstechnik. Der Student ist anschließend in der Lage, eine Aufgabenstellung aus einem aktuellen Themengebiet der Nachrichtentechnik selbstständig auf wissenschaftliche Weise zu bearbeiten EI77013: Seminar on Digital Communications | Seminar on Digital Communications [Seminar on Digital Communications] und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Student die von ihm erarbeiteten Erkenntnisse vor einem fachkundigen Publikum präsentieren.",
    "teaching_methods": "Jedem Student wird ein wissenschaftlicher Mitarbeiter als Betreuer zugewiesen, der ihn in die Recherche und Lektüre wissenschaftlicher Fachliteratur einweist sowie beim Abfassen der Seminararbeit anleitet. Eine Einführungsveranstaltung vermittelt Grundzüge wissenschaftlicher Fachvorträge bzw. Präsentationen. Jeder Teilnehmer bearbeitet eine individelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studenten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer.",
    "literature": "Folgende Literatur wird empfohlen:\n- Die verwendete Literatur wird den Studenten abhängig von ihrem Thema zur Verfügung\ngestellt. Ggf. unterstützt der Betreuer den Studenten bei der Suche nach weiterer relevanter\nwissenschaftlicher Fachliteratur.",
    "lv_sws_lecturer": "Kramer, Gerhard; Prof. Dr.sc.tech.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Digital Communications (Seminar, 3 SWS)\nKramer G, Runge C"
  },
  {
    "module_id": "EI77014",
    "title": "Seminar on Optical Communications",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Verständnis des wissenschafftlichen Themas: Inhalt von Ausarbeitung und Präsentation (30%).\n- Schriftliche Ausarbeitung (Struktur, Formatierung, Klarheit, Orginalität, etc.) (30%).\n- Präsentation des Themas (Struktur, Folien, Klarheit, etc.) und Moderation/Diskussion (40%).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\nOptical Communication Systems (EI5075)\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen:\nDigital Signal Processing for Optical Communication Systems (EI71067)",
    "content": "Für das Seminar werden verschiedene aktuelle Themen aus unterschiedlichen Gebieten der Optischen Kommunikationstechnik (z.B. optische Modulations- und Detektionsverfahren, lineare und nichtlineare Eigenschaften optischer Kanäle und Subsysteme, optische Fasern und Wellenleiter, lineare / nichtlineare Entzerrung, ...) ausgewählt, die von den Studenten selbständig bearbeitet werden. Jede(r) Student(in) fasst die Ergebnisse seiner/ihrer Arbeit schriftlich zusammen und hält einen wissenschaftlichen Vortrag, an den sich eine fachliche Diskussion anschließt.",
    "learning_outcomes": "Durch die Teilnahme an der Modulveranstaltung erhält der/die Studierende Kenntnisse über aktuelle wissenschaftliche Entwicklungen auf dem Gebiet der Optischen Kommunikationstechnik. EI77014: Seminar on Optical Communications | Seminar on Optical Communications [Seminar Optische Kommunikationstechnik] Die Studierenden sind anschließend in der Lage, Aufgabenstellungen aus aktuellen Themengebieten der optischen Kommunikationstechnik selbständig zu erfassen, wissenschaftlich zu bearbeiten, und wiederzugeben. Darüber hinaus können Teilnehmer selbst erarbeitete Ergebnisse vor einem fachkundigen Publikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studenten. Jedem Student wird ein wissenschaftlicher Mitarbeiter als Betreuer zugewiesen, der ihn/sie in die Recherche und Lektüre wissenschaftlicher Fachliteratur einweist sowie beim Abfassen der Seminararbeit und Erstellen der Präsentation anleitet. Eine Einführungsveranstaltung vermittelt die Grundzüge wissenschaftlicher Fachvorträge bzw. Präsentationen.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer.",
    "literature": "wird abhängig vom bearbeiteten Thema zur Verfügung gestellt",
    "lv_sws_lecturer": "Hanik, Norbert; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Optical Communications (Seminar, 3 SWS)\nHanik N, Plabst D, Runge C"
  },
  {
    "module_id": "EI77015",
    "title": "Seminar on Coding and Cryptography",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Verständnis des wissenschafftlichen Themas: Inhalt von Ausarbeitung und Präsentation (30%).\n- Schriftliche Ausarbeitung (Struktur, Formatierung, Klarheit, Orginalität, etc.) (30%).\n- Präsentation des Themas (Struktur, Folien, Klarheit, etc.) und Moderation/Diskussion (40%).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Grundlegende Kenntnisse von linearer Algebra\n- Vorlesung Channel Coding empfohlen\n- Optional Vorlesungen \"Security in Communications and Storage\", \"Coding Theory for Storage\nand Networks\"",
    "content": "Für das Seminar werden verschiedene aktuelle Themen aus den Gebieten der Kanalcodierung und Kryptographie ausgewählt, die von den Studierenden selbständig bearbeitet werden. Jeder Teilnehmer fasst die Ergebnisse seiner Arbeit schriftlich zusammen und hält einen wissenschaftlichen Vortrag, an den sich eine fachliche Diskussion anschließt.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhalten die Studierenden Kenntnisse aktueller wissenschaftlicher Entwicklungen auf den Gebieten der Kanalcodierung und Kryptographie. EI77015: Seminar on Coding and Cryptography | Seminar on Coding and Cryptography [Seminar on Coding and Cryptography] Die Studierenden sind anschließend in der Lage, eine Aufgabenstellung aus einem aktuellen Themengebiet der Kanalcodierung und Kryptographie selbstständig auf wissenschaftliche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Teilnehmer die selbst erarbeiteten Erkenntnisse vor einem fachkundigen Publikum präsentieren.",
    "teaching_methods": "Jedem Teilnehmer wird ein wissenschaftlicher Mitarbeiter als Betreuer zugewiesen, der ihn/ihr in die Recherche und Lektüre wissenschaftlicher Fachliteratur einweist sowie beim Abfassen der Seminararbeit anleitet. Eine Einführungsveranstaltung vermittelt Grundzüge wissenschaftlicher Fachvorträge bzw. Präsentationen.",
    "media": "Jeder Teilnehmer bearbeitet eine individelle fachliche Aufgabenstellung. Dies geschieht\ninsbesondere in selbständiger Einzelarbeit des Studenten.\nFolgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer.",
    "literature": "Abhängig vom gewählten Thema, wird bereitgestellt.",
    "lv_sws_lecturer": "Wachter-Zeh, Antonia; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Coding and Cryptography (Seminar, 3 SWS)\nWachter-Zeh A, Liu H, Banerjee A, Runge C"
  },
  {
    "module_id": "EI7743",
    "title": "Seminar Kommunikationsnetze",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Schriftliche Ausarbeitung als Hausarbeit\n- 15 minütige Präsentation der Ergebnisse und anschließendes 10 minütiges Kolloquium\nDie Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 50 % Schriftliche Ausarbeitung\n- 50 % Seminarvortrag",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine spezifischen Voraussetzungen.",
    "content": "Wechselnde Schwerpunktthemen aus dem Bereich der drahtlosen und drahtgebundenen Kommunikationsnetze. Der Fokus liegt auf aktuellen Forschungsthemen und neuen Technologien. Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält die Studierende/der Studierende vertiefte Kenntnisse in einem Teilbereich moderner Kommunikationsnetze und ist in der Lage ein Kommunikationssystem eigenständig in schriftlicher und mündlicher Form zu bewerten. EI7743: Seminar Kommunikationsnetze | Seminar on Selected Topics in Communication Networks [SemKN] Die Studierende/der Studierende arbeitet selbstständig wissenschaftilch und fertigt eine schriftliche Ausarbeitung als wissenschaftlichen Aufsatz (Paper) dazu an. Darüber hinaus lernt die Studierende/der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum zu präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt. Darüber hinaus wird vom Lehrstuhl ein Präsentationsseminar angeboten, in dem Präsentations- und Vortragstechniken in realisitischer Vortragssituation unter Nutzung der üblichen Medien geübt wird.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden arbeiten überwiegend mit aktuellen wissenschaftlichen Veröffentlichungen",
    "literature": "",
    "lv_sws_lecturer": "Kellerer, Wolfgang; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nWissenschaftliches Seminar Kommunikationsnetze (Hauptseminar, 3 SWS)\nZeidler O [L], Kellerer W, Zerwas J, Aykurt K, Ursu R, Wietfeld A"
  },
  {
    "module_id": "EI7744",
    "title": "Seminar Medientechnik",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Schriftliche Ausarbeitung als Hausarbeit\n- 30 minütige Präsentation der Ergebnisse und anschließende 10 minütige Diskussion\nDie Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 50 % Schriftliche Ausarbeitung\n- 50 % Seminarvortrag",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine spezifischen Voraussetzungen.",
    "content": "Wechselnde Schwerpunktthemen aus dem Bereich der Medientechnik. Der Fokus liegt auf aktuellen Forschungsthemen und neuen Technologien. Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse der modernen Medientechnik. EI7744: Seminar Medientechnik | Seminar on Topics in Media Technology Der Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet Medientechnik selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden arbeiten überwiegend mit aktuellen wissenschaftlichen Veröffentlichungen",
    "literature": "",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Medientechnik (Hauptseminar, 3 SWS)\nSteinbach E, Chaudhari R, Patsch C, Zakour M, Xu X"
  },
  {
    "module_id": "EI7746",
    "title": "Seminar Sicherheit in der Informationstechnik",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfung wird in Form einer wissenschaftlichen Ausarbeitung vorgenommen. Sie besteht zum einen aus einem schriftlichen Teil (50%), welcher sich aus einem Paper (4 Seiten) bezieht. Zum anderen besteht sie aus einem mündlichen Teil (50%) in Form einer ca. 30-minütigen Präsentation (inklusive nachfolgender Diskussion)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Folgende Module sollten vor der Teilnahme bereits erfolgreich absolviert sein:\n- Kryptologie oder gleichwertige Grundlagenvorlesung\nEs wird empfohlen, ergänzend an folgenden Modulen teilzunehmen: - Sichere Implementierung\nkryptographischer Verfahren\n- Selected Topics in System Security",
    "content": "Wechselnde Schwerpunktthemen zur Sicherheit in Informationstechnischen Systemen. Die Modulteilnehmer erarbeiten selbstständig aktuelle wissenschaftliche Beiträge und fertigen eine schriftliche Ausarbeitung. Die Resultate werden anschließend in Form von Vorträgen allen Teilnehmern präsentiert. Es erfolgt eine intensive Behandlung der Thematik in der Diskussion. EI7746: Seminar Sicherheit in der Informationstechnik | Seminar on Security in Information Technology",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse über aktuelle Probleme und Aufgabenstellungen im Bereich Sicherheit in informationstechnischen Systemen. Der Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der Sicherheit in der Informationstechnik selbstständig auf wissenschaftliche Weise zu bearbeiten, eine schriftliche Ausarbeitung dazu anzufertigen sowie die Qualität von wissenschaftlichen Texten zu bewerten. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbstständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt. Darüber hinaus wird ein Präsentationstraining zusammen mit ProLehre und eine Einführung in das Schreiben von wissenschaftlichen Arbeiten angeboten.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer",
    "literature": "",
    "lv_sws_lecturer": "Sigl, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nWissenschaftliches Seminar Sicherheit in der Informationstechnik (Hauptseminar, 3 SWS)\nSchamberger T [L], Pehl M"
  },
  {
    "module_id": "EI7750",
    "title": "Seminar VLSI-Entwurfsverfahren",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfung wird in Form einer wissenschaftlichen Ausarbeitung vorgenommen. Sie besteht zum einen aus einem schriftlichen Teil (50%) in Form eines Papers (4 Seiten). Zum anderen besteht sie aus einem mündlichen Teil (50%) in Form einer ca. 30-minütigen Präsentation (inklusive nachfolgender Diskussion). Mit der wissenschaftlichen Ausarbeitung weisen die Studierenden nach, dass sie z. B. den wissenschaftlichen Stand der Technik, eine neue Idee oder einen bestehenden Ansatz auf dem Gebiet des rechnergestützten Schaltungs- und Systementwurfs für ein Fachpublikum aufbereiten, strukturiert darstellen und präsentieren können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine spezifischen Voraussetzungen.",
    "content": "Spezifische Seminarthemen aus dem Bereich der Entwurfsautomatisierung für elektronische Schaltungen und Systeme werden angeboten. Beispiele sind Analogentwurfsmethodik, Entwurfsmethodik für digitale Schaltungen, Layoutsynthese, und Entwurfsmethodik auf der Systemebene. Teilnehmende arbeiten eigenständig auf einem wissenschaftlichen Thema, schreiben ein Paper von 4 Seiten. Abschließend präsentieren die Teilnehmenden ihr Thema in einem Vortrag. In einer anschließenden Diskussion wird ihr Thema detailliert behandelt. EI7750: Seminar VLSI-Entwurfsverfahren | Advanced Seminar VLSI Design Methods [HS-VLSI]",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Seminares sind die Studierenden in der Lage, eine neue Idee oder einen bestehenden Ansatz auf dem Gebiet des rechnergestützten Schaltungs- und Systementwurfs in verständlicher und überzeugender Weise zu präsentieren. Zu diesem Zwecke werden im Einzelnen folgende Fähigkeiten erworben:\n• Die teilnehmende Person kann sich selbstständig ein wissenschaftliches Thema aus dem Bereich\ndes rechnergestützten Schaltungs- und Systementwurfs aneignen.\n• Die teilnehmende Person ist fähig, ein Thema strukturiert nach Problemstellung, Stand der\nTechnik, Ziele, Methoden und Ergebnisse darzustellen.\n• Die teilnehmende Person ist in der Lage, ein Thema in der genannten Strukturierung mündlich\nzu präsentieren, in einem Foliensatz zu visualisieren, und in einem wissenschaftlichen Bericht schriftlich darzustellen.",
    "teaching_methods": "Lernmethode: Die Studierenden arbeiten eigenständig und unter Beratung durch einen wissenschaftlichen Assistenten ein wissenschaftliches Thema aus. Lehrmethode: In Einführungsveranstaltungen werden den Teilnehmenden Hinweise zur fachlichen Arbeit, schriftlichen Ausarbeitung sowie zur Erstellung der Präsentation und zum mündlichen Vortrag gegeben. Während eines zusätzlichen interaktiven Präsentationtrainings können Techniken für einen gelungenen Vortrag von den Studierenden erlernt und geprobt werden. Weitere Details werden zwischen Studierenden und wissenschaftlichen Assistenten auf individueller Basis diskutiert.",
    "media": "Alle geläufigen Techniken zur Vorbereitung und Präsentation von Papern und Vorträgen werden\nangewendet, z. B.:\n- Klassische Tafel, Weißwandtafel\n- Elektronische Folien, Beamer\n- Elektronische Textverarbeitung\n- Elektronische Folienbearbeitung",
    "literature": "Ein Satz an Themen und zugehöriger Literatur wird am Anfang des Kurses bereitgestellt. Die\nStudierenden wählen ihr Thema selbst aus.",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar VLSI-Entwurfsverfahren (Seminar, 3 SWS)\nMüller-Gritschneder D, Foik C, Schlichtmann U\nEI7750: Seminar VLSI-Entwurfsverfahren | Advanced Seminar VLSI Design Methods [HS-VLSI]"
  },
  {
    "module_id": "EI77501",
    "title": "Seminar on Topics in Integrated Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfung wird in Form einer wissenschaftlichen Ausarbeitung vorgenommen. Sie besteht aus einem schriftlichen Teil in Form eines Papers (typischerweise 4 Seiten) und einer 20-minütigen Präsentation gefolgt von einer 5-minütigen Diskussion. Mit der wissenschaftlichen Ausarbeitung weisen die Studierenden nach, dass sie z.B. den wissenschaftlichen Stand der Technik, eine neue Idee oder einen bestehenden Ansatz auf dem Gebiet integrierter Bausteine und Architekturen für ein Fachpublikum aufbereiten, strukturiert darstellen und präsentieren können. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 50% schriftliche Ausarbeitung\n- 50% Vortrag und mündliche Beiträge zur Diskussion",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine.",
    "content": "Spezifische Seminarthemen aus dem Bereich der Entwurfsautomatisierung für elektronische Schaltungen werden angeboten. Beispiele sind anwendungsspezifische Beschleuniger und funktionsspezifische Prozessorarchitekturen. Die Teilnehmer arbeiten eigenständig auf einem wissenschaftlichen Thema, schreiben ein Paper von typisch 4 Seiten, und präsentieren ihr Thema in einem Vortrag. In der anschließenden Diskussion wird ihr Thema detailliert behandelt. EI77501: Seminar on Topics in Integrated Systems | Seminar on Topics in Integrated Systems [MSCE-LIS-Seminar]",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Seminars sind die Studierenden in der Lage, aktuelle Konzepte im Bereich integrierter Bausteine und Architekturen anhand einer Literaturstudie in verständlicher und überzeugender Weise zu präsentieren. Dabei werden die folgenden Fähigkeiten erworben: * Der Teilnehmer kann selbständig aktuelle Konzepte im Bereich integrierter Systeme analysieren. * Der Teilnehmer ist fähig, ein Thema strukturiert nach Problemstellung, Stand der Technik, Ziele, Methoden, und Ergebnissen darzustellen. * Der Teilnehmer ist in der Lage, ein Thema in der genannten Strukturierung mündlich zu präsentieren, in einem Foliensatz zu visualisieren, und in einem wissenschaftlichen Bericht schriftlich darzustellen.",
    "teaching_methods": "Lernmethode: Die Studierenden arbeiten eigenständig und unter Beratung durch einen wissenschaftlichen Assistenten ein wissenschaftliches Thema aus. Lehrmethode. Durch den Kurskoordinator werden einführende Lektionen gegeben, weitere Details werden zwischen Teilnehmer und wissenschaftlichen Assistenten auf individueller Basis diskutiert. Präsentationstechniken werden in einer Einführungsveranstaltung gelehrt.",
    "media": "Alle geläufigen Techniken zur Vorbereitung und Präsentation von Papern und Vorträgen werden\nangewendet, z.B.:\n- klassische Tafel, Weißwandtafel\n- elektronische Folien, Beamer\n- elektronische Textverarbeitung\n- elektronische Folienbearbeitung",
    "literature": "Ein Satz an Themen und zugehöriger Literatur wird am Anfang des Kurses bereitgestellt. Jeder\nTeilnehmer wählt selbst ein Thema aus.",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Topics in Integrated Systems (Seminar, 3 SWS)\nLiess M [L], Herkersdorf A, Stechele W, Wild T, Twardzik T"
  },
  {
    "module_id": "EI77502",
    "title": "Seminar on Topics in Electronic Design Automation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfung wird in Form einer wissenschaftlichen Ausarbeitung vorgenommen. Sie besteht zum einen aus einem schriftlichen Teil (50%) in Form eines Papers (4 Seiten). Zum anderen besteht sie aus einem mündlichen Teil (50%) in Form einer ca. 30-minütigen Präsentation (inklusive nachfolgender Diskussion). Mit der wissenschaftlichen Ausarbeitung weisen die Studierenden nach, dass sie z. B. den wissenschaftlichen Stand der Technik, eine neue Idee oder einen bestehenden Ansatz auf dem Gebiet des rechnergestützten Schaltungs- und Systementwurfs für ein Fachpublikum aufbereiten, strukturiert darstellen und präsentieren können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine.",
    "content": "Spezifische Seminarthemen aus dem Bereich der Entwurfsautomatisierung für elektronische Schaltungen werden angeboten. Beispiele sind Analogentwurfsmethodik, Entwurfsmethodik für digitale Schaltungen, Layoutsynthese, und Entwurfsmethodik auf der Systemebene. Teilnehmende arbeiten eigenständig auf einem wissenschaftlichen Thema und schreiben ein Paper von 4 Seiten. Abschließend präsentieren die Teilnehmenden ihr Thema in einem Vortrag. In einer anschließenden Diskussion wird ihr Thema detailliert behandelt.",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Seminars sind die Studierenden in der Lage, eine neue Idee oder einen bestehenden Ansatz auf dem Gebiet des rechnergestützten Schaltungs- und Systementwurfs in verständlicher und überzeugender Weise zu präsentieren. Zu diesem Zwecke werden im Einzelnen folgende Fähigkeiten erworben:\n• Die teilnehmende Person kann sich selbstständig ein wissenschaftliches Thema aus dem Bereich\ndes rechnergestützten Schaltungs- und Systementwurfs aneignen.\n• Die teilnehmende Person ist fähig, ein Thema strukturiert nach Problemstellung, Stand der\nTechnik, Ziele, Methoden und Ergebnisse darzustellen.\n• Die teilnehmende Person ist in der Lage, ein Thema in der genannten Strukturierung mündlich\nzu präsentieren, in einem Foliensatz zu visualisieren, und in einem wissenschaftlichen Bericht schriftlich darzustellen.",
    "teaching_methods": "Lernmethode: Die Studierenden arbeiten eigenständig und unter Beratung durch einen wissenschaftlichen Assistenten ein wissenschaftliches Thema aus. Lehrmethode: n Einführungsveranstaltungen werden den Teilnehmenden Hinweise zur fachlichen Arbeit, schriftlichen Ausarbeitung sowie zur Erstellung der Präsentation und zum mündlichen Vortrag gegeben. Weitere Details werden zwischen Studierenden und wissenschaftlichen Assistenten auf individueller Basis diskutiert.",
    "media": "Alle geläufigen Techniken zur Vorbereitung und Präsentation von Papern und Vorträgen werden\nangewendet, z.B.:\n- Klassische Tafel, Weißwandtafel\n- Elektronische Folien, Beamer\n- Elektronische Textverarbeitung\n- Elektronische Folienbearbeitung",
    "literature": "Ein Satz an Themen und zugehöriger Literatur wird am Anfang des Kurses bereitgestellt. Die\nStudierenden wählen ihr Thema selbst aus.",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar on Topics in Electronic Design Automation (Seminar, 3 SWS)\nMüller-Gritschneder D, Foik C, Schlichtmann U"
  },
  {
    "module_id": "EI7753",
    "title": "Seminar Integrierte Systeme",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 50 % schriftliche Ausarbeitung (typisch 4 Seiten)\n- 50 % Vortrag 20 Minuten plus Diskussion 5 Minuten",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine spezifischen Voraussetzungen.",
    "content": "Wechselnde Schwerpunktthemen zu integrierten Schaltungen und Systemen, sowie deren Anwendungen. Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung, präsentieren ihren Beitrag im Rahmen eines Kolloquiums und tragen mit Diskussionsbeiträgen zum Kolloquium bei.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage Problemstellungen aus dem Bereich integrierter Systeme und deren Anwendungen zu analysieren und Lösungsansätze zu bewerten. Aufgabenstellungen aus einem aktuellen Themengebiet der integrierten Systeme können selbstständig auf wissenschaftliche Weise bearbeitet, selbstständige Literaturrecherchen dazu durchgeführt und eine schriftliche Ausarbeitung dazu angefertigt werden. Darüber hinaus können die Studierenden die erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren. EI7753: Seminar Integrierte Systeme | Seminar on Integrated Systems",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- schriftliche Ausarbeitung",
    "literature": "Themen-spezifische Literatur wird vom jeweiligen Betreuer empfohlen und soll durch eigene\nRecherchen ergänzt werden.",
    "lv_sws_lecturer": "Herkersdorf, Andreas; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Integrierte Systeme (Seminar, 3 SWS)\nLiess M [L], Herkersdorf A, Stechele W, Twardzik T, Wild T"
  },
  {
    "module_id": "EI7756",
    "title": "Seminar Bioanaloge Informationsverarbeitung",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Schriftliche wissenschaftliche Ausarbeitung (60%)\n(Prüfung der Fähigkeit, wissenschaftliche Arbeit selbstständig unter Einhaltung des wissenschaftlichen code of conduct erstellen zu können)\n- 15-minütige Präsentation mit anschließender Diskussion (40%)\n(Fähigkeit, die wesentlichen Ergebnisse ihrer Arbeit vor Fachpublikum präsentieren zu können)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Informatik\nGrundlagen der Systemtheorie",
    "content": "In diesem Seminar wird jeweils ein aktuelles Thema aus dem Gebiet der bioanalogen Informationsverarbeitung bearbeitet (z.B. Modellierung biologischer Systeme, Herzschrittmacher, Retinaimplantat, Cochleaimplantat, Deep-Brain Stimulation, Elektrische und Elektromagnetische Neuro-Stimulation, Brain-Computer Interface, neuronale Informationsverarbeitung, Computational Neuroscience). Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion. EI7756: Seminar Bioanaloge Informationsverarbeitung | Seminar Bio-inspired Information Processing",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse in einem aktuellen Thema der bioanalogen Informationsverarbeitung. Der Studierende ist anschließend in der Lage, wissenschaftliche Literatur in Datenbanken, online und/oder der Bibliothek zu recherchieren, und so ein Themengebiet selbstständig auf wissenschaftilche Weise zu bearbeiten. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse in einer wissenschaftlichen Arbeit selbstständig unter Einhaltung des wissenschaftlichen code of conduct erstellen und die wesentlichen Ergebnisse seiner Arbeit vor Fachpublikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer",
    "literature": "Wird themenspezifisch empfohlen",
    "lv_sws_lecturer": "Hemmert, Werner; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHauptseminar Bioanaloge Informationsverarbeitung (73520) (Hauptseminar, 3 SWS)\nHemmert W [L], Hemmert W, Castaneda González C, Driendl L, Eisenlauer R"
  },
  {
    "module_id": "EI77581",
    "title": "Seminar Robotik, Automatisierungs- und Regelungstechnik",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Wissenschaftliche Ausarbeitung mit Übersicht Stand der Technik (3-4 Seiten)\n- 20-minütige Präsentation und anschließende 10-minütige Diskussion\nDie Endnote setzt sich wie folgt aus den Prüfungselementen zusammen:\n- Ausarbeitung 30%: Formale Korrektheit/Layout, wissenschaftlicher Gehalt, Lesbarkeit und\nEigenständigkeit/Eigeninitiative in der Erarbeitung werden bewertet\n- Präsentation 70%. Die Auswahl der Inhalte, die Gestaltung der Folien/formale Korrektheit, der\nVortragsstil, Eigenständigkeit/Eigeninitiative in der Erarbeitung, Tiefe des Verständnisses/Breite des erarbeiteten Überblicks und die fachlichen Beiträge in der Diskussion werden bewertet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "Wechselnde Schwerpunktthemen zur Robotik, Automatisierungs- und Regelungstechnik, insbesonderen hybride Regelung, lernende Regelung, Mensch-Roboter-Interaktion, hochdynamische Roboter, Identifikation, Intelligente Regelung, Nichtlinerare Regelung und Optimale Regelung. EI77581: Seminar Robotik, Automatisierungs- und Regelungstechnik | Seminar Robotics, Automation and Control [S- RAR] Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge und tragen ihre Resultate vor. Regelmässige Treffen mit einem Fachbetreuer unterstützen die Erarbeitung. Intensive Behandlung der Thematik in der Diskussion.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse der Regelung, Robotik und Automation. Der Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der Regelung, Robotik und Automation selbstständig auf wissenschaftliche Weise zu bearbeiten und in einem Bericht einzuordnen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps bei der fachlichen Arbeit und der Vorbereitung der Präsentation gibt. Vor dem Abschlussvortrag findet ein Probevortrag statt, um die Kompetenzen beim wissenschaftlichen Präsentieren durch eine Rückmeldung zur Qualität der Präsentation und der Möglichkeit die Präsentation entsprechend zu überarbeiten zu stärken.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer",
    "literature": "Die erforderlichen Literaturstellen werden themenabhängig zur Verfügung gestellt.",
    "lv_sws_lecturer": "Martin Buss\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Robotik, Automatisierungs- und Regelungstechnik (Hauptseminar, 2 SWS)\nBuss M, Kerz S, Leibold M"
  },
  {
    "module_id": "EI7759",
    "title": "Seminar Vernetzte Systeme und Regelung",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Wissenschaftliche Ausarbeitung mit Übersicht Stand der Technik (3-4 Seiten)\n- 20-minütige Präsentation und anschließende 10-minütige Diskussion\nDie Endnote setzt sich wie folgt aus den Prüfungselementen zusammen:\n- Ausarbeitung 30%: Formale Korrektheit/Layout, wissenschaftlicher Gehalt, Lesbarkeit und\nEigenständigkeit/Eigeninitiative in der Erarbeitung werden bewertet\n- Präsentation 70%. Die Auswahl der Inhalte, die Gestaltung der Folien/formale Korrektheit, der\nVortragsstil, Eigenständigkeit/Eigeninitiative in der Erarbeitung, Tiefe des Verständnisses/Breite des erarbeiteten Überblicks und die fachlichen Beiträge in der Diskussion werden bewertet.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu\nbewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der\nThematik in der Diskussion.",
    "content": "Wechselnde Schwerpunktthemen zur Robotik und Regelungstechnik, insbesondere vernetzte Regelung, lernende Regelung, Mensch-Roboter-Interaktion, dynamische Systeme mit Unsicherheiten, (verteilte) Identifikation, Nichtlineare Regelung und Optimale Regelung. EI7759: Seminar Vernetzte Systeme und Regelung | Advanced Seminar Networked Systems and Control [HS-VSR] Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion.",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse der Analyse und Regelung komplexer, vernetzter, und verteilter Systeme. Der Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der Analyse und Regelung komplexer, vernetzter, und verteilter Systeme selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden arbeiten überwiegend an zur Verfügung gestellten Rechnern mit\nentsprechenden Texteditor- und Simulationsprogrammen",
    "literature": "Die erforderlichen Literaturstellen werden themenabhängig zur Verfügung gestellt.",
    "lv_sws_lecturer": "Hirche, Sandra; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHauptseminar Vernetzte Systeme und Regelung (Hauptseminar, 2 SWS)\nDas N, Hirche S, Sosnowski S"
  },
  {
    "module_id": "EI7764",
    "title": "Seminar Audio-Informationsverarbeitung",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Das Seminar besteht aus einem Einführungstermin zur Themenvergabe gefolgt von einem Termin, in dem Vortragstechniken vorgestellt werden und typische Fehler besprochen werden. Im weiteren Verlauf arbeiten sich die Studierenden in ihre gewählte Thematik ein und bereiten ihren Vortrag vor, wozu sie sich mehrfach zur Anleitung mit ihrem individuellen Betreuer treffen. In der zweiten Semesterhälfte finden die Vorträge der Studenten statt, jeweils 2-3 je Termin. Ca. 2 Wochen nach dem letzten Vortrag ist die Einreichfrist für die wissenschaftliche Ausarbeitung zum gewählten (Vortrags-)Thema. Die Prüfungsleistung ist entsprechend der Lernziele gegliedert: Das 1. Prüfungselement ist fokussiert auf die Fähigkeiten, einen fachlichen Vortrag zur halten und bewertet die Literaturrecherche, die Auswahl und das Verständnis der Veröffentlichungen zum Thema, sowie die Präsentation (Hilfsmittel und Vortrag) nebst anschliessender Diskussion. Das 2. Prüfungselement ist Ihr Beitrag zur Diskussion der Vorträge der anderen Teilnehmer. 3. wird die Fähigkeit geprüft, eine wissenschaftliche Arbeit zum gewählten (Vortrags-)Thema selbstständig unter Einhaltung des wissenschaftlichen code of conduct erstellen zu können. Die Gesamtnote setzt sich wie folgt zusammen: 60% Vortrag 10% Diskussionsbeitrag (immanenter Prüfungscharakter) 30% Schriftliche Ausarbeitung (Hausarbeit)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Vorlesung Communication Acoustics oder\nVorlesung The Auditory System oder\nVorlesung Technische Akustik oder\nEI7764: Seminar Audio-Informationsverarbeitung | Seminar on audio information processing\nVorlesung Signal Processing for Audio Technology\nhilfreich, aber nicht Voraussetzung",
    "content": "Wechselnde Schwerpunktthemen zu aktuellen Fragen aus der Audio-Informationsverarbeitung, beispielsweise zur Signalverarbeitung von Musik und Sprache, zur Psychoakustik, zu auditorischen Modellen, zu Schwerhörigkeit oder Cochlea Implantaten, oder zur Raumakustik und virtuellen Akustik. Die Studenten arbeiten einen Vortrag zu einem ausgewählten Thema aus, tragen ihn vor und üben sich im Beantworten von Fragen ähnlich einer Konferenzsituation. Ziel des Seminars ist es, die Studierenden fachlich und insbesondere in Vortragstechniken und Literaturrecherche zu schulen. Material zum Themeneinstieg wird bereitgestellt, von dem aus vertiefend recherchiert werden soll. Dadurch lernen die Teilnehmer aktuelle Fragestellungen aus der Audio-Informationsverarbeitung kennen und sie schulen das Lesen von englischsprachigen wissenschaftlichen Veröffentlichungen. Weiterhin erstellen die Studierenden einen wissenschaftlichen Bericht zum Vortragsthema.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage, eigenständig Literatur zu aktuellen Fragestellungen der Audio-Informationsverarbeitung zu recherchieren, über die Bibliotheken zu erhalten, die englischsprachige Fachliteratur zu lesen, zu verstehen und inhaltlich zu bewerten und auf Basis der Literatur einen wissenschaftlichen Vortrag zu erstellen. Weiterhin lernen und üben die Teilnehmer, einen Fachvortrag vor Publikum zu halten und Fragen zum Thema zu beantworten, sowie Vorträge von anderen einzuschätzen. Durch das Erstellen eines wissenschaftlichen Berichts üben die Teilnehmer die Auswahl und Strukturierung von Material, die wissenschaftliche Zitierweise, das generell das Verfassen von präzisen Berichten.",
    "teaching_methods": "Selbststudium von wissenschaftlichen Veröffentlichungen unter persönlicher Betreuung durch einen Mitarbeiter, Präsentation und Diskussion des Inhaltes der Veröffentlichungen mit Seminarteilnehmern und Mitarbeitern des Fachgebiets, Lernen von Präsentationstechniken im Gespräch mit dem Betreuer, von den anderen Teilnehmern und durch Diskussion von Präsentationstechniken. Lernen von Schreibtechniken für wissenschaftliche Berichte.",
    "media": "Die Studierenden recherchieren und lesen wissenschaftliche Veröffentlichungen (Suchmaschinen\nauf dem Web, Literaturdatenbanken, Bibliotheken), sie erstellen eine Präsentation (Folien, z.B. mit\nPowerpoint oder Latex) mit deren Hilfe sie einen Vortrag geben und sie arbeiten einen schriftlichen\nwissenschaftlichen Bericht aus.",
    "literature": "Literatur zum Einstieg in das Thema wird zur Verfügung gestellt.\nEI7764: Seminar Audio-Informationsverarbeitung | Seminar on audio information processing",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHauptseminar Audio-Informationsverarbeitung (Hauptseminar, 2 SWS)\nSeeber B, Bischof N, Kuntz M, Azaripasand P, Hladek L, Zhang H, Bajool M"
  },
  {
    "module_id": "EI7766",
    "title": "Seminar Autonome Systeme",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Schriftliche Ausarbeitung der Ergebnisse als Hausarbeit\n- Regelmäßige Gespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter) über\nden Fortschritt der Arbeit und das Vorgehen\n- 10minütige Präsentation der Ergebnisse und anschließendes 10minütiges Kolloquium\nDie Endnote setzt sich wie folgt aus den Prüfungselementen zusammen: - Schriftliche Ausarbeitung: 40% - Beurteilung der Vorgehensweise: 30% - Präsentation und Kolloquium: 30%",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "Wechselnde Schwerpunktthemen zu autonomen Systemen, insbesondere in den Bereichen Planung, Navigation, SLAM, autonomes Lernen, Lernalgorithmen, Vision, Perzeption, Interaktion zwischen Mensch und Roboter, Mobile Roboter, Probabilistische Robotik. Die Modulteilnehmer erarbeiten selbständig aktuelle wissenschaftliche Beiträge, fertigen eine zu bewertende schriftliche Ausarbeitung an und tragen ihre Resultate vor. Intensive Behandlung der Thematik in der Diskussion. EI7766: Seminar Autonome Systeme | Advanced Seminar Autonomous Systems",
    "learning_outcomes": "Nach erfolgreichem Abschluss des Moduls verfügt der Studierende Kenntnisse der autonomen Systeme. Der Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der autonomen Systeme selbstständig auf wissenschaftliche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle fachliche Aufgabenstellung. Dies geschieht insbesondere in selbständiger Einzelarbeit des Studierenden. Der Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und hilfreiche Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt.",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- Die Studierenden arbeiten überwiegend an zur Verfügung gestellten Rechnern mit\nentsprechenden Texteditor- und Simulationsprogrammen",
    "literature": "Die erforderlichen Literaturstellen werden themenabhängig zur Verfügung gestellt.",
    "lv_sws_lecturer": "Lee, Dongheui; Prof. Dr. Ph.D.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHauptseminar Autonome Systeme (Hauptseminar, 2 SWS)\nCheng G [L], Abdelwadoud Y, Schulleri K"
  },
  {
    "module_id": "EI7768",
    "title": "Seminar Kognitive Systeme",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen:\n- Schriftliche Ausarbeitung der Ergebnisse als Hausarbeit (40%)\n- Regelmäßige Gespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter) über\nden Fortschritt der Arbeit und das Vorgehen (40%)\n- 10 minütige Präsentation der Ergebnisse und anschließendes 10 minütiges Kolloquium (20%)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Englisch Kenntnisse für Literaturrecherche",
    "content": "Das Hauptseminar umfasst eine Literaturrecherche in Teilgebieten der humanoiden und allgemeinen Robotik sowie eine Abschlusspräsentation. Das Institut für Kognitive Systeme (ICS) kann in drei Hauptgebiete unterteilt werden welche weitere Untergebiete enthalten. Das Thema der Hauptseminararbeit kann in Absprache mit dem thematisch verantwortlichen wissenschaftlichen Mitarbeiter definiert werden (siehe: http://www.ics.ei.tum.de). Sensoren und Aktoren, Steuerung und Regelung\n- Künstliche Haut für Robotersysteme\n- Humanoide dynamische Lokomotion\n- Restringierte Manipulation für sichere Aktuation\n- Navigation, Steuerung und Regelung von mobilen Robotern\n- Hochleistungs Aktoren\nEI7768: Seminar Kognitive Systeme | Advanced Seminar Cognitive Systems Biologisch-inspirierte verkörperte Kognition\n- Biologisch-inspiriertes Sehen\n- Neurologisch-inspiriertes Lernen von zweibeinigem Gehen\n- Kognitive Architektur\n- Semantische Schlussfolgerung für die Erkennung menschlichen Handelns\nMensch-Maschine Schnittstelle\n- Humanoide kognitive Kommunikation\n- Roboter, Gesellschaft und Interaktion\n- Gehirn-Computer Schnittstelle (BCI)\n- Mensch-Roboter Interaktion",
    "learning_outcomes": "Durch die Teilnahme an den Modulveranstaltungen erhält der Studierende Kenntnisse in der Auslegung und Anwendung kognitiver Systeme. Der Studierende ist anschließend in der Lage eine Aufgabenstellung aus einem aktuellen Themengebiet der kognitiven Robotik selbstständig auf wissenschaftilche Weise zu bearbeiten und eine schriftliche Ausarbeitung dazu anzufertigen. Darüber hinaus kann der Studierende die von ihm erarbeiteten Erkenntnisse vor einem fachlichen Publikum präsentieren.",
    "teaching_methods": "begleitetes, eigenständiges Arbeiten",
    "media": "Folgende Medienformen finden Verwendung:\n- Rechnergestützte Präsentation für den Vortrag der Teilnehmer\n- IEEE Xplore Datenbank",
    "literature": "",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHauptseminar Kognitive Systeme (Hauptseminar, 3 SWS)\nCheng G [L], Cheng G, Nassour J, Uhde C"
  },
  {
    "module_id": "EI77691",
    "title": "Seminar Maschinelle Intelligenz",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Die Prüfungsleistung besteht aus Präsentationen, vier bewerteten Essays sowie einem Bericht. Im einzelnen umfasst dies:\n• Die Studierenden verfassen in der ersten Phase (Lektüre) vier Essays, die im Rahmen eines\nPeer-Reviewverfahrens bewertet werden. Die Bewertungen werden durch den Dozenten kontrolliert und zur Benotung herangezogen. Die Bewertungsleistung der Peers wird ebenfalls bewertet. (30%)\n• Die studentischen Teams liefern in der zweiten und dritten Phase wöchentliche Petcha-Kutcha\nPräsentationen über den Fortschritt der Recherchearbeiten. Die Präsentationen werden bewertet. (30%)\n• Die studentischen Teams liefern schriftliche Beiträge zum Trendreport, die begutachtet und\nzu einem Buch zusammengefasst werden. Die schriftlichen Beiträge zum Trendreport werden ebenfalls bewertet. (40%)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Veranstaltung setzt grundlegende Kenntnisse um Bereich künstlicher Intelligenz und\nmaschinellem Lernen voraus, sowie hinreichende Sprachkenntnisse in englischer Sprache.",
    "content": "Das Seminar behandelt ein ausgewähltes und aktuelles Forschungsthema aus dem Bereich der Maschinellen Intelligenz, z. B. Moral Machines, What is Thought?. Zu diesem Thema führen die Studierenden ein Trendseminar durch mit dem Ziel Forschungstrends zu identifizieren und zu beschreiben. Der zugehörige Prozess baut auf mehrere Stufen auf. EI77691: Seminar Maschinelle Intelligenz | Seminar Machine Intelligence [SMI] 1 – Lektüre eines einführenden Buches zur Maschinellen Intelligenz 2 – Erforschung des aktuellen Standes der Forschung/Technik im Bereich Maschinelle Intelligenz 3 – Extrapolation von zukünftigen Forschungstrends in vorgegebenen Themenkreis Ziel des Seminars ist es, die Forschungstrends in Form eines Trendreports zusammen zu fassen und als Buch herauszugeben.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls\n• können Studierende aktuelle Informationen zu Maschinellen Intelligenz bzgl Ihrer\nForschungsrelevanz analysieren und bewerten.\n• können Studierende basieren auf aktuellen Forschungstrends im Bereich der Maschinellen\nIntelligenz einen eigenen, in die Zukunft gerichteten Forschungsplan entwickeln und schriftlich ausdrücken.",
    "teaching_methods": "Die Zielsetzung für das Seminar ist die Herausgabe eines Buches in dem die Trends und Entwicklungen zu einem speziellen Thema der maschinellen Intelligenz zusammengefasst werden. Die Textbeiträge im Buch werden von den Studierenden erarbeitet und verfasst. Die Inhalte dazu werden im Rahmen des Seminars recherchiert, diskutiert und die Ergebnisse schriftlich zusammengefasst. Jedes Jahr gibt es ein neues Thema. Das Seminar beginnt mit der gemeinsamen Lektüre eines Buches, das zum gestellten Thema passt. Studierende lesen und diskutieren das Buch in Abschnitten zusammen mit dem Verfassen von kurzen Essays mit Peer-Review. Ausgehend vom gelesenen Buch recherchieren die Studierenden anschließend Forschungstrends und die zukünftige technisch-wissenschaftliche Entwicklungen des Themas. Die Arbeitsweise ist teamorientiert so dass kleine Redaktionsteams Teilaspekte des Gesamtthemas bearbeiten und vertreten.",
    "media": "Die folgenden Medien werden im Seminar eingesetzt:\n• Literatur (Bücher und Artikel)\n• Verfassen und verteilen von schriftliche Berichten\n• Studentische Präsentationen",
    "literature": "OECD - Trend Analysis as a Method. Schooling for Tomorrow. URL: http://www.oecd.org",
    "lv_sws_lecturer": "Klaus Diepold (kldi@tum.de)\nEI77691: Seminar Maschinelle Intelligenz | Seminar Machine Intelligence [SMI]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Maschinelle Intelligenz (Seminar, 2 SWS)\nHein A, Zwick M"
  },
  {
    "module_id": "EI7774",
    "title": "Seminar Signal- und Informationstheorie",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "Modulprüfung mit folgenden Bestandteilen und Gewichtungen:\n- Schriftliche Ausarbeitung der Ergebnisse als Hausarbeit oder als zusammenfassendes Handout\n(20%)\n- Regelmäßige Gespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter) über\nden Fortschritt der Arbeit und das Vorgehen (10%)\n- 20minütige Präsentation der Ergebnisse und anschließende Diskussion (70%)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "keine",
    "content": "Wechselnde Schwerpunktthemen aus dem Bereich der Signal- und Systemtheorie. Die Modulteilnehmer erarbeiten sich selbständig aktuelle wissenschaftliche Inhalte. Dazu gehört\n- Literaturrecherche\n- Lesen und verarbeiten aktueller wissenschaftlicher Artikel\n- die Anfertigung einer schriftlichen wisenschaftlicher Ausarbeitung\n- die Präsentation der Ergebnisse vor fachkundigem Publikum\n- wissenschaftliche Diskussion nach der Präsentation\nEI7774: Seminar Signal- und Informationstheorie | Seminar Signal- and Information Theory",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme am Modul verfügen Studierende über Kenntnisse über eine aktuelle Thematik aus dem Bereich der Signal- und Systemtheorie und hat das wissenschaftliche Arbeiten in einer Forschungsgruppe erlernt. Der Studierende ist anschließend in der Lage sich in eine aktuelle wissenschaftliche Problemstellung einzuarbeiten, eine entsprechende wissenschaftliche Publikation zu verfassen, die erabeiteten Kenntnisse einem fachkundigen Publikum vorzutragen und in einer Diskussion zu verteidigen.",
    "teaching_methods": "Jeder Teilnehmer bearbeitet eine individuelle Aufgabenstellung, die aus einem Themenkatalog ausgewählt werden kann. Dies geschieht vorranging in selbständiger Einzelarbeit des Studierenden. Jeder Teilnehmer bekommt - abhängig von seinem individuellen Thema - einen eigenen Betreuer zugeordnet. Der Betreuer hilft dem Studierenden insbesondere zu Beginn der Arbeit, indem er in das Fachthema einführt, geeignete Literatur zur Verfügung stellt und Tipps sowohl bei der fachlichen Arbeit als auch bei der Erstellung der schriftlichen Ausarbeitung und des Vortrags gibt. Es wird erwartet, dass die Studierenden an den wöchentlichen Seminaren des Lehrstuhls teilnehmen und sich gegebenenfalls in die Diskussion einbringen.",
    "media": "",
    "literature": "Die notwendige Literatur wird den Teilnehmern, in Abhängigkeit vom Thema, zur Verfügung\ngestellt. Zusätzlich soll eine selbstständige Literaturrecherche mit Unterstützung des Betreuers\nstattfinden.",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar Signal- und Informationstheorie (Hauptseminar, 2 SWS)\nKangani P [L], Boche H, Pohl V"
  },
  {
    "module_id": "EI7778",
    "title": "Internationales Seminar Signalverarbeitung",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 120,
    "hours_presence": 30,
    "examination_achievements": "The grade for the seminar is composed of the following components:\n- preparation of an extended summary describing the contents of the seminar talk; 1/3 of grade\n- presentation of the results (30 min) and discussion (10 min); 2/3 of grade\nActive participation at all three partner institutes is expected.",
    "repetition": "",
    "recommended_prerequisites": "Linear algebra, optimization, stochastics, and communications.\nRecommended additional modules:\n- Adaptive and Array Signal Processing\n- Advanced Signal Processing in Signal Processing\n- Circuit Theory and Communications\n- MIMO Systems\n- Numerical Linear Algebra for Signal Processing\n- Optimization in Communications Engineering\n- Statistical Signal Processing",
    "content": "Based on examples for scientific literature (journal and conference papers, books), the students gain knowledge of a current research topic in the area of Signal Processing. They prepare an extended abstract and a presentation about the topic. EI7778: Internationales Seminar Signalverarbeitung | International Seminar Signal Processing The seminar takes place in Munich and institutes at foreign universities (at the moment: Technische Universität Wien und Eidgenössische Technische Hochschule Zürich), where the students of the hosting university give their seminar presentations. The travelling costs are covered. Additionally, an introductory lecture on presentation techniques is offered.",
    "learning_outcomes": "At the end of the module, the students are able to understand, analyze, and evaluate scientific publications. They can summarize scientific results in own words and can prepare and give an own presentation about the topic. They are able to participate and bring in their own understanding in a discussion. Additionally, the students learn about the research in Munich and at the foreign universities.",
    "teaching_methods": "Every student prepares an extended summary about scientific publications related to a given topic. A presentation is prepared and given in the seminar by every student. To this end, initial publications are given to the students, that are studied by the students, the students search for additional literature, and discuss the contents of the literature and their understanding with their supervisor.",
    "media": "- presentations\n- scientific publications",
    "literature": "Depending on the topic, the literature is recommended individually at the beginning of the seminar.",
    "lv_sws_lecturer": "Wolfgang Utschick (utschick@tum.de)\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\n(Internationales) Hauptseminar Signalverarbeitung (Seminar, 3 SWS)\nBaur M, Utschick W"
  },
  {
    "module_id": "EI78001",
    "title": "Ringpraktikum Neurosignale",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Mehrere",
    "frequency": "Semester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Studierenden demonstrieren ihre Fähigkeit, (1) akustisch evozierte neuronale Potentiale (2) Elektrookulogramm (EOG)-Signale (3) Mehrkanal-EEG-Aufzeichnungen zu implementieren, zu messen, zu analysieren, zu interpretieren und zu dokumentieren. Die Note für dieses Labor wird je nach Experiment / Übung aus der individuellen Vorbereitung für jedes Experiment, der Qualität des durchgeführten Experiments, der Datenanalyse und Datenpräsentation (Bericht) oder einem schriftlichen Test bestehen. Die Noten aus den 3 einzelnen Themenblöcken werden gemittelt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Empfohlen: Programmiererfahrung in MATLAB. Vorteilhaft: Hintergrund in Signalverarbeitung,\nHintergrund in statistischer Datenanalyse und Mustererkennung.",
    "content": "Das praktische Modul lehrt grundlegende Methoden des NeuroEngineering in 3 thematischen Elementen, die jeweils von einem anderen Mitglied des CoC NeuroEngineering betreut werden. In persönlicher Vorbereitung mit schriftlichem Material bereiten sich die Studierenden auf jedes Praktikum vor, in dem sie ein praktisches Tutorium erhalten. 1) Hemmert: Einführung in das Hörsystem des Menschen. Aufzeichnung und Analyse von Biosignalen, z.B. EMG, auditorische Hirnstammreaktionen (BERA), kortikale auditorisch evozierte Potentiale (CAEP). 2) Seeber: Einführung in die Elektrookulogramm (EOG)-Datenverarbeitung, Implementierung eines blickgesteuerten Beamformers. EI78001: Ringpraktikum Neurosignale | Lab Series Neurosignals [RP NeuroSig] 3) Cheng: Mehrkanal-EEG-Aufzeichnungen und die statistische Analyse ereigniskorrelierter Potentiale mittels Zeit-Frequenz-Zerlegung mit Schwerpunkt auf kognitiven Mechanismen.",
    "learning_outcomes": "Nach dem Praktikum sind die Studierenden dazu in der Lage:\n- die theoretischen Grundlagen von neuronalen Reaktionen auf muskuläre Signale, deren\nMessung, Analyse (auch mehrkanalige Datenanalyse) und statistische Auswertung zu verstehen.\n- Experimente zur Erfassung ereigniskorrelierter Potentiale (z.B. auditorisch evozierte\nHirnstammpotentiale, visuell okuläre Reaktionen, EEG-Signale) anzulegen.\n- wenden modernste Signalverarbeitungsmethoden, robuste Informationsextraktion und\nAuswertung der Datenqualität von bioelektrischen Signalen mit Matlab an.\n- verrauschte multivariate neuronale Messdaten statistisch zu analysieren.",
    "teaching_methods": "Selbststudium (Vorbereitung auf den Kurs), betreute Praktika (ein Treffen pro Woche à 180 min): Sammlung, Analyse und Präsentation der gewonnenen Daten in einer kurzen Zusammenfassung durch jeden Teilnehmer für jeden Themenblock (ca. 10 Tage nach Beendigung des Experiments/ Tutorials) einzureichen.",
    "media": "Computergestützte Präsentationen, Whiteboard, Übungen und Tutorials mit bereitgestellten\nComputern (Programmierübungen) und praktische Signalerfassung mit dem Biopac-\nSensorsystem.",
    "literature": "Wolpaw and Wolpaw: Brain Computer Interfaces, Principles and Practice\nSteven Luck: An Introduction to the Event-Related Potential Technique",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRingpraktikum Neurosignale/ Practical course neural signals (Praktikum, 4 SWS)\nCheng G [L], Castaneda González C, Hladek L, Malekmohammadi A"
  },
  {
    "module_id": "EI78008",
    "title": "Projektpraktikum RoboCup@Home",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Bewertet wird die Mitarbeit der Studierenden während der Übungen und das abschließende Gruppenprojekt. Jede Übung beinhaltet eine oder mehrere Aufgaben welche die Studierenden selbständig lösen müssen. Nach den Einführungskursen werden die Studierenden in Kleingruppen aufgeteilt. Jede Gruppe implementiert dann Algorithmen zur Lösung verschiedener Probleme im Kontext des RoboCup@Home Wettbewerbs, sodass jede Gruppe eine andere Fähigkeit des mobilen Roboters realisiert. Das abschließende Gruppenprojekt wird anhand von einer Präsentation und einer Live-Vorführung des implementierten Algorithmus bewertet. Neben der technischen Implementierung muss jedes Team einen Bericht abgeben. Dieser Bericht soll die Fähigkeit der Studiernenden widerspiegeln, wissenschaftliche und technische Probleme im Bereich der Servicerobotik zu analysieren und darzustellen. Die Bewertung setzt sich wie folgt zusammen: A) Abschließendes Gruppenprojekt mit Präsentation und Bericht: 70% B) Übungen und Gruppenarbeit: 30%",
    "repetition": "Folgesemester\nEI78008: Projektpraktikum RoboCup@Home | Practical Course RoboCup@Home [RoboCup@Home]",
    "recommended_prerequisites": "Studierende im Bachelor-Studium müssen die ersten zwei Semester erfolgreich abgeschlossen\nhaben. Es empfiehlt sich theoretisches Basiswissen in der Regelung, in der Bildverarbeitung oder\nim Maschinellen Lernen.\nFolgende Kenntnisse werden vorausgesetzt::\n- C++ Programmier-Kenntnisse sind zwingend erforderlich\n- ROS Kenntnisse sind sehr hilfreich und empfehlenswert\n- Basiskenntnisse in AI (PROLOG) und in Robotik werden sehr empfohlen",
    "content": "Wir möchten ein Studententeam für den größten Wettbewerb in der Servicerobotik, den RoboCup@Home, gründen. Dieser Wettbewerb konzentriert sich auf anspruchsvolle wissenschaftliche Problemstellung wie zum Beispiel das Entwickeln, Implementieren und Testen von Algorithmen in den Bereichen des Erkennens, des Lernens und der Roboterregelung. Das generelle Ziel dieses Kurses ist es, Studierenden die nötigen praktischen Grundlagen an die Hand zu geben, damit sie erfolgreich am jährlichen internationalen Wettbewerb der RoboCup@Home Liga teilnehmen können. Serviceroboter müssen folgende Fähigkeiten aufweisen: Navigation, Kartierung der Umgebung, Erkennung von Menschen und Objekten, Erkennung und Verstehen von Situationen usw.. Daher ist der Kurs ist folgendermaßen unterteilt:\n- Kick-off meeting: Die Studierenden treffen sich mit einem Betreuer und bilden Kleingruppen unter\nBerücksichtigung ihrer Vorkenntnisse. Jede Gruppe ernennt einen Gruppenleiter (vorzugsweise ein Master-Student) der fortwährend in Kontakt mit den Kursbetreuern steht.\n- Hands-on tutorials: Die Studierenden bekommen Einführungskurse, die sie mit den im Kurs\nverwendeten Methoden, Softwarebausteine und Material vertraut machen. Diese Einführungskurse stellen sicher, dass alle Studierenden auf dem gleichen Basiswissenstand sind und mit der Anwendung der Methoden vertraut sind.\n- Entwicklungs- und Testphasen: Die Studierenden entwickeln und implementieren Algorithmen,um\ndie vorgegebene Problemstellungen zu lösen. Jede Entwicklungsphasewird von Test- und Validierungs-Zyklen begleitet.\n- Abschlussprojekt: Es wird ein Szenario aus einen früheren Wettbewerb ausgewählt und mit einen\nmobilen Roboter realisiert. Abschließend werden die Fähigkeiten des Robotersystems evaluiert und verglichen. Dieser Kurs richtet sich vor allem an Studierende, die motiviert sind, über die Dauer des Jahres Algorithmen für die Testszenarien des RoboCup@Home Wettbewerbs zu entwickeln. Der Kurs soll auf längere Sicht zum Aufbau eines RoboCup@Home Studententeams beitragen, das künftig an offiziellen Wettbewerben teilnimmt.",
    "learning_outcomes": "Nach erfolgreicher Teilnahme sind Studierende dieses Kurses in der Lage: EI78008: Projektpraktikum RoboCup@Home | Practical Course RoboCup@Home [RoboCup@Home]\n• Verschiedene Algorithmen zur Erkennung, zum Lernen und zur Regelung im Bereich der\nServicerobotik zu implementieren.\n• Diese Algorithmen in Simulationen und in der Anwendung mit echten mobilen Robotern zu testen\nund zu bewerten.\n• Nach der Analyse entsprechende Techniken bei herausfordernden Problemstellungen in\nalltäglichen, realistischen Szenarien anzuwenden, wie z.B. in Wohnungen oder im Supermarkt Neben der Aneignung von Fachkenntnissen lernen Studierende dieses Kurses auch wie man Projekte organisiert und managt. Des Weiteren können Studierende während der Gruppenarbeit ihre Soft-Skills und Kommunikationsfähigkeit trainieren.",
    "teaching_methods": "Es werden folgende Lehrmethoden angewandt:\n- Einführungskurse mit Übungen (umfassen Regelung, Erkennung und Lernen)\n- Selbstständiges Arbeiten (beinhaltet Laborarbeit mit Simulation und echten Robotern)\n- Gruppenarbeit: eigene Organisation der gruppe und der entsprechenden Treffen",
    "media": "Medienformate:\n- Papers (Fachblätter)\n- Computergestützte Präsentationen",
    "literature": "• RoboCup@Home: Analysis and results of evolving competitions for domestic and service robots,\nIocchi L., Holz D., Ruiz-del-Solar J. , Sugiura K. and van der Zant T. Artificial Intelligence, Volume\n229, December 2015, Pages 258–281, DOI: http://dx.doi.org/10.1016/j.artint.2015.08.002\n• Artificial Intelligence: A modern approach. Stuart Russell and Peter Norvig. Pearson Ed.\n• Springer Handbook of Robotics. Bruno Siciliano and Oussama Khatib. 2007. Springer-Verlag\nNew York, Inc., Secaucus, NJ, USA.\n• Machine Learning. Tom Mitchell. McGrawHill\n• Robot modeling and control. M.W. Spong, S. Hutchinson, and M. Vidyasagar. John Wiley & Sons,\n2006.",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum RoboCup@Home (Forschungspraktikum, 4 SWS)\nCheng G [L], Cheng G, Armleder S, Guadarrama Olvera J, Wang F"
  },
  {
    "module_id": "EI78009",
    "title": "Introduction Lab Humanoid RoboCup",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfung besteht aus einem praktischen Teil (60%), einem Bericht (20%) und einer Präsentation (20%). Im praktischen Teile implementieren die Studenten den Basisalgorythmus und demonstrieren diesen in einem Roboter. Der schriftliche Bericht sollte die Fähigkeit aufzeigen die technischen und wissenschaftlichen Probleme von Roboter Fußball zu analysieren und zu verstehen. Die Präsentation bewertet die Fähigkeit Fakten und Fortschritte zusammenzufassen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Basiswissen in entweder control, vision, planning, oder machine learning.\nGrundkenntnisse in Python or C++.",
    "content": "Die Studenten werden in drei Gruppen aufgeteilt. Jede Gruppe implementiert den Basisalgorithmus Robot Vision, Robot Learning, Path Planning, Laufen in NAO Roboter, um jedem NAO grundlegende Fähigkeiten, wie z.B. Ball Erkennung und Verfolgung, Lokalisierung und Schießen. Der Kurs is in verschieden Phasen eingeteilt:\n- Kick-off meeting: Die Studenten treffen die Vortragenden um den Stundenpan und die Gruppen\nfestzulegen.Die Aufteilung in Gruppen wird von den Vorkenntnissen der Studentenbestimmt.\n- Initialisierungsphase: Die Studenten bereiten ihre Ausrüstung vor( PCs, Roboter, Software).\nEI78009: Introduction Lab Humanoid RoboCup | Introduction Lab Humanoid RoboCup [Projektpraktikum Introduction Lab Humanoid RoboCup]\n- Entwicklungs- und Testphase: Die Studenten entwickeln und implementieren exisitierende\nBasisalgorythmen. Diese Entwicklung geht einher mit der Auswertung/Testphase.\n- Abschließende Phase: Die abschließende Demonstration findet auf einem Original Robocup\nfußballfeld statt. Jede Gruppe stellt NAOs in 4 verschiedenen Funktionen vor: Torhüter, Stürmer, Abwehrspieler und Unterstützer.",
    "learning_outcomes": "Am Ende des Kurses habe die Studenten folgende Fähigkeiten erworben:\n- Grundlegende Methoden aus verschiedenen Bereichen zu entwickeln, wie z.B. Vision, Planung\nund Lernen im Bereich Roboterfußball.\n- Evaluation der Grund- und Basisalgorithmen bei Robotern.\nNicht technische Fähigkeit werden ebenso erlernt: Die Studenten sind in der Lage:\n- ein großes technisches Projekt zu organisieren und zu leiten.\n- in kleinen Gruppen zu arbeiten und die Fortschritte, die in der Gruppe erreicht werden, zu\nkommunizieren.",
    "teaching_methods": "Folgende Lehrmethoden werden angewendet:\n- Einführungsvorlesungen\n- Anwendungsspezifische Übungen (encompassing control, vision, planning, and learning)\n-Unabhängiges Arbeiten (Laborarbeit mit Robotern)",
    "media": "Media formats:\n- Papers\n- Computer-supported presentations\n- NAO humanoid robots",
    "literature": "L. L. Forero, J. M. Yanez, J. Ruiz-del-Solar: \"Integration of the ROS Framework in Soccer\nRobotics: The NAO Case\", RoboCup 2013: Robot World Cup XVII, Lecture Notes in Computer\nScience, Vol. 8371, pp. 664-671, 2014.\nKober, Bagnell and Peters, Reinforcement learning in robotics: A survey, IJRR, 2013.",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum\nProf.Cheng\nProf. Dongheui Lee\nMohsen Kaboli\nKarna Potwar\nEI78009: Introduction Lab Humanoid RoboCup | Introduction Lab Humanoid RoboCup [Projektpraktikum Introduction Lab\nHumanoid RoboCup]"
  },
  {
    "module_id": "EI78018",
    "title": "Projektpraktikum Taktiles Internet",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulprüfung besteht aus einem benoteten Semesterprojekt in Gruppenarbeit und benoteten Hausaufgaben. Lernergebnisse zu ausgewählten Themenstellungen aus dem Bereich Taktiles Internet, sowie die Fähigkeiten zur Teamarbeit und Teamorganisation werden durch die Abgabe eines Semesterprojektes überprüft und benotet. Dabei bearbeiten die Studierenden in Gruppenarbeit ein Semesterprojekt. In die Benotung geht die Lösung der gestellten Aufgabe und die Präsentation und Demonstration des Ergebnisses ein. Die Fähigkeit zur individuellen Problemlösung wird im Rahmen problembezogener Hausaufgaben semesterbegleitend geprüft. Die Hausaufgaben dienen dazu den speziellen Stand der Technik zum Semesterprojekt aufzuarbeiten und die Projektpläne zu erstellen. In die Benotung geht die Lösung der gestellten Aufgabe und die Präsentation des Ergebnisses ein. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- 60 % Semesterprojekt (Gruppenarbeit)\n- 40 % Hausaufgabe",
    "repetition": "",
    "recommended_prerequisites": "- Programmiererfahrung in C++, Java, Python oder ähnlich\n- Matlab\n- Grundkenntnisse Kommunikationsnetze\nEI78018: Projektpraktikum Taktiles Internet | Tactile Internet Laboratory [PPTI]\n- Grundkenntnisse Audiosignalverarbeitung\n- Grundkenntnisse Videosignalverarbeitung\n- Grundkenntnisse Computer und Networking Werkzeuge: ssh, iperf, etc.",
    "content": "Die Teilnehmer entwicklen, implementieren und untersuchen ausgewählte Aspekte aus dem Bereich Taktiles Internet. Das Taktile Internet ist ein hochaktuelles Forschungsthema, das insbesondere im Rahmen der Standardisierung der 5ten Generation Mobilfunk (5G) großes Interesse erfährt. Das Taktile Internet ermöglicht die Regelung von Prozessen über ein Kommunikationsnetz oder ein Netz von Kommunikationsnetzen (ein Internet) hinweg. Sensoren, Aktoren und Regler können im Taktilen Internet voneinander getrennt auf unterschiedlichen (geographisch verteilten) Netzknoten realisiert werden. Der Austausch der Information zwischen den Einheiten erfolgt über das Taktile Internet mit sehr geringen Latenzen, im Idealfall mit weniger als 1 ms. Anwendungsgebiete finden sich im Bereich intelligenter Transportsysteme, autonomes Fahren, Teleoperation (z.B.Telechirurgie), Industrie 4.0, der Regelung von Smart Grids, und vielem mehr.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist der Studierende in der Lage, die wesentlichen Eigenschaften und Herausforderungen des taktilen Internets zu beschreiben. Darüber hinaus ist der Studierende in der Lage ausgeählte Aspekte des taktilen Internets zu entwerfen, zu analysieren und zu bewerten.",
    "teaching_methods": "Studierende befassen sich unter Anleitung mit aktuellen Veröffentlichungen zum Thema Taktiles Internet. Je nach Bedarf werden ergänzende Tutorials durch die Betreuer gegeben. Die Projektarbeit im Team erlaubt es den Teilnehmern die erarbeiten Kenntnisse an realistischen und praxisnahen Herausforderungen anzuwenden.",
    "media": "- Einführende Präsentationen zu Beginn der betreuten Praktikumstermine\n- Computer und Softwareentwicklungsumgebungen",
    "literature": "- aktuelle thematisch relevante Veröffentlichungen aus der wissenschaftlichen Literatur sowie\nTutorials",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Taktiles Internet (Forschungspraktikum, 5 SWS)\nSteinbach E, Kellerer W, Seeber B, Ayan O, Patsch C, Bischof N\nEI78018: Projektpraktikum Taktiles Internet | Tactile Internet Laboratory [PPTI]"
  },
  {
    "module_id": "EI78030",
    "title": "Praktikum Robot Modelling and Identification",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Bewertung basiert auf der wöchentlichen Laborleistung. Dafür wird zu Beginn jedes Praktikums in einem etwa 15-minütigen Prüfungsgespräch das theoretische Verständnis des jeweiligen in diesem Praktikum behandelten Themas geprüft. Die Fähigkeit zur Implementierung oder Modellierung der verschiedenen Konzepte wird durch eine Kontrolle des während des Praktikums erarbeiteten Quellcodes zum Ende des wöchentlichen Praktikums gemessen. Dabei wird dieser nach Funktionalität und Verständlichkeit geprüft. Dieser wird für die Modellierung seriellkinematischer Roboter in Maple, für die anderen Themenfelder in Matlab/Simulink erstellt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Studierenden sollten über solide Grundkenntnisse in den der folgenden Bereichen verfügen:\n• Regelungstechnik\n• Mechanik, Mehrkörpersysteme\n• Elektrische Antriebstechnik\n• Robotik",
    "content": "Dieses Labor behandelt verschiedene mechatronische Grundkonzepte der Robotik mit dem Focus auf Modellierung, Simulation und Regelung unter Verwendung der numerischen Software Matlab/ Simulink sowie dem Computeralgebrasystem Maple. EI78030: Praktikum Robot Modelling and Identification | Robot Modelling and Identification Lab Das Labor umfasst die Modellierung und Regelung eines permanenterregten Gleichstrommotors sowie eines Pneumatikaktors, die zeitdiskrete Regelung eines Gleichstrommotors, den Reglerentwurf eines elektrischen Antriebs im Frequenzbereich, die Identifikation eines Robotergelenks, einen Regler- und Beobachterentwurf für ein Robotergelenk, eine Impedanzregelung für ein Robotergelenk, einen Kraftregler und Kollisionsbeobachter, die dynamisch/kinematische Modellierung einer seriellen Roboterkinematik sowie deren Identifikation und Trajektorienoptimierung.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss dieses Labors sind die Studierenden in der Lage, verschiedene Aktorkonzepte, wie Pneumatikaktoren oder Gleichstrommotoren, sowie gängige Beobachtungs- und Regelungsstrategien, Identifikationsmethoden (linear + Pseudoinverse und nichtlinear + gradientenbasiert), einen kontinuierlichen sowie diskreten PID Regler, LQ Regler, Luenbergerbeobachter und Störgrößenbeobachter zur Erkennung von Kollisionen, in Matlab/Simulink zu implementieren. Sie haben theoretisch-fundiertes Wissen in der kaskadierten Regelung und Impedanzregelung und können diese auf ein Robotergelenk anwenden. Sie verfügen über die nötigen Kenntnisse, um seriellkinematische Roboter in Maple zu modellieren, und in Matlab/Simulink zu regeln und zu identifizieren.",
    "teaching_methods": "• Vorbereitung theoretischer Grundlagen Anhand von Literatur und Skripten\n• Diskussion der Theorie im mündlichen Prüfungsgespräch\n• Praktische Umsetzung und Implementierung der Übungsaufgaben während der betreuten\nLaborzeiten",
    "media": "• Übungszettel\n• Skripte",
    "literature": "- Introduction to Robotics: Mechanics and Control, 3rd Edition, John J. Craig, Pearson\n- H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, S. Thrun, ‘Principles of\nRobot Motion: Theory, Algorithms, and Implementation’, MIT Press, 2005.\n- Siciliano, O. Khatib, ‘Springer Handbook of Robotics’, Springer, 2016.\n- M. W. Spong, S. Hutchinson, M. Vidyasagar, ‘Robot modeling and control’, vol. 3. New York:\nWiley, 2006.\nEI78030: Praktikum Robot Modelling and Identification | Robot Modelling and Identification Lab",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum Robot Modelling and Identification (Praktikum, 5 SWS)\nHaddadin S [L], Diaz Ledezma F, Haddadin S, Kenanoglu C, Swikir A\nPraktikum Robot Modelling and Identification (Vorlesung, 1 SWS)\nHaddadin S [L], Diaz Ledezma F, Haddadin S, Kenanoglu C, Swikir A"
  },
  {
    "module_id": "EI78033",
    "title": "Projektpraktikum Audio-Signalverarbeitung",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulprüfung besteht aus einem benoteten Semesterprojekt in Gruppenarbeit, einem benoteten, individuellen schriftlichen Bericht über die Arbeitsergebnisse und der Abschlusspräsentation der Ergebnisse. Die Prüfungsart ist dabei den verschiedenen Lernergebnissen angepasst: Lernergebnisse zu ausgewählten Themenstellungen aus aktuellen Forschungsfragen an der Professur für Audio-Signalverarbeitung, sowie die Fähigkeiten zur Teamarbeit und Teamorganisation werden durch die Bearbeitung eines Semesterprojektes schritthaltend überprüft und benotet. Dabei bearbeiten die Studierenden in Gruppenarbeit ein Semesterprojekt. In die Benotung geht die Lösung der gestellten Aufgabe und die Fähigkeit zur strukturierten Problemlösung im Team anhand der erzielten Ergebnisse und des Arbeitsfortschritts ein. Die individuelle Fähigkeit zur Erstellung von arbeits- und projektbezogenen Berichten/ Publikationen mit wissenschaftlichem Hintergrund wird anhand der schriftlichen Ausarbeitung der Projektergebnisse einschliesslich eines Literaturüberblicks bewertet. Schließlich wird die Fähigkeit zur Präsentation der Ergebnisse in einem Vortrag bewertet. Die Endnote setzt sich aus folgenden Prüfungselementen zusammen:\n- Bearbeitung eines Projektes angelehnt an die aktuelle Forschung am AIP mit Bewertung\ninnerhalb regelmäßiger Gespräche mit dem zugeordneten Betreuer (wissenschaftlicher Mitarbeiter) über den Fortschritt der Arbeit und das weitere Vorgehen (40%)\n- Schriftliche Dokumentation der im Praktikum erzielten Ergebnisse im Projektbericht (40%)\n- 15-minütige Präsentation der Ergebnisse und anschließendes 5-minütiges Kolloquium (20%)\nEI78033: Projektpraktikum Audio-Signalverarbeitung | Project Lab Course in Audio Information Processing [PPAIP]",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der Systemtheorie und Audio-Signalverarbeitung\nGrundlagen der Akustik und Psychoakustik\nGrundlagen der Informatik, Matlab and C++",
    "content": "Die Professur für Audio-Signalverarbeitung beschäftigt sich mit verschiedenen Themen, aus denen mit Bezug zur aktuellen Forschung Praktikumsaufgaben gestellt werden, zu denen nach einer Literaturrecherche Lösungen gefunden werden sollen:\n- Virtuelle Akustik und virtuelle Realität\n- Raumakustiksimulation\n- Hörgerätealgorithmen\n- Cochlea Implantate (Neuroprothesen) und deren Algorithmen\n- Modellierung auditorischer Prozesse, auch neuronal\n- (Binaurale) Psychoakustik und Hörversuche\n- Anwendungen in der Sound Quality und akustischen zerstörungsfreien Prüfung",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls ist die/der Studierende in der Lage, die wesentlichen Eigenschaften und Herausforderungen des Audio-Signalverarbeitung zu beschreiben. Darüber hinaus ist der Studierende in der Lage, Lösungen zu ausgewählten Anwendungen aus der Audio-Signalverarbeitung zu entwerfen, zu analysieren, praktisch umzusetzen und zu bewerten.",
    "teaching_methods": "Studierende befassen sich unter Anleitung mit einem gewählten aktuellen Projektthema aus der Audiosignalverarbeitung. Ausgehend von aktuellen Veröffentlichungen und nach Bedarf ergänzenden Tutorials durch die Betreuer werden Lösungen zur Praktikumsaufgabe im Team erarbeitet. Die Projektarbeit im Team erlaubt es den Teilnehmern, die erarbeiteten Kenntnisse an realistischen und praxisnahen Herausforderungen anzuwenden.",
    "media": "- Einführende Präsentation zu Beginn des ersten Praktikumstermins\n- Computer und Softwareentwicklungsumgebungen",
    "literature": "Aktuelle thematisch relevante Veröffentlichungen aus der wissenschaftlichen Literatur sowie\nTutorials",
    "lv_sws_lecturer": "Seeber, Bernhard; Prof. Dr.-Ing.\nEI78033: Projektpraktikum Audio-Signalverarbeitung | Project Lab Course in Audio Information Processing [PPAIP]\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Audio-Signalverarbeitung (Forschungspraktikum, 5 SWS)\nSeeber B, Bischof N, Kuntz M, Bajool M, Hladek L, Azaripasand P, Zhang H"
  },
  {
    "module_id": "EI78041",
    "title": "Cybathlon Challenge: Task Control & User Experiments",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "In diesem Laborkurs entwickeln die Studenten den Prototyp einer intelligenten, mechatronischen Prothese mit dem Ziel der Teilnahme am internationalen Cybathlon-Wettbewerb. Die Bewertung der Projektarbeit wird durch den Endgruppenprototyp (80%) und die Dokumentation (10-15 Seiten, 20%) bestimmt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Teilnahme an der Cybathlon Challenge: Fundamental mechanism design and lowlevel control\nwird empfohlen, ist aber nicht notwendig für die Teilnahme an diesem weiterführenden Laborkurs.\nDie Studierenden sollten über fundierte Kenntnisse in mindestens einem der folgenden Bereiche\nverfügen:\n- Grundlegende Kenntnisse in Bildverarbeitung\n- Modellbasierte Verfahren der Regelungstechnik\n- Robotik und Mehrkörpersysteme\n- Konstruktion (CAD)\n- Embedded systems\n- Programmierung (C,C++)",
    "content": "Dieses Labor konzentriert sich auf die Entwicklung einer leichten, tragbaren und intelligenten Prothese für die oberen Extremitäten, deren mechatronischen Basismodule im vorherigen Cybathlon Kurs entwickelt wurden. Es werden erweiterte modellbasierte und KI-gestützen Steuerungs- und Regelungsansätze thematisiert. Darüber hinaus werden neuartige User Task Control Methoden entwickelt, sowie Trainingseinheiten mit einem menschlichen Benutzer geplant EI78041: Cybathlon Challenge: Task Control & User Experiments | Cybathlon Challenge: Task Control & User Experiments und durchgeführt. Die Resultate werden am Prototyp sowohl unter Laborbedingungen als auch in Feldtests validiert.",
    "learning_outcomes": "Die Studierenden bilden Kompetenzen in Abhängigkeit der von ihnen gewählten Themenschwerpunkte. Im Bereich Perzeption können die Studierenden, Objekterkennungsalgorithmen unter Verwendung der Softwarebibliotheken OpenCV, Caffe oder PCL entwickeln und EMG Signale via Support Vector Maschinen oder neuronalen Netzwerken klassifizieren. Im Bereich Reglungstechnik & Modellierung sind die Studierenden nach erfolgreichem Abschluss in der Lage, mechatronische Prothesensysteme in MATLAB / Simulink basierend auf dem Newton-Euler und Langrange Verfahren kinematisch und dynamisch zu modellieren, sowie erweiterte modellbasierte Regelungsmethoden wie beispielsweise eine Impedanzregelung zu entwerfen und zu implementieren. Des Weiteren ist eine intuitive Benutzersteuerung (task control) zu programmieren, die auf der natürlichen, koordinierten Bewegungskontrolle des Menschen basiert. Die Studierenden erlernen die Integration von mechatronischen Komponenten zu einem funktionierenden Prothesensystem. Außerdem sind die Studierenden nach erfolgreichem Abschluss in der Lage, zielgerichtet im Team zu planen und ein Ingenieursprojekt kooperativ durchzuführen.",
    "teaching_methods": "- Einführungskurse\n- Selbständiges Individuelles Arbeiten\n- Gruppenarbeit (beinhaltet beaufsichtigtes und unbeaufsichtigtes Arbeiten im Labor)",
    "media": "Die folgenden Medientypen werden verwendet:\n- Präsentationen",
    "literature": "- Introduction to Robotics: Mechanics and Control, 3rd Edition, John J. Craig, Pearson\n- http://www.cybathlon.ethz.ch/\n- Muzumdar, ‘Powered Upper Limb Prostheses: Control, Implementation and Clinical Application’,\nSpringer Science & Business Media, 2004.\n- H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, S. Thrun, ‘Principles of\nRobot Motion: Theory, Algorithms, and Implementation’, MIT Press, 2005.\n- Siciliano, O. Khatib, ‘Springer Handbook of Robotics’, Springer, 2016.\n- M. W. Spong, S. Hutchinson, M. Vidyasagar, ‘Robot modeling and control’, vol. 3. New York:\nWiley, 2006.\n- M. Bishop, ‘Neural networks for pattern recognition’, Oxford university press, 1995.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nEI78041: Cybathlon Challenge: Task Control & User Experiments | Cybathlon Challenge: Task Control & User\nExperiments\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCybathlon Challenge: Task Control & User Experiments (Vorlesung, 1 SWS)\nHaddadin S [L], Groß S, Haddadin S, Herneth C, Hidalgo Carvajal D, Swikir A\nCybathlon Challenge: Task Control & User Experiments (Praktikum, 5 SWS)\nHaddadin S [L], Groß S, Herneth C, Hidalgo Carvajal D, Swikir A"
  },
  {
    "module_id": "EI78043",
    "title": "Cybathlon Challenge: Mechanism Design & Control",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "In diesem Laborkurs entwickeln die Studenten die grundlegenden mechatronischen Module einer transradialen Prothese, welche unter den Anforderungen des internationalen Wettbewerbs Cybathlon entwickelt werden. Die Studierenden müssen als Projektarbeit ihre Fähigkeit unter Beweis stellen, Theorie in der Praxis im Team umzusetzen. Die Bewertung der Projektarbeit wird durch den Endgruppenprototyp (80%) und die Dokumentation (20%) bestimmt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Studierenden sollen über fundierte Kenntnisse in mindestens einem der folgenden Bereiche\nverfügen:\n- Konstruktion (CAD)\n- Grundlagen von Kinematik, Statik und Dynamik\n- Grundlagen der Regelungstechnik\n- Programmierung (C,C++)\n- Mikrocontroller-Programmierung\n- PCB Design",
    "content": "Dieses Labor konzentriertsich auf die Entwicklung von grundlegenden mechatronischen Modulen einer transradialen Prothese. Die Teilnehmer lernen, wie man Hard- und Software-Prototyping von Grund auf durchführt. Darüber hinaus erwerben sie Kenntnisse in der mechanische Auslegung, CAD-Modellierung, sowie Komponentensteuerung-/regelung mit Positionsreglern. Außerdem wird die Integration von Sensoren und Aktoren in eine moderne HIL-Softwareumgebung behandelt EI78043: Cybathlon Challenge: Mechanism Design & Control | Cybathlon Challenge: Mechanism Design & Control und benötigte elektronische Schaltungen geplant und realisiert. Des Weiteren wird die präzise Präsentation von wissenschaftlichen Ergebnissen gelehrt und mit den Studierenden geübt.",
    "learning_outcomes": "Die Studierenden bilden Kompetenzen in Abhängigkeit der von ihnen gewählten Themenschwerpunkte. Im Bereich der mechanischen Konstruktion sind die Studierenden nach erfolgreichem Abschluss in der Lage, mechatronische Baugruppen unter Verwendung des Softwareprogramms SolidWorks zu entwerfen. Im Bereich Modellierung & Regelungstechnik sind die Studierenden nach erfolgreichem Abschluss in der Lage, die Komponenten für statische und dynamische Belastungsfälle auszulegen, als auch P-/PI-/PID-Regler in MATLAB / Simulink mit einer sequentiellen Benutzersteuerung zu implementieren. Außerdem können die Studierenden Sensoren und Aktoren unter Verwendung eines Mikrocontrollers auslesen und ansteuern. Ebenfalls werden Kompetenzen in dem Bereich des elektronischen Schaltungsentwurfs erworben und der Umgang mit dem PCB Design Programm Eagle erlernt. Studierende sind nach erfolgreichem Abschluss in der Lage, das Projekt zielgerichtet im Team zu planen, zu koordinieren und durchzuführen.",
    "teaching_methods": "- Einführungskurse\n- Selbständiges individuelles Arbeiten\n- Gruppenarbeit (beinhaltet beaufsichtigtes und unbeaufsichtigtes Arbeiten im Labor)",
    "media": "- Präsentationen",
    "literature": "- Introduction to Robotics: Mechanics and Control, 3rd Edition, John J. Craig, Pearson\n- http://www.cybathlon.ethz.ch/\n- Muzumdar, ‘Powered Upper Limb Prostheses: Control, Implementation and Clinical Application’,\nSpringer Science & Business Media, 2004.\n- H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, S. Thrun, ‘Principles of\nRobot Motion: Theory, Algorithms, and Implementation’, MIT Press, 2005.\n- Siciliano, O. Khatib, ‘Springer Handbook of Robotics’, Springer, 2016.\n- M. W. Spong, S. Hutchinson, M. Vidyasagar, ‘Robot modeling and control’, vol. 3. New York:\nWiley, 2006.\n- M. Bishop, ‘Neural networks for pattern recognition’, Oxford university press, 1995.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCybathlon Challenge: Mechanism Design & Control (Vorlesung, 1 SWS)\nHaddadin S [L], Groß S, Haddadin S, Herneth C, Hidalgo Carvajal D, Swikir A\nEI78043: Cybathlon Challenge: Mechanism Design & Control | Cybathlon Challenge: Mechanism Design & Control\nCybathlon Challenge: Mechanism Design & Control (Praktikum, 5 SWS)\nHaddadin S [L], Groß S, Herneth C, Hidalgo Carvajal D, Swikir A"
  },
  {
    "module_id": "EI78045",
    "title": "Software Defined Radio Laboratory",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Im Modul sind zwei Prüfungsleistungen zu erbringen: Eine Laborleistung und eine mündliche Prüfung. Die Modulnote ergibt sich aus der Note der Laborleistung (60%) und der Note der Prüfung (40%). Im Rahmen der Laborleistung müssen die Studierenden Vorbereitungsaufgaben lösen, Versuche durchführen, und zu jedem Einzelversuch ein Versuchsprotokoll anfertigen. Durch die Anfertigung des Protokolls, welches bis zum nächsten Versuchstermin abzugeben ist, zeigen die Studierenden, dass sie in der Lage sind, ein Versuchsprotokoll entsprechend guter wissenschaftlicher Praxis zu erstellen. Im Protokoll werden die Zielsetzung, der Ablauf des Versuchs, sowie die Versuchsergebnisse dokumentiert. Die Vorbereitungsaufgaben sind schriftlich zu lösen und als Teil des Protokolls abzugeben. In der mündlichen Prüfung (30 bis max. 50 min) werden die theoretischen Grundlagen der behandelten Themen der drahtlosen Nachrichtenübertragung geprüft, sowie die Implementierungsdetails der in den Versuchen implementierten Algorithmen abgefragt. Die Studierenden sollen alle wichtigen Funktionsblöcke einer Funkübertragungsstrecke nennen und deren Zweck erklären können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Nachrichtentechnik 1, Kenntnisse in den Grundlagen der Nachrichtenübertragung, sowie über\nSignale und Systeme, insbesondere Signalbeschreibungen im Zeit- und Frequenzbereich.\nEI78045: Software Defined Radio Laboratory | Software Defined Radio Laboratory [SDRL]",
    "content": "Ziel des Praktikums ist es, den Teilnehmern ausgewählte Themen der Nachrichtentechnik praktisch mit Hilfe des Einsatzes von Software Defined Radios (SDRs) zu vermitteln. Dazu werden als Erstes die Grundlagen der visuellen Programmiersprache LabVIEW, mit der die SDRs programmiert werden können, gelehrt. Im Labor werden die wesentlichen Funktionsblöcke von modernen Kommunikationssystemen in LabVIEW implementiert und auf den SDRs ausgeführt. Der Kurs beinhaltet Versuche zu den Themen Modulation, Synchronisation, Kanalkodierung, Kanalschätzung, Mehrantennenkonfigurationen (MIMO) und Sicherheit. Zu jedem Versuch gibt es Vorbereitungsaufgaben, die bearbeitet werden müssen. Nach Abschluss eines Termins wird von den Studierenden ein Versuchsprotokoll erstellt, in dem die Ergebnisse dokumentiert werden.",
    "learning_outcomes": "Am Ende des Praktikums sind die Studierenden mit den Grundlagen der Entwicklungssprache LabVIEW vertraut und können die Sprachfeatures und Funktionsblöcke, die im Zusammenhang mit der Nachrichtenübertragung stehen, in eigenen Programmen einsetzen. Sie sind damit in der Lage, die SDRs anzusteuern, fremde Programme zu verstehen, sowie eigene Signalverarbeitungsalgorithmen und Programme zu schreiben. Darüber hinaus können die Studenten mit der SDR-Hardware umgehen und die Verbindung mit dem Steuercomputer herstellen. Durch die Bearbeitung der obligatorischen Vorbereitungsaufgaben haben die Studierenden die theoretischen Grundlagen der oben genannten Methoden der Nachrichtentechnik (Modulation, Synchronisation, Kanalkodierung, Kanalschätzung, Mehrantennenkonfigurationen (MIMO) und Sicherheit) verstanden und können deren Vor- und Nachteile bewerten. Nach Durchführung der Experimente sind sie zudem in der Lage diese Methoden auf ähnliche Szenarien anzuwenden und in eigene Programme einzubauen.",
    "teaching_methods": "Vor jeden Termin bearbeiten die Studierenden die Vorbereitungsaufgaben. Nach einer kurzen Einführung in das Thema des aktuellen Versuchs durch den Dozenten unter Verwendung von Tafel und elektronischen Präsentationsmethoden werden die Vorbereitungsaufgaben besprochen. Danach führen die Studierenden eigenständig die Versuche durch. Es erfolgt dabei eine individuelle Betreuung durch den Dozenten. Anschließend wird von den Studierenden ein Protokoll erstellt.",
    "media": "Vorbereitung: Lesematerial, schriftliches Lösen von Vorbereitungsaufgaben. Einführungsteil:\nPräsentation an der Tafel und durch elektronische Medien. Praktikumsteil: Programmierung in\nLabVIEW, Umgang mit HF-Hardware (Software Defined Radios, Antennen). Protokoll: schriftliche\nAusarbeitung",
    "literature": "D. Tse und P. Viswanath, “Fundamentals of Wireless Communication”, Cambridge University Press\nZusätzliches Lesematerial wird bei Bedarf auf Moodle bereitgestellt.\nEI78045: Software Defined Radio Laboratory | Software Defined Radio Laboratory [SDRL]",
    "lv_sws_lecturer": "Boche, Holger; Prof. Dr. rer. nat. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSoftware Defined Radio Laboratory (Praktikum, 4 SWS)\nAndrei V [L], Huffmann J, Li X, Voichtleitner J"
  },
  {
    "module_id": "EI78046",
    "title": "Projektpraktikum Human-Centered Neuroengineering: Neurorehabilitation",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfung besteht aus einem praktischen Teil (60%), einem schriftlichen Bericht (20%) und einer Präsentation (20%). Im praktischen Teil bearbeiten die Studierenden in Kleingruppen eine sozio-technische Problemstellung im Zusammenhang mit Neurorehabilitation. Der schriftliche Bericht soll die Fähigkeiten der Studierenden aufzeigen, technische, wissenschaftliche und soziale Probleme in Bezug auf Neurorehabilitation, Exoskelette und Virtual Reality zu analysieren und ihre eigenen Ergebnisse und Erfahrungswerte vorzustellen. Die Präsentation beurteilt die Fähigkeit, wichtige Ergebnisse zusammenzufassen und über den menschzentrierten Forschungsansatz zu reflektieren.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "\"\nDie Studenten sollten Programmierkenntnisse haben. Vorwissen in Maschinellem Lernen und in\nSignalverarbeitung sind hilfreich. \"",
    "content": "\"Die Studierenden bilden Teams, um an wissenschaftlich-technisch-sozialen Problemstellungen im Zusammenhang mit Neurorehabilitation zu arbeiten. Von technischer Seite liegt ein besonderer Schwerpunkt darauf, wie Exoskelette, Brain-Machine Interfaces (mit EEG und EMG), sowie Virtual Reality die Neurorehabilitation von Patienten mit Schlaganfall unterstützen können.In sozialer Hinsicht soll ein Fokus darauf gelegt werden, in welchen strukturellen Umgebungen (von Reha-Kliniken bis Home-based Rehabilitation) und mit Unterstützung welcher Stakeholder EI78046: Projektpraktikum Human-Centered Neuroengineering: Neurorehabilitation | Project Lab Human-Centered Neuroengineering: Neurorehabilitation Neurorehabilitation durchgeführt wird und werden kann. Von Interesse ist aber auch die individuelle Interaktion mit der Rehabilitationstechnik. Diese sollte möglichst menschzentriert entwickelt werden und den Bedürfnissen und Interessen der Betroffenen entsprechen, z.B. durch personalisierte Rehabilitationsprogramme und Gamifikation. Im Sinne des Human-Centered Engineerings sollen die Studierenden die Perspektive von Betroffenen nach Möglichkeit partizipativ und wertesensibel einbinden. Der Kurs ist in 4 verschieden Phasen aufgeteilt:\n- Kick-off Phase: Die Studierenden erhalten in Einführungsvorlesungen einen Überblick zu\nden Themen Neurorehabilitation, Exoskelette, Human-Centered Engineering, Responsible Neuroengineering und Virtual Reality in der Robotik & im Neuroengineering. Währenddessen lernen sie verschiedene technische Methoden (EMG, EEG, exoskelette, VR) kennen.\n- Projektfindungsphase: Auf Basis der theoretischen Vorträge, der wissenschaftlichen Literatur\nund unter Einbeziehung der Perspektive von SchlaganfallpatientInnen erstellen die Studierenden Projektpläne und stellen diese in einer Projekt-Kick-off Präsentation vor.\n- Iterative Entwicklungsphase: Die Studierenden entwickeln und implementieren die\nAlgorithmen und Hardwaresysteme. Diese Entwicklung verläuft Hand in Hand mit der Test- und Validationsphase - durch objektive Metriken und durch Einbeziehung der Perspektive von Betroffenen.\n- Reflexionsphase: Die Studierenden präsentieren ihre Ergebnisse und schreiben einen Bericht\nüber ihre technischen und wissenschaftlichen Projektergebnisse. Darin reflexieren sie auch die sozialen und ethischen Aspekte ihres Projektes. \"",
    "learning_outcomes": "\"Am Ende des Kurses sind die Studenten in der Lage:\n- robotische Neurorehabilitationsmethoden mit Exoskeletten und Virtual Reality zu verstehen und\nzu entwickeln\n- neuronale Signale (EEG, EMG) aufzunehmen und zu verarbeiten\n- Algorithmen des maschinellen Lernens auf neuronale Daten anwenden und weiterentwickeln\n- Sensorische Rückkopplung zu integrieren\nNicht-technische Fähigkeiten werden ebenso erlernt: Die Studierenden sind in der Lage:\n- ein technisches Projekt zu organisieren und zu leiten.\n- in kleinen Gruppen zu arbeiten und die Fortschritte, die in der Gruppe erreicht werden, zu\nkommunizieren.\n- Menschen partizipatorisch in ihre Forschungs- und Entwicklungsarbeit einzubinden\n- Methoden des menschzentrierten Designprozesses anzuwenden und Neurotechnologien nach\nsozialen und ethischen Gesichtspunkten zu reflektieren \"",
    "teaching_methods": "\"Folgende Lehrmethonden werden angewendet:\n- Einführungsvorlesungen\n- Gruppenarbeit zu Human-Centered und Responsible Neuroengineering\nEI78046: Projektpraktikum Human-Centered Neuroengineering: Neurorehabilitation | Project Lab Human-Centered Neuroengineering: Neurorehabilitation\n- Unabhängige Projektarbeit im Labor\n- Regelmäßige Kolloquia mit den Dozenten\"",
    "media": "\"Media formats:\n- Papers\n- Computer-supported presentations\n- Neurotechnologies (e.g. EEG & EMG sensors, Exoskeleton kits)\"",
    "literature": "\"Brain-Machine Interfaces: From Basic Science to Neuroprostheses and Neurorehabilitation.\nMikhail A. Lebedev, Miguel A. L. Nicolelis. Physiological reviews (2017)\n- Long-Term Training with a Brain-Machine Interface-Based Gait Protocol Induces Partial\nNeurological Recovery in Paraplegic Patients. Donati et al. (2016)\n- Human-Machine Symbiosis: The Foundations of Human-centred Systems Design. Editor:\nKaramjit S. Gill (1996)\n- Virtual Reality in Medicine. Robert Riener, Matthias Harders (2012)\n- Motor learning: It's relevance to stroke recovery and neurorehabilitation. John W. Krakauer (2006)\n- Robot-aided neurorehabilitation of the upper extremities. Robert Riener et al. (2005)\"",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Human-Centered Neuroengineering: Neurorehabilitation (Praktikum, 5 SWS)\nCheng G [L], Berberich N, Paredes Acuna Y\nProjektpraktikum Human-Centered Neuroengineering: Neurorehabilitation (Vorlesung, 1 SWS)\nCheng G [L], Berberich N, Paredes Acuna Y"
  },
  {
    "module_id": "EI78047",
    "title": "Monty MATLAB",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Die Studien- und Prüfleistung wird anhand der Laborleistung gemessen. Diese besteht aus verschiedenen Teilen, welche den Lernergebnissen angepasst sind: 1) Projektplan und Abschlusspräsentation: Die mündliche Kommunikationsfähigkeit und die praktische Konzeptionsfähigkeit eines verteilten technischen Systems wird im Projektplan (schriftlich und mündlich) und der Abschlusspräsentation (15 Minuten pro Team) des Projektergebnisses (mündlich) erfasst. 2) Programmierprojekt: Die Fähigkeiten zur Teamarbeit und Teamorganisation sowie die problemlösende Anwendung der Programmierkonzepte werden durch die Abgabe eines Programmierprojektes nachgewiesen. Die hier geprüften Kenntnisse erstrecken sich durch die Konzeptionierung des Projektes über die Themenfelder: Programmierung auf mobilen Endgeräten, drahtlose Datenübertragung und IoT Übertragungsprotokolle, Schnittstellendefinitionen (APIs), Mustererkennung, Regelungstechnik, Verarbeitung von Benutzereingaben und Visualisierung von Zeitseriendaten. Hinzu kommen die sachgemäße Dokumentation der Software und die verantwortungsvolle Nutzung einer Versionsverwaltung (Git). Ein besonderes Augenmerk liegt bei der Bewertung auf einer klar erkennbaren individuellen Leistung im Projekt. 3) Hausaufgaben: Die Fähigkeit zur individuellen Problemlösung wird im Rahmen von vier problemorientierten Hausaufgaben semesterbegleitend geprüft. Diese beziehen sich auf die einführenden Vorlesungsinhalte wie Datenformate, Objektorientierte Programmierung, Automatisiertes Testen von Programmen, Modellierung und Simulation in MATLAB Simulink. Die Hausaufgaben werden in dem von MathWorks bereit gestellten Online Tool „MATLAB Grader“ durchgeführt und direkt bewertet. Somit können die Studierenden zeitlich und örtlich flexibel die Hausaufgaben lösen und erhalten ein schnelles und transparentes Feedback. Die Endnote der Laborleistung setzt sich aus der folgenden Gewichtung der einzelnen Bestandteile zusammen: 50% Programmierprojekt 30% Hausaufgaben EI78047: Monty MATLAB | Monty MATLAB [MATLAB] 20% Projektplan und Abschlusspräsentation",
    "repetition": "",
    "recommended_prerequisites": "Grundkenntnisse in der Regelungstechnik, Kommunikationsnetze, Signalverarbeitung, MATLAB-\nProgrammierung\nAls Voraussetzung erachten wir die erfolgreiche Durchführung eines MATLAB Onlinekurses mit\neinem entsprechenden Zertifikat. Diese Onlinekurse sind in der Campus Lizenz inbegriffen und\nstellen die geforderten Grundkenntnisse, auf denen die Lehrveranstaltung aufbaut, sicher. Zudem\nsollen die Studierenden durch den Erwerb des Zertifikats ein Gefühl für das Niveau des Kurses\nbekommen, um die Abbruchquoten zu verringern und die zur Verfügung stehenden Plätze optimal\nan interessierte Teilnehmer verteilen zu können. Die empfohlenen Onlinekurse aus dem Angebot\nvon MathWorks werden auf der Kurswebsite des Lehrstuhls bekanntgegeben.",
    "content": "Das Projektpraktikum MATLAB bietet eine umfassende Einführung in die interaktive Benutzung und Programmierung von MATLAB und führt die Teilnehmer bis zur Durchführung eines eigenständigen Programmierprojekts. Neben grundlegenden Datentypen und -strukturen werden Vektoren, Indizierung und Matrix-Operationen, sowie die MATLAB-Programmiersprache und der Debugger behandelt. Die Grundlagen werden anhand von Übungsaufgaben und Hausaufgaben auf der interaktiven Online Plattform „MATLAB Grader“ vertieft. In MATLAB integrierte Algorithmen für lineare Algebra, Least Squares und Optimierung werden anhand praktischer Beispiele besprochen. Weitere Themen umfassen Grafik und Visualisierung, Benutzeroberflächen, Objektorientierung und Performance-Analyse mit dem MATLAB-Profiler. Für die Simulation und Regelung von physikalischen und technischen Systemen erhalten die Studierenden eine Einführung in das an MATLAB angegliederte Modul Simulink. Abschließend wird auf die Möglichkeiten der Testautomatisierung in MATLAB sowie Sensordatenerfassung und Kommunikation mit „MATLAB Mobile“ eingegangen, um auf die Projektarbeit des Praktikums überzuleiten.",
    "learning_outcomes": "Nach dem erfolgreichen Abschluss des Moduls sind die Studierenden in der Lage, mit MATLAB und Simulink als Programmierwerkzeug praktisch umzugehen und damit eigenständig Ingenieursprojekte umzusetzen. Für das Verständnis der Programmierumgebung und der Programmiersprache selbst bedeutet dies die Kenntnis der Syntax und Datenformate sowie die sichere Benutzung von objektorientierter Programmierung, automatisiertem Testen von Programmen, Möglichkeiten zum Debugging, Modellierung und Simulation in MATLAB Simulink. Die Studierenden erlangen durch die Lehrveranstaltung die Fähigkeiten auf MATLAB basierende Lösungen für unbekannte Probleme zu entwickeln und können eine komplette Datenverarbeitungskette vom mobilen Endgerät bis zur Nutzerschnittstelle implementieren. Dies erstreckt sich über die folgenden Aspekte: EI78047: Monty MATLAB | Monty MATLAB [MATLAB] Netzwerkkommunikation: Netzwerkarchitektur, Zugriffsregelungen für Shared Media (MAC), ThingSpeak (MathWorks IoT Analyseplatform), effiziente Koodierungs- und Übertragungsmöglichkeiten für verschiedene abgetastete, analoge Sensorsignale Signalverarbeitung: digitale Signalfilter, Mustererkennung, effiziente Speicherung von digitalisierten Bewegungssensorsignalen, Visualisierung: Aufbereitung und Anzeige von Sensordaten auf Desktoprechnern als auch auf mobilen Endgeräten, Gestaltung grafischer Benutzeroberflächen in MATLAB Regelung: Aufbau eines physikalisch akkuraten Modells in MATLAB Simulink, Übertragung von Sensorsignalen in ein simuliertes physikalisches Modell, Stabilisierung der Simulation mit Hilfe modellbasierter Regelung Versionsverwaltung Kommunikationsfertigkeiten für die Softwareentwicklung im Team Software Dokumentation",
    "teaching_methods": "Die Vorlesungen bestehen aus Tafelvortrag, Präsentationen und Diskussion zum Thema. Die Übungen bestehen aus gezielten Hilfestellungen zu Fragen der Programmierung und zu Fragen, die von den Studierenden gestellt werden, sowie ergänzende studentische Präsentationen. Die Studierenden sollen im Rahmen des Praktikums in kleinen Teams Programmieraufgaben bearbeiten und Programme und Daten abgeben. Ergebnisse werden im Rahmen des Praktikums mit den Studierenden besprochen. Begleitet wird die Lehrveranstaltung durch Tutoren, online Kurse und Videos. Zudem gibt es zahlreiche Hilfestellungen im Hausaufgabentool „MATLAB Grader“, in welchem die Studierenden die auf die Vorlesung abgestimmten Aufgaben in individuellem Tempo bearbeiten und unmittelbares Feedback erhalten.",
    "media": "Präsentationen, Tafelarbeit, studentische Präsentationen, Online Hausaufgaben im MATLAB\nGrader, ergänzende Workshops aus dem MathWorks online Angebot, MATLAB Live Scripts,\nteamorientierte Programmieraufgaben und Projektarbeit",
    "literature": "- Angelika Bosl: Einführung in MATLAB/Simulink: Berechnung, Programmierung, Simulation, 2017\nHanser\n- Frank Haußer, Yuri Luchko: Mathematische Modellierung mit MATLAB und Octave, 2019\nSpringer\n- Hermann Will, Mini-Handbuch Vortrag und Präsentation: für Ihren nächsten Auftritt vor Publikum,\n2001 Beltz",
    "lv_sws_lecturer": "Diepold, Klaus; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMonty Matlab (Vorlesung, 2 SWS)\nEI78047: Monty MATLAB | Monty MATLAB [MATLAB]\nHeld S ( Baumhoer R, Daten J ), Kugler K\nMonty Matlab - Praktikum (Praktikum, 2 SWS)\nHeld S, Kugler K"
  },
  {
    "module_id": "EI78049",
    "title": "IoT Remote Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "Achievement of the intended learning outcomes regarding standards, protocols, and their application to system architectures is assessed with 3 assignments given during the semester. Assessment criteria are: (A)Ability to use the required IP-level protocols in a programming environment for communicating with IoT devices. (B)Ability to compose applications from multiple IoT devices remotely. (C)Ability to develop simple IoT devices. (D)Ability to make design decisions for software architecture based on the standards which have been discussed in the course, combining theoretical concepts with practical implementation considerations.",
    "repetition": "",
    "recommended_prerequisites": "Recommendations: Basic principles of computer systems and IP-level protocols. Must: good\nprogramming knowledge.",
    "content": "Introduction of JSON and JSON Schema standards; Introduction of Thing Description standard; Introduction to the node.js programming language; Introduction to HTTP, CoAP and MQTT protocols; Programming application logic using multiple protocols and data structures; Programming of an IoT device based on a Raspberry Pi or ESP32.",
    "learning_outcomes": "Upon successful completion of the module, the participants are able to explain, apply IoT standards and protocols. The participants can also apply these standards and protocols in different EI78049: IoT Remote Lab | IoT Remote Lab [IoTLab] system architectures found in IoT systems. Additionally, they are able to separate application and protocol logic in the implementation of the IoT devices as well as the application logic of the systems.",
    "teaching_methods": "The content will be introduced in the introductory lectures in the classroom. After each lecture, the students are given assignments to submit. All the assignments can be done remotely, including programming the application logic and the devices.",
    "media": "The following media are used:\n- Presentations (Projector, Whiteboard)\n- E-learning platform Moodle\n- IoT Remote Lab Web Interface\n- Various IoT devices, such as robots, lights and sensors.",
    "literature": "- Design Patterns: Elements of Reusable Object-Oriented Software\nBook by Erich Gamma, John Vlissides, Ralph Johnson, and Richard Helm\n- Web of Things (WoT) Thing Description Standard by World Wide Web Consortium\nFurther literature will be discussed in the course.",
    "lv_sws_lecturer": "Steinhorst, Sebastian; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIoT Remote Lab (Praktikum, 3 SWS)\nSteinhorst S [L], Steinhorst S, Salama F, Debnath R, Akinci M, Lauinger J"
  },
  {
    "module_id": "EI78054",
    "title": "Projektpraktikum Human-Centered Neuroengineering: Cybathlon",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Zweisemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfung besteht aus einem praktischen Teil (60%), einem schriftlichen Bericht (20%) und einer Präsentation (20%). Im praktischen Teil bearbeiten die Studierenden in Kleingruppen in Zusammenarbeit mit dem \"Piloten\" (den Mensch mit Behinderung, welcher die Technologien im Cybathlon Wettkampf nutzen wird) eine sozio-technische Problemstellung im Zusammenhang mit der Arm-Prothetik Disziplin oder der Brain-Computer Interface Disziplin des Cybathlon Wettbewerbs. Der schriftliche Bericht soll die Fähigkeiten der Studierenden aufzeigen, technische, wissenschaftliche und soziale Probleme in Bezug auf Armprothesen und Brain-Computer Interfaces zu analysieren und ihre eigenen Ergebnisse und Erfahrungswerte vorzustellen. Die Präsentation beurteilt die Fähigkeit, wichtige Ergebnisse zusammenzufassen und über den menschzentrierten Forschungsansatz zu reflektieren.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Die Studenten sollten Programmierkenntnisse haben. Vorwissen in Maschinellem Lernen und in\nSignalverarbeitung sind hilfreich.",
    "content": "Die Studierenden bilden Teams, um an wissenschaftlich-technisch-sozialen Problemstellungen im Zusammenhang mit der Arm-Prothetik Disziplin oder der Brain-Computer Interface Disziplin des Cybathlon Wettbewerbs zu arbeiten. In Zusammenarbeit mit dem \"Piloten\" (den Menschen mit Behinderung, welche die Technologien im Cybathlon Wettkampf nutzen werden) sollen gemäß des menschzentrierten Design-Prozesses sozio-technische Problemstellungen gefunden und iterativ bearbeitet werden. Im technischen Zentrum stehen dabei die Aufnahme, Verarbeitung und Klassifikation neuronaler Signale, die Fusion mit Kontextinformation und die sensorische EI78054: Projektpraktikum Human-Centered Neuroengineering: Cybathlon | Project Lab Human-Centered Neuroengineering: Cybathlon Rückkopplung. Im menschzentrierten Zentrum steht die partizipatorische Einbindung der Piloten und eine wertesensible Herangehensweise. Das endgültige Ziel ist, am Cybathlon Wettbewerb teilzunehmen und gleichzeitig an für die späteren Nutzer der Neurotechnologien wichtigen Forschungsfragen zu arbeiten. Cybathlon ist ein Wettbewerb, in welchem Menschen mit physischer Behinderung gegeneinander antreten und in möglichst kurzer Zeit verschiedene Aufgaben des alltäglichen Lebens mithilfe von technischen Assistenzsystemen durchführen. Der Kurs ist in 4 verschieden Phasen aufgeteilt:\n- Kick-off Phase: Die Studierenden erhalten in Einführungsvorlesungen einen Überblick zu\nden Themen Neuroprothesen, Gehirn-Computer Schnittstellen, Human-Centered Engineering, Responsible Neuroengineering und Disability Studies. Währenddessen lernen sie verschiedene technische Methoden kennen (Signalverarbeitung und maschinelles Lernen für EMG- und EEG- Signale).\n- Projektfindungsphase: Auf Basis der theoretischen Vorträge, der wissenschaftlichen Literatur\nund unter Einbeziehung der Perspektive von behinderten Menschen/ PatientInnen erstellen die Studierenden Projektpläne und stellen diese in einer Projekt-Kick-off Präsentation vor.\n- Iterative Entwicklungsphase: Die Studierenden entwickeln und implementieren die\nAlgorithmen und Hardwaresysteme. Diese Entwicklung verläuft Hand in Hand mit der Test- und Validationsphase - durch objektive Metriken und durch Einbeziehung der Perspektive von Betroffenen. In dieser Phase haben die Studierenden regelmäßige Kolloquia mit den Dozenten, um ihren Fortschritt vorzustellen und ihre Probleme und nächsten Schritte zu besprechen.\n- Reflexionsphase: Die Studierenden präsentieren ihre Ergebnisse und schreiben einen Bericht\nüber ihre technischen und wissenschaftlichen Projektergebnisse. Darin reflektieren sie auch die sozialen und ethischen Aspekte ihres Projektes, sowie welche Probleme in der Zusammenarbeit mit dem Piloten aufkamen, welche Lösungen sie dafür gefunden haben und was sie daraus gelernt haben. Qualifikation für Cybertum Wettbewerbe: Dieses praktische Projekt wendet sich an die Studierenden, die sich gerne über mehrere Monate hinweg mit den Aufgaben des Cybathlon Wettbewerbs und mit Human-Centered Engineering beschäftigen wollen.",
    "learning_outcomes": "Am Ende des Kurses sollten die Studenten in der Lage sein:\n- neuronale Signale (EEG, EMG) aufzunehmen und zu verarbeiten\n- Algorithmen des maschinellen Lernens auf neuronale Daten anwenden und weiterentwickeln\n- Sensorische Rückkopplung zu integrieren\n- Assistenzsysteme entwickeln, mit denen die Piloten im Zusammenhang mit dem Cybathlon-\nWettbewerb activities of daily living (ADLs) durchführen können Nicht-technische Fähigkeiten werden ebenso erlernt: Die Studierenden sind in der Lage:\n- ein großes technisches Projekt zu organisieren und zu leiten.\n- in kleinen Gruppen zu arbeiten und die Fortschritte, die in der Gruppe erreicht werden, zu\nkommunizieren.\n- behinderte Menschen partizipatorisch in ihre Forschungs- und Entwicklungsarbeit einzubinden\nEI78054: Projektpraktikum Human-Centered Neuroengineering: Cybathlon | Project Lab Human-Centered Neuroengineering: Cybathlon\n- Methoden des menschzentrierten Designprozesses anzuwenden und Neurotechnologien nach\nethischen Gesichtspunkten zu reflektieren",
    "teaching_methods": "Folgende Lehrmethonden werden angewendet:\n- Einführungsvorlesung\n- Anwendungsspezifische Vorlesungen: Neuronales Recording (EEG, EMG), Sensorisches\nFeedback, Human-Centered Engineering\n- Gruppenarbeit zu Methoden des Human-Centered Engineerings\n- Soziale Veranstaltungen mit den Piloten\n- Unabhängiges Arbeiten im Labor",
    "media": "- Papers\n- Computer-unterstützte Präsentationen\n- Neurotechnologien (e.g. EEG & EMG Sensoren)\n- relevante online Vorlesungsaufzeichnungen",
    "literature": "Brain-Machine Interfaces: From Basic Science to Neuroprostheses and Neurorehabilitation.\nMikhail A. Lebedev, Miguel A. L. Nicolelis. Physiological reviews 2017\n- Brain-Computer Interfacing: An Introduction, Rajesh P.N. Rao (2013)\n- Teaching brain-machine interfaces as an alternative paradigm to neuroprosthetics control. Inaki\nIturrate, Ricardo Chavarriaga, Luis Montesano, Javier Minguez, José del R Millán (2015), Scientific\nReports\n- The Human Use of Human Beings. Norbert Wiener (1950)\n- Human-Machine Symbiosis: The Foundations of Human-centred Systems Design. Editor:\nKaramjit S. Gill (1996)",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI78062",
    "title": "Intelligent Machine Design - Basic System Design",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulnote wird durch die eigentliche Projektarbeit bestimmt, in der die Studierenden ihre Fähigkeit zur Teamarbeit und zur Entwicklung und Integration komplexer mechatronischer Systeme unter Beweis stellen. Dazu gehört eine 10-minütige Präsentation, in dem die Studierenden ihre Ergebnisse präsentieren. Hierbei wird die Funktionalität der endgültigen Software/Hardware-Anwendung sowie ihr Entwicklungs- und Testprozess und die dafür verwendeten theoretischen Grundlagen bewertet.",
    "repetition": "",
    "recommended_prerequisites": "- Absolvierung von IMDL Modul 1.1 (Dringend empfohlen)\n- Programmierung (C)\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
    "content": "Das Modul Intelligent Machine Design Lab: Basic System Design (Modul 1.2) ist Teil einer dreisemestrigen Modulreihe, welche zum Ziel hat Studenten in die Lage zu versetzen komplexe und sehr leistungsfähige mechatronische Systeme mit hoher gesellschaftlicher/ökonomischer Relevanz zu entwickeln und aufzubauen. Studenten lernen selbständig Produktideen zu entwickeln und schrittweise in seriennahe Produktprototypen zu überführen. Nach Abschluss der Modulreihe sind die Studenten entsprechend in der Lage mechatronische Systeme EI78062: Intelligent Machine Design - Basic System Design | Intelligent Machine Design - Basic System Design [IMDL 1] und Projekte mit beliebiger Komplexität anzugehen sowie eigene Projektideen, welche z.B. gesellschaftliche, wirtschaftliche oder ökologische Probleme lösen, zu entwickeln und erfolgreich zu realisieren. Hierbei wird insbesondere Fokus auf die Erarbeitung multi-disziplinärer Design- und Integrationsfähigkeiten sowie deren Nutzung in einem interdisziplinären Team gelegt. Die Module innerhalb eines Semesters sowie zwischen den verschiedenen Semestern bauen aufeinander auf. Daher wird die erfolgreiche Absolvierung der vorherigen Module dringend empfohlen (Inhalt von Modul 1.1 wird für Modul 1.2 benötigt, Modul 1.1+1.2 wird für Modul 2.1 benötigt usw.). Schwerpunkt des Modus 1.2 dieser Reihe ist die weiterführende Entwicklung und Vertiefung sowohl praktischer als auch theoretischer Fähigkeiten in den Bereichen System-Entwicklung, Auslegung und Planung sowie des praktischen Aufbaus und Inbetriebnahme mechatronischer Systeme. Insbesondere die Team- und Problemlösungsfähigkeiten im Kontext einer interdisziplinären Problemstellung stehen hier im Fokus. Die Komplexität der angestrebten Mechatronik Systeme orientiert sich hierbei auf mobile/rad-basierte Roboter-Plattformen, die ein definiertes Aufgabenspektrum erfüllen. Die Studenten müssen auf Basis dieser Anforderungen ein vollständig funktionsfähiges System selbstständig entwickeln (Design, Komponentenauswahl, …), aufbauen (Produktion, Zusammenbau, Lötarbeiten, …), programmieren (Microcontroller, …) in Betrieb nehmen (Evaluierung des Systemverhaltens, Fehleranalyse ....) und schlussendlich präsentieren.",
    "learning_outcomes": "Nach Abschluss dieses Moduls haben die Studierenden vertiefte praktische Kenntnisse und Fähigkeiten in der Entwicklung mechatronischer Systeme. Die Studenten sind in der Lage eine autonome radbasierte mobile Plattform, welche eine definierte Aufgabe erfüllen soll, zu entwickeln und in Betrieb zu nehmen. Darüber hinaus haben sie ihre Fähigkeiten in den Bereichen Problemlösung und Teamarbeit im Kontext einer interdisziplinären Problemstellung weiter ausgebaut.",
    "teaching_methods": "Projektarbeit",
    "media": "Präsentationen",
    "literature": "- Paul Scherz and Simon Monk, ‘Practical Electronics for Inventors’, 4th rev. ed McGraw-Hill\nEducation\n- Eric S. Roberts, ‘The Art and Science of C’, Pearson Education\n- Robert l. Norton, ‘Design of Machinery’, Mcgraw-Hill Europe; 3rd Revised edition\n- Clarence W. De Silva, ‘Mechatronics: Fundamentals and Applications’, Apple Academic Press\nInc.\n- Shimon Y. Nof, ‘Springer Handbook of Automation’, Springer; 2009. Edition\nEI78062: Intelligent Machine Design - Basic System Design | Intelligent Machine Design - Basic System Design [IMDL 1]\n- Jan Awrejcewicz, ‘Mechatronics: Ideas, Challenges, Solutions and Applications’, Springer; 1st ed.\n2016 Edition\n- Rochdi Merzouki, ‘Intelligent Mechatronic Systems; Modeling, Control and Diagnosis’, Springer;\nSoftcover reprint of the original 1st ed. 2013 Edition\n- Paul Horowitz, ‘The Art of Electronics’, Cambridge University Press; 3. Edition",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntelligent Machine Design Lab: Basic System Design (Praktikum, 5 SWS)\nHaddadin S [L], Budiman F, Chen L, Le Q, Pozo Fortunic J, Swikir A, Yildirim M"
  },
  {
    "module_id": "EI78066",
    "title": "Practical Course Wearable Robotics: Upper Limb Exoskeletons",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfung besteht aus: Einem praktischen Projekt (50%), einer Projektpräsentation (25%) und einem schriftlichen Projektbericht (25%): 15 min Präsentation und 10-15 Seiten Bericht. Die Tutorien führen die Studenten in die Anwendung der in der Vorlesung besprochenen Konzepte zur Programmierung der Robotersteuerung eines Ein-Gelenk-Exoskeletts der oberen Gliedmaßen, die Tutorien tragen zur Vorbereitung der Studenten auf ihre Projekte bei. Im Praxisprojekt arbeiten die Studenten in kleinen Teams an der Entwicklung von Exoskelett-Steuerungsroutinen, die in Rehabilitationsbereichen der Robotik eingesetzt werden. Der schriftliche Projektbericht soll die Fähigkeit der Studierenden widerspiegeln, technologische Fragestellungen im Hinblick auf den Einsatz von Exoskeletten zu analysieren und die eigenen Ergebnisse und Erfahrungen zu präsentieren. Die Projektpräsentationen zeigen die Fähigkeit der Studenten, ihre Forschung zusammenzufassen und das in der Vorlesung und den Tutorien erworbene Wissen in einem Ingenieurprojekt anzuwenden. Das Praxisprojekt wird in drei Phasen bewertet: Vorschlag und Rollenverteilung, Durchführung und Präsentation. In der Phase des Vorschlags und der Rollenverteilung halten die Studierenden eine 5-minütige Präsentation und eine einseitige Zusammenfassung ihres vorgeschlagenen Projekts. Nach dem Feedback der Dozenten wird das Projekt in Aufgaben für jedes Teammitglied aufgeteilt, jede Aufgabe hat eine entsprechende Anzahl von Punkten, die sich zu 100 Punkten pro Mitglied summieren. Diese Punkte entsprechen dem 50%-Anteil der Projektbewertung. In der Präsentationsphase halten die Studenten eine 15-minütige Präsentation ihrer Ergebnisse (25% der Note) und reichen einen 10-15-seitigen Bericht über ihr Projekt ein (25% der Note).",
    "repetition": "Semesterende",
    "recommended_prerequisites": "- Starker mathematischer Hintergrund in Linearer Algebra, Trigonometrie und Kalkül\n- Grundkenntnisse in Robotik (bevorzugt).\n- Grundkenntnisse in C++ und Matlab\n- Grundkenntnisse in ROS (bevorzugt)",
    "content": "In diesem Kurs führen wir die Studenten in die Grundlagen der Robotik und Steuerung ein, um tragbare Robotik zu entwickeln. Der Kurs besteht aus theoretischen Vorlesungen, praktischen Übungen und einem Abschlussprojekt. Die Vorlesungen führen in ausgewählte Themen der Robotik, Sensoren und Aktoren ein, indem sie diese mit der Neuromechanik und der motorischen Steuerung beim Menschen und deren Anwendung auf Exoskelette für die oberen Gliedmaßen mit besonderem Fokus auf die Rehabilitation von Patienten mit neurologischen Erkrankungen verbinden. In den praktischen Übungen werden die Studenten angeleitet, die Robotersteuerung eines Exoskeletts der oberen Gliedmaßen mit einem einzigen Gelenk zu programmieren, wobei die in unserem Labor entwickelte Roboterhaut als sensorische Schnittstelle verwendet wird. Jede Studentengruppe erhält ein Hardware-Setup, mit dem sie in den Tutorien und Projektphasen arbeiten kann. Im letzten Teil des Kurses werden die Studenten bei der Entwicklung ihrer Abschlussprojekte durch regelmäßige Kolloquien mit den Dozenten unterstützt. Von den Studenten wird erwartet, dass sie das in den Vorlesungen und Tutorien Gelernte anwenden, um Steuerungsroutinen für Exoskelette zu implementieren, die in Rehabilitationsbereichen der Robotik eingesetzt werden. Vorlesung 1: Einführung in die Wearable Robotics und die menschliche Biomechanik\n- Einführung in die Wearable Robotics, Typen und Anwendungen\n- Exoskelette der oberen Gliedmaßen für Rehabilitation und neurologische Erkrankungen\n- Vorwärtskinematik: Homogene Transformationen und Arten von Gelenken\n- Menschliche Biomechanik: Kinematik der oberen Gliedmaßen\nÜbung 1: Einrichten der Umgebung, ROS-Grundlagen und homogene Transformationen. Vorlesung 2: Menschliche Kinematik\n- Muskulatur der oberen Extremitäten, Gelenkkopplung, Bewegungsumfang, Kraft- und\nDrehmomentbereich beim Menschen.\n- Vorwärtskinematik: D-H-Konvention, Jacobianer und Trajektorienplanung\nÜbung 2: URDF-Roboterbeschreibung, D-H-Konvention, Jacobianer, Trajektorienplanung Vorlesung 3: Dynamik der menschlichen Bewegung\n- Aktivitäten des täglichen Lebens und Dynamik der menschlichen Bewegung\n- Bewegungsverlust nach neurologischen Erkrankungen\n- Roboter-Dynamik: Euler-Lagrange-Methode, Parameter der menschlichen Gelenkdynamik\nÜbung 3: Roboterdynamik mit der Euler-Lagrange-Methode, Einrichtung des ROS-Arbeitsbereichs Vorlesung 4: Steuerungsstrategien für das Exoskelett der oberen Gliedmaßen\n- Beschäftigungstherapie und Rehabilitationsstrategien\n- Stand der Technik der Roboter-Rehabilitationssteuerung\n- Gelenkraum- und kartesische Raumsteuerung\n- Positions- und Impedanzsteuerung\nÜbung 4: Gelenk- und kartesische Raumsteuerung in einem Exoskelett der oberen Extremitäten Vorlesung 5: Sensorik und Aktorik des Exoskeletts der oberen Gliedmaßen\n- Stand der Technik: Sensorik und Aktorik in Exoskeletten\n- Einführung in die Roboterhaut und Anwendungen in Exoskeletten\n- Verwendung der Roboterhaut zur Impedanzkontrolle\nÜbung 5: Aufbau der Roboterhaut und Impedanzkontrolle.",
    "learning_outcomes": "Am Ende dieses Kurses sind die Teilnehmer in der Lage:\n- Die verschiedenen Wearable-Robotik-Technologien, Anforderungen und Anwendungen zu\nverstehen.\n- Die Rolle der Mensch-Roboter-Interaktion und des menschlichen Faktors bei der Steuerung von\nExoskeletten zu verstehen.\n- Die Modellierung des menschlichen Muskel-Skelett-Systems zu beschreiben\n- Kinematik und Dynamik von Exoskeletten der oberen Gliedmaßen modellieren\n- Signale von mehreren Sensoren in Exoskelett-Geräte integrieren, abhängig von den\nbeabsichtigten Therapieergebnissen.\n- Die kinematischen und dynamischen Modelle des Exoskeletts zu nutzen, um\nSteuerungsschemata unter Verwendung multisensorischer Modalitäten zu entwerfen",
    "teaching_methods": "Folgende Lehrmethoden werden eingesetzt:\n- Einführende Vorlesungen\n- Tutorien, die im Labor abgehalten werden\n- Selbstständige studentische Arbeiten (auch im Labor)\n- Regelmäßige Kolloquien mit Dozenten zum Abschlussprojekt",
    "media": "Frontalunterricht und Laborexperimente und Übungen",
    "literature": "[1] Human Robotics: Neuromechanics and Motor Control. (2013) Etienne Burdet, David Franklin,\nTheodore Milner\n[2] Wearable robots: biomechatronic exoskeletons. Pons, J. L. (2008). John Wiley & Sons.\n[3] Robot Modelling and Control (2nd Ed). Mark W. Spong\n[4] Physical Dysfunction Practice Skills for the Occupational Therapy Assistant.(2013) Mary B Early",
    "lv_sws_lecturer": "Cheng, Gordon; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPractical Course Wearable Robotics: Upper Limb Exoskeletons (Praktikum, 5 SWS)\nCheng G [L], Berberich N, Paredes Acuna Y\nPractical Course Wearable Robotics: Upper Limb Exoskeletons (Vorlesung, 1 SWS)\nCheng G [L], Paredes Acuna Y"
  },
  {
    "module_id": "EI78067",
    "title": "Intelligent Machine Design Lab – Advanced System Design",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulnote wird durch die eigentliche Projektarbeit bestimmt, in der die Studierenden ihre Fähigkeit zur Teamarbeit und zur Entwicklung und Integration komplexer mechatronischer Systeme unter Beweis stellen. Dazu gehört eine 10-minütige Präsentation, in dem die Studierenden ihre Ergebnisse präsentieren. Hierbei wird die Funktionalität der endgültigen Software/Hardware-Anwendung sowie ihr Entwicklungs- und Testprozess und die dafür verwendeten theoretischen Grundlagen bewertet.",
    "repetition": "",
    "recommended_prerequisites": "- IMD - Advanced Mechatronics Components (IMDL-Veranstaltung Semester 2)\n- IMD - Mechatronics Fundamentals (IMDL-Veranstaltung Semester 1)\n- IMDL - Basic System Design (IMDL-Veranstaltung Semester 1)\n- Programmierung (C )\n- Grundlagen der Elektrotechnik (Analog-Schaltungen, …)\n- Grundlagen der Elektronik (Mikrocontroller, Bussysteme, …)\n- Grundlagen Maschinenelemente\n- Aktor- und Sensor-Systeme",
    "content": "The IMDL - Intelligent Machine Design Lab Module 2.2 is part of a three-semester module series, which aims to enable students to develop and build complex and powerful mechatronic systems with high social/economic relevance. Students learn to develop product ideas independently and to transfer them step by step into near-series product prototypes. After completing the module series, students are able to start mechatronic systems and projects of any complexity and to develop and successfully realize their own project ideas, which solve e.g. social, economic, or ecological problems. Particular focus is placed on the development of multi-disciplinary design and integration skills and their use in an interdisciplinary team. The modules within a semester as well as between the different semesters build on each other in terms of content. Therefore, successful completion of the previous modules is strongly recommended (the content of module 1.1 is required for module 1.2, module 1.1+1.2 is required for module 2.1, etc.). The focus of Module 2.2 of this series is the further development and deepening of both practical and theoretical skills in the areas of system development, design, and planning as well as practical construction and commissioning of advanced mechatronic systems. In particular, teamwork and problem-solving skills in the context of a complex interdisciplinary problem are the focus here. The complexity of the targeted mechatronic systems is oriented towards robot arms or manipulators that fulfill a defined range of tasks. Based on these requirements, the students must independently develop, build, program, commission, and finally present a fully functional system. Please note that this module is not only a change from mobile robot to robot arms. More specifically, in the previous1.2 module, students design their own mechatronic systems using intermediate design methods and components while they are closely supervised by the TAs and receive much help. In contrast, the students in the 2.2 module will use more advanced designing approaches, learn to be experts in choosing high-quality components, and they will also be provided less help; hence, be more independent. ( However, assistance and support will be provided if we feel a particular student is not really able to be independent.) In other words, the robot arm is just a project example to get an idea of the system complexity - it does not necessarily need to be a robot arm. Also, I would like again to mention that these modules are part of a multi- semester-multi-interdisciplinary course series focusing on mechatronics design -enabling the students to build product-like high-quality systems and improving their start-condition for their own startups significantly. Here, the components and methods introduced in IMD-Advanced Mechatronics Components are applied in a targeted manner.",
    "learning_outcomes": "Nach Abschluss dieses Moduls haben die Studierenden vertiefte praktische Kenntnisse und Fähigkeiten in der Entwicklung komplexer mechatronischer Systeme. Die Studenten sind in der Lage ein fortgeschrittenes mechatronisches System - beispielsweise einen Roboterarm/ Manipulator - mit definiertem Aufgabenspektrum, zu entwickeln und in Betrieb zu nehmen. Darüber hinaus haben sie ihre Fähigkeiten in den Bereichen Problemlösung und Teamarbeit im Kontext komplexer interdisziplinärer Problemstellungen weiter ausgebaut.",
    "teaching_methods": "Projektarbeit",
    "media": "Presentations",
    "literature": "- Paul Scherz and Simon Monk, ‘Practical Electronics for Inventors’, 4th rev. ed McGraw-Hill\nEducation\n- Eric S. Roberts, ‘The Art and Science of C’, Pearson Education\n- Robert l. Norton, ‘Design of Machinery’, Mcgraw-Hill Europe; 3rd Revised edition\n- Clarence W. De Silva, ‘Mechatronics: Fundamentals and Applications’, Apple Academic Press\nInc.\n- Shimon Y. Nof, ‘Springer Handbook of Automation’, Springer; 2009. Edition\n- Jan Awrejcewicz, ‘Mechatronics: Ideas, Challenges, Solutions and Applications’, Springer; 1st ed.\n2016 Edition\n- Rochdi Merzouki, ‘Intelligent Mechatronic Systems; Modeling, Control and Diagnosis’, Springer;\nSoftcover reprint of the original 1st ed. 2013 Edition\n- Paul Horowitz, ‘The Art of Electronics’, Cambridge University Press; 3. Edition",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntelligent Machine Design Lab: Advanced System Design (Seminar, 5 SWS)\nHaddadin S [L], Budiman F, Chen L, Le Q, Swikir A"
  },
  {
    "module_id": "EI78073",
    "title": "Intelligent Machine Design Lab- Product Prototype Development",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "The module grade is determined by the actual project work in which the students show their ability to work in a team and to develop and integrate complex mechatronic systems and product prototypes. The students should present their work and also show that the designed systems fulfill the designated requirements. The final grade is determined by the following distribution: Prototype evaluation (45%): (15%) Design & Production quality (15%) Basic functionality (15%) In-Field evaluation Approach and Presentation (55%): (15%) Daily work-steps protocol (15%) Weekly mile-stone meetings (10%) Final presentation (15%) Self-Evaluation",
    "repetition": "",
    "recommended_prerequisites": "- IMD - Advanced System Design (IMDL-Veranstaltung Semester 2)\n- IMD - Advanced Mechatronics Components (IMDL-Veranstaltung Semester 2)\n- IMD - Mechatronics Fundamentals (IMDL-Veranstaltung Semester 1)\n- IMDL - Basic System Design (IMDL-Veranstaltung Semester 1)\n- Programmierung (C )\n- Basics of electrical engineering (analog circuits, ...)\n- Basics of electronics (microcontroller, bus systems, ...)\n- Basics of machine hardware\n- Actuator and sensor systems",
    "content": "The IMDL - Intelligent Machine Design Lab Module 2.2 is part of a three-semester module series, which aims to enable students to develop and build complex and powerful mechatronic systems with high social/economic relevance. Students learn to develop product ideas independently and to transfer them step by step into near-series product prototypes. After completing the module series, students are able to start mechatronic systems and projects of any complexity and to develop and successfully realize their own project ideas, which solve e.g. social, economic, or ecological problems. Particular focus is placed on the development of multi-disciplinary design and integration skills and their use in an interdisciplinary team. The modules within a semester as well as between the different semesters build on each other in terms of content. Therefore, successful completion of the previous modules is strongly recommended. The focus of Module 3 of this series is the further development of mechatronics product prototype development skills and knowledge – with focus on business case scenarios, advanced product requirements and production. The students must specify a product idea and develop a product prototype fulfilling defined/advanced requirements. The project advances the mechatronics system development skills of IMDL-1 and IMDL-2 to product-like complexity, integration-level and requirement-scope.",
    "learning_outcomes": "After successful completion of the course, students have gained in-depth practical knowledge and Skills about systems design and are able to develop complex mechatronic systems and product prototypes. In addition, students have developed and advanced skills in problem-solving, team- work and time management. Hence, they are capable of designing market-ready products.",
    "teaching_methods": "Project work\n-Introductory classes\n----> Kick-Start the project\n-Weekly Milestone-Reviews\n----> Give students continuous feedback about their development state\n-Workshops\n--Product development methods\n--Project planning\n--Team communication & collaboration\n--Time management\n-Project work\n--Supervised and unsupervised work in the laboratory\n--Independent student work",
    "media": "- Presentations\n- Hand-out notes",
    "literature": "- Paul Scherz and Simon Monk, ‘Practical Electronics for Inventors’, 4th rev. ed McGraw-Hill\nEducation\n- Eric S. Roberts, ‘The Art and Science of C’, Pearson Education\n- Robert l. Norton, ‘Design of Machinery’, Mcgraw-Hill Europe; 3rd Revised edition\n- Clarence W. De Silva, ‘Mechatronics: Fundamentals and Applications’, Apple Academic Press\nInc.\n- Shimon Y. Nof, ‘Springer Handbook of Automation’, Springer; 2009. Edition\n- Jan Awrejcewicz, ‘Mechatronics: Ideas, Challenges, Solutions and Applications’, Springer; 1st ed.\n2016 Edition\n- Rochdi Merzouki, ‘Intelligent Mechatronic Systems; Modeling, Control and Diagnosis’, Springer;\nSoftcover reprint of the original 1st ed. 2013 Edition\n- Paul Horowitz, ‘The Art of Electronics’, Cambridge University Press; 3. Edition",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "EI78074",
    "title": "Intelligent Machine Programming Lab",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The evaluation is based on several lab assignments where students write code and algorithms and implement them in the robot to solve a particular problem or perform a specific task. One main and complex task that weighs 40% of the grade will be assigned to the student at the end of the semester accompanied by the final presentation. Specifically, the following distribution will be used: 4 Lab assignments, each weighs 15% of the final course grade and is assessed as write code and algorithms (5%) implement to the real systems (5%) solve the given problem (5%) The final task weighs 40% of the final course grade and is assessed as Programming (10%) Solving the task (25%) Final presentation (5%)",
    "repetition": "",
    "recommended_prerequisites": "- Fundamentals of control theory\n- Fundamentals of robotics\n- C,C++\n- Python",
    "content": "In this course, we offer the student clear intensive guidance to robot programming and low to high- level control design. The focus at beginning of this course is to familiarize students and make EI78074: Intelligent Machine Programming Lab | Intelligent Machine Programming Lab [IMPL] them user-ready to different types of robotics systems, e.g. Universal Robots Ue10 or Ue5. In particular, students at the beginning of the course will be taught rules about working with robots (safety aspect, best positioning for shutdown mode, etc), Introduction to ROS, and then a quick overview about available robots. Later in the course, and for each of the Robotics systems used in this course, an overview of its components (controller, hardware , and control panel), connection/ setup, interface medium will be explained to the students. The rest of the course will be focusing on writing codes and programming the robot to perform a certain number of tasks that are ranging from simple to complex.",
    "learning_outcomes": "After successful completion of the course, students have understood the working principles of several state-of-art Robotics systems. They are ready to interact safely and professionally with different types of robots. Moreover, students are able to program, write code, and design controllers for robotics systems in order to perform complex tasks.",
    "teaching_methods": "During the lectures, students are instructed in a teacher-centered style. In the lab, students will perform several experiments and solve various assignments. In particular: Lectures (for direct transfer of theoretical knowledge) Lab assignments (for testing the learned approaches) Final task (to evaluate whether students can transfer the methods they have learned during the course and applied to real-life complex tasks)",
    "media": "-Presentations (Projector, Whiteboard)\n- E-learning platform Moodle, and Zoom\n- Robots, Task Boards and tactile devices.",
    "literature": "- Khalil, Wisama, and Etienne Dombre. Modeling, identification and control of robots. Butterworth\nHeinemann, 2004\n- Khatib, Oussama. \"A unified approach for motion and force control of robot manipulators: The\noperational space formulation.\" IEEE Journal on Robotics and Automation 3.1 (1987)\n-Craig, John J Introduction to robotics: mechanics and control, 3rd ed.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIntelligent Machine Programming Lab (Vorlesung, 1 SWS)\nHaddadin S [L], Aksoy K, Kirschner R, Schneider S, Swikir A\nIntelligent Machine Programming Lab (Praktikum, 5 SWS)\nHaddadin S [L], Aksoy K, Kirschner R, Schneider S, Swikir A\nEI78074: Intelligent Machine Programming Lab | Intelligent Machine Programming Lab [IMPL]"
  },
  {
    "module_id": "EI78075",
    "title": "Projektpraktikum Human Activity Understanding",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Modulnote besteht aus den folgenden Bestandteilen:\n- [20%] Umsetzung von einführenden Praktikumsaufgaben im Bereich Human Activity\nUnderstanding in Python, C++ – Datenaufnahme und -aufbereitung, Erkennung von Menschen und Objekten in der Szene, Gewinnung von semantischem Verständnis laufender Aktivität (2 Daten-Messkampagnen, 8 Programmieraufgaben). Damit zeigen die Studierenden, dass sie über vertiefte Kenntnisse der Laborgeräte und der Methoden der Sensordatenerfassung verfügen und KI-Modelle, Algorithmen und Programmcode nutzen können, um ein automatisches Verständnis menschlicher Aktivitäten zu gewinnen.\n- [60%] Praktische Projektarbeit – Erstellung von Projektplänen und deren Präsentation (8-10\nMin.), regelmäßige Gespräche über den Fortschritt der Arbeit und das weitere Vorgehen mit dem Betreuer (2 Gespräche), technische Problemlösung und Verwendung geeigneter Tools für effiziente Teamarbeit (4 Lab-sessions). Auf dieser Weise soll nachgewiesen werden, dass Studierende systematisch und strukturiert ein vernünftiges Projektthema definieren, dieses in einzelnen Arbeitspakete herunterbrechen, alternativer Wege zur technischen Problemlösung bewerten, und unter Anwendung von geeigneten digitalen Werkzeugen (gitlab, wiki, etc.) zielführend im Team zusammenarbeiten können.\n- [20%] Ca. 10-minütige Präsentation der Ergebnisse inkl. Demo und anschließendes ca. 10-\nminütiges Kolloquium. Lernziele dabei sind Vortrags- und Präsentationstechniken in einem Projektkontext zu üben, die Teamarbeit auf einer interessanter und verständlicher Weise zusammenzufassen, und mit einer interaktiven Demo abzuschließen.",
    "repetition": "EI78075: Projektpraktikum Human Activity Understanding | Projektpraktikum Human Activity Understanding [PPHAU]",
    "recommended_prerequisites": "- Wissenschaftliches Arbeiten (Recherche, Analyse, Dokumentation und Präsentationstechnik)\n- Grundlagen der Informatik, Python und C++\n- Kenntnisse im Umgang mit Linux-Systemen",
    "content": "Erfassung und Annotation von Sensordaten\n- Erfassung und Verarbeitung von Multisensor- und Multiview-Kameradaten, einschließlich Farbe/\nTiefe/IMU\n- Erzeugung synthetischer Daten für menschliche Aktivitäten\n- Beschleunigte Annotation der Ground Truth durch interaktive Segmentierung und Tracking\nBausteine der semantischen Inferenz\n- Objekterkennung\n- Schätzung der Körperhaltung von Menschen\nGraphische Darstellung von räumlichen und zeitlichen Daten\n- 3D-Szenengraphen\n- semantische Graphen\n- Räumlich-zeitliche Graphen\n- Wissensdatenbanken (Ontologien)\nSequentielle Deep-Learning-Modelle für die Erkennung und Antizipation menschlicher Aktivitäten\n- Recurrent Neural Networks\n- Graph Networks\n- Transformers",
    "learning_outcomes": "Nach erfolgreichem Abschluss dieses Moduls sind die Studierenden in der Lage, die Herausforderungen im Bereich des Human Activity Understanding zu verstehen und Prozesse für die automatische sensorgestützte Erkennung laufender menschlicher Aktivitäten zu entwickeln. Die Studierenden sammeln praktische Erfahrungen in der Erfassung und Nutzung synthetischer Daten sowie sequenzieller Multikameradaten in egozentrischen und stationären Sensorenaufbau, in der Annotation und Extraktion relevanter semantischer Informationen und im Erlernen der räumlichen und zeitlichen Repräsentation der Daten. Die Studierenden können lernen, wie man KI-Modelle und Algorithmen einsetzt, um Informationen aus einer Szene zu extrahieren und menschliche Aktivitäten auf der Grundlage der extrahierten Informationen zu erkennen und vorherzusagen. Sie sind schließlich in der Lage, die Ergebnisse der verschiedenen beteiligten Algorithmen sowie die von ihnen entworfenen Lösungen zu analysieren und zu bewerten. EI78075: Projektpraktikum Human Activity Understanding | Projektpraktikum Human Activity Understanding [PPHAU]",
    "teaching_methods": "- Wöchentliche Laborsitzungen mit intensiver Betreuung mit mehreren Frontaleinheiten zu Beginn\nder Veranstaltung (Einführungs- und Grundlagenvorträge durch Wiss. Mitarbeiter, betreute praktische Implementierung anhand zur Verfügung gestellten Skelett-Codes)\n- Individuellen Methoden des Studierenden\n- Vorträge über theoretische Grundlagen der Projektplanung, technisches Management. und\nWerkzeuge zur Zusammenarbeit (SCRUM, Gitlab, Wiki, etc.)\n- Abschlussprojekt: Einzel- und Gruppenarbeit mit selbständiger Planung, Durchführung und\nDokumentation\n- Seminar: Präsentation von Zwischen- und Endergebnissen und Diskussion (Reflektion,\nFeedback)",
    "media": "Die folgenden Medien werden verwendet:\n- Präsentationen\n- Skript und Übersichtsartikel aus der Fachliteratur\n- Tutorials und Software-Dokumentation\n- Entwicklungsumgebung (virtuelle Maschinen auf Server)\n- Simulationsumgebung\n- Sensorenaufbau zur Datenerfassung",
    "literature": "Aktuelle thematisch relevante Veröffentlichungen aus der wissenschaftlichen Literatur sowie\nTutorials.\nBeispiele von relevanten Veröffentlichungen:\n- Chao, Yu-Wei, Wei Yang, Yu Xiang, Pavlo Molchanov, Ankur Handa, Jonathan Tremblay, Yashraj\nS Narang, et al. “DexYCB: A Benchmark for Capturing Hand Grasping of Objects”.\n- Puig, Xavier, Kevin Ra, Marko Boben, Jiaman Li, Tingwu Wang, Sanja Fidler, and Antonio\nTorralba. “VirtualHome: Simulating Household Activities Via Programs.” Proceedings of the IEEE\nComputer Society Conference on Computer Vision and Pattern Recognition, 2018, 8494–8502.\n- Cheng, Ho Kei, Yu-Wing Tai, and Chi-Keung Tang. “Modular Interactive Video Object\nSegmentation: Interaction-to-Mask, Propagation and Difference-Aware Fusion.” ArXiv:2103.07941\n[Cs], March 21, 2021. http://arxiv.org/abs/2103.07941.\n- Bochkovskiy, Alexey, Chien-Yao Wang, and Hong-Yuan Mark Liao. “YOLOv4: Optimal Speed and\nAccuracy of Object Detection.” ArXiv:2004.10934 [Cs, Eess], April 22, 2020.\n- Xiu, Yuliang and Li, Jiefeng and Wang, Haoyu and Fang, Yinghong and Lu, Cewu, Pose Flow}:\nEfficient Online Pose Tracking, BMVC 2018.\nEI78075: Projektpraktikum Human Activity Understanding | Projektpraktikum Human Activity Understanding [PPHAU]\n- Jain, Ashesh, Amir R. Zamir, Silvio Savarese, and Ashutosh Saxena. “Structural-RNN: Deep\nLearning on Spatio-Temporal Graphs.” Proceedings of the IEEE Computer Society Conference on\nComputer Vision and Pattern Recognition, 2016, 5308–17.",
    "lv_sws_lecturer": "Steinbach, Eckehard; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProjektpraktikum Human Activity Understanding (Praktikum, 5 SWS)\nSteinbach E, Chaudhari R, Zakour M"
  },
  {
    "module_id": "EI78076",
    "title": "Dodo Alive! - Resurrecting the Dodo with Robotics and AI: Hardware & Design",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The module mark is determined by a final project work, in which the students demonstrate their ability to work in a team and to put theory into practice. This includes a 10 minute presentation and a written report (10-15 pages) in which the students present their results. Here the functionality of the final application is evaluated, as well as its development and testing process and the theoretical principles used for it.",
    "repetition": "Folgesemester / Semesterende",
    "recommended_prerequisites": "We expect that the student is familiar with basic electronics and µC programming or some basic\nCAD.",
    "content": "Imagine that you are at the natural history museum. You wander around and take a look at different parts of the museum. Suddenly, a robot in the form of a long extinct species – the Dodo – moves towards you, starts talking to you and tells you about itself. This course covers constructing an autonomous, intelligent, walking, Dodo-like robot, which requires a combination of a wide spectrum of fields, including design, control, navigation, locomotion, perception and AI. During this laboratory course, the students will develop the necessary skills to design and construct various components of “Robo-Dodo”, as part of a long-term, iterative project. In the “Hardware & Design” course we aim towards the physical realization of the Robo-Dodo within a group project. HW/SW components that have been developed previously are now integrated into prototypes. Here, the focus is less on constructing a “perfect system”. Rather, students should understand the fundamental mechanical principles that enable locomotion. In this context, it is important to comprehend the role of elastic elements that have been used to successfully construct bio-inspired robots (Cotton et al.). By leveraging fast prototyping methods, students use their creativity to explore different mechanical solutions. Another part of the project are the actuation and control of the mechanical system by brushless DC motors.",
    "learning_outcomes": "After completing this module, students will have gained broad knowledge in developing legged robots. They will also acquire problem solving and team-working skills. The students will have obtained practical and methodological skills to gain diverse competencies far beyond basic theory.",
    "teaching_methods": "• Introductory classes\n• Independent student work\n• Team work (including supervised and unsupervised work in the laboratory)",
    "media": "- Präsentationen",
    "literature": "Cotton, Sebastien, et al. \"Fastrunner: A fast, efficient and robust bipedal robot. concept and planar\nsimulation.\" 2012 IEEE International Conference on Robotics and Automation. IEEE, 2012.\nMore will be provided during the course",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDodo Alive! - Resurrecting the Dodo with Robotics and AI: Hardware & Design (Praktikum, 5 SWS)\nHaddadin S [L], Budiman F, Le Q, Ossadnik D\nDodo Alive! - Resurrecting the Dodo with Robotics and AI: Hardware & Design (Vorlesung, 1\nSWS)\nHaddadin S [L], Budiman F, Le Q, Ossadnik D"
  },
  {
    "module_id": "EI78077",
    "title": "Dodo Alive! - Resurrecting the Dodo with Robotics and AI: Simulation & Control",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The module mark is determined by a final project work, in which the students demonstrate their ability to work in a team and to put theory into practice. This includes a 10 minute presentation and a written report (10-15 pages) in which the students present their results. Here the functionality of the final software/hardware application is evaluated, as well as its development and testing process and the theoretical principles used for it.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "We expect that the student is familiar with basic robot modeling (kinematics and dynamics) and\nprogramming (Matlab).",
    "content": "Imagine that you are at the natural history museum. You wander around and take a look at different parts of the museum. Suddenly, a robot in the form of a long extinct species – the Dodo – moves towards you, starts talking to you and tells you about itself. This course covers constructing an autonomous, intelligent, walking, Dodo-like robot, which requires a combination of a wide spectrum of fields, including design, control, navigation, locomotion, perception and AI. During this laboratory course, the students will develop the necessary skills to design and construct various components of “Robo-Dodo”, as part of a long-term, iterative project. The ”Simulation & Control” course will focus on the fundamentals of modelling, simulation and control of bipedal walking robots. After some introductory classes, a practical phase will follow in which the students work closely together in interdisciplinary groups. The introductory sessions are structured as follows: In the first part, the necessary theory is taught. Then, a live programming session follows in which the theory is applied in practice. The following topics are covered: Simulation:\n• Floating-base kinematics and dynamics\n• Contact modeling\no Event-driven o Time-stepping methods (Stewart & Trinkle) Control:\n• Reduced order models (templates)\n• Spring-Loaded Inverted Pendulum (SLIP) and derivations\n• Passive dynamic locomotion\n• Limit Cycles, Poincaré map analysis, stability\n• Optimal control methods\n• Contact-implicit optimal control",
    "learning_outcomes": "Upon completion of this laboratory, the students have acquired profound knowledge in simulation & control of dynamically walking bipedal robots both methodologically and practically. In addition to their problem-solving and teamworking capabilities, the students expand their management and organization skills.",
    "teaching_methods": "• Introductory classes\n• Independent student work\n• Team work (including supervised and unsupervised work in the laboratory)",
    "media": "- Präsentationen",
    "literature": "M. W. Spong, S. Hutchinson, M. Vidyasagar, ‘Robot modeling and control’, vol. 3. New York: Wiley,\n2006.\nGoswami, Ambarish, and Prahlad Vadakkepat, eds. Humanoid robotics: a reference. Netherlands:\nSpringer, 2019.\nM. Hutter, C. D. Remy, M. A. Höpflinger and R. Siegwart, \"SLIP running with an articulated robotic\nleg,\" 2010 IEEE/RSJ International Conference on Intelligent Robots and Systems, 2010, pp.\n4934-4939, doi: 10.1109/IROS.2010.5651461.\nStewart, David E., and Jeffrey C. Trinkle. \"An implicit time#stepping scheme for rigid body\ndynamics with inelastic collisions and coulomb friction.\" International Journal for Numerical\nMethods in Engineering 39.15 (1996): 2673-2691",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDodo Alive! - Resurrecting the Dodo with Robotics and AI: Simulation & Control (Vorlesung, 1\nSWS)\nHaddadin S [L], Budiman F, Haddadin S, Le Q, Ossadnik D, Swikir A\nDodo Alive! - Resurrecting the Dodo with Robotics and AI: Simulation & Control (Praktikum, 5\nSWS)\nHaddadin S [L], Budiman F, Le Q, Ossadnik D, Swikir A"
  },
  {
    "module_id": "EI79001",
    "title": "Advanced Topics in Communications Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "During the written exam (75 min) students have to show their understanding of the communications systems problem covered in the module and prove their ability to derive results and designs from it by answering questions and example calculations without aid.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "At least 2 Core modules of the CS stream",
    "content": "In detail varying each semester, depending on the specific guest professor, the topics alter between the areas of e.g. coding, signal processing, or protocols. Guest professors in the past have been for instance: Prof. Günhan Dündar, Bogazici University Istanbul; Prof. Willy Sansen, Katholieke Universiteit Leuven; Prof. David Binkley, University of North Carolina at Charlotte; Prof. Paolo Lenne, Ecole Polytechnique Federale de Lausanne; Prof. Radu Marculescu, Carnegie Mellon University Pittsburgh.",
    "learning_outcomes": "After completion of the module students have gained deeper understanding of a particular research area in communications systems. They are able to apply the understanding to system communication problems, analyze the results, evaluate their impact, and create new communications solutions. EI79001: Advanced Topics in Communications Systems | Advanced Topics in Communications Systems",
    "teaching_methods": "A guest professor introduces the theories and relevance of his/her research work. This includes the pressentation of concepts of particular communication systems, e.g. regarding coding or signal processing. The tutorial is provided by the hosting chair and supports the students' learning process with real- life examples, so that students can comprehend e.g. the dimensiioning of design parameters of the circuits presented in the lecture.",
    "media": "Teaching media:\n- chalk and talk\n- slide presentations\n- written compendium\n- text books\n- exercises with solutions\n- teaching material as download from web page\n- in some years practical lab assignments for computer-aided solution",
    "literature": "The following literature is recommended:\n- J. Proakis: \"\"Digital Communications\"\", McGraw Hill, 2000\n- Strang, Gilbert: Linear Algebra and its Applications; Harcourt Publishers Ltd., 1988",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Topics in Communication Systems (Vorlesung mit integrierten Übungen, 4 SWS)\nWachter-Zeh A [L], Jaggi S, Bitzer S, Liu H, Porwal A"
  },
  {
    "module_id": "EI79002",
    "title": "Advanced Topics in Communications Electronics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "During the written exam (75 min) students have to show their understanding of the communications electronics problem covered in the module and prove their ability to derive results and designs from it by answering questions and example calculations without aid.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "At least 2 Core modules from the CE stream",
    "content": "In detail varying each semester, depending on the specific guest professor, the topics alter between the areas of analog design and logic design. Guest professors in the past have been for instance: Prof. Günhan Dündar, Bogazici University Istanbul; Prof. Willy Sansen, Katholieke Universiteit Leuven; Prof. David Binkley, University of North Carolina at Charlotte; Prof. Paolo Lenne, Ecole Polytechnique Federale de Lausanne; Prof. Radu Marculescu, Carnegie Mellon University Pittsburgh.",
    "learning_outcomes": "After completion of the module students have gained deeper understanding of a particular research area in communications electronics. They are able to apply the understanding to IC design problems, analyze the results, evaluate their impact, and create new communications designs EI79002: Advanced Topics in Communications Electronics | Advanced Topics in Communications Electronics",
    "teaching_methods": "A guest professor introduces the theories and relevance of his/her research work. This includes the pressentation of concepts of particular integrated circuits, e.g. analog or mixed signal domains. The tutorial is provided by the hosting chair and supports the students' learning process with real- life examples, so that students can comprehend e.g. the dimensiioning of design parameters of the circuits presented in the lecture.",
    "media": "The following kinds of media are used:\n- Presentations\n- Lecture notes\n- Exercises with solutions as download",
    "literature": "The following literature is recommended:\n- J. Proakis: \"\"Digital Communications\"\", McGraw Hill, 2000\n- T. Cover, J. Thomas: \"\"Elements of Information Theory\"\"",
    "lv_sws_lecturer": "Schlichtmann, Ulf; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Topics in Communications Electronics (Vorlesung mit integrierten Übungen, 3 SWS)\nHu J"
  },
  {
    "module_id": "IN0001",
    "title": "Einführung in die Informatik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Prüfungsart: Klausur (120 Minuten) Die Prüfungsleistung wird in Form einer Klausur von 120 Minuten erbracht. Wissensfragen überprüfen die Vertrautheit mit Konzepten der Informatik und der Programmierung, kleine Programmieraufgaben überprüfen die Fähigkeit, mit maßgeschneiderten Algorithmen Probleme zu lösen und verteilte Anwendungen zu realisieren.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Praktikum: Grundlagen der Programmierung (IN0002) sollte gleichzeitig besucht werden",
    "content": "In dem Modul IN0001 werden beispielhaft folgende Inhalte behandelt:\n- Einführung\n++ Grundlegende Begriffe: Problem - Algorithmus - Programm ++ Imperative Programmkonstrukte\n- Syntax und Semantik\n++ Syntax von Programmiersprachen: reguläre Ausdrücke und kontextfreie Grammatiken ++ Semantik von Programmen: Kontrollfluss-Diagramme\n- Grundlegende Datenstrukturen I:\n++ Zahlen, Strings, Felder ++ Sortieren durch Einfügen\n- Rekursion\n++ Binäre Suche ++ Rekursionsarten IN0001: Einführung in die Informatik | Introduction to Informatics\n- Grundlegende Datenstrukturen II:\n++ Objekte, Klassen, Methoden ++ Listen, Keller und Schlangen\n- Objektorientierte Programmierung\n++ Vererbung ++ abstrakte Klassen und Interfaces ++ Polymorphie\n- Programmieren im Großen (Ausblick und Einbettung in ökonomische, gesellschaftliche und\nethische Zusammenhänge)\n- Nebenläufige Programmierung und Threads",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Informatik auf einem grundlegenden, praxis-orientierten, aber wissenschaftlichen Niveau und können mit ihnen verantwortungsvoll umgehen. Konzepte dieser Art sind etwa: Algorithmen, Syntax und Semantik, sowie Effizienz im Hinblick auf Speicherverbrauch oder Zeit. Die Teilnehmer sind dann in der Lage, in Java oder einer ähnlichen objektorientierten Sprache überschaubare algorithmische Probleme zu lösen und einfache verteilte und nebenläufige Anwendungen zu programmieren. Sie verstehen die diesen Programmiersprachen zugrundeliegenden Konzepte und Modelle und sind deshalb in der Lage, andere zuweisungs- und objektorientierte Programmiersprachen eigenständig zu erlernen.",
    "teaching_methods": "Vorlesung, kombiniert mit eigenem experimentellen Erarbeiten der Beispiele am Rechner und Erschließen weiterführender Literatur zur Klärung von technischen Detailfragen.",
    "media": "Folienpräsentation, Tafelanschrieb, Online-Programmierung, Animationen,\nVorlesungsaufzeichnung",
    "literature": "Heinisch, Müller-Hofmann, Goll: Java als erste Programmiersprache, Teubner, 2007\nDeitel, Harvey / Deitel, Paul: How to program Java Prentice-Hall, 2002\nFlanagan, David: Java in a Nutshell O'Reilly, 2002\nBishop, Judith: Java gently Prentice-Hall, 2001\nEckel, Bruce: Thinking in Java Prentice-Hall, 2002",
    "lv_sws_lecturer": "Seidl, Helmut; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Informatik (IN0001) (Vorlesung, 4 SWS)\nAnzinger M, Westermann R\nIN0001: Einführung in die Informatik | Introduction to Informatics"
  },
  {
    "module_id": "IN0002",
    "title": "Grundlagenpraktikum: Programmierung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Prüfungsart: Übungsleistung Auf 7 bis 14 Übungsblättern werden Aufgaben bzw. Programmieraufgaben gestellt, die von den Teilnehmern in schriftlicher oder elektronischer Form gelöst und abgegeben werden. Damit weisen die Teilnehmer nach, dass sie in einer objekt-orientierten Programmiersprache wie Java im Kleinen programmieren können und dass sie grundlegende Konzepte der Informatik verstanden haben und in eigenständigen Lösungen bzw. Programmen anwenden können. Um den eigenen Anteil an den Lösungen nachweisen zu können, müssen die Teilnehmer dabei jederzeit in der Lage sein, ihre Lösungen auch mündlich zu präsentieren. Vor Beginn des Praktikums wird bekannt gegeben, wie die einzelnen Übungsbestandteile zur Ermittlung der Note gewichtet werden.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Einführung in die Informatik 1 (IN0001) sollte gleichzeitig besucht werden",
    "content": "Begleitend zum Modul IN0001 behandelt das Praktikum Aufgaben, die u.a. die kreative Verwendung von:\n- grundlegenden Datenstrukturen\n- Rekursion\n- Objekten, Klassen und Methoden\n- Listen, Warteschlangen und Bäumen\n- höheren Konzepten der objektorientierten Programmierung\nIN0002: Grundlagenpraktikum: Programmierung | Fundamentals of Programming (Exercises & Laboratory)\n- Nebenläufigkeit\nzur Problemlösung einüben.",
    "learning_outcomes": "Nach erfolreicher Teilnahme an diesem Modul beherrschen die Studierenden die Programmiersprache Java oder eine ähnliche objekt-orientierte Programmiersprache und das Programmieren im Kleinen. Sie können Programme eigenständig entwickeln und dabei wesentliche Konzepte der Informatik auf einem grundlegenden, praxis-orientierten, aber wissenschaftlichen Niveau anwenden, wie sie im Modul IN0001 gelehrt werden.",
    "teaching_methods": "Etwa ein Viertel des Moduls besteht aus der Bearbeitung von Übungsaufgaben zum begleitenden Modul IN0001. Diese Übungsaufgaben vertiefen das Verständnis fundamentaler Konzepte der Informatik. In dem restlichen Teil dieses Moduls entwickeln die Teilnehmer kleinere Beispielanwendungen unter Anleitung, um ihre Fähigkeiten zur Programmierung in einer objektorientierten Programmiersprache zu entwickeln.",
    "media": "Projektor, Folien, Tafel, Softwareentwicklungsumgebungen",
    "literature": "Siehe Modul IN0001",
    "lv_sws_lecturer": "Seidl, Helmut; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum: Grundlagen der Programmierung (IN0002) (Praktikum, 4 SWS)\nWestermann R [L], Anzinger M, Kocal A, Weitz S"
  },
  {
    "module_id": "IN0004",
    "title": "Einführung in die Rechnerarchitektur",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 120 Minuten erbracht. Anhand von einfachen Beispielaufgaben zu maschinennaher Assembler Programmierung, zur Mikroprogrammierung und zum Schaltungsentwurf soll die Beherrschung der praktischen Konzepte der Rechnerarchitektur nachgewiesen werden. Weiterhin soll durch Beantwortung von Fragen nachgewiesen werden, dass auch die theoretischen Grundkonzepte der Rechnerarchitektur beherrscht werden. Als Bearbeitungshilfen werden Merkblätter zur Verfügung gestellt, ansonsten sind keine Hilfsmittel erlaubt.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "keine",
    "content": "- Funktion und Aufbau von Rechnersystemen aus technischer Sicht: Von-Neumann-Rechner,\nMaschinenbefehlszyklus, Hardware-Software-Schnittstelle\n- Die Instruction Set Architecture (ISA): Funktionsweise und maschinennahes Assembler\nProgrammieren, Aufrufkonventionen\n- Implementierung von Maschinenbefehlen durch Mikroprogrammierung\n- Schaltungen, Schaltwerke, Schaltwerksentwurf mittels einer formalen Sprache am Beispiel von\nVHDL\n- Einführung in die Rechnerarchitektur: Mikroprozessorarchitekturen und Systemarchitekturen,\nparallele und verteilte Systeme, Speichersysteme und E/A IN0004: Einführung in die Rechnerarchitektur | Introduction to Computer Organization and Technology - Computer Architecture",
    "learning_outcomes": "Nach Teilnahme an diesem Modul sind die Studierenden in der Lage, Rechnersysteme als geschichtete, abstrakte Maschinen zu verstehen. Sie haben einen ersten Einblick in das Fachgebiet der Rechnerarchitektur gewonnen und beherrschen die nachfolgend genannten, einzelnen Fähigkeiten: Sie haben die wesentlichen Konzepte von maschinennaher Programmierung, Mikroprogrammierung und Schaltungsentwurf erlernt und können diese anwenden. Sie haben den Maschinenbefehlszyklus auf Basis der Vorgänge in der Hardware auf Registertransferebene verstanden und sind in der Lage Rechnerarchitekturen zu klassifizieren. Sie haben die Grundsätze moderner Rechnerarchitekturen erlernt.",
    "teaching_methods": "Mit Hilfe einer Folienpräsentation mit Animationen stellt die Vorlesung die Grundbegriffe und der Methoden Rechnerarchitektur vor und erläutert sie an Beispielen. Eine begleitende Zentralübung sowie begleitende Übungen vertiefen anhand geeigneter Aufgaben das Verständnis der Inhalte der Vorlesung und zeigen die Anwendung der verschiedenen Methoden mit Hilfe von überschaubaren. Hausaufgaben ermöglichen Studierenden die Themen im Selbststudium zu vertiefen. Lösungen zu den Aufgaben werden in der Zentralübung und den Übungsgruppen besprochen. Die Präsentation der eigenen Lösung in der begleitenden Übung verbessert die Kommunikationsfähigkeiten.",
    "media": "Folien von Vorlesung und Zentralübung, schriftliche Übungsblätter, Übungsaufgabensammlung,\nweitere Arbeitsmaterialien.",
    "literature": "- Andrew S. Tanenbaum, Todd Austin: Rechnerarchitektur: Von der digitalen Logik zum\nParallelrechner\n- David A. Patterson, John L. Hennessy, Computer Organization and Design: The Hardware/\nSoftware Interface\n- Intel386 TM DX MICROPROCESSOR 32-BIT CHMOS MICROPROCESSOR WITH\nINTEGRATED MEMORY MANAGEMENT\n- Beschreibung der mikroprogrammierbaren Maschine",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Rechnerarchitektur (IN0004) (Vorlesung, 4 SWS)\nSchulz M [L], Schulz M ( Maiterth M ), Wille R ( Peham T ), Peham T, Huseynli F, Prinz D,\nSchäffeler J\nÜbungen zu Einführung in die Rechnerarchitektur - Gruppen Mo, Di, Mi (IN0004) (Übung, 2 SWS)\nSchulz M [L], Schulz M, Wille R, Peham T, Huseynli F, Prinz D, Schäffeler J\nIN0004: Einführung in die Rechnerarchitektur | Introduction to Computer Organization and Technology - Computer\nArchitecture"
  },
  {
    "module_id": "IN0005",
    "title": "Grundlagenpraktikum: Rechnerarchitektur",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Projektarbeit in Kleingruppen von 3 Studierenden erbracht. Die Projektarbeit besteht aus einer Implementierung sowie einer Ausarbeitung im Umfang von ca. 10 Seiten und einem Vortrag von 15 Minuten, welche zu je einem Drittel gewichtet werden. Durch die Bearbeitung einer umfangreichen Projektaufgabe wird nachgewiesen, dass die Studierenden in der Lage sind, eine Problemstellung in begrenzter Zeit gemeinsam zu erkennen, mit einer effizienten Implementierung zu lösen, und diese Lösung zu analysieren und qualitativ zu bewerten. Die kommunikative Kompetenz und die Fähigkeit zur Analyse, Interpretation und Bewertung der eigenen Problemlösung wird durch Ausarbeitung und Vortrag geprüft.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "IN0004: Einführung in die Rechnerarchitektur",
    "content": "- Techniken zur Performanzanalyse\n- Benchmarkingtechniken\n- Profiling-Tools, u.a. perf, gprof, Callgrind\n- Nutzung von Hardware Performance Countern\n- Grundlagen C-Programmierung\n- Datenstrukturen, Funktionen, Strings, Pointer-Arithmetik, I/O\n- Makefiles, Debugging-Techniken, GDB, Assertions\n- Grundlagen Compiler-Optimierungen\n- Rahmenbedingungen: Application Binary Interface, definiertes\nVerhalten IN0005: Grundlagenpraktikum: Rechnerarchitektur | Basic Practical Course: Computer Architecture\n- Einfluss von Programmannotationen (Pointer-Aliasing, Alignment,\netc.) auf Performanz\n- Grundlegende Modelle zur parallelen Programmierung, Flynn'sche\nKlassifikation\n- Optimierung von Instruktionsparallelismus\n- Spezialisierung im Rahmen der Projektarbeit in einer der folgenden\nBereiche:\n- Ausnutzung von Vektoreinheiten moderner Prozessoren\n- SIMD-Instruktionen in Maschinencode\n- SIMD-Intrinsics in höheren Programmiersprachen\n- Multi-Threading mit Pthreads oder OpenMP\n- Synchronisierung, atomare Operationen\n- Cache-Optimierungen\n- Programmiermodelle für heterogene Systeme (u.a. GPUs, FPGAs)",
    "learning_outcomes": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, im Kontext moderner Rechensysteme (moderne x86-64 Prozessoren, GPUs) die Performanzcharakteristiken von Programmen zu analysieren, mithilfe dieser Ergebnisse zielgerichtete Optimierungen zu entwickeln und damit auch komplexe Hardware sowohl zeit- als auch energieeffizient zu programmieren und eigene Implementierungen zu bewerten.",
    "teaching_methods": "In der ersten Hälfte des Semesters werden im wöchentlichen Praktikumsbetrieb durch Präsenzübungen und Hausaufgaben die notwendigen Grundlagen vermittelt. Die in dieser Phase erarbeiteten Kenntnisse sind in der zweiten Hälfte des Semesters in Gruppenprojekten anzuwenden. Jede Gruppe, bestehend aus 3 Teilnehmenden, bekommt ein Projekt zugeteilt, welches in einer vorgegebenen Zeit zu bearbeiten ist. Im Rahmen des Projektes ist neben der Projektimplementierung auch eine Ausarbeitung zu erstellen und ein Vortrag zu halten.",
    "media": "Vortrag mit Folien, Praktikumsbetrieb, Übungen",
    "literature": "J. Hennessy, D. Patterson: Computer Architecture: A Quantitative Approach\nWilliam Stallings: Computer Organization and Architecture: Designing for Performance\nIntel Corporation: Intel® 64 and IA-32 Architectures Optimization Reference Manual\nJ. Gustedt: Modern C\nT. Mattson, Y. He, A. Koniges: The OpenMP Common Core Standard Performance Evaluation\nCorporation: SPEC CPU Documentation",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nIN0005: Grundlagenpraktikum: Rechnerarchitektur | Basic Practical Course: Computer Architecture\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagenpraktikum: Rechnerarchitektur (IN0005) - Tutorien (Praktikum, 3 SWS)\nSchulz M [L], Bode V, Huseynli F, Schulz M\nGrundlagenpraktikum: Rechnerarchitektur (IN0005) (Praktikum, 0 SWS)\nSchulz M [L], Bode V, Schulz M"
  },
  {
    "module_id": "IN0010",
    "title": "Grundlagen: Rechnernetze und Verteilte Systeme",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht. Verständnisfragen sowie Rechenaufgaben überprüfen die Vertrautheit der in der Vorlesung behandelten Technologien und Methoden von Rechnernetzen und Verteilten Systemen sowie das durch Implementierung von Protokollmechanismen gewonnene Verständnis. Rechenaufgaben überprüfen darüber hinaus die Fähigkeit, die Leistungsfähigkeit ausgewählter Netze und verteilter Anwendungen zu bestimmen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0001 Einführung in die Informatik 1, IN0003 Einführung in die Informatik 2 bzw. ab WiSe 2018/19\nFunktionale Programmierung und Verifikation, IN0002 Praktikum: Grundlagen der Programmierung",
    "content": "- Rechnernetze\n++ Überblick: Computernetze und das Internet +++ Komponenten (Router, Switches, Clients, Server) +++ Aufbau (Topologien, Routing, Pakete gegenüber virtuelle Verbindungen) +++ Schichtenmodell (OSI und Internet) +++ Geschichtlicher Hintergrund ++ Schichtenübergreifende Konzepte (innerhalb der Schichten behandelt): +++ Adressierung +++ Fehlererkennung +++ Codierung und Modulation +++ Medienzugriffsverfahren +++ Flusskontrolle IN0010: Grundlagen: Rechnernetze und Verteilte Systeme | Introduction to Computer Networking and Distributed Systems +++ Verbindungsmanagement +++ Paketvermittlung gegenüber virtuelle Verbindungen ++ Schichten: +++ Anwendungsprotokolle und Anwendungen (application layer) ++++ Aufgaben und Interface ++++ Beispiele: HTTP, DNS, SMTP (Mail), Peer-to-Peer-Protokolle +++ Transportschicht ++++ Aufgabe und Interface ++++ Beispiele: TCP und UDP +++ Vermittlungsschicht ++++ Aufgaben und Interface ++++ Routing: Link State gegenüber Distance Vector Protokolle ++++ Adressierung: IP Adressen ++++ Beispiele: IP, Routing im Internet +++ Sicherungsschicht ++++ Aufgaben und Interface ++++ Beispiele: Ethernet, Wireless LAN +++ Bitübertragungsschicht ++++ Aufgaben und Interface ++++ Beispiele\n- Verteilte Systeme:\n++ Middleware, z.B. RPC ++ Web Services\n- Übergreifende Aufgaben:\n++ Netzmanagement ++ IT-Sicherheit +++ Kryptographische Mechanismen und Dienste +++ Authentifizierung, Vertraulichkeit, Integrität +++ Protokolle mit Sicherheitsmechanismen, z.B.: IPsec, PGP, Kerberos, SSL, SSH, ... +++ Firewalls, Intrusion Detection Inhalt der Übung: Die Übung behandelt Rechenaufgaben zur Bestimmung der Leistungsfähigkeit von Protokollen und Mechanismen einzelner Schichten (Physical Layer, Data Link Layer, Network Layer, Transport Layer). In Programmierübungen wird die Implementierung einzelner Protokollmechanismen geübt.",
    "learning_outcomes": "Nach dem Modul \"Grundlagen: Rechnernetze und Verteilte Systeme\" sind die Studierenden in der Lage, die Technologien und Methoden von Rechnernetzen und Verteilten Systemen zu verstehen, und anhand wesentlicher Protokolle der geschichteten Netzarchitektur zu erläutern, welche Protokollmechanismen in den einzelnen Schichten eingesetzt werden, und wie diese funktionieren. Zudem verstehen sie, wie verteilte Anwendungen wie z.B. das World Wide Web mit Hilfe der Internetprotokolle realisiert sind, und wie Rechnernetze aufgebaut sind. Darüber hinaus sind die IN0010: Grundlagen: Rechnernetze und Verteilte Systeme | Introduction to Computer Networking and Distributed Systems Studierenden in der Lage, die Leistungsfähigkeit ausgewählter Netze und verteilter Anwendungen zu bestimmen, sowie einzelne Protokollmechanismen zu implementieren.",
    "teaching_methods": "Die interaktive Vorlesung mit Folienpräsentationen, Animationen, Vorführungen und Life- Programmierung stellt das Grundwissen zu Rechnernetzen und Verteilten Systemen vor und erläutert sie an Beispielen. Quizze helfen den Studierenden zu erkennen, ob sie die Grundbegriffe und wesentliche Zusammenhänge verstanden haben. Hausaufgaben ermöglichen Studierenden die Themen im Selbststudium zu vertiefen. Begleitende Übungen vertiefen anhand geeigneter Aufgaben das Verständnis der Inhalte der Vorlesung und zeigen die Anwendung der verschiedenen Methoden anhand überschaubarer Problemstellungen. Die Präsentation der eigenen Lösung in der begleitenden Übung verbessert die Kommunikationsfähigkeiten und erlaubt, den eigenen Lernfortschritt mit dem anderer Studierender zu vergleichen. Programmieraufgaben erlauben rechnergestützter Vertiefung sowie Anwendung konzeptionellen Wissens auf praktische Problemstellungen.",
    "media": "Präsentationsfolien, Übungsblätter, Beispieldemonstrationen",
    "literature": "Literaturangaben sind auf den Webseiten der Veranstaltung und auf den Vorlesungsfolien\nangegeben.\nStandardwerke sind u.a.:\n1. James F. Kurose, Keith W. Ross\nComputernetzwerke\nPearson Studium; 5. aktualisierte Auflage, 2012\n2. Andrew S. Tanenbaum / Prof. David J. Wetherall\nComputernetzwerke\nPearson Studium, 5. aktualisierte Auflage, 2012",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagen: Rechnernetze und Verteilte Systeme (IN0010) (Vorlesung, 3 SWS)\nCarle G [L], Carle G, Günther S, Simon M, Lachnit S, Sosnowski M\nÜbungen zu Grundlagen: Rechnernetze und Verteilte Systeme (IN0010), Mo, Di (Übung, 2 SWS)\nCarle G [L], Simon M, Lachnit S, Günther S ( Simon M ), Sosnowski M, Helm M"
  },
  {
    "module_id": "IN0035",
    "title": "Aspekte der systemnahen Programmierung bei der Spieleentwicklung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Teilnehmer bekommen in Gruppen zu jeweils 3 Personen ein Projekt zugeteilt, welches in einer vorgegebenen Zeit zu bearbeiten ist. Mit der Bearbeitung der Projektaufgabe soll nachgewiesen werden, dass in begrenzter Zeit ein Problem erkannt, analysiert und erfolgreich auf der vorgegebenen Zielarchitektur umgesetzt werden kann. Um auch die kommunikative Kompetenz bei der Dokumentation der Arbeit und der Darstellung der Ergebnisse zu überprüfen, ist eine Ausarbeitung im Umfang von 9-11 Seiten anzufertigen und am Ende des Praktikums ein 15-minütiger Vortrag zu halten. In diesem ist eine Analyse des erarbeiteten Lösungswegs vorzustellen. Die Leistung der umgesetzten Implementierung ist mit Hilfe geeigneter Messmethoden zu bewerten. Umgesetzte Optimierungen werden erläutert und die erreichten Performanzsteigerungen diskutiert.",
    "repetition": "",
    "recommended_prerequisites": "Modul Betriebssysteme und hardwarenahe Programmierung für Games (IN0034) sollte gleichzeitig\nbesucht werden",
    "content": "- Einführung in die Rechnerarchitektur für Spiele-Hardware\n- Einführung in die Nutzung relevanter Programmierwerkzeuge\n- Implementierung einfacher Algorithmen in Maschinensprache\n- Gruppenarbeit anhand für die Spieleentwicklung praxisrelevanter Aufgaben auf Spiele-Hardware.\n- Leistungsanalyse der entwickelten Programme, sowie\nIN0035: Aspekte der systemnahen Programmierung bei der Spieleentwicklung | Aspects of low-level programming for games development\n- Optimierung auf Assembler-Ebene\n- Zielarchitekturen: ARM, AArch64",
    "learning_outcomes": "Nach Teilnahme an dem Modul sind die Studierenden in der Lage, den Aufbau von für die Spieleentwicklung relevanten Rechensystemen (ARM, AArch64) und deren maschinennahe Programmierung zu verstehen. Sie können die Funktionsweise wichtiger Programme und Algorithmen analysieren und deren Leistung bewerten. Anhand der Ergebnisse können die Teilnehmer Optimierungen entwickeln und umsetzen.",
    "teaching_methods": "Das Praktikum wird in Form von Gruppen-Projekten durchgeführt. In Vorbereitung auf die Projekte werden in der ersten Hälfte des Semesters im Praktikumsbetrieb und durch freiwillige Hausaufgaben die notwendigen Grundlagen vermittelt. Die hier erarbeiteten Kenntnisse werden für die Projektaufgaben vorausgesetzt. Im zweiten Teil des Semesters bekommt jede Gruppe (bestehend aus 3 Personen) ein Projekt zugeteilt, welches in einer vorgegebenen Zeit zu bearbeiten ist. Für das erfolgreiche Bestehen des Praktikums ist neben einer Ausarbeitung und der Projektimplementierung am Ende des Semesters ein Vortrag zu halten.",
    "media": "Folien, Tafelarbeit, Übungsblätter, Übungsaufgaben, Vortrag",
    "literature": "- Andrew S. Tanenbaum: Computerarchitektur: Strukturen, Konzepte, Grundlagen, Pearson\nStudium, 2006\n- David A. Patterson, John L. Hennesy: Rechnerorganisation und -entwurf : die Hardware-\nSoftware-Schnittstelle, Elsevier, 2005\n- ARM Dokumentation",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBachelor-Praktikum: Aspekte der systemnahen Programmierung bei der Spieleentwicklung\n(IN0035) (Praktikum, 0 SWS)\nSchulz M [L], Huseynli F, Bode V, Schulz M"
  },
  {
    "module_id": "IN0042",
    "title": "IT-Sicherheit",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit grundlegenden Konzepten und methodischen Vorgehensweisen zur Absicherung von Komponenten und Systemen sowie die Vertrautheit mit grundlegenden Protokollen. Mit kleineren Aufgaben wird die Fähigkeit überprüft, Sicherheitskonzepte gezielt und korrekt einzusetzen, oder aber Sicherheitsmängel zu erkennen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0001 Einführung in die Informatik und IN0004 Einführung in die Rechnerarchitektur werden\nempfohlen",
    "content": "- Grundlegende Begriffe der IT-Sicherheit,\n- Ausgewählte Sicherheitsprobleme heutiger Systeme und ausgewählte Angriffe,\n- Grundlagen und praxisrelevante Verfahren der angewandten Kryptographie\n- Grundlegende Konzepte und Protokolle zur Identifizierung/Authentisierung, zur Zugriffskontrolle\nund zur Systemsicherheit\n- Grundlagen der Netzwerksicherheit: Firewallkonzepte und praxisrelevante Protokolle zur\nNetzwerksicherheit\n- Methoden des betrieblichen IT-Risiko- und Sicherheitsmanagements (ISM)",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die grundlegenden Konzepte, Methoden und Protokolle zum Schutz von Daten und Systemen vor Manipulation und Missbrauch auf einem grundlegenden, praxisorientierten, wissenschaftlichen Niveau. IN0042: IT-Sicherheit | IT Security Sie verstehen die Ursachen von Sicherheits-Problemen heutiger Systeme, können die Zusammenhänge zwischen Schutzmechanismen und den damit adressierten Problemen wiedergeben und auf Fallbeispiele anwenden. Sie beherrschen zudem grundlegende Methoden des betrieblichen IT-Sicherheitsmanagements.",
    "teaching_methods": "Vorlesung ergänzt durch Übung mit praktischen Anteilen, um das Verständnis für konzeptionelle und technische Sachverhalte anhand konkreter Aufgabenstellungen, einschließlich einfacher praktischer Programmieraufgaben, detailliert zu durchdringen.",
    "media": "Vorlesungsfolien",
    "literature": "- IT-Sicherheit: Konzepte, Verfahren, Protokolle, Claudia Eckert, 10. Auflage, De Gruyter, 2018.\n- Understanding Cryptography, C. Paar und J. Pelzl, 2. Auflage Springer, 2010.",
    "lv_sws_lecturer": "Eckert, Claudia; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIT Sicherheit (IN0042) (Vorlesung, 2 SWS)\nEckert C [L], Andreas M, Eckert C, Franzen F\nÜbung zu IT Sicherheit - Gruppen Mi, Do, Fr (IN0042) (Übung, 2 SWS)\nEckert C [L], Franzen F"
  },
  {
    "module_id": "IN1501",
    "title": "Grundlagen der Programmierung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 135 Minuten erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit ein Problem erkannt wird und Wege zu einer Lösung gefunden werden können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Keine",
    "content": "- Information und ihre Repräsentation\n- Klassen, Schnittstellen und Algebren\n- grundlegende Konzepte\n++ funktionaler Programmierung, einschl. Rekursion und Induktion ++ objektbasierter und imperativer Programmierung ++ objektorientierter Programmierung\n- Datenstrukturen und Algorithmen:\n++ Reihungen und Listen ++ Darstellung von Mengen und ihren Operationen\n- optional: endliche Automaten\nDie verwendete Programmiersprache ist Java.",
    "learning_outcomes": "Teilnehmer kennen die grundlegenden Konzepte zur systematischen Entwicklung von Programmen. IN1501: Grundlagen der Programmierung | Basic Concepts of Programming Sie können überschaubare Probleme in UML modellieren und in ein Java-Programm umsetzen. Sie beherrschen die wichtigsten Sprachkonstrukte von Java und können andere imperative, objektorientierte oder funktionale Programmiersprachen eigenständig erlernen.",
    "teaching_methods": "Vorlesung, Tutorübung, Aufgaben zum Selbststudium",
    "media": "",
    "literature": "Wird in der Vorlesung bekanntgegeben",
    "lv_sws_lecturer": "Brügge, Bernd; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN1504",
    "title": "Essentials of Applied Software Engineering",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 150,
    "hours_presence": 0,
    "examination_achievements": "Prüfungsart: Übungsleistung Die Studierenden nehmen hierbei an Online-Aufgaben während des Kurses teil, die 60% zur Gesamtnote zählen. Sie sammeln pro erfolgreich abgegebener Aufgabe Punkte. Am Ende des Kurses gibt es eine zusammenfassende Online-Aufgabe, die 40% zur Note beiträgt und beaufsichtigt in der Universität durchgeführt werden muss. Bei dieser werden die Lernergebnisse des gesamten Kurses überprüft und die Studierenden können ebenfalls Punkte sammeln. Studierende bestehen den Kurs, wenn sie mind. 60% aller angebotenen Punkte erreicht haben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "IN0001 Grundlagen der Programmierung",
    "content": "Projektorganisation und Kommunikation, Konfigurationsmanagement, Delivery, UML Modellierung, Agile Methoden, Anforderungsanalyse, System Design, Objektdesign, Implementierung, Muster in der Softwareentwicklung, Testing.",
    "learning_outcomes": "Studierenden verstehen Konzepte und Methoden für die verschiedenen Phasen des Lebenszyklus der Software Entwicklung. Sie verstehen die wichtigsten Begriffe und Konzepte der Softwaretechnik. Sie können konkrete Probleme analysieren, verstehen und bewerten, geeignete Techniken auswählen und diese anwenden um Probleme zu lösen. Sie haben ein Bewusstsein IN1504: Essentials of Applied Software Engineering | Essentials of Applied Software Engineering [EASE] für Fragestellungen entwickelt, auf die im Software Engineering grundsätzlich zu achten ist. Digitale Aufgaben unterstützen die praktische Umsetzung von Videoinhalten, im Bezug auf Design Patterns, Hierarchien im Software Engineering sowie in Grundlagen der Programmierung. Sie erhalten Rückmeldungen zu den von ihnen im Selbststudium entwickelten Lösungsansätzen.",
    "teaching_methods": "Videoaufzeichung, Aufgaben zum Selbststudium, kooperatives Lernen in Team Übungen",
    "media": "MOOC Online Kurs",
    "literature": "Bernd Bruegge, Allen H. Dutoit - Object-Oriented Software Engineering Using UML, Patterns, and\nJava (3rd edition)",
    "lv_sws_lecturer": "Brügge, Bernd; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2016",
    "title": "Bildverstehen II: Robot Vision",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 75,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 60 Minuten erbracht. Anwendungsaufgaben überprüfen die Fähigkeit, realistische Anwendungen des Robotersehens und maschinellen Sehens zu analysieren, zu bewerten und zu entwickeln. Wissensfragen überprüfen die Vertrautheit mit den Algorithmen des Robotersehens und maschinellen Sehens sowie die Angemessenheit der Auswahl der Algorithmen zur Lösung einer bestimmten Anwendung.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Modul IN2023 Bildverstehen I: Methoden der industriellen Bildverarbeitung;\ngrundlegende Kenntnisse der folgenden Gebiete:\n- Lineare Algebra (lineare Transformationen zwischen Vektorräumen in Matrixalgebra)\n- Analysis (Reihen, Differentiation und Integration ein- und zweidimensionaler Funktionen)\n- Wahrscheinlichkeitstheorie",
    "content": "Die Vorlesung gibt eine detaillierte Beschreibung der praxisrelevanten Methoden und Algorithmen, die zur Lösung von Anwendungen im Robotersehen und maschinellem Sehen verwendet werden. Der Schwerpunkt der Vorlesung ist die Beschreibung der Verfahren und ihrer Grundlagen. Beispiele aus der Praxis zeigen die typischen Anwendungen, in denen die vorgestellten Verfahren eingesetzt werden. Unter anderem werden folgende Themenbereiche behandelt:\n- Merkmalsextraktion\n- Klassifikation\n- Farbbildverarbeitung\n- Beschriftungserkennung (Barcodes, OCR)\nIN2016: Bildverstehen II: Robot Vision | Image Understanding II: Robot Vision\n- Hand-Auge-Kalibrierung\n- Objekterkennung",
    "learning_outcomes": "Teilnehmer der Vorlesung verstehen die Theorie, Datenstrukturen und Implementierung der wichtigsten Algorithmen, die im Robotersehen und im maschinellen Sehen verwendet werden. Sie sind in der Lage, Bildverarbeitungsaufgaben zu analysieren und zu bewerten und können diese Kenntnisse und Fähigkeiten nutzen, um Anwendungen des Robotersehens und maschinellen Sehens zu entwickeln.",
    "teaching_methods": "Vorlesung (Präsentation von Folien und Vorstellung interaktiver Beispiele)",
    "media": "PowerPoint",
    "literature": "Carsten Steger, Markus Ulrich, Christian Wiedemann: Machine Vision\nAlgorithms and Applications; Wiley-VCH, Weinheim, 2007",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2023",
    "title": "Bildverstehen I: Methoden der industriellen Bildverarbeitung",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 60 Minuten erbracht. Anwendungsaufgaben überprüfen die Fähigkeit, realistische Anwendungen der industriellen Bildverarbeitung zu analysieren, zu bewerten und zu entwickeln. Wissensfragen überprüfen die Vertrautheit mit den Hardware-Komponenten und Algorithmen der industriellen Bildverarbeitung sowie die Angemessenheit der Auswahl der Hardware-Komponenten und Algorithmen zur Lösung einer bestimmten Anwendung.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Das Modul setzt grundlegende Kenntnisse der folgenden Gebiete voraus: Lineare Algebra (lineare\nTransformationen zwischen Vektorräumen in Matrixalgebra), Analysis (Reihen, Differentiation und\nIntegration ein- und zweidimensionaler Funktionen).",
    "content": "Das Modul gibt eine detaillierte Beschreibung der praxisrelevanten Methoden und Algorithmen, die zur Lösung von Anwendungen in der industriellen Bildverarbeitung verwendet werden. Die Auswahl der Verfahren orientiert sich an den häufigsten Einsatzgebieten der Bildverarbeitung in der Industrie: Lageerkennung, Form- und Maßprüfung und Objekterkennung. Der Schwerpunkt der Vorlesung ist die Beschreibung der Verfahren und ihrer Grundlagen. Beispiele aus der Praxis zeigen die typischen Anwendungen, in denen die vorgestellten Verfahren eingesetzt werden. Im einzelnen werden folgende Themenbereiche behandelt:\n- Bildaufnahme\n- Bildverbesserung\n- Segmentation und Merkmalsextraktion\nIN2023: Bildverstehen I: Methoden der industriellen Bildverarbeitung | Image Understanding I: Machine Vision Algorithms\n- Morphologie\n- Kantenextraktion\n- Segmentation und Anpassung von geometrischen Primitiven\n- Kamerakalibrierung\n- Template Matching\n- Stereo-Rekonstruktion",
    "learning_outcomes": "Nach Bestehen des Moduls verstehen die Teilnehemer die wesentlichen Hardware-Komponenten eines industriellen Bildverarbeitungssystems, sowie die Theorie, Datenstrukturen und Implementierung der wichtigsten Algorithmen der industriellen Bildverarbeitung. Sie sind in der Lage, Bildverarbeitungsaufgaben zu analysieren und zu bewerten und können diese Kenntnisse und Fähigkeiten nutzen, um industrielle Bildverarbeitungsanwendungen zu entwickeln.",
    "teaching_methods": "Vorlesung (Präsentation von Folien und Vorstellung interaktiver Beispiele)",
    "media": "PowerPoint",
    "literature": "Carsten Steger, Markus Ulrich, Christian Wiedemann: Machine Vision Algorithms and Applications;\nWiley-VCH, Weinheim, 2007",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2032",
    "title": "Elektronisches Publizieren / Document Engineering und das World-Wide Web",
    "level": "Bachelor/Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 75 Minuten erbracht. Die Klausurfragen überprüfen, inwiefern die semantische Verarbeitung moderner digitaler Dokumente beherrscht wird. Andere Fragen beziehen sich auf die Fähigkeit, Querverbindungen zu anderen Bereichen der Informatik herzustellen bzw. die Chancen und Risiken dieser Technologie einzuordnen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Allgemeine Grundlagen der Informatik wie z.B. IN0001 Einführung in die Informatik, IN0006\nEinführung in die Softwaretechnik, IN0008 Grundlagen: Datenbanken und IN0011 Einführung in\ndie Theoretische Informatik",
    "content": "Das Modul behandelt nach einer Einführung in das Thema mit Beschreibung des Hintergrunds und Einordnung die folgenden Themenblöcke\n- Modellierung und Kodierung strukturierter Dokumente\nDokumentenmodelle (strukturierte Dokumente, semistrukturierte Daten) mit Umsetzungen XML Information Set und XDM; Kodierung strukturierter Dokumente mit XML, XML Namespaces und JSON; Kodierung von Text mit Unicode.\n- Stukturvorgaben und ihre formalen Grundlagen\nSchemasprachen wie XML DTD, XML Schema, Relax NG, Schematron. IN2032: Elektronisches Publizieren / Document Engineering und das World-Wide Web | Electronic Publishing / Document Engineering and the World-Wide Web\n- Programmgesteuerte Bearbeitung strukturierter Dokumente\nAdressierung von XML-Fragmenten mit XPath; Transformation von XML-Dokumenten und Aufbereitung für Präsentation mit XSLT, XSL-FO, XHTML; Abfrage von XML-Dokumenten mit XQuery\n- Architekturen für Publikationsanwendungen im Web\nDatenerhebung und Benutzungsoberflächen mit XForms, Beschreibung von Abläufen mit SCXML, Architektur XRX",
    "learning_outcomes": "Die Teilnehmerinnen und Teilnehmer sind in der Lage, moderne digitale Dokumente in vielfacher Weise semantisch auszuwerten und weiterzuverarbeiten, im Spannungsfeld von Text, Daten und Programmen. Dadurch können sie die modernen Möglichkeiten des elektronischen Publizierens im Web zutreffend beurteilen. Sie haben ein umfassendes Verständnis der Grundlagen des Web Publishing, also von Konzepten, Modellen, Architekturen, Technologien, etablierten Vorgehensweisen und Werkzeugen rund um die Extensible Markup Language (XML). Sie schätzen den Stand der Technik mit seinen Stärken und Defiziten korrekt ein, sie können sich verwandte Technologien selbständig erarbeiten und sie einordnen, und sie machen sich ein realistisches Bild von künftigen Entwicklungen. Sie können Querverbindungen zu anderen Informatik-Disziplinen herstellen, beispielsweise zum Software Engineering über Modellierung und Vorgehensmodelle, zu Formalen Sprachen und Übersetzerbau über Sprachdefinitionen und Werkzeugentwicklung oder zu Datenbanken über Modellierung und Abfragesprachen. Sie erkennen allgemeingültige Paradigmen der Informatik im Kontext des elektronischen Publizierens wieder.",
    "teaching_methods": "Vorlesung mit aktivierenden Elementen und integrierten Übungsphasen, um die notwendigen Hintergrundinformationen über digitale Dokumente und ihre Verarbeitung zu vermitteln. Aufgaben zum Selbststudium sowie Aktivitäten der Studierenden (beispielsweise die Gestaltung und Anleitung einer Übungsphase), um die praktischen Fertigkeiten zu vertiefen.",
    "media": "Folien, Audiomitschnitt, Tafelarbeit, ausgearbeitete Beispiele",
    "literature": "Zu wesentlichen Teilen des Moduls steht ein ausführliches Skript zur Verfügung.\nAllgemeine Literatur in Textbuch-Form:\n- D. Levy: Scrolling Forward. Making Sense of Documents in the Digital Age. Arcade Publishing\n2001.\n- E.R. Harold u.a.: XML in a Nutshell. O'Reilly 2004.\nIN2032: Elektronisches Publizieren / Document Engineering und das World-Wide Web | Electronic Publishing /\nDocument Engineering and the World-Wide Web\n- A. Moller, M. Schwartzbach: An Introduction to XML and Web Technologies. Addison-Wesley\n2006.\n- G. Kappel u.a.: Web Engineering. DPunkt 2003.\nAktuelle Literaturempfehlungen zu individuellen Themen erfolgen in der Vorlesung.",
    "lv_sws_lecturer": "Brüggemann-Klein, Anne; Prof. Dr. rer. nat. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2040",
    "title": "Virtuelle Maschinen",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen schriftlichen Klausur erbracht. Einzelne Aufgaben verlangen, die gelernten Übersetzungsschemata auf kleine Beispielprogramme anzuwenden. Damit soll sowohl die Kenntnis verschiedener Programmierkonstrukte geprüft werden sowie die Fähigkeit, diese in Maschineninstruktionen zu übersetzen. Andere Aufgaben reflektieren das Konzept virtueller Maschinen selbst, indem für zusätzliche Programmiersprachenkonzepte neue Übersetzungsschemata entwickelt werden sollen. Die erfolgreiche Bearbeitung der Hausaufgaben kann als Bonus in die Bewertung der Klausur einfließen. Die genauen Regelungen hierzu werden rechtzeitig zu Beginn des Moduls bekannt gegeben.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Zumindest rudimentäre Kenntnisse verschiedener Programmiersprachen.",
    "content": "Will man für eine Programmiersprache wie Prolog Code erzeugen, wird man schnell feststellen, dass man bei der Übersetzung gerne Befehle verwenden würde, die so von einer konkreten Maschine nicht bereit gestellt werden. Andererseits ändern sich die Instruktionssätze moderner Rechner so schnell, dass es auch gar nicht sinnvoll erscheint, den Compiler zu sehr auf zufälligerweise bereitgestellte Operationen festzulegen. Eine solche Festlegung könnte nämlich bedeuten, dass man sich nach wenigen Jahren bereits gemüßigt fühlen müsste, den Compiler gänzlich neu zu schreiben. Bereits bei der Implementierung des ersten Pascal Compilers kam man darum auf die Idee, zuerst Code für eine leicht idealisierte Maschine zu erzeugen, deren Befehle dann jeweils nur noch auf den verschiedenen konkreten Zielrechnern zu implementieren waren. Auch die Übersetzung IN2040: Virtuelle Maschinen | Virtual Machines moderner Programmiersprachen wie Prolog, Haskell oder Java basieren auf diesem Prinzip. Einerseits erleichtert dieses Vorgehen die Portierbarkeit des Compilers. Andererseits vereinfacht dies auch die Übersetzung selbst, da man den Befehlssatz entsprechend der jeweiligen zu übersetzenden Programmiersprache geeignet wählen kann. Speziell behandeln wir:\n- die Übersetzung von C;\n- die Übersetzung einer funktionalen Sprache;\n- die Übersetzung von Prolog;\n- die Übersetzung von einer nebenläufigen Variante von C.",
    "learning_outcomes": "Teilnehmer kennen virtuelle Maschinen für imperative, funktionale, logische und objekt-orientierte Programmiersprachen. Sie beherrschen die Prinzipien, wie unterschiedliche Programmiersprachen-Konzepte auf Folgen von Maschinen-Instruktionen abgebildet werden. Sie sind in der Lage, selbst für Ausschnitte von Programmen Code in einer virtuellen Maschine zu erzeugen, und sie können die gelernten Prinzipien anwenden, um für gegebene Konstrukte eigenständig Übersetzungsschemata zu entwickeln.",
    "teaching_methods": "Mit Hilfe einer Folien- oder Tafelpräsentation stellt die Vorlesung Schemata zur Übersetzung verschiedener Programmkonstrukte vor und illustriert diese anhand kleiner Beispiele. In den begleitenden Übungen werden anhand geeigneter Aufgaben zum Selbststudium das Verständnis der Inhalte der Vorlesung vertieft, die Fähigkeit zur Anwendung der gelernten Übersetzungsschemata geübt und für ausgewählte Programmkonstrukte neue Schemata entwickelt.",
    "media": "Folienpräsentation, Tafelanschrieb, eventuell online Programmierung und/oder Animationen",
    "literature": "Seidl, Wilhelm: Übersetzerbau. Virtuelle Maschinen. Springer Verlag, 2007",
    "lv_sws_lecturer": "Seidl, Helmut; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nVirtuelle Maschinen (IN2040) (Vorlesung mit integrierten Übungen, 5 SWS)\nKocal A, Petter M, Seidl H"
  },
  {
    "module_id": "IN2045",
    "title": "Netzwerkanalyse - statistische und formale Modelle und Methoden",
    "level": "Bachelor/Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 75 Minuten erbracht. Wissensfragen überprüfen die Vertrautheit mit Konzepten der Modellierung und den Simulationsmethoden. Anhand von Aufgaben mit konkreten Fallbeispielen weisen die Studierenden nach, dass sie ausgewählte Techniken der Modellbildung, Simulation und Ergebnisauswertung kennen und anwenden können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, IN0009 Grundlagen: Betriebssysteme\nund Systemsoftware",
    "content": "- Modellierung von Systemen\n- Konzepte der zeitdiskreten Simulation\n- Komponenten von Simulationsmodellen und Simulations-Software\n- Zufallszahlengenerierung und Verteilungsfunktionen\n- Zeit- und Leistungsverhalten von Systemen\n- Leistungsmetriken\n- Simulationsexperimente\n- Fallstudien\nIN2045: Netzwerkanalyse - statistische und formale Modelle und Methoden | Network Analysis - Statistical and Formal Models and Methods",
    "learning_outcomes": "Teilnehmer beherrschen methodische Grundlagen und praxisbezogene Techniken der Modellbildung, Simulation und Ergebnisauswertung und kennen ausgewählte Fallstudien.",
    "teaching_methods": "Vorlesung, Übung, Aufgaben zum Selbststudium",
    "media": "Präsentationsfolien, Tafel, Übungsblätter, Beispieldemonstrationen",
    "literature": "Verweise zu wissenschaftlichen Artikeln und anderen weiterführenden Quellen finden sich in den\nPräsentationsfolien.",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2053",
    "title": "Programmoptimierung",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 120-minütigen schriftlichen Klausur erbracht. In einzelnen Aufgaben werden an kleinen Problemen aus dem Bereich der Verbandstheorie überprüft, inwiefern die Studierenden mit den grundlegenden Konzepten der Programmanalyse vertraut sind und diese eigenständig anwenden können. Andere Aufgaben ermöglichen es den Studierenden zu demonstrieren, dass sie die gelernten Analysen und Transformationen auf kleine Beispielprogramme anwenden können. In weiteren Aufgaben werden Studierende schließlich aufgefordert, selbst neue Analysen oder Optimierungen zu entwickeln. Die erfolgreiche Bearbeitung der Hausaufgaben kann als Bonus in die Bewertung der Klausur einfließen. Die genauen Regelungen hierzu werden rechtzeitig zu Beginn des Moduls bekannt gegeben.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Bachelor Informatik, Grundkenntnisse in Programmiersprachen oder Compiler.",
    "content": "Die Vorlesung beginnt mit grundlegenden Datenfluss-Analysen wie Verfügbarkeit von Ausdrücken und Lebendigkeit von Variablen zusammen mit den optimierenden Transformationen, die durch diese Informationen ermöglicht werden. Motiviert durch diese Beispiele wird die notwendige Theorie über vollständige Verbände und monotone Funktionen entwickelt, die zur Berechnung der Programm-Analysen erforderlich ist. Anschliessend betrachten wir weitere elaboriertere Analysen etwa zur Konstantenpropagation. Mit der Intervall-Analyse diskutieren wir Methoden, die auch in dem Fall anwendbar sind, wenn die gewöhnliche Fixpunkt- Iteration nicht terminiert. Weitere Themen sind:\n- interprozedurale Analyse;\n- Pointeranalysen;\nIN2053: Programmoptimierung | Program Optimization\n- Fixpunkt-Algorithmen.\nWeiterhin betrachten wir Hardware-spezifische Optimierungstechniken wie etwa:\n- Registerverteilung;\n- Instruktionsselektion;\n- Instruction Sceduling\nsowie Techniken zur besseren Ausnutzung von Caches.",
    "learning_outcomes": "Teilnehmer wissen um den häufig auftretenden Widerspruch zwischen guter Strukturiertheit und Lesbarkeit eines Programmes und der ebenfalls erwünschten größt möglichen Effizienz bei der Programm-Ausführung. Sie beherrschen die Techniken, mit denen in der Optimierungs- Phase eines Compilers durch Analyse und gegebenenfalls optimierende Transformationen die Effizienz der Programm-Ausführung erhöht werden kann. Sie können diese auf gegebene kleine Programme anwenden und gegebenenfalls neue Analysen und optimierende Transformationen entwickeln.",
    "teaching_methods": "Mit Hilfe einer Folien- oder Tafelpräsentation stellt die Vorlesung die grundlegenden Techniken zur Analyse und Optimierung von Programmen vor und erläutert sie an Beispielen. In den begleitenden Übungen werden anhand geeigneter Aufgaben das Verständnis der Inhalte der Vorlesung vertieft, die Anwendung der gelernten Analysen und Optimierungen auf kleine Programme geübt und die Fähigkeit entwickelt, eigene Analysen und Optimierungen zu realisieren.",
    "media": "Folienpräsentation, Tafelanschrieb, eventuell online Programmierung und/oder Animationen",
    "literature": "Seidl, Wilhelm, Hack: Übersetzerbau. Analyse und Transformation. Springer Verlag, 2010",
    "lv_sws_lecturer": "Seidl, Helmut; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProgrammoptimierung (IN2053) (Vorlesung mit integrierten Übungen, 6 SWS)\nSeidl H [L], Seidl H, Stade Y"
  },
  {
    "module_id": "IN2058",
    "title": "Anwendungen Wissenbasierter Methoden",
    "level": "",
    "language": "Bachelor/Master",
    "semester_duration": "Deutsch/Englisch",
    "frequency": "Einsemestrig",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The exam takes the form of a 75 minutes written test. In the written exam students should prove their ability to choose and utilize adequate knowledge-based systems and their ability to design central components of such systems for a given task.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN2062 Techniques in Artificial Intelligence, basic courses in informatics",
    "content": "The lecture course teaches state-of-the-art techniques for implementing knowledge-based systems and applying them to real problems, in particular in the contexts of the World Wide Web and controlling intelligent systems. The lecture course covers the following topics:\n- description logics: representation of taxonomic knowledge and reasoning about it;\n- principles of the Semantic Web: Semantic Markup Languages, Inference mechanisms and\nengines for the Semantic Web;\n- information systems in the WWW: data integration from distributed information sources; wrappers\nand wrapper learning; planning mechanisms for data integration; global-as-view and local-as-view abstractions;\n- Semantic Web Services and planning complex services;\n- selected examples of intelligent web services;\n- grounded knowledge representation: principles of data mining and the integration of data mining\nmechanisms into knowledge-based systems IN2058: Anwendungen Wissenbasierter Methoden | Applications of Knowledge-Based Techniques",
    "learning_outcomes": "The participants attain detailed knowledge about current techniques for designing and realizing knowledge-based systems and their applications to real-world problems, especially in the context of the world-wide web and the control of intelligent software systems. In the accompanying exercises, participants will gain knowledge about the design and realization of central components of such systems.",
    "teaching_methods": "The module consists of lectures, exercise courses and problems for individual study. In the lectures, the material is presented by the teacher, in dialogue with the students. During the exercise courses, the students work on given exercises either individually or in small groups with help from the tutors and discuss the solutions to problems for individual studies.",
    "media": "Slides, videos, homework assignments",
    "literature": "Stuart Russell and Peter Norvig: Artificial Intelligence - A Modern Approach, Prentice Hall.\nBen Taskar and Lise Getoor: Introduction to Statistical Relational Learning, The MIT Press.",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2060",
    "title": "Echtzeitsysteme",
    "level": "Bachelor/Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht. In dieser soll nachgewiesen werden, dass spezifische Probleme von Echtzeitsystemen verstanden wurden und durch den Einsatz geeigneter Algorithmen und Simulationen gelöst werden können. Es sind keine Hilfsmittel erlaubt.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Keine",
    "content": "Die Vorlesung behandelt die speziellen Methoden, Lösungen und Probleme aus dem Bereich der Echtzeitsysteme. Hierzu werden konkrete Szenarien beschrieben wo Echtzeitsysteme zum Einsatz kommen. Hier wird aufgezeigt, wo die Unterschiede zu Nicht-Echtzeitsystemen bestehen und warum die Implementierung von Steuer- und Regelungssystemen zwingend auf Echtzeitsysteme angewiesen ist. Die Modellierung von Echtzeitsystemen, Nebenläufigkeit, Scheduling, spezielle Betriebssysteme und Programmieransätze, Uhren, echtzeitfähige Kommunikation und typische Hardware für Sensorik und Aktorik werden ausführlich behandelt. Die Veranstaltung schließt mit einer Einführung in fehlertolerante Systeme.",
    "learning_outcomes": "Nach der Teilnahme am Modul sind die Studierenden in der Lage die speziellen Anforderungen von Echtzeitsystemen zu analysieren. Die Studierenden können aus einer Vielzahl von Lösungen für die relevanten Aspekte der Echtzeitsysteme (Modellierungskonzepte, Schedulingalgorithmen, Betriebssysteme, Programmiersprachen, etc.) die passenden Lösungen auszuwählen und IN2060: Echtzeitsysteme | Real-Time Systems umsetzen. Sie verstehen die typischen Probleme der nebenläufigen Programmierung und kennen die verschiedenen Mechanismen zur Problemlösung.",
    "teaching_methods": "Das Modul besteht aus Vorlesung, Übung und Aufgaben für das Selbststudium. Die Inhalte der Vorlesung werden im Vortrag und durch Präsentation vermittelt. Studierende werden durch kleine, im Laufe der Vorträge gestellte Aufgaben, sowie durch die Lösung von Übungsblättern zur inhaltlichen Auseinandersetzung mit den Themen angeregt. Die Lösung der Übungsaufgaben wird in der Übung besprochen.",
    "media": "Folien, Übungsblätter",
    "literature": "- Hermann Kopetz: Real-Time Systems, 2011, 2nd Edition\n- Giorgio C. Buttazzo: Hard Real-Time Computing Systems: Predictable Scheduling Algorithms and\nApplications, 2011, 3rd Edition\n- Lee, Seshia: Introduction to Embedded Systems 2017, available online https://\nptolemy.berkeley.edu/books/leeseshia/",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEchtzeitsysteme (IN2060) (Vorlesung, 3 SWS)\nKnoll A [L], Knoll A, Lenz A\nZentralübung zu Echtzeitsysteme (IN2060, IN8014) (Übung, 2 SWS)\nKnoll A [L], Lenz A, Walter F"
  },
  {
    "module_id": "IN2061",
    "title": "Einführung in die digitale Signalverarbeitung",
    "level": "Bachelor/Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 7,
    "hours_total": 210,
    "hours_self_study": 120,
    "hours_presence": 90,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 105 Minuten erbracht. In dieser soll nachgewiesen werden, dass moderne Methoden der Signalverarbeitung beherrscht werden und geeignete Algorithmen für ein bestimmtes Problem ausgewählt werden können. Es sind keine Hilfsmittel erlaubt.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Keine",
    "content": "Die Vorlesung beginnt mit einer Einführung in Signale und Systeme im Zeitbereich sowie im Frequenzbereich. Der weitere Inhalt umfasst Diskretisierung von Signalen, Filteroperationen, Frequenztransformationen, Kompressionstechniken und einen Ausblick auf digitale Bildverarbeitung. Die Realisierung der Algorithmen durch bzw. auf einem digitalen Signalprozessor (DSP) wird in der Vorlesung besprochen und im Rahmen der Übung angewendet. Dabei wird es den Studierenden überlassen, sich für eine passende Implementierung zu entscheiden.",
    "learning_outcomes": "Nach der Teilnahme am Modul sind die Studierenden in der Lage die theoretischen Konzepte moderner Signalverarbeitungssysteme zu analysieren und die zugrunde liegenden Algorithmen anzuwenden. Sie sind in der Lage, die erlernten theoretischen Konzepte in die Praxis umzusetzen. IN2061: Einführung in die digitale Signalverarbeitung | Introduction to Digital Signal Processing",
    "teaching_methods": "Das Modul besteht aus Vorlesung, Übung und Aufgaben zum Selbststudium. Die Inhalte der Vorlesung werden im Vortrag und durch Präsentation vermittelt. Studierende werden durch kleine, im Laufe der Vorträge gestellte Aufgaben, sowie durch die Lösung von Übungsblättern zur inhaltlichen Auseinandersetzung mit den Themen angeregt. Die Lösung der Übungsaufgaben wird in der Übung besprochen.",
    "media": "Folien, Übungsblätter",
    "literature": "- Janus A. Cadzow, Foundations of Digital Signal Processing and Data Analysis, Macmillan, 1987\n- Johnny R. Johnson, Introduction to Digital Processing, Prentice Hall, 1989\n- Rolf Unbehauen, Systemtheorie, Oldenburg, 1989\n- Oppenheimer/Willsky, Signals and Systems, Prentice Hall, 1983\n- A. van den Enden/N. Verhoeckx, Discrete-Time Signal Processing - An Introduction, Prentice\nHall, 1989\n- R. Best, Digitale Signalverarbeitung und -simulation, AT-Verlag, 1989\n- John G. Proakis, Dimitris G. Manolakis, Digital Signal Processing - Principles, Algorithms and\nApplications, Prentice Hall, 1996\n- Oppenheimer/Schafer, Discrete-Time Signal Processing, Prentice Hall, 1989\n- Tamal Bose, Digital Signal and Image Processing, Wiley, 2004",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die digitale Signalverarbeitung (IN2061) (Vorlesung mit integrierten Übungen, 6\nSWS)\nKnoll A [L], Karimi N, Kirchner S, Knoll A, Lenz A, Strand L"
  },
  {
    "module_id": "IN2067",
    "title": "Robotics",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "In einer 90-minütigen schriftlichen Prüfung müssen die Teilnehmer*innen ein mathematisches Modell einer kinematischen Kette eines gegebenen Manipulators erstellen, das Verhältnis zwischen den erforderlichen Kräften und Drehmomenten im Aktuator und dem dynamischen Zustand des Roboters bestimmen und einen stabilen PID-Regler für eine exemplarische Aufgabe entwerfen, die im Problem beschrieben ist.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "- Vektorrechnung\n- Differentialrechnung\n- Grundkenntnisse in Physik (Newton's Law, etc.)",
    "content": "Dieses Modul vermittelt einerseits das Wissen, wie ein mechanisches System in ein mathematisches Gleichungssystem zur Bewegungsbeschreibung übergeführt werden soll. Anschließend, wird aus der mathematische Analyse dieser Gleichung die Parametrierung der Regelung eines Manipulators abgeleitet, um etwaige Fehler und Abweichungen entlang einer vorgegebenen Trajektorie auszugleichen. Folgende Themenbereiche werden in der Vorlesung definiert und an praktischen Beispielen diskutiert:\n- Koordinatensysteme (Denavit-Hartenberg Konvention)\n- Forwärtskinematik (Beziehung: Gelenkrotation zu Manipulatorbewegung)\n- Inverse Kinematik (Beziehung: Manipulatorbewegung zu Gelenkrotationen)\n- Newton-Euler/Lagrange Analyse des dynamischen Zustandes in den Gelenken\nIN2067: Robotics | Robotics\n- Dynamische Modellierung des Manipulators (mathematisches Modell (MVG) zur\nBewegungsanalyse)\n- PID Regelung der Position und Kraft",
    "learning_outcomes": "Die Teilnehmer*innen sollen in der Lage sein, ein mathematisches Modell eines mechanischen Systems mit Hilfe von Kräfte-/Momenten-Analyse (Newton-Euler Ansatz) oder durch Energieanalyse (Lagrange Methode) zu erstellen, welches die Antriebsmomente in den Gelenken zu Bewegungsparametern des Manipulators in Beziehung setzt. Sie sollen auch die Bedeutung und den mathematischen Zusammenhang zu dem o.g. Modell für die Regelparameter eines PID Reglers für ein Robotersystem erklären können und deren optimale Werte für einen Positions- und Kraftregler bestimmen können.",
    "teaching_methods": "Die Vorlesungsinhalte werden in einem Vortrag den Studierenden erklärt und in einer interaktiven Diskussion vertieft. Begleitend gibt es auch aufgenommene Vorlesungen der Vorjahre, die zum Selbststudium benutzt werden können. Das individuelle Lernen wird durch Tutorials unterstützt, die von den Studierenden selbständig gelöst werden sollen und anschließend in einer 2-stündigen Übung vorgestellt werden. Es werden auch praktische Beispiele aus der Industrie zu den vorgestellten Themen gezeigt und Gastvorträge aus der Industrie organisiert.",
    "media": "Tafel, Folien, Videos und Online-Beispiele",
    "literature": "Introduction to Robotics Mechanics and Control John\nJ, Craig, Prentice Hall. ISBN 0-13-123629-6",
    "lv_sws_lecturer": "Burschka, Darius; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRobotik (IN2067) (Vorlesung mit integrierten Übungen, 5 SWS)\nBurschka D"
  },
  {
    "module_id": "IN2068",
    "title": "Sensorgeführte Robotische Manipulation und Lokomotion",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Prüfungsart: Klausur (60 Minuten) Die Prüfungsleistung wird in Form einer 60-minütigen Klausur erbracht. In dieser soll nachgewiesen werden, dass die wesentlichen Konzepte der Regelung und Planung komplexer Roboterbewegungen verstanden werden (Beantwortung von Verständnisfragen) und mittels Hilfsmaterial auf einfache Aufgabenstellungen aus der Robotik-Praxis angewandt werden können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN2067 Robotik, Grundkenntnisse der Beschreibung dynamischer Systeme in der Mechanik",
    "content": "Einführung: Manipulation und Lokomotion mit komplexen Robotersystemen\n- Grundbegriffe der Differentialgeometrie in der Robotik\nOrientierungsdarstellungen, so3, se3 Koordinatentransformationen für Vektoren, Konvektoren, Tensoren\n- Aufgabenorientierte Regelung Entkopplung im Task-Raum\nAufstellung der Robotergleichungen und Regelung in aufgabenbezogenen Koordinaten\n- Redundante Systeme, Mikro-/Makromanipulation\nInverse Kinematik IN2068: Sensorgeführte Robotische Manipulation und Lokomotion | Sensor-based Robotic Manipulation and Locomotion Aufgaben-Priorisierung: kartesische und in Nullraum-Koordinaten\n- Bewegungssteuerung paralleler Roboter\nZweiarmsysteme Anthropomorphe Hände Humanoide Manipulatoren Laufroboter\n- Greifplanung\n- Mobile Manipulation\n- Visual Servoing\n- Mobile nichtholonome Robotersysteme",
    "learning_outcomes": "Nach erfolgreichem Absolvieren des Moduls kennen Teilnehmende die Werkzeuge zur Modellierung und Bewegungssteuerung komplexer (z.B. humanoider) Robotersysteme in Interaktion mit unbekannten Umgebungen und können die wichtigsten algorithmischen Methoden unterscheiden, die derzeit zur Manipulation und Lokomotion in der Robotik eingesetzt werden.",
    "teaching_methods": "Vorlesung, kombiniert mit eigenem experimentellem Erarbeiten der Beispiele am Rechner und Erschließen weiterführender Literatur zur Klärung von technischen Detailfragen.",
    "media": "Folienpräsentation, Tafelanschrieb, Webinhalte",
    "literature": "T. Frankel: The Geometry of Physics - An Introduction, Cambridge University Press, 1997\nO. Khatib, Lecture Notes: Advanced Robotic Manipulation\nM. W. Spong, S. Hutchinson, M. Vydiasagar: Robot Modelling and Control, John Wiley & Sons,\n2006\nRichard M. Murray, Zexiang Li and S. Shankar Sastry: A Mathematical Introduction to Robotic\nManipulation\nJ. J. Slotine, W. Li: Applied Nonlinear Control, Prentice-Hall, 1990",
    "lv_sws_lecturer": "Albu-Schäffer, Alin Olimpiu; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSensorgeführte Robotische Manipulation und Lokomotion (IN2068) (Vorlesung, 2 SWS)\nAlbu-Schäffer A, Calzolari D, Sachtler A\nIN2068: Sensorgeführte Robotische Manipulation und Lokomotion | Sensor-based Robotic Manipulation and Locomotion"
  },
  {
    "module_id": "IN2072",
    "title": "Analyse von Systemperformanz",
    "level": "Bachelor/Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 60 Minuten erbracht. Wissensfragen überprüfen die Vertrautheit mit Konzepten der Analyse der Performanz komplexer Systeme. In Anwendungsbeispielen weisen die Studierenden nach, dass sie geeignete Modelle auswählen können sowie Kapazitätsplanungen und Vorhersagen durchführen können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, IN0009 Grundlagen: Betriebssysteme\nund Systemsoftware",
    "content": "- Evaluationstechniken, Leistungsmetriken und Workloads\n- Angemessenes Vorgehen bei Leistungsmessungen\n- Statistische Techniken der Datenauswertung\n- Entwurf von Experimenten\n- Simulation und analytische Modellierung\n- Beispiele",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Analyse der Performanz komplexer Systeme. Sie können für die Analyse von Systemperformanz geeignete Modelle auswählen, bewerten und entwickeln und Verfahren und Werkzeuge anwenden, um Kapazitätsplanungen und Vorhersagen durchführen zu können. IN2072: Analyse von Systemperformanz | Computer Systems Performance Analysis",
    "teaching_methods": "Vorlesung, Übung, Aufgaben zum Selbststudium, Programmierprojekt",
    "media": "Folien, Tafel, Übungsblätter",
    "literature": "Verweise zu wissenschaftlichen Artikeln und anderen weiterführenden Quellen finden sich in den\nFolien.",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2073",
    "title": "Cloud Computing",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 75,
    "hours_presence": 45,
    "examination_achievements": "The exam takes the form of an written 60 minutes test without aids. Questions allow to asses acquaintance with the concepts of Cloud and Grid Computing. Questions describing usage scenarios and asking for the evaluation of the learned techniques in these scenarios are used to assess the ability to apply the learned techniques. In a discussion, their ability to solve research question is assessed.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Knowledge in computer architectures and distributed systems would be helpful.",
    "content": "The lecture starts with an introduction and a presentation of the base technologies for Cloud and Grid computing. The layered architecture of Grids and the base services are presented. Cloud Computing is then introduced and the different models SaaS, PaaS, IaaS. The list of base services is extended for Cloud Computing. The lecture also covers a discussion of legal issues.",
    "learning_outcomes": "The students know the goals of Cloud and Grid computing. They can present application scenarios in different domains. They are familiar with the fundamental techniques in the areas security, application development and resource management. They can identify the differences and similarities between Cloud and Grid computing and istributed systems. They are able to participate in Cloud and Grid-related research projects. IN2073: Cloud Computing | Cloud Computing",
    "teaching_methods": "The concepts of Grid and Cloud Computing are introduced in the lecture. In the exercises, the student work on assignments that allow them to train the development of Cloud applications. References to current literature allow the students to deepen their understanding of the concepts.",
    "media": "Slides, Script, Exercise Sheets, Prepared Code Snippets.",
    "literature": "- Berman, F., Fox, G., Hey, A. (ed.): Grid Computing-Making the Global Infrastructure a Reality,\nWiley, Chichester 2003 (collection of 43 contributions, Grids and applications)\n- Di Martino et.al. Engineering the Grid, American Scientific Publishers, 2004, (collection of 34\ncontributions to application and technology of grids)\n- Furht, B., Escalante, A.: Handbook of Cloud Computing, Springer 2010\n- Chorafas, D.: Cloud Computing Strategies, CRC Press 2011",
    "lv_sws_lecturer": "Gerndt, Hans Michael; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCloud Computing (IN2073) (Vorlesung, 2 SWS)\nGerndt H ( Jindal A ), Nunez Araya I\nÜbung zu Cloud Computing (IN2073) (Übung, 1 SWS)\nGerndt H, Nunez Araya I"
  },
  {
    "module_id": "IN2075",
    "title": "Microprocessors",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Students have to hand in 4 exercise reports. The students demonstrate with the reports that they have gained deeper knowledge of the specific exerises including low level programming at assembly level, vector processing with intrinsics, cache parameter measurements, cache coherence protocols as well as the difference between several instruction set architectures. They show that they are able to solve extensive low level programming tasks, know how different microprocessors operate at machine language level, and how their performance can be optimised at core level. Students know how to document this knowledge in reports by using literature and with more time at their disposal. In the written 75 minutes examination students demonstrate by answering questions under time pressure and without helping material the theoretical knowledge of microprocessor components at single and multi-core level as well as on their role in high performance computing. The final grade is an averaged grade from the written examination (70 %) and from the lab reports (30 %).",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0004 Einführung in die Rechnerarchitektur, IN0005 Rechnerarchitektur-Praktikum, Keine\nVorkenntnisse erforderlich, von Vorteil wären jedoch Grundkenntnisse in Rechnerarchitektur",
    "content": "Topology and structure of computing systems Technical development of Microprocessors: From 4004 to contemporary processor architectures RISC vs. CISC- Architektur und Instruction Set Architecture and addressing modes Pipelining IN2075: Microprocessors | Microprocessors Pipelining conflicts Examples: x86, ARM Cache structures, cache coherency, MESI and directory based protocols Superscalar vs. VLIW architectures SSE- and AVX Vector Intrinsics Branch prediction Speculatice execution Outlook",
    "learning_outcomes": "Upon completion of the module, students are able to understand and analyse:\n- the architecture of a microprocessor in general\n- features that have been added over processor generations since the first microprocessor was\nintroduced\n- the state of the art in modern microprocessor architectures\n- possible trends with regard to future processor architectures\n- techniques to program and optimise different architectures at assembly language level.\nAlso students are able to understand the role of a microprocessor in high performance computing systems.",
    "teaching_methods": "Lecture, presentation, workshop, team work, blended learning, experiment",
    "media": "Data projector, Whiteboard",
    "literature": "Hennessy/Patterson: Computer Architecture - A Quantitative Approach\nWilliam Stallings:Computer Architecture and Organization\nIntel / AMD / ARM Reference Manuals",
    "lv_sws_lecturer": "Trinitis, Carsten; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2081",
    "title": "Muster in der Softwaretechnik",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Prüfungsart: Klausur Die Prüfungsleistung wird in Form einer Klausur von 75 Minuten erbracht. Wissensfragen ermitteln das Wissen bezüglich Pattern Schematas, Wiederverwendbarkeit, Delegation, Vererbung und der Anwendbarkeit von Mustern bei spezifischen Problemen. Problemfragen ermitteln die Fähigkeit, spezifische Probleme durch die Anwendung von Mustern und Refactorings zu lösen, sie auf UML Modelle abzubilden und in Java zu implementieren. Dadurch demonstrieren die Studierenden, dass sie die Prinzipien der musterorientierten Modellierung und Implementierung verstanden haben und sie anwenden können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0001: Einführung in die Informatik\nIN0002: Grundlagenpraktikum: Programmierung\nIN0006: Einführung in die Softwaretechnik",
    "content": "In dem Modul IN2081: Muster in der Softwaretechnik werden beispielhaft folgende Inhalte behandelt:\n-Muster als Technik um wiederverwendbares Expertenwissen zu strukturieren\n- Kategorien von Mustern:\n++ Architekturmuster ++ Entwurfsmuster ++ Prozessmuster ++ Testmuster IN2081: Muster in der Softwaretechnik | Patterns in Software Engineering ++ Organisatorische Muster ++ Antimuster\n- Klassifikation und Kombination von Mustern\n++ Pattern-orientierte Softwareentwicklung\n- Modell-Transformationen\n- ++ UML Modell Transformationen\n- ++ Vorwärtsentwicklung- und Rekonstruktion von Modellen aus Code\n- ++ Code Gerüche (code smells)\n- ++Quellcode Transformationen\n- Benutzung von Mustern\n++ bei der Analyse ++ beim Systementwurf ++ beim Detailentwurf ++ Identifizierung von Mustern in Software-Altsystemen",
    "learning_outcomes": "Nach erfolgreicher Teilnahme an diesem Modul verstehen die Studierenden die wesentlichen Kategorien von Mustern, insbesondere Entwurfsmuster, Architekturmuster, Testmuster und Organisationsmustern. Sie verstehen, dass man mit Mustern wiederverwendbares Wissen in der Softwareentwicklung beschreibt, das insbesondere bei der Anforderungsanalyse, beim System- und Objektentwurf sowie im Projektmanagement verwendet werden kann. Sie sind in der Lage die Anwendbarkeit von Mustern bei gegebenen Problemen zu identifizieren, ein entsprechendes UML Modell zu erstellen, in dem dieses Muster enthalten ist und das Modell in Java Quellcode zu übersetzen.",
    "teaching_methods": "Integriertes Lernen (Blended learning): Verknüpfung von Wissensvermittlung und Problemlösung: Jedes Muster wird erklärt und dann anhand von konkreten Problemen während der Vorlesung geübt. Ausserdem gibt es Hausaufgaben zum Selbststudium.",
    "media": "Folienpräsentation, Filme von jeder Vorlesung, Einsatz von Moodle",
    "literature": "- Buschmann, Menuier, Rohnert, Sommerlad, Stal: A System of Patterns: Pattern-Oriented\nSoftware Architecture, Wiley, 1996\n- Gamma, Helm, Johnson, Vlissides, Design Patterns: Elements of Reusable Object-Oriented\nSoftware, Addison-Wesley, 1995\n- Freeman and Freeman: Head First Design Patterns, O'Reilly, 2004\n- Fowler: Analysis Patterns: Reusable Object Models, Addison-Wesley, 1997\n- Fowler: Refactoring: Improving the Design of Existing Code: Improving the Design of Existing\nCode, Addison-Wesley, 1999\nIN2081: Muster in der Softwaretechnik | Patterns in Software Engineering\nZusätzliche Literatur wird am Anfang des Kurses bekanntgegeben. Vorlesungspezifische Literatur\nwird am Ende jeder Vorlesung bekanntgegeben.",
    "lv_sws_lecturer": "Brügge, Bernd; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2083",
    "title": "Projektorganisation und -management in der Softwaretechnik",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Prüfungsart: Klausur Die Prüfungsleistung wird in Form einer Klausur von 90 Minuten erbracht. Wissensfragen ermitteln das Wissen der Studierenden in Bezug auf typische Management Probleme in Softwareprojekten. Problemfragen ermitteln die Fähigkeit, Management Aufgaben zu erledigen, wie z.B. die skizzenhafte Erstellung eines Software Plans, eines Konfiguration Management Plans, eines Branching-Modells oder eines Releaseplans. Dadurch demonstrieren die Studierenden, dass sie die Prinzipien des Software Projekt Managements und der Organisation verstanden haben und sie anwenden können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0006 Einführung in die Softwaretechnik",
    "content": "In dem Modul IN2083 werden beispielhaft folgende Inhalte behandelt:\n- Projektorganisation\n++ Lebenszyklusmodell eines Projektes ++ Organisationen (Linien-, Matrix- und Projekt-basiert) ++ Rollen unnd Verantwortlichkeiten, Management Antimuster ++ Global Software Projekte ++ Reifegrade von Organisantionen (CMM, CMMI)\n- Projektplanung\n++ Software Lebenszyklusmodelle ++ Lineare Modelle (Wassrfall, V-Modell) IN2083: Projektorganisation und -management in der Softwaretechnik | Project Organisation and Management in Software Engineering ++ Iterative Modelle (Spiral-Modell, Unified Process, V-Modell XT) ++ Agile Modelle (Scrum, Kanban) ++ Schätzung ++ Projektzeitplanung\n- Verträge\n++ Typen von Verträgen ++ Lebenszyklusmodell für Verträge ++ Rechtsfragen\n- Veränderungsmanagement\n++ Konfigurationsmanagement ++ Kontinuierliche Integration ++ Kontinuierliche Lieferung\n- Qualitätsmanagement\n++ Nutzer Management ++ Tests, V&V ++ Riskomanagement ++ IEEE Standards",
    "learning_outcomes": "Nach erfolgreicher Teilnahme an diesem Modul verstehen die Studierenden die wesentlichen Konzepte des Softwareprojektmanagements. Sie sind in der Lage typische Anforderungen wie z.B. Erstellung eines Software Projekt Management Plans, Initiierung und Durchführung eines Softwareprojektes und die Anpassung eines Softwarelebenszyklus Modells durchzuführen. Ausserdem sind ihnen die wichtigsten Probleme des Risikomanagements, Zeitplanung, Qualitätsmanaggment, sowie Erstellungs- und Lieferungsmanagement bekannt, und sie sind in der Lage, diese auf kleinere Probleme anzuwenden.",
    "teaching_methods": "Vorlesung, Tutorübung, Interaktive Übungen während er Vorlesung, Aufgaben zum Selbststudium",
    "media": "Folienpräsentation, Filme von jeder Vorlesung, Einsatz von Moodle",
    "literature": "- Bruegge, Dutoit: Object-Oriented Software Engineering: Using UML, Patterns and Java, 3rd\nEdition, Pearson Education, 2009.\n- Kemerer: Software Project Management: Readings and Cases MacGraw Hill, 1997\n- Royce: Software Project Management: A Unified Framework Addison Wesley, 1998\n- Duvall et al.: Continuous Integration, Addison-Wesley Verlag, 2007\n- Schwaber, Beedle: Agile Software Development with Scrum, Addison-Wesley Verlag, 2002\n- Kevin Aguanno (Ed), Managing Agile Projects, Multi-Media Publications Inc., 2005\n- Tapscott, Williams: Wikinomics, Portfolio Verlag, 2006\n- Dutoit, McCall, Mistrik, Paech: Rationale Management in Software Engineering, Springer Verlag,\n2006.\nIN2083: Projektorganisation und -management in der Softwaretechnik | Project Organisation and Management in\nSoftware Engineering\n- Broy, Kuhrmann: Projektorganisation und Management im Software Engineering, Springer, 2013.\nZusätzliche Literatur wird am Anfang des Kurses bekanntgegeben. Vorlesungspezifische Literatur\nwird am Ende jeder Vorlesung bekanntgegeben.",
    "lv_sws_lecturer": "Brügge, Bernd; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2093",
    "title": "eLearning - Techniken und Infrastrukturen",
    "level": "Bachelor/Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Die Prüfungsleistung erfolgt mündlich (20 Minuten). Die Studierenden müssen nachweisen, dass sie Funktionalität, Architektur und Implementierung von eLearning- und Campus Management- Systemen beherrschen und einfache XML-Programme erstellen können.",
    "repetition": "",
    "recommended_prerequisites": "IN2038 Verteilte und Web-Informationssysteme, sonst",
    "content": "- Einführung in eLearning: Allgemeines, Begriffsdefinition(en), verwandte Gebiete,\nAnwendungsbereiche mit Beispielen, Zielsetzungen, Voraussetzungen\n- Entwicklung an Hochschulen\n- Pädagogische und didaktische Aspekte: Lernprozess/Lerntheorien/Lehrverfahren, Didaktische\nElemente, Mediales Design, Didaktische Struktur\n- Technische Konzepte/Systeme für eLearning, Dienste für eLearning\n- Architektur von Lehr-/Lern-Umgebungen: CSCW, Lernportale, Lernplattformen/ Learning\nManagement Systeme, Content Management Systeme\n- Werkzeuge: Autorensysteme\n- Einbindung von eLearning in hochschulweite Informationssysteme: Benutzerverwaltung (LDAP),\nCampus Management, Integration in Systeme zur Informationsrecherche (Wissensdienste)\n- Erstellung von eLearning Inhalten mittels XML: Content Produktionsprozess, XML Sprachfamilien\nfür eLearning, Transformation von XML-Dokumenten, IN2093: eLearning - Techniken und Infrastrukturen | eLearning - Techniques and Infrastructures\n- Standardisierung und Integration: Learning Technology Standards, Metadaten für eLearning-\nMaterialien, Integration in Lehr-/Lernumgebungen, Austausch zwischen unterschiedlichen Lehr-/ Lernumgebungen\n- Wissensmanagement Aspekte",
    "learning_outcomes": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, den Stand der Technik im Bereich des eLearning zu überblicken. Sie können digitale Lehr- und Lernkonzepte einordnen und bewerten, kennen Funktion, Architektur und Implementierung von Lehr/Lernumgebungen und beherrschen die grundsätzliche Organisation der Einbettung solcher Systeme in allgemeine Funktionen von Campus-Management-Systemen. Grundkenntnisse in XML werden erworben und können für die Erstellung von Lehrprogrammen angewendet werden.",
    "teaching_methods": "Vorlesung",
    "media": "Vorlesung mit Folien Gruppenarbeit",
    "literature": "aktuelle Publikationen",
    "lv_sws_lecturer": "Gerndt, Hans Michael; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\neLearning - Techniken und Infrastrukturen (IN2093) (Vorlesung, 2 SWS)\nHüttl T"
  },
  {
    "module_id": "IN2097",
    "title": "Advanced Computer Networking",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Pru#fungsleistung wird in Form einer 75-minu#tigen Klausur erbracht. Versta#ndnisfragen sowie Rechenaufgaben u#berpru#fen die Vertrautheit mit den im Modul behandelten Technologien und Methoden von Rechnernetzen, Kommunikationsprotokollen, Netzarchiktekturen, Dienstgütemechanismen, sowie das durch Implementierung von Protokollmechanismen gewonnene Versta#ndnis. Rechenaufgaben u#berpru#fen daru#ber hinaus die Fa#higkeit, die Leistungsfa#higkeit ausgewa#hlter Netztechnologien zu bestimmen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme, Vorkenntnisse in Rechnernetzen und\nProgrammierkenntnisse in C oder Java werden erwartet.",
    "content": "Internet-Protokolle. Protokollmechanismen und Entwurfsprinzipien, die man üblicherweise in Netzwerkprotokollen (insbesondere im Internet) finden kann. Inklusive einer Diskussion, für welche Zwecke sie benutzt werden. Implementierungsprinzipien. Netzwerkarchitektur: Prinzipien, die das Design von Netzwerkarchitekturen leiten. Netzwerkalgorithmen. Simulation von Netzwerken.",
    "learning_outcomes": "Teilnehmer verstehen den Aufbau des Internet, die Funktionsweise der einzelnen Protokolle, und kennen weiterfu#hrende Prinzipien von Rechnernetzen. Sie verstehen die Architektur von Netzkomponenten, in denen die einzelnen Protokolle implementiert sind, und sind selbst in der Lage, Protokolle zu implementieren, sowie Netze zu IN2097: Advanced Computer Networking | Advanced Computer Networking dimensionieren. Sie beherrschen Netzwerkgrundlagen und sind damit in der Lage, ku#nftige Entwicklungen nachzuvollziehen und zu bewerten.",
    "teaching_methods": "Vorlesung zur Stoffvermittlung mit begleitender wo#chentlichen Tutorübungen, in denen Aufgaben behandelt werden, sowie Programmieraufgaben zur rechnergestu#tzter Vertiefung.",
    "media": "Folien, Tafel, Aufgabenblätter",
    "literature": "Verweise zu wissenschaftlichen Artikeln und anderen weiterfu#hrenden Quellen finden sich in den\nFolien.\nFür Grundlagen und zum besseren Verständnis dieser Materialien sind u.a. folgende\nStandardwerke nützlich:\n1. James F. Kurose, Keith W. Ross\nComputernetzwerke\nPearson Studium; 5. aktualisierte Auflage, 2012\n2. Andrew S. Tanenbaum / Prof. David J. Wetherall\nComputernetzwerke\nPearson Studium, 5. aktualisierte Auflage, 2012",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMasterkurs Rechnernetze (IN2097) (Vorlesung mit integrierten Übungen, 4 SWS)\nCarle G [L], Carle G, Gallenmüller S, Jaeger B, Helm M, Lachnit S, Kempf M, Stubbe H, Zirngibl J,\nSattler P, Sosnowski M"
  },
  {
    "module_id": "IN2099",
    "title": "Netz- und Systemmanagement",
    "level": "Bachelor/Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 75,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 60 Minuten erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit ein Problem erkannt wird und Wege zu einer Lösung gefunden werden können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0010 Grundlagen: Rechnernetze und Verteilte Systeme",
    "content": "Nach kurzer Wiederholung der Grundlagen Verteilter Systeme werden Grundbegriffe und Anforderungen an das IT-Management, insbes. Netz- und Systemmanagement diskutiert. Dann folgt eine ausführliche Vorstellung verschiedener im Einsatz befindlicher Managementarchitekturen (OSI/TMN, Internet, CORBA, DMTF, Web-based Management). Es folgt die Behandlung von Management-Werkzeugen und Plattformen. Danach werden Einsatzszenarien und IT-Prozesse im Servicemanagement diskutiert.",
    "learning_outcomes": "Teilnehmer verstehen die Hauptprobleme beim IT-Management und dessen Einbindung in IT- Prozesse einer Organisation und kennen wesentliche Lösungsansätze.",
    "teaching_methods": "Vorlesung, Übung, Aufgaben zum Selbststudium, Programmierprojekt in Gruppenarbeit IN2099: Netz- und Systemmanagement | Network and System Management",
    "media": "Folien, Tafel, Übungsblätter",
    "literature": "Verweise zu wissenschaftlichen Artikeln und anderen weiterführenden Quellen finden sich in den\nFolien.",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2101",
    "title": "Network Security",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 75-minütigen Klausur erbracht. Verständnisfragen sowie Rechenaufgaben überprüfen die Vertrautheit mit den im Modul behandelten Technologien und Methoden von kryptographischen Verfahren und Protokollen und Mechanismen für die Netzsicherheit.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0009 Grundlagen: Betriebssysteme und Systemsoftware, IN0010 Grundlagen: Rechnernetze\nund Verteilte Systeme",
    "content": "Diese Vorlesung bietet eine Einführung in das Feld der Netzsicherheit. Mögliche Bedrohungsszenarien bilden den Ausgangspunkt und liefern die Anforderungen für den Entwurf sicherer Netze. Nach einer Einführung in die Grundlagen wird die Integration von Sicherheitsmaßnahmen in Netzwerkarchitekturen und Netzwerkprotokolle diskutiert. Sicherheitslücken bestehender Systeme werden ebenfalls thematisiert. Als Grundlage zur Realisierung von Sicherheitsmechanismen werden kryptografische Basiskonzepte (insb. symmetrische und asymmetrische Verschlüsselung sowie kryptographische Hash-Funktionen) behandelt. Anschließend werden die Grundlagen und Methoden für Sicherheitsprotokolle zur Authentisierung, Autorisierung, Zugriffkontrolle, Integritätssicherung, Vertraulichkeit und Nichtabstreitbarkeit diskutiert. Anschließend werden konkrete Sicherheitstechniken insbesondere in der TCP/IP-Protokollfamilie behandelt. Die Beispiele aus der Praxis beinhalten PKI, Kerberos, IPSec, TLS sowie Firewall-Architekturen und Intrusion Detection Systeme. IN2101: Network Security | Network Security",
    "learning_outcomes": "Die Teilnehmenden verstehen Sicherheitsziele für das Internet und die Komponenten, in denen Kommunikationsprotokolle implementiert werden. Sie verstehen die Möglichkeiten, die Angreifern im Netz zur Verfügung stehen. Sie verstehen den Schutz, den kryptographische Verfahren und Mechanismen der Netzsicherheit bieten, und verfügen über das Wissen, Protokolle für die Netzsicherheit anzuwenden und Architekturen umzusetzen, mit denen sich konkrete Sicherheitsziele erreichen lassen.",
    "teaching_methods": "Vorlesung zur Stoffvermittlung, sowie Aufgaben zum Selbststudium, um den Stoff zu vertiefen, sowie Programmier-Challenges zur Erprobung und Anwendung des gelernten Wissens.",
    "media": "Vorlesungsfolien, Tafel, Übungsblätter, Beispieldemonstrationen",
    "literature": "- R. Bless, S. Mink, E.-O. Blaß, M. Conrad, H.-J. Hof, K. Kutzner, M. Schöller: \"Sichere\nNetzwerkkommunikation\", Springer, 2005, ISBN: 3-540-21845-9\n- Niels Ferguson, B. Schneier: ?Practical Cryptography?, Wiley, 1st edition, March 2003.\n- G. Schäfer. Netzsicherheit ? Algorithmische Grundlagen und Protokolle. Soft cover, 422 pages,\ndpunkt.verlag, 2003.\nWeitere Literaturangaben zu wissenschaftlichen Artikeln und anderen Quellen finden sich in den\nFolien.",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNetzsicherheit (IN2101) (Vorlesung mit integrierten Übungen, 4 SWS)\nCarle G [L], Carle G, Kinkelin H, von Seck R, Rezabek F, Kempf M, Sattler P, Steger L"
  },
  {
    "module_id": "IN2120",
    "title": "Programmierpraktikum Angewandte Softwareentwicklung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 135,
    "hours_presence": 45,
    "examination_achievements": "Präsentation und mündliche Testate",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "Im Rahmen des Praktikums wird in Java ein System entwickelt, mit dem sich eine Reihe von Aufgaben im Umfeld der Textverarbeitung durchführen lassen. Die wesentliche Idee dabei ist es, einzelne einfache Komponenten zu entwickeln, die dann in ihrem Zusammenwirken auch komplexe Aufgaben lösen können. Inhalt des Praktikums ist sowohl die Entwicklung spezifischer Komponenten als auch der Infrastruktur zur Integration und Konfigurierung der Komponenten. Im Rahmen dieses Praktikums wird dazu eine graphische Benutzungsoberfläche zur Konfiguration des Systems entwickelt.",
    "learning_outcomes": "Die Teilnehmer erhalten einen praktischen Einstieg in die objektorientierte Programmierung mit Java: Objekte, Vererbung, Ein-/Ausgabe, Ausnahmebehandlung, Visualisierung mit AWT, Multi- Threading.",
    "teaching_methods": "Praktikum IN2120: Programmierpraktikum Angewandte Softwareentwicklung | Practical Course Applied Software Engineering",
    "media": "Skript",
    "literature": "- C. W. Dawson: Computerprojekte im Klartext. Pearson Studium 2003\n- H. Balzert: Lehrbuch der Software-Technik. Spektrum, 1998\n- A. Kemper, A. Eickler: Datenbanksysteme - Eine Einführung, Oldenbourg, 6. aktualisierte und\nerweiterte Auflage, 2006\n- C.J. Date: An Introduction to Database Systems, Addison-Wesley Systems Programming Series,\n1995\n- R. Elmasri, S. Navathe: Fundamentals of Database Systems, Benjamin/Cummings, 1989\n- H. Korth, A. Silberschatz: Database System Concepts, McGraw Hill, 1991\n- A. Eberhart, S. Fischer: Web Services - Grundlagen und praktische Umsetzung mit J2EE\nund .NET. Hanser Verlag, 2003",
    "lv_sws_lecturer": "Schlichter, Johann; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2133",
    "title": "Grundlagen von Computer Vision",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 75,
    "hours_presence": 45,
    "examination_achievements": "The examination is performed in the form of a 60-minute written exam. In this, the candidates demonstrate that they can analyze the radiometric properties of the light source and the objects in the scene, can set up a suitable optical system for a specific requirement in terms of field of view and accuracy, and carry out a calibration of a camera system. They should be able to use different methods for 3D reconstruction from lighting properties, motion stereo and binocular arrangements and to understand different matching methods for image regions.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Not specified",
    "content": "The \"Principles of Computer Vision\" lecture follows the image formation process starting with radiometric surface properties (Lambertian Surfaces, specular surfaces), considering the modeling of cameras and lens systems to image processing algorithms that are used for filtering and abstracting image information. It covers the basics required for 3D reconstruction from binocular systems (stereo), shape from shading and structure-from-motion. Lecture content:\n- Reflective properties of surfaces\n- Camera parameters/camera calibration\n- Filtering. edge detection algorithms,\n- Segmentation algorithms and calculation of camera movement from image projections\n- Matching procedure\n- 3D reconstruction for robot systems\nIN2133: Grundlagen von Computer Vision | Principles of Computer Vision",
    "learning_outcomes": "The main goal of the lecture is to develop an image processing system for measurement and control tasks on a robot system, in which real-time capability and accuracy estimation play an essential role. After completing the module, the participants will master the process of image creation and processing, starting with radiometric surface properties, modeling cameras and lens systems, and ending with the image processing algorithms that are used for filtering and abstracting image information. They also master the basics required for 3D reconstruction from binocular arrangements (stereo).",
    "teaching_methods": "The lecture content is explained to the students in a lecture and deepened in an interactive discussion. There are also recorded lectures from previous years that can be used for self-study. Individual learning is supported by tutorials, which the students should solve independently and which will be discussed in the lecture. Practical examples from research on the presented topics will also be shown and guest lectures from industry will be organized.",
    "media": "Blackboard and slides",
    "literature": "Introductory Techniques for 3-D Computer Vision. Emanuele Trucco (Autor), Alessandro Verri\n(Autor)\nComputer Vision: A Modern Approach. David A. Forsyth (Autor), Jean Ponce (Autor)",
    "lv_sws_lecturer": "Burschka, Darius; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nGrundlagen von Computer Vision (IN2133) (Vorlesung, 3 SWS)\nBurschka D"
  },
  {
    "module_id": "IN2138",
    "title": "Robot Motion Planning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In a written exam of 75 minutes the participants have to explain principles of trajectory planning using direct and probabilistic methods, and they need to parametrize a data fusion framework from multiple sources based on Kalman Filter for a specific robotics system considering the uncertainties in the sensory inputs. The Kalman framework is used to build SLAM (Simultaneous Localization and Mapping) frameworks as a basis for trajectory planning.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Not specified",
    "content": "The module has two parts. In the first part, planning methods are discussed starting with complete knowledge about the environment, over partial knowledge of the local area, to probabilistic sampling in high-dimensional spaces. This part covers: bug-algorithms, direct planning methods for planar robots, and probabilistic road-maps. In the second part, Kalman Filter techniques are discussed that allow to compensate errors in the data and build maps of the environment based on Simultaneous Localization and Mapping (SLAM) and particle filtering approaches.",
    "learning_outcomes": "The goal of the module is to show the participants existing direct planning methods for low- dimensional problems, e.g. mobile robots, and show how probabilistic approaches help to deal with the increasing complexity in high-dimensional planning cases. The students learn how to design a planning system by understanding how to build maps from a-priori information or from sensor input (SLAM) and how to use these maps to efficiently plan collision-free trajectories in space. IN2138: Robot Motion Planning | Robot Motion Planning",
    "teaching_methods": "The content of the module is presented to the students in a lecture and deepened in an interactive discussion. There are also recorded lectures from previous years that can be used for self-study. The individual learning is supported by tutorials, which are to be solved independently by the students and then their solutions are presented in an exercise. Practical examples from the industry on the presented topics will also be shown and guest lectures from the industry will be organized.",
    "media": "Blackboard, slides, videos and online examples",
    "literature": "H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, and S. Thrun. Principles of\nRobot Motion: Theory, Algorithms, and Implementation. MIT Press, 2005.\nSteven M. LaValle. Planning Algorithms Cambridge University Press, 2006.",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nBewegungsplanung in der Robotik (IN2138) (Vorlesung mit integrierten Übungen, 4 SWS)\nBurschka D [L], Burschka D ( Pavlic M ), Pavlic M"
  },
  {
    "module_id": "IN2147",
    "title": "Parallel Programming",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The exam takes the form of a 120 minutes written test. Questions allow to asses acquaintance with the concepts of parallel programming models, languages, and tools. Code snippets of sequential and parallel programs are given. Students apply their knowledge on dependence analysis and code transformations to these codes. Based on code snippets the students apply the learned parallel models to demonstrate their ability to evaluate different parallelization strategies, to parallelize code, and tune applications.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN2076 Advanced Computer Architecture",
    "content": "The module starts with a motivation for parallel programming and a classification of parallel architectures. It focuses first on parallelization for distributed memory architectures with MPI. It introduces the major concepts, e.g., point to point communication, collective operations, communicators, virtual topologies, non-blocking communication, single-sided communication and parallel IO. In addition, it covers the overall parallelization approach based on four phases, i.e., decomposition, assignment, orchestration and mapping. The next section presents dependence analysis as the major theoretical basis for parallelization. It introduces program transformations and discusses their profitability and safety based on data dependence analysis. The second major programming interface in the module is OpenMP for shared memory systems. This section covers most of the language concepts as well as proposed extensions. In the last part, the module presents novel programming interfaces, such as PGAS languages, threading building blocks, CUDA, OpenCL, and OpenACC. IN2147: Parallel Programming | Parallel Programming",
    "learning_outcomes": "At the end of the module students are able to create parallel programs in MPI and OpenMP. They understand the performance aspects of different parallelization strategies and can evaluate those parallelization strategies in the context of applications. They are able to apply data dependence analysis and program transformations. They can analyze and tune the performance of parallel applications.",
    "teaching_methods": "The different parallel programming models and parallelization techniques are introduced in the lecture. Voluntary short student presentations demonstrate the techniques in application areas. Within a central exercise session, assignments are presented and discussed. The students solve the assignments and submit the solutions which are checked for correctness. In the assigments the students apply the learned concepts to larger example programs.",
    "media": "Slides",
    "literature": "- MPI: A Message-Passing Interface Standard (Language Standard)\n- OpenMP: Open Application Program Interface (Language Standard)\n- R. Allen, K. Kennedy: Optimizing Compilers for Modern Architectures, Morgan Kaufmann\n- David E. Culler et.al.: Parallel Computer Architecture: A Hardware / Software Approach, Morgan\nKaufmann",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nParallele Programmierung (IN2147) (Vorlesung, 2 SWS)\nSchulz M ( Elis B, Herr D, Huber D )\nÜbungen zu Parallele Programmierung (IN2147) (Übung, 2 SWS)\nSchulz M [L], Elis B, Herr D"
  },
  {
    "module_id": "IN2178",
    "title": "Security Engineering",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "75-minütige Klausur, keine Hilfsmittel erlaubt",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN2209 IT Sicherheit",
    "content": "Eine sichere IT-Anwendung erfordert sowohl die Anwesenheit erwünschter Sicherheitsfunktionalität (Beispiel: Zugriffskontrolle), als auch die Abwesenheit unerwünschter Sicherheitsmängel (Beispiel: Verarbeitung ungeprüfter Benutzereingaben). Wir besprechen grundlegende Begriffe (Beispiel: Security versus Safety), sowie Sicherheitsziele und sichere Designprinzipien (Beispiel: Least Privilege). Wir lernen den Entstehungsprozess sicherheitskritischer Anwendungen kennen. Schwerpunkte bilden Systemanalyse, Bedrohungs- und Risikoanalyse, Ableitung der Sicherheitsanforderungen, und Empfehlung von möglichen Sicherheitsmaßnahmen, auch unter Berücksichtigung von wirtschaftlichen Aspekten. Wir lernen, wie Sicherheitsrichtlinien definiert werden und wie sie sich in einer Sicherheitsarchitektur im Rahmen der Gesamtsystemarchitektur widerspiegeln. Wir betrachten exemplarisch grundlegende Sicherheitsmechanismen (Beispiel: PKI). Wir adressieren Methoden zur Validierung und Bewertung sicherer Anwendungen (Beispiel: Common Criteria) und beschäftigen uns mit Konzepten zum IT-Sicherheitsmanagement (Beispiel: ISO 2700x) und zum sicheren Betrieb von Anwendungen. Ein weiterer Schwerpunkt ist die Entwicklung sicherer Software. Wir sprechen die grundlegenden Angriffs-Vektoren von Hackern, Crackern und Schadsoftware-Autoren an. Wir erfahren, wie unsichere Programmierung IN2178: Security Engineering | Security Engineering Verwundbarkeiten eröffnet (Beispiel: Cross-Site-Scripting). Wir lernen, wie man systematisch nach solchen Schwachstellen sucht. Wir untersuchen den professionellen Umgang mit Sicherheitsvorfällen, und die Arbeit von \"Computer Emergency Response Teams\" (CERTs). Wir adressieren Prinzipien und Richtlinien sicheren Software-Entwurfs und sicherer Programmierung, sowie entsprechende Verifikationsmethoden. Wir betrachten exemplarisch den \"Security Development Cycle\" von Microsoft, sowie Modelle zur Bestimmung der Güte eines sicheren Software-Entwicklungsprozesses und zu seiner Verbesserung (Beispiel: SSE-CMM).",
    "learning_outcomes": "Nach der Teilnahme an dem Modul sind die Studierenden in der Lage, Prozesse und Techniken für Analyse, Design, Evaluierung und Betrieb sicherer IT-Anwendungen, sowie Design Umsetzung, und Verifikation sicherer Software zu verstehen und anzuwenden. Damit werden die Studierenden befähigt, die IT-Sicherheit von Anwendungen zu analysieren und zu bewerten, sowie angemessene IT-Sicherheitslösungen systematisch zu entwickeln und darzustellen.",
    "teaching_methods": "Kombination von Vorlesung, Fallstudien (teilweise in Gruppenarbeit), Übungen und Hausaufgaben zum Selbststudium. Die Studierenden werden zum Studium der Literatur, der inhaltlichen Auseinandersetzung mit den Themen und diesbesüglichen aktuellen Nachrichten angeregt. Durch die Bearbeitung von Fallstudien werden die in der Vorlesung vermittelten theoretischen Grundlagen an Hand von praktischen Aufgabenstellungen vertieft.",
    "media": "Vortrag, elektronische Folien, Tafelarbeit",
    "literature": "- Claudia Eckert: IT-Sicherheit, Oldenbourg\n- Ross Anderson: Security Engineering, Wiley & Sons\n- Jack Koziol et.al.: The Shellcoder's Handbook, Wiley & Sons\n- Michael Howard et.al.: The Security Development Lifecycle, Microsoft Press",
    "lv_sws_lecturer": "Pretschner, Alexander; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSecurity Engineering (IN2178) (Vorlesung mit integrierten Übungen, 4 SWS)\nPretschner A [L], Kolb N, Pretschner A"
  },
  {
    "module_id": "IN2189",
    "title": "Computer Architecture and Networks",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The exam takes the form of written exam of 60 minutes. Questions allow to assess the knowledge of the fundamental concepts of computer architecture. Questions describing scenarios for the interaction of software with basic architectural features assess students' ability to analyze architectural components and to apply the obtained knowledge with regard to computational science and engineering specific software.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "- Foundations: Binary numbers.\n- Components of a computer system.\n- Microprocessors.\n- Multi- and Manycore Processors.\n- High Performance Computers.\n- High Speed Interconnects.",
    "learning_outcomes": "Students understand what is inside a computer and how it works. They know the most important components inside a microprocessor (e.g. pipeline, functional units, vector units, caches and their structures, memory controller), and are able to analyze the interaction with the various components in the system. They are able to characterize the various levels of parallelism (instruction level parallelism, data parallelism across vector units, shared memory level parallelism inside a compute IN2189: Computer Architecture and Networks | Computer Architecture and Networks node, distributed memory parallelism across multiple nodes connected via networks), and capture how it can be exploited in code.",
    "teaching_methods": "This module comprises lectures and accompanying exercises. The contents of the lectures will be taught by talks and presentations. Students will be encouraged to study literature and to get involved with the topics in depth. In the exercises, concrete problems will be solved - partially in teamwork - and selected examples will be discussed.",
    "media": "Slides, whiteboard, exercise sheets, excercises, presentation",
    "literature": "- Hennessy/Patterson: Computer Architecture - A Quantitative Approach.\n- Stallings: Computer Architecture and Organization.\n- Intel Manuals\n- AMD Manuals",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2190",
    "title": "Programming of Supercomputers",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Type of Assessment: exercises Students submit code according to the exercise sheets. By this code the students show their skills in implementing programs for supercomputers using MPI and OpenMP. Additionally students submit a short report on the implementation and the results obtained. This examines the optimization skills and that students are able to manage the different environments of a supercomputer.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "IN2189 Computer Architecture and Networks, IN2147 Parallel Programming",
    "content": "During the course the concepts learned in Parallel Programming (IN2147) are trained and extended. The students work on realistic code examples, parallelize and tune them with MPI and OpenMP. They work on the large scale parallel systems at LRZ and get acquainted with interactive and batch processing on a production system.",
    "learning_outcomes": "The students can design, implement, and optimize production programs for supercomputers. They are able to apply advanced concepts of OpenMP and MPI. They understand the difference of interactive and batch computing on production parallel systems and can manage both environments. IN2190: Programming of Supercomputers | Programming of Supercomputers",
    "teaching_methods": "This module comprises a practical course. The theoretical contents of the module will be taught by talks and presentations of the supervisors. 4 to 6 problems are posed as homework assignments. In these assignments students have to parallelize, debug, and/or tune given codes. The students work on the assignments individually and get, if necessary, advice by the supervisors during the computer lab session. The participants submit their solution and get feedback. A short discussion takes place after an assignment is submitted and corrected. The supervisors and the students discuss on the implementation and the optimization steps.",
    "media": "The assignments are given on individual sheets. In the plenary meetings background material is\npresented with slides. Live demonstrations are also given.",
    "literature": "- MPI: A Message-Passing Interface Standard (Language Standard)\n- OpenMP: Open Application Program Interface (Language Standard)",
    "lv_sws_lecturer": "Gerndt, Hans Michael; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2194",
    "title": "Peer-to-Peer-Systems and Security",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Students will be evaluated based on their project in which they design and implement components of a peer-to-peer protocol or application. The outcome of the project allows to assess the competences of a student of understanding and explaining goals and properties of peer-to-peer systems, to utilize selected mechanisms and protocols of peer-to-peer networks in order to design system components with specific properties, and to implement such components. The project will be evaluated based on the implementation and tests (70%), the design and implementation of the P2P protocol (20%) and the different reports (10%).",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0010 Introduction to Computer Networking and Distributed Systems, Knowledge in computer\nnetworks and the ability to program in C or Java are expected.",
    "content": "The course covers the following topics:\n- P2P applications, advantages and disadvantages of P2P systems\n- common problems and operations in P2P systems\n- routing in structured and unstructured overlay networks, in particular distributed hash tables\n- network address translation and traversal\n- decentralized network size estimation\n- reputation systems\n- common attacks on P2P protocols and defenses against them\n- anonymity, protocols to create anonymity and attacks on anonymity\nIN2194: Peer-to-Peer-Systems and Security | Peer-to-Peer-Systems and Security The various protocols are described in theory and practical implementations of those ideas are discussed (in particular Freenet, Bittorrent, Tor, JAP, GNUnet, I2P and Gnutella). The course will also include a practical component focusing on the design and implementation of a new P2P protocol or application with design choices being discussed in class.",
    "learning_outcomes": "At the end of the module the students can describe the goals and properties of peer-to-peer systems. They can recite the internals of selected systems. They can utilize the fundamental mechanisms and protocols of peer-to-peer networks, in particular for search of data and managing membership. They can explain security goals of such networks and discuss concepts to provide security services. They can assess various mechanisms to provide anonymity and can compare selected anonymity systems. Finally, they are able to apply this theoretical knowledge into the design and implementation of new protocols and applications, can explain their new design, predict its behavior and critially analyze its weaknesses.",
    "teaching_methods": "Lecture for content transfer with accompanying weekly tutorial exercises, in which tasks are treated, as well as programming tasks for computer-aided deepening.",
    "media": "Slides, Whiteboard, Exercises",
    "literature": "- Shen, Xuemin, et al., eds. Handbook of Peer-to-Peer Networking. Vol. 34. Springer Science &\nBusiness Media, 2010.\n- Maymounkov, Petar, and David Mazieres. \"Kademlia: A Peer-to-Peer Information System based\non the XOR Metric.\" International Workshop on Peer-to-Peer Systems, 2002.\n- Chaum, David L. \"Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms.\"\nCommunications of the ACM 24.2 (1981): 84-90.\n- Syverson, Paul, Roger Dingledine, and Nick Mathewson. \"Tor: The Second Generation Onion\nRouter.\" Usenix Security. Berkeley, CA: USENIX Association, 2004.",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPeer-to-Peer-Systeme und Sicherheit (IN2194) (Vorlesung, 3 SWS)\nCarle G [L], Carle G, Glas K, Steger L, Rezabek F, von Seck R\nPeer-to-Peer-Systeme und Sicherheit (IN2194) (Projekt, 2 SWS)\nCarle G [L], Glas K, Steger L, Rezabek F, von Seck R\nIN2194: Peer-to-Peer-Systems and Security | Peer-to-Peer-Systems and Security"
  },
  {
    "module_id": "IN2222",
    "title": "Cognitive Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfung wird in schriftlicher Form abgehalten. Die Prüfungsdauer beträgt 75 Minuten. Die Fragen ermöglichen die Bewertung der Beherrschung grundlegender Konzepte der Perzeption- Kognition-Aktion-Regelschleife sowohl in biologischen als auch in technischen kognitiven Systemen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "",
    "content": "Grundbegriffe (Perzeption - Kognition - Handlung), Maschinelle Umsetzung von Fertigkeiten (Sensoren, Algorithmen, Programmierung von Verhaltensmustern), Beispiele für ausgeführte Systeme anhand von Systemen, die an TUM vorhanden sind.",
    "learning_outcomes": "Nach erfolgreichem Absolvieren des Moduls verstehen die Studierenden wesentliche Prinzipien der menschlichen Kognition und die Möglichkeiten der Übertragung dieser Fähigkeiten auf technische Systeme. Sie sind in der Lage, mathematische und algorithmische Methoden zum Erreichen kognitiver Eigenschaften in technischen Systemen, insbesondere im Bereich der Robotik, anzuwenden. Dazu gehören Architekturen für kognitive Systeme, Wissensrepräsentation und Schlussfolgern, Umgang mit unsicherem Wissen, Perzeption, Planung, Handlungsausführung.",
    "teaching_methods": "Grundlegende Begriffe und Konzepte des Fachgebiets werden in der Vorlesung mit Präsentationsfolien eingeführt und anhand von Beispielen diskutiert. In der Übung wird das IN2222: Cognitive Systems | Cognitive Systems erworbene Wissen beim Studium und der inhaltlichen Diskussion von Konferenzbeiträgen und Fachartikeln vertieft. Zudem werden relevante Werkzeuge für die Implementierung der vorgestellten Konzepte interaktiv vorgestellt und zur Bearbeitung typischer Aufgabenstellungen angewendet.",
    "media": "Präsentationsfolien, Tafel, Programmierexperimente, Animationen",
    "literature": "- VERNON, David. Artificial cognitive systems: A primer. MIT Press, 2014.\n- WILSON, Robert Andrew; KEIL, Frank C. (Hg.). The MIT encyclopedia of the cognitive sciences.\nMIT press, 2001.\n- GERSTNER, Wulfram; KISTLER, Werner M. Spiking neuron models: Single neurons,\npopulations, plasticity. Cambridge University Press, 2002.",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nKognitive Systeme (IN2222) (Vorlesung mit integrierten Übungen, 4 SWS)\nKnoll A [L], Bing Z, Knoll A, Purschke N, Reeb N"
  },
  {
    "module_id": "IN2228",
    "title": "Computer Vision II: Multiple View Geometry",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "The exam takes the form of a 120 minutes written test. In the written exam students should prove that they understood the reconstruction of 3D geometry and camera motion from multiple images. The questions will focus on the key concepts which have been discussed during the lecture and the tutorials. Mathematical proofs of the central concepts and questions about the implementation in Matlab assess acquaintance with the concepts in multiple view geometry.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "MA0901 Linear Algebra for Informatics\nMA0902 Analysis for Informatics",
    "content": "The module is focused on the mathematical aspects of multiple view geometry. The central challenge addressed in this class is the reconstruction of 3D geometry and camera motion from multiple images. To this end, the students will get a brief review of the main concepts of linear algebra (including matrix rank, SVD, various matrix groups). Students will learn about camera motion and perspective projection, camera calibration, epipolar geometry, the epipolar constraint, the 8-point algorithm, multiview matrices, rank constraints, bundle adjustment. Finally they will learn about the reconstruction of dense geometry. The key concepts will be implemented in Matlab to provide hands-on experience. IN2228: Computer Vision II: Multiple View Geometry | Computer Vision II: Multiple View Geometry",
    "learning_outcomes": "Upon successful completion of the module, students understand the mathematics of image formation and are able to recover camera motion and 3D geometry from images. Moreover, the students are able to implement the basic concepts in Matlab.",
    "teaching_methods": "The main concepts will be presented in the lecture. During the tutorial, related exercises and discussions will deepen the understanding. Besides theoretical exercises, there will be programming exercises.",
    "media": "Tutor presentation, interactive problem solving, discussion",
    "literature": "An Invitation to 3D Vision (Y. Ma, S. Soatto, J. Kosecka, S. Sastry)\nMultiple View Geometry in Computer Vision (R. Hartley, A. Zissermann)",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputer Vision II: Multiple View Geometry (IN2228) (Vorlesung mit integrierten Übungen, 6 SWS)\nCremers D [L], Brahimi M, Cremers D, Hartwig R"
  },
  {
    "module_id": "IN2236",
    "title": "Virtuelle Physik: Moderne Modellierungstechnik und ihr Einsatz in der Computersimulation",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 75,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen Klausur erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit ein Problem erkannt wird und Wege zu einer Lösung gefunden werden können durch die gleichungsbasierte Simulation physikalischer Systeme.",
    "repetition": "",
    "recommended_prerequisites": "Grundlagen Algebra, Grundlagen Numerik, Programmierkenntnisse, Grundlagen Physik\n(Gymnasialstoff)",
    "content": "Die Entwicklung von Computerspielen, die Erstellung von Fahrzeugsimulatoren, die Regelung von Roboteranlagen oder die Optimierung von Flugzeugsystemen: All diese Anwendungen verlangen nach möglichst korrekten und effizienten Modellen ihrer physikalischen Prozesse. Diese Vorlesung bietet eine Einführung in die moderne Modellierungstechnik mit Hilfe objektorientierter, deklarativer Sprachen wie Modelica und erklärt deren Anwendung in der Computersimulation. In der Vorlesung werden die physikalischen Grundlagen erklärt und dargelegt wie sich damit elektrische und mechanische Systeme modellieren lassen. Es wird der Aufbau von Modelbibliotheken erläutert und verschiedene Anwendungen in der Mechatronik demonstriert. Weitere Bereiche der Physik werden kurz angeschnitten. IN2236: Virtuelle Physik: Moderne Modellierungstechnik und ihr Einsatz in der Computersimulation | Virtual Physics: Using Modern Modeling Methodologies for Computer Simulation Zusätzlich widmet sich ein begleitender Teil der Vorlesung den Methoden zur Computersimulation und erklärt die wichtigsten Algorithmen zur Modelverarbeitung sowie die wichtigsten Rechenverfahren zur Zeitintegration. In den Übungen zur Vorlesung, können die Teilnehmer eine eigene mechanische Modelbibliothek erstellen sowie eine Echtzeitsimulation eines Elektrofahrzeugs entwickeln. Vorkenntnisse in der Physik, die über den Gymnasialstoff hinausgehen werden nicht erwartet, jedoch ist reges Interesse von Vorteil. Alle wichtigen Grundlagen werden in der Vorlesung erklärt. Sprache: Die Vorlesungsunterlagen werden in Englisch zur Verfügung gestellt, die Unterrichtssprache (D/E) richtet sich nach dem Wunsch der Hörer und wird in der ersten Vorlesungsstunde festgelegt.",
    "learning_outcomes": "Nach Teilnahme der Veranstaltung besitzen die Studenten die Fähigkeit zur gleichungsbasierten Modellierung von physikalischen Systemen. Sie erwerben ein Verständnis für die dazugehörigen Computersprachen und Compilertechnik und können für die Simulation das passende Integrationsverfahren auswählen.",
    "teaching_methods": "Das Modul besteht aus Vorlesung, Übung und Aufgaben zum Selbststudium. Die Inhalte der Vorlesung werden im Vortrag und durch Präsentation vermittelt. Studierende werden durch kleine, im Laufe der Vorträge gestellte Aufgaben, sowie durch die Lösung von Übungsblättern zur inhaltlichen Auseinandersetzung mit den Themen angeregt. Die Lösung der Übungsaufgaben wird in der Übung besprochen.",
    "media": "Folien (Skripttauglich), Wandtafel, Beispielmodelle oder Programme",
    "literature": "Peter Fritzson (2011):Introduction to Modelica and Simulation of Technical and Physical Systems\nwith Modelica, Wiley IEEE\nPeter Fritzson (2003):Principles of Object?Oriented Modeling and Simulation with Modelica 2.1,\nWiley IEEE\nMichael Tiller (2000):Introduction to Physical Modeling with Modelica, Springer",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nVirtuelle Physik: Moderne Modellierungstechnik und ihr Einsatz in der Computersimulation\n(IN2236) (Vorlesung mit integrierten Übungen, 3 SWS)\nZimmer D\nIN2236: Virtuelle Physik: Moderne Modellierungstechnik und ihr Einsatz in der Computersimulation | Virtual Physics:\nUsing Modern Modeling Methodologies for Computer Simulation"
  },
  {
    "module_id": "IN2238",
    "title": "Analysis of Three-Dimensional Shapes",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "At the end of the semester the understanding of the covered topics will be evaluated in an oral exam of 30 minutes. Content from the lecture as well as from the exercises will be part of the exam. Questions allow to assess acquaintance with the foundations of Differential geometry and discretizations of continuous objects and operators. Small programming tasks assess the ability to conceive appropriate algorithmic solutions to analyze and compare three-dimensional shapes.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "The requirements for the class are knowledge in basic mathematics, in particular multivariate\nanalysis and linear algebra.",
    "content": "It is a classical problem in Machine Vision to represent, analyze and compare three-dimensional shapes. In the last years this field has known a fast development leading to a number of very powerful algorithms with a solid mathematical foundation. In this course we will present some of these, discussing both, the mathematics involved and the practical issues for the implementation. Topics we plan to cover include:\n- Foundations of Differential Geometry of surfaces (tangent spaces, shape operator, metric,\ngeodesics and their discrete versions)\n- Detection of intrinsic symmetries\n- Matching pairs or a collection of shapes\n- The Gromov-Hausdorff distance and its variants\n- Spectral methods (i.e. Laplace-Beltrami operators and their eigenspaces)\nIN2238: Analysis of Three-Dimensional Shapes | Analysis of Three-Dimensional Shapes\n- Conformal geometry applied to shape analysis\n- Shape matching based on continuum mechanics\n- Pointwise feature descriptors\n- Machine learning applied to 3D shape analysis",
    "learning_outcomes": "At the end of the module, students are familiar with continuous and discrete representations of three-dimensional shapes. Participants understand methods to analyze and compare three- dimensional shapes given in different representations and are able to implement these methods.",
    "teaching_methods": "Lecture, exercise course (theory and programming)",
    "media": "",
    "literature": "Differential Geometry of Surfaces:\n- Do Carmo: Differential Geometry of Curves and Surfaces, Prentice-Hall 1976\n- Kühnel: Differentialgeometrie, Kurven – Flächen – Mannigfaltikeiten\nGromov-Hausdorff Distance:\n- Memoli, Sapiro: A theoretical and computational framework for the isometry invariant recognition\nof point cloud data, Foundations of Computational Mathematics, 2005\n- Bronstein, Bronstein, Kimmel: Numerical Geometry of Non-Rigid Shapes, Srpinger 2008\nSpectral Methods:\n- Reuter et al.: Laplace-Beltrami spectra as \"Shape-DNA\" of surfaces and solids, Computer-Aided\nDesign 2006\nConformal Geometry:\n- Gu, Vemuri: Matching 3D Shapes Using 2D Conformal Representations. MICCAI 2004\n- Lipman, Daubechies: Surface Comparison With Mass Transportation, Technical report 2009,\navailable on arxiv.org\nContinuum Mechanics:\n- Rumpf, Wirth: Variational methods in shape analysis, In: Handbook of Mathematical Methods in\nImaging, 2010",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIN2238: Analysis of Three-Dimensional Shapes | Analysis of Three-Dimensional Shapes"
  },
  {
    "module_id": "IN2245",
    "title": "Kombinatorische Optimierung in Computer Vision",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "Am Ende des Semesters wird das Verständnis der behandelten Themen durch eine 20 minütige mündliche Prüfung abgefragt. In der Prüfung wird der gesamte Stoff aus Vorlesung und Übung abgefragt. Eine regelmäßige Abgabe von korrekten Lösungen der Übungsaufgaben führt zu einer Aufwertung von 0.3 bei der Prüfung.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Als Voraussetzungen wird Grundwissen der Mathematik (insbesondere multivariate Analysis und\nlineare Algebra) sowie Grundwissen der Informatik (insbesondere dynamische Programmierung\nund einfache Datenstrukturen) empfohlen.",
    "content": "Viele Probleme der Computer Vision lassen sich als kombinatorisches Optimierungsproblem darstellen. Üblicherweise entstehen solche Probleme bei Markov Random Field (MRF)-Modellen, die es uns in eleganter Weise ermöglichen, verschiedene Multilabel-Problemen des Bildverstehens zu modellieren. Hierzu gehören unter Anderem die Bildsegmentierung, menschliche Posenschätzung, die Berechnung des Optischen Flusses sowie das Shape Matching. Einige „gutartigen“ Probleme können in polynomieller Zeit gelöst werden, während andere wiederum NP-schwer sind. Wir werden uns auf der einen Seite mit effizienten Verfahren beschäftigen, die diese gutartigen Probleme global optimal lösen. Auf der anderen Seite werden wir die NP- schweren Probleme approximativ lösen. Theoretisch beschäftigen wir uns mit: IN2245: Kombinatorische Optimierung in Computer Vision | Combinatorial Optimization in Computer Vision\n- MAP inference für MRFs und kombinatorische Optimierungsproblemen\n- Polynomzeitalgorithmen für quadratische submodulare Probleme\n- Approximationsansätze wie alpha-expansion, belief propagation sowie die\n- die submodular-supermodulare Prozedur und fast trust region-Ansätze.\nPraktische Ansätze beinhalten:\n- Binäre Bildsegmentierung (auch inkl. Vorwissen)\n- Multiobjekt-Segmentierung\n- Stereo-Matching\n- Berechnung des optischen Flusses",
    "learning_outcomes": "Bei erfolgreicher Modulabsolvierung haben sich die Studenten mit der MRF-Modellierung und der Pseudoboolschen Optimierung vertraut gemacht und sie auf verschiedene Probleme der Computer Vision angewandt.",
    "teaching_methods": "Vorlesung, Übungen (Theorie & Programmierung)",
    "media": "",
    "literature": "Boros and Hammer, Pseudo-Boolean Optimization, Discrete and Applied Mathematics 2002\nNowozin, Lampert: \"Structured Learning and Prediction in Computer Vision\", Foundations and\nTrends in Computer Graphics and Vision, 2011\nBlake, Kohli and Rother: \"Markov Random Fields for Vision and Image Processing\", MIT Press,\n2011",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2246",
    "title": "Computer Vision I: Variational Methods",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "The exam takes the form of a 120 minutes written test. In the written exam students should prove that they understood the basic concepts of variational methods. The questions will focus on the key concepts which have been discussed during the lecture and the tutorials. Mathematical proofs of the central concepts and questions about the implementation in Matlab assess acquaintance with the concepts in variational image processing.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "MA0901 Linear Algebra for Informatics\nMA0902 Analysis for Informatics",
    "content": "Variational Methods are among the most classical techniques for optimization of cost functions in higher dimension. Many challenges in Computer Vision and in other domains of research can be formulated as variational methods. Exemples include denoising, deblurring, image segmentation, tracking, optical flow estimation, depth estimation from stereo images or 3D reconstruction from multiple views. In this class, the basic concepts of variational methods will be introduced :\n- The Euler-Lagrange calculus and partial differential equations\n- Formulation of computer vision and image analysis challenges as variational problems\n- Efficient solution of variational problems\n- Discussion of convex formulations and convex relaxations to compute optimal or near-optimal\nsolutions in the variational setting IN2246: Computer Vision I: Variational Methods | Computer Vision I: Variational Methods The key concepts will be implemented in Matlab to provide hands-on experience.",
    "learning_outcomes": "Upon successful completion of the module the participants understand the basic concepts of variational methods on a fundamental, scientific and practical level. They are able to efficiently solve variational problems and to implement the solution with Matlab.",
    "teaching_methods": "The main concepts will be presented in the lecture. During the tutorial, related exercises and discussions will deepen the understanding. Besides theoretical exercises, there will be programming exercises.",
    "media": "Tutor presentation, interactive problem solving, discussion",
    "literature": "Mathematical Image Processing (Bredies, Lorenz)",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2259",
    "title": "Distributed Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The module examination consists of a 75-minute, closed-book exam. The exam verifies to what extend the students are able to convey and recite the core building blocks, concepts, algorithms, and protocols for distributed system design. Theoretical and knowledge-oriented questions check the familiarity with principles and concepts; Practical tasks check the ability to apply selected approaches, algorithms, protocols, and programming techniques on the paper.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Algorithms and data structures (searching, sorting, hash tables, lists, trees, graphs, basic\nnotions of complexity (O-notation)), basic programing skills and tools (Java, C/C++, concurrency,\nmultithreading, synchronization, code versioning and concurrent development (e.g., CVS or SVN)),\nand operating systems concepts, computer network basics, and database systems basics.",
    "content": "The module covers the principles and basic building blocks of large-scale distributed systems. This includes algorithms and protocols for the core challenges in building distributed systems. The module starts with a review of basic networking mechanisms and an introduction of protocols for synchronous and asynchronous process communication in networked environments. In this context, different communication architectures and paradigms are analyzed. Next, various aspects of time in distributed systems are discussed and concepts, as well as algorithms, for logical time (Lamport timestamps and Vector timestamps), and synchronization of physical clocks are presented. These concepts are important to introduce advanced communication protocols such as totally-ordered multicast or other process coordination mechanisms. The module discusses the challenges in coordination and presents algorithms for mutual exclusion, leader election, and consensus. A major part of the module focuses on the PAXOS algorithm and its variations for IN2259: Distributed Systems | Distributed Systems distributed consensus. Another important part of the module covers fault-tolerance and service availability in distributed systems. Therefore, several consistency models are analyzed, and techniques and algorithms for replication, such as active replication, primary backup replication, and gossip-based replication, are presented. Besides these rather theoretical and generic challenges, the module also covers more practical aspects such as web caching with consistent hashing, distributed filesystems, and large-scale data processing with Map Reduce. Towards the end of the module, peer-to-peer systems are investigated in detail. First, structured peer-to-peer approaches like distributed hash tables (DHTs) are introduced (e.g., CHORD, CAN, PASTRY); then peer-to-peer applications are presented and discussed. All contents are supported by examples and case studies.",
    "learning_outcomes": "At the end of the module, students know the properties of common building blocks applicable to the design of distributed systems (e.g., for communication, coordination, fault-tolerance, and replication). They are able to understand the complexities involved in developing a distributed system and can analyze common failure sources. Students understand the basics of distributed filesystems, can evaluate peer-to-peer systems, and apply MapReduce-style processing on large data collections. In general students are able to evaluate common design decisions for building a distributed system and apply these principle characteristics to develop a distributed application. This involves the application and development of communication systems, coordination algorithms and replication mechanisms.",
    "teaching_methods": "The module is organized as a combination of lectures with PowerPoint slides and blackboard notes, invited talks, and small group tutorials to discuss homework assignments. The lecture motivates challenges in distributed system design by examples and presents theory, algorithms, and protocols to solve these challenges. The theoretical concepts and algorithms are applied and practiced individually by students through homework assignments. Assignments are discussed in a weekly tutorial to strengthen the learning outcome.",
    "media": "- powerpoint slides\n- blackboard\n- assignments\n- E-learning platform (Moodle)",
    "literature": "Selected chapters from the following books:\n- Distributed Systems: Principles and Paradigms. Andrew S. Tanenbaum & Maarten van Steen.\nPrentice Hall (a recent edition).\n- Distributed Systems: Concepts and Design. George Coulouris, Jean Dollimore, Tim Kindberg.\nAddison Wesley (a recent edition).\n- Selected reading material on systems, algorithms and protocols as announced in class.\nIN2259: Distributed Systems | Distributed Systems",
    "lv_sws_lecturer": "Bhatotia, Pramod; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2262",
    "title": "Online Gaming",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "In the written exam of 90 minutes students should prove to be able to identify a given problem and find solutions within limited time.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0010 Introduction to computer networking and distributed systems",
    "content": "The following topics are treated: + Overview on Online Gaming ++ Taxonomy of Online and Multiplayer Games ++ Examples for early multiplayer and network games ++ Evolution of Online Games ++ Related concepts: Telepresence, Augmented Reality, Distributed Virtual Environments + Network service properties ++ Sources of Latency, Jitter, Loss ++ Service needs of online, networked games. ++ Measuring network properties ++ Controlling network properties ++ Quality-of-Service support + Latency compensation techniques ++ Prediction ++ Time manipulation + Assessment ++ Quality-of-experience dependencies IN2262: Online Gaming | Online Gaming ++ Network disruption experiments ++ Game traffic characterization + Architectures and dimensioning ++ Server dimensioning ++ Peer-to-peer mechanisms",
    "learning_outcomes": "Participants of the course can analyze existing online games and engineer communication mechanisms of these. This includes abilities to formulate and present technical problems that need to be solved by different categories of online games, as well as the abilities to reproduce architectural components of different online games. Participants have knowledge about the communication protocols used in online games, and the impact of network service properties, in particular latency, jitter and loss, onto the quality of service from a user's perspective. Participant also know the principles behind possible design decisions of multiplayer communication systems, and can identify suitable communication mechanisms and dimensioning of their parameters for a given set of demands.",
    "teaching_methods": "Lecture, tutorial, problems for individual study",
    "media": "Lecture with digital slides, optionally lecture recordings",
    "literature": "Grenville Armitage, Mark Claypool, Philip Branch: ''Networking and Online Games: Understanding\nand Engineering\nMultiplayer Internet Games'', John Wiley & Sons Inc. 2006, ISBN: 0470018577",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2305",
    "title": "Cyber-Physical Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die schriftliche Prüfung von 90 Minuten besteht aus einem Kurzfragenteil (30 min.) und einem zweiten Teil, der mathematische Modellierung, Berechnung und Herleitung beinhaltet (60 min.). Eine Sammlung von Formeln und Tabellen, die zur Lösung der gestellten Aufgaben nötig sind, werden in der Klausur bereitgestellt. Studierende dürfen lediglich Stifte und einen Taschenrechner (nicht programmierbar) mitbringen. Der Kurzfragenteil enthält 33,3 % und der andere Teil 66,6 % der Gesamtpunktzahl. Um die Prüfung zu bestehen müssen mindestens 50 % der Gesamtpunktzahl erreicht werden.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Keine",
    "content": "Kontinuierliche Dynamik: Modellierung, gewöhnliche Differentialgleichungen, Systemeigenschaften, Lösungen linearer Differentialgleichungen, Simulation von Differentialgleichungen, Stabilitätsanalyse, Einführung in die Regelung von kontinuierlichen Systemen; Diskrete Dynamik: Modellierung (Moore/Mealy Automat, Petri Netze, Statecharts), Lösungen, temporale Logik, Einführung in Model Checking, systematischer Steuerungsentwurf; Hybride Dynamik: Modellierung (gezeitete Automaten, hybride Automaten, hybride Statecharts), Simulation hybrider Dynamiken, Stabilitätsanalyse, Einführung in die Erreichbarkeitsanalyse, Supervisory Control; IN2305: Cyber-Physical Systems | Cyber-Physical Systems [CPS] Netzwerke von Cyber-Physical Systems; typische Hardware (Sensoren, Aktuatoren, Rechner)",
    "learning_outcomes": "In vielen modernen Systemen sind berechnende Elemente eng mit physischen Objekten verknüpft, für die sich die Bezeichnung \"Cyber-Physische Systeme\" in den letzten Jahren durchgesetzt hat. Beispiele sind selbstfahrende Fahrzeuge, Chirurgieroboter, Smart Grids und kollaborative Mensch- Roboter Produktionsanlagen. Nach dem Besuch der Vorlesung sind Studierende in der Lage Cyber-Physische Systeme auf einem Niveau zu modellieren, zu analysieren und zu regeln, so dass Sie sich im Selbststudium Spezialwissen aneignen können. Nach erfolgreichem Abschluss des Moduls sind Studierende in der Lage Cyber-Physische Systeme zu modellieren und haben ein tiefes Verständnis vom Zusammenspiel zwischen kontinuierlicher Dynamik, die sich aus dem physikalischen Verhalten ergibt (z.B. mechanische Systeme), und der diskreten Dynamik, die sich aus den berechnenden Elementen ergibt (z.B. diskrete Steuerungen), was zu sogenannten hybriden Dynamiken führt. Studierende erlangen das Basiswissen zum Entwurf, zur Analyse und zur Regelung von Cyber-Physischen Systemen. Sie können die wesentlichen Informationen der dynamischen Aspekte von Cyber-Physischen Systemen extrahieren, sind in der Lage mit Experten über diese zu diskutieren und können selbständig Lösungen entwickeln, die die geforderten Spezifikationen erfüllen.",
    "teaching_methods": "Das Modul besteht aus einer Vorlesung und einer begleitenden Übung. Die Inhalte der Vorlesung werden durch Präsentationen vermittelt, die während der Vorlesung durch Tafelanschrieb ergänzt werden. Studierende sollen zum Studium der Literatur und der inhaltlichen Auseinandersetzung mit den Themen angeregt werden. In den Übungen werden die vermittelten Inhalte an praktischen Beispielen vertieft.",
    "media": "Folien, Tafelanschrieb, Übungsblätter",
    "literature": "E. A. Lee and S. A. Seshia,Introduction to Embedded Systems - A Cyber-Physical Systems\nApproach, LeeSeshia.org, 2011.\nP. Marwedel, Embedded System Design: Embedded Systems Foundations of Cyber-Physical\nSystems, Springer\nA. J. Van Der Schaft, An Introduction to Hybrid Dynamical Systems, Springer",
    "lv_sws_lecturer": "Althoff, Matthias; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nCyber-Physical Systems (IN2305) (Vorlesung mit integrierten Übungen, 5 SWS)\nIN2305: Cyber-Physical Systems | Cyber-Physical Systems [CPS]\nAlthoff M, Finkeldei F, Markgraf H, Tang C"
  },
  {
    "module_id": "IN2308",
    "title": "Programmierung und Regelung für Mensch-Roboterinteraktion",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Prüfungsart: Projektarbeit, mündlich Die Prüfungsleistung wird in Form einer Projektarbeit erbracht. In dieser soll nachgewiesen werden, dass die wesentlichen Konzepte aus dem theoretischen Vorlesungsteil verstanden und mittels Hilfsmaterial auf typische praktische Problemstellungen angewandt werden können. Die Bewertung der Projektarbeit setzt sich zusammen aus:\n- Bewertung des schriftlichen Teils des Simulations- und Regelungs-Tutorials\n- Bewertung der Simulationsergebnisse\n- Bewertung der Programmierergebnisse am Roboter\n- Bewertung der Endpräsentation und der Enddiskussion\n- Bewertung der Mitarbeit während des gesamten Projektes",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Introduction to robotics, IN2067 Robotics",
    "content": "Die Vorlesung behandelt Aspekte der robotischen Manipulation und Mensch-Roboterinteraktion von den theoretischen Grundlagen über Implementierung in Simulationsmodellen bis hin zur Hands-on Erprobung auf dem KUKA-DLR Leichtbauroboter. Themen im Einzelnen:\n- Robotermodelle und Parameteridentifikation\n- Positionsregelung\n- Drehmomentregelung\n- Kartesischen Impedanzregelung\nIN2308: Programmierung und Regelung für Mensch-Roboterinteraktion | Robot Programming and Control for Human Interaction\n- Kollisionsdetektion\n- Reaktive Bahngenerierung\n- Zustandsautomaten zur Aufgabenprogrammierung",
    "learning_outcomes": "Am Ende der Vorlesung sollen die Studierenden nicht nur theoretische Kenntnisse, sondern auch erste praktische Erfahrungen im Umgang mit nachgiebigen, drehmomentgeregelten Robotersystemen und deren Programmierung haben.",
    "teaching_methods": "Vorlesung, betreute Teamarbeit, individuelle Simulationsarbeit. Dabei wird ein wesentlicher Teil der Vorlesungseinheiten im Blockformat zur Simulation und zur praktischen Implementierung verwendet. Die Vorlesung wird eine Exkursion auf die AUTOMATICA-Messe in München mit Besuch des DLR-Standes sowie weiterer Robotik-Demonstrationen beinhalten.",
    "media": "Folien, Tafelanschrieb, Tutorial-Skript, Simulink-Bibliotheken, Java-Bibliotheken, Webinhalte",
    "literature": "C. Ott: “Cartesian Impedance Control of Redundant and Flexible-Joint Robots”. Springer Tracts in\nAdvanced Robotics, Vol. 49, 2008, ISBN 978-3-540-69253-9\nAlbu-Schäffer, C. Ott and G. Hirzinger: “A Unified Passivity Based Control Framework for Position,\nTorque and Impedance Control of Flexible Joint Robots”. Int. Journal of Robotics Research, Vol.\n26, No. 1, pp. 23 – 39",
    "lv_sws_lecturer": "Albu-Schäffer, Alin Olimpiu; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProgrammierung und Regelung für Mensch-Roboterinteraktion (IN2308) (Vorlesung, 2 SWS)\nAlbu-Schäffer A\nÜbung Programmierung und Regelung für Mensch-Roboterinteraktion (IN2308) (Übung, 2 SWS)\nAlbu-Schäffer A [L], Sachtler A"
  },
  {
    "module_id": "IN2310",
    "title": "Parallel Program Engineering",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "In the written 75 minutes or 20 minutes oral exam, students should prove their knowledge of concepts, techniques and tools. They should show their ability to apply the knowledge to outline solutions for tasks in the software development process of parallel applications. The examination will cover the content of the lectures. The answers will require own formulations.",
    "repetition": "",
    "recommended_prerequisites": "IN2076 Advanced Computer Architecture, IN2147 Parallel Programming",
    "content": "This module starts with a short introduction to parallel programming, programming models and languages, applications, and the parallelization approach. It presents the software development process focusing on aspects and requirements for parallel and high performance applications. Development environments supporting the orchestration of parallel programs are introduced. The module then concentrates on concepts and tools for engineering parallel programs focusing on: e.g. omain decomposition, Debugging, Performance analysis, Performance modeling and prediction, Application tuning, Performance engineering workflows, and tool development infrastructures.",
    "learning_outcomes": "The participants will be able to apply a structured approach in the development of parallel applications. They are able to assess and apply existing tools for a given problem. They understand tool development infrastructures and are able to design and implement own solutions to issues in the development process of parallel software. IN2310: Parallel Program Engineering | Parallel Program Engineering",
    "teaching_methods": "This module comprises lectures and accompanying project work. The lectures will be based on presentations. Interactive brainstorming elements will be integrated. Students will be encouraged to study literature based on the given books and available research papers. Participants will apply the concepts learned based on real tools in multiple small projects executed in teamwork in the exercises.",
    "media": "Slides, whiteboard, mind manager, project specifications",
    "literature": "+ Andrew Tanenbaum: Structure Computer Organization, 2013\n+ David E. Culler, Jasweinder Pal Singh, Anoop Gupta: Parallel Computer Architecture: A\nHardware / Software Approach, 1999\n+ David Padua (ed.): Encyclopedia of Parallel Programming, Springer, 2011\n+ Roberto Battiti and Mauro Brunato: The LION Way: Machine Learning plus Intelligent\nOptimization, 2014\n+ Matthias Müller, Michael Resch, Alexander Schulz, Wolfgang Nagel: Tools for High Performance\nComputing, Springer, Book Series (2009-2013)",
    "lv_sws_lecturer": "Gerndt, Hans Michael; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2315",
    "title": "Network Coding",
    "level": "Bachelor/Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Die schriftliche Prüfung erfolgt in Form einer 90-minütigen Klausur. Anhand von Verständnisfragen und Rechenaufgaben wird die Kenntnis und Beherrschung der im Modul vermittelten Inhalte überprüft. Praktische Inhalte sowie Socketprogrammierung werden beispielhaft durch abstrahierte Fragestellungen behandelt.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen Rechnernetze und Verteilte Systeme (IN0010), Diskrete Strukturen (IN0015), Diskrete\nWahrscheinlichkeitstheorie (IN0018), gute Programmierkenntnisse in C (oder C++)",
    "content": "Network Coding (NC) ist ein im Jahr 2000 aufgekommener Ansatz, um die durch das Min-Cut/Max- Flow Theorem vorhergesagte maximale Datenrate in einem Netzwerk auch erreichen zu können\n- eine eher theoretische Sichtweise. Vom praktischen Standpunkt aus betrachtet kann NC auch\nals Verallgemeinerung von Routing (bzw. Forwarding) gesehen werden: Üblicherweise sind von Vermittlungsknoten gesendete Pakete nur identische Kopien eines zuvor empfangenen Pakets. NC erweitert dies nun dahingehend, dass gesendete Pakete beliebige Linearkombinationen zuvor empfangener Pakete sein können. Diese Vorlesung bietet einen Einstieg in Network Coding aus theoretischer Sichtweise, welche durch praktische Aspekte und ein begleitendes Programmierprojekt ergänzt werden. Die folgenden Stichpunkte geben einen Überblick:\n- NC als Verallgemeinerung von Routing, Min-Cut/Max-Flow, Formulierung als Flussproblem\n- Paketverluste und Kanalschätzung, ARQ-Mechanismen\n- Forward Error Correction, Finite Felder\nIN2315: Network Coding | Network Coding\n- Random Linear Network Coding (RLNC)\n- Anwendungen von NC\n- Bidirektionales Coding, NC in kabellosen Netzwerken NC, in Transport- und Linklayer-Protokollen\n- Bestätigungsverfahren für NC\n- Kombination von NC auf unterschiedlichen Schichten\nDer praktische Teil des Moduls umfasst unter anderem:\n- Socketprogrammierung\n- IEEE 802.11 Raw-Sockets\n- Implementierung von RLNC Generationen und Bestätigungsverfahren\n- Fensterprotokolle",
    "learning_outcomes": "Die Teilnehmer des Moduls beherrschen Grundlagen des Network Codings in Theorie und Praxis. Durch den Projektteil des Moduls haben sie praktischen Zugang zu Random Linear Network Coding in Transportprotokollen und auf der Verbindungsschicht kabelloser Netzwerke. Darüber hinaus beherrschen die Teilnehmer Grundlagen der Socketprogrammierung.",
    "teaching_methods": "Vorlesung mit integrierten Übungen Die Vorlesung wird durch integrierte Übungen und Demonstrationen ergänzt, auf deren Basis bis zur Mitte der Veranstaltung die Teilnehmer eigenständige Projekt-/Implementierungsvorschläge erarbeiten sollen. Diese werden in der zweiten Hälfte der Veranstaltung in Gruppen von maximal zwei Studierenden bearbeitet und während der Vorlesungstermine betreut. Am Ende der Vorlesungszeit schließt sich eine Präsentationsphase an, in der die Teilnehmer ihre Projekte kurz durch Demonstration oder Präsentation vorstellen.",
    "media": "",
    "literature": "Network Coding: An Introduction, Tracey Ho und Desmond Lun\nTCP/IP illustrated, Wright & Stevens\nMust read: Linux kernel coding style (https://www.kernel.org/doc/Documentation/CodingStyle)",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNetwork Coding (IN2315) (Vorlesung mit integrierten Übungen, 5 SWS)\nCarle G [L], Günther S, Andre J, Seidlitz L, Carle G"
  },
  {
    "module_id": "IN2318",
    "title": "Autonomous Navigation for Flying Robots",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 2,
    "hours_total": 60,
    "hours_self_study": 58,
    "hours_presence": 2,
    "examination_achievements": "Die Modulprüfung besteht aus einer 60-minütigen schriftlichen, elektronischen Klausur, die an einem vom Internet getrennten Rechner stattfindet. Das Beantworten der Fragen erfordert teils das Ankreuzen von vorgegebenen Mehrfachantworten, das Ausführen von (einfachen) Berechnungen per Hand oder Taschenrechner, sowie das Lösen einer Programmieraufgabe mithilfe des interaktiven Quadrokoptersimulators in Python.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Lineare Algebra, Wahrscheinlichkeitstheorie, 3D Geometrie, Python",
    "content": "Über die letzten Jahre haben Minihelikopter und Quadrotoren enorm an Popularität gewonnen. Das Anwendungsspektrum reicht von professionellen Luftaufnahmen über visuelle Inspektion von Industrieanlagen bis hin zur automatischen 3D Rekonstruktion von Gebäuden. Jedoch bedarf es zur Steuerung eines Quadrotors eines erfahrenen Piloten und während des Flugs dessen ständige Aufmerksamkeit. Deshalb gibt es starkes Interesse nach Lösungsansätzen, die einen sicheren autonomen Flug ermöglichen. Dies setzt jedoch voraus, dass alle benötigte Sensorik und Rechenpower auf dem Quadrotor mitgeführt werden muß, der nur über eine sehr beschränkte Nutzlast verfügt, was zu starken Einschränkungen führt. Dieser Kurs führt in die Grundlagen der autonomen Navigation von Flugrobotern ein. Hierzu werden folgende Themengebiete abgedeckt:\n- 3D Geometrie,\n- probabilistische Zustandsschätzung mit Kalmanfiltern,\nIN2318: Autonomous Navigation for Flying Robots | Autonomous Navigation for Flying Robots\n- visuelle Odometrie, SLAM, 3D Mapping,\n- lineare Regelung mit PID Reglern.\nInsbesondere werden die Studierenden lernen, wie sich die Position eines Quadrotors von seinen Sensordaten schätzen läßt, und wie man geeignete Regelungssignale ableitet um den Quadrotor entlang einer Trajektorie zu navigieren. Der Kurs besteht aus einer Serie von wöchentlichen Vorlesungsvideos sowie interaktiven Übungs- und Programmieraufgaben. Für die Flugexperimente steht ein browser-basierte Quadrotor- Simulator bereit, für den kleine Python-Skripte vervollständigt werden müssen. Dieser Kurs ist sowohl für Bachelor- als auch Masterstudierende geeignet, die Informatik, Elektrotechnik oder Maschinenbau studieren. Der MOOC wurde im Sommersemester 2014 von der TUM zum ersten Mal auf EdX angeboten. Von 20.000 registrierten Teilnehmern haben damals mehr als 1.400 den Kurs erfolgreich abgeschlossen. Der MOOC basiert auf der TUM Vorlesung „Visuelle Navigation für Flugroboter“, der in den Jahren 2012 und 2013 jeweils mit dem TUM TeachInf Award für die beste Lehrveranstaltung ausgezeichnet wurde.",
    "learning_outcomes": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage:\n- Die Flugprinzipien von Quadrokoptern sowie deren Anwendungsmöglichkeiten zu erklären, sowie\neinen Quadrokopter (zumindest in Simulation) sicher zu fliegen,\n- die Lage von dreidimensionalen Körpern zu spezifizieren und mit ihnen bestimmte Berechnungen\nanzustellen (z.B. die relative Pose zu berechnen)\n- das Prinzip der Bayes’schen Zustandsschätzung zu erklären,\n- einen erweiteren Kalmanfilter (EKF) zu implementieren, anzuwenden, und für einen gegebenen\nAnwendungsfall geeignete Parameter zu finden,\n- einen PID Regler selbst zu implementieren und diesen richtig einzustellen,\n- die Grundlagen von visueller Bewegungsschätzung und Kartierung zu verstehen und\nwiederzugeben.",
    "teaching_methods": "Lehrformat: MOOC, Lernmethoden: Videovorlesung, Experimente (Simulation), Einzelarbeit (Hausaufgaben)",
    "media": "Videos, Folien, Blog, Nachrichtenforum, interaktive Übungsblätter (elektronisch), weiterführende\nLinks (z.B. Papers, Videos, Code, Webseiten)",
    "literature": "https://jsturm.de/wp/teaching/autonavx-slides/",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nIN2318: Autonomous Navigation for Flying Robots | Autonomous Navigation for Flying Robots\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2324",
    "title": "Connected Mobility Basics",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "Type of Assessment: written exam The exam takes the form of written 120 minutes test and no additional materials are allowed in the exam. The exam assesses the acquaintance with and understanding of concepts and techniques related to connected mobile services and systems. Using small problems, the exam allows to assess the ability to link and to apply this knowledge regarding the desired learning outcomes. During the semester, students will perform small theoretical and practical exercises that allow them to assess their learning progress and to prepare for the exam.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Recommended requirements are basics in computer networks and distributed systems (IN0010 or\nequivalent knowledge) as well as command of the Java programming language.",
    "content": "The module IN2324 offers a broad introduction, including the following topics:\n- Introduction to mobile systems\n- Mobile systems by example\n- Mobility: models and simulations\n- Wireless networking technologies\n- Architectures and protocols for mobile networks\n- Architectures for mobile services and systems\n- Mobile measurements\n- Security and privacy\nIN2324: Connected Mobility Basics | Connected Mobility Basics",
    "learning_outcomes": "After successful completion of this module, students will remember the basic elements that constitute connected mobile systems and understand the (technical) issues relevant to mobile system and service design and their evaluation. They recognize challenges arising from mobility and mobile networking. They understand the requirements for and the limitations of simulation- based evaluation of mobile services. They have an overview of the different components and techniques at their disposal to realize mobile services. They understand the principles of these underlying methods, know their advantages and disadvantages and can apply methods of design, modeling, and evaluation to simple example cases.",
    "teaching_methods": "The lecture is conducted as Blended Learning. We combine a four-hour presence lecture with two- hour presence exercises, which are augmented by homework.",
    "media": "Powerpoint slides, (online) exercises",
    "literature": "There are no comprehensive textbooks available on the topic of the course, and we will not base\nthe course on a collection of textbooks but rather use primary literature. The course material\ncontains pointers to literature. These include (incomplete):\n- On mobility models: Joanne Treurniet: A Taxonomy and Survey of Microscopic Mobility Models\nfrom the Mobile Networking Domain. ACM Computing Surveys, Vol. 47, No. 1, Article 14,\nPublication date: June 2014.\n- On mobility support: Wesley M. Eddy: At What Layer Does Mobility Belong? IEEE\nCommunications Magazine, October 2004.\n- On ethics in networking and measurements: Bendert Zevenbergen, Brent Mittelstadt, Carissa\nVéliz, Christian Detweiler, Corinne Cath, Julian Savulescu, Meredith Whittaker: Philosophy Meets\nInternet Engineering: Ethics in Networked Systems Research. (GTC Workshop Outcomes Paper).\nAvailable online at https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2666934",
    "lv_sws_lecturer": "Ott, Jörg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nConnected Mobility Basics (IN2324) (Vorlesung mit integrierten Übungen, 6 SWS)\nOtt J, Kärkkäinen L"
  },
  {
    "module_id": "IN2329",
    "title": "Probabilistische Graphische Modelle in der Computer Vision",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die schriftliche Abschlussprüfung dauert 75 Minuten. In der Prüfung sollen die Studierenden zeigen inwieweit sie die Theorie von probabilistischen graphischen Modellen in verschiedenen Anwendungen der Computer Vision (z.B. binäre Bildsegmentierung, stereo matching, Objekterkennung) verstanden haben. Die Studierenden sollen dabei ihr Wissen über unterschiedliche Inferenzmethoden im Bereich der exakten Inferenz (insbesondere belief propagation und binäre Graph-cuts) oder approximativen Inferenz (insbesondere mean field Approximationen, Graph-cuts, Relaxierungen basierend auf linearer Programmierung) der zugrunde liegenden direkten oder indirekten graphischen Modelle demonstrieren. Hierzu gehört auch ein fundiertes Wissen über die Vor- und Nachteile der jeweiligen Verfahren, sowie Kenntnisse über unterschiedliche Verfahren zum Lernen von Parametern. Durch Einreichen von mindestens 60% sinnvoll bearbeiteter Übungen (sowohl in der Theorie wie auch in der Programmierung) können Studierende einen Notenbonus von 0.3 Punkten in der Abschlussprüfung bekommen. Zu beachten ist, dass weder eine 1.0 noch eine 5.0 verbessert werden kann.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Algebra und multivariate Analysis) sowie Grundwissen der Informatik (insbesondere\nProgrammierung, zum Beispiel dynamische Programmierung und einfache Datenstrukturen)\nempfohlen.\nIN2329: Probabilistische Graphische Modelle in der Computer Vision | Probabilistic Graphical Models in Computer Vision",
    "content": "Viele Probleme der Computer Vision lassen sich als Klassifizierungsproblem darstellen. Üblicherweise entstehen solche Probleme bei Markov Random Field (MRF) Modellen, die es uns in eleganter Weise ermöglichen, verschiedene Multilabel-Probleme des Bildverstehens zu modellieren. Unter bestimmten Annahmen können einige „gutartige“ Probleme in polynomieller Zeit gelöst werden, während andere wiederum NP-schwer sind. Wir werden uns auf der einen Seite mit effizienten Verfahren beschäftigen, die diese gutartigen Probleme global optimal lösen. Auf der anderen Seite werden wir die NP-schweren Probleme approximativ lösen. Theoretisch beschäftigen wir uns mit: Gerichtete und ungerichtete graphische Modelle\n- Bayessche Netze\n- Markov Random Fields\n- Conditional Random Fields\nParameterlernen für MRF und CRF Modelle\n- Gradientenbasierte Optimierung\n- Stochastischer Gradientenabstieg\n- Structured Support Vector Machines\nExakte MAP Inferenz in MRFs\n- Belief propagation auf Bäumen; sum-product Algorithmus\n- Binäre Graph-cuts\n- Branch-and-mincut\nApproximative MAP Inferenzmethoden\n- Loopy belief propagation\n- Mean field Approximationen\n- Graph cuts: alpha expansion, alpha-beta swap\n- Relaxierungen basierend auf linearer Programmierung: fast primal-dual schema\nPraktische Anwendungen die wir behandeln werden sind:\n- Binäre- und Multiobjekt-Bildsegmentierung\n- Schätzen von menschlichen Posen\n- Tiefenrekonstruktion aus Stereobildern\n- Objekterkennung",
    "learning_outcomes": "Nach der Teilnahme an diesem Modul werden die Studenten mit verschiedenen graphischen Modellen und deren Anwendung in der Computer Vision vertraut sein. Insbesondere können die Studenten Markov Random Field (MRF) Modelle und deren zugrundeliegenden Optimierungsverfahren verstehen und auf eine Vielzahl von Problemen in der Computer Vision anwenden. Sie lernen die Fähigkeit entsprechende Inferenz- und Lernverfahren selbstständig zu implementieren. IN2329: Probabilistische Graphische Modelle in der Computer Vision | Probabilistic Graphical Models in Computer Vision",
    "teaching_methods": "In der Vorlesung wird der theoretische Hintergrund des Moduls vorgestellt und erklärt. In den Übungsaufgaben werden die Studenten praktische Probleme behandeln, welche zum Verständnis beitragen und den Inhalt der Vorlesung vertiefen.",
    "media": "Folien (Beamer), Tafel",
    "literature": "- D. Koller, N. Friedman: Probabilistic Graphical Models: Principles and Techniques, MIT Press,\n2009\n- S. Nowozin, C. H. Lampert: Structured Learning and Prediction in Computer Vision, Foundations\nand Trends in Computer Graphics and Vision, 2011\n- A. Blake, P. Kohli, C. Rother: Markov Random Fields for Vision and Image Processing, MIT\nPress, 2011",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2330",
    "title": "Konvexe Optimierung für Computer Vision",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Schriftliche Prüfung von 90 Minuten In dieser Prüfung sollen die Studierenden zeigen, inwieweit sie die Theorie der konvexen Analysis, die man zur Lösung nicht-glatter, also nicht klassisch differenzierbarer, konvexer Optimierungsprobleme benötigt, verstanden haben. Hierzu gehören unter anderem die Theorie von Subdifferentialen, Konvexkonjugierten und Dualität. Die Studierenden sollen ihr Wissen über unterschiedliche numerische Verfahren wie dem proximal point Algorithmus, primal-dualen Verfahren oder augmented Lagrangian Methoden, zur Lösung der angesprochenen Probleme in der Praxis demonstrieren. Hierzu gehört auch ein fundiertes Wissen über die Vor- und Nachteile der jeweiligen Verfahren in Abhängigkeit der speziellen Form des Minimierungsproblems sowie der für die Implementierung verwendeten Architektur.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Ein Interesse an Mathematik sowie ein solides Hintergrundwissen der grundlegenden\nmathematischen Fächer wie lineare Algebra und Analysis. Des Weiteren sollte eine\nProgrammiersprache – vorzugsweise Matlab – beherrscht werden.",
    "content": "Folgende Themen werden in diesem Modul behandelt: Konvexe Analysis\n- Konvexität\n- Existenz und Eindeutigkeit von Minimieren\n- Subdifferential\n- Konjugierte Funktion\nIN2330: Konvexe Optimierung für Computer Vision | Convex Optimization for Computer Vision\n- Dualität\nNumerische Methoden:\n- Gradientenbasierte Verfahren, Majorization-Minimization Algorithmus, Line-search Strategie\n- Proximal Point Algorithmus, Alternating Direction Method of Multipliers, Primal-Dual Hybrid\nGradient\n- Konvergenzanalyse\n- Vorkonditionierung\nBilevel Optimierung:\n- Verallgemeinerter Satz von der impliziten Funktion\n- Numerische Lösung mittels adjungierten Methoden\nBeispielanwendungen in der Bildverarbeitung und Computer Vision\n- Bildrekonstruktion basierend auf totaler Variation\n- Bildsegmentierung\n- Matrixfaktorisierung mit Nebenbedingungen auf Rang und Sparsity\n- Implementierung der obigen numerischen Verfahren in Matlab",
    "learning_outcomes": "Nach der Teilnahme an diesem Modul beherrschen die Studierenden die für die Praxis wichtigen grundlegenden Werkzeuge der konvexen Analysis. Sie sind in der Lage verschiedene Verfahren erster Ordnung zur Lösung konvexer Optimierungsprobleme mit Nebenbedingungen und nicht- differenzierbaren Funktionen zu verstehen und anzuwenden. Studierende werden in der Lage sein Energieminimierungsprobleme in Sattelpunktform zu analysieren und die duale Energie herzuleiten. Sie verstehen die Konvergenzanalyse des Proximal Point Algorithmus und können dieses Resultat auf andere Algorithmen anwenden, indem sie diese in Proximal Point Form schreiben. Studierende werden in der Lage sein konvexe Optimierungsprobleme für typische Computer Vision Probleme durch Anwenden der numerischen Methoden selbstständig zu lösen.",
    "teaching_methods": "Vorlesung mit Übung. In der Vorlesung werden die Inhalte vorgestellt und erklärt. Durch eine kurze Wiederholung der zuvor gelernten Inhalte in Form von Fragen und Antworten am Anfang jeder Vorlesung, soll auf Schwierigkeiten der Studierenden im Umgang mit dem Stoff eingegangen werden (JiTT). In den Übungen werden zur Vorlesung passende theoretische und praktische Übungsaufgaben selbstständig von den Studierenden in Gruppenarbeit erarbeitet um das Gelernte zu vertiefen.",
    "media": "Beamer, Tafel, PC",
    "literature": "- Folien aus der Vorlesung.\n- Stephen Boyd, Lieven Vandenberghe. Convex Optimization. Cambridge University Press. 2003.\nIN2330: Konvexe Optimierung für Computer Vision | Convex Optimization for Computer Vision\n- R. Tyrrell Rockafellar. Convex analysis. Princeton University Press. 1970\n- Jean-Baptiste Hiriart-Urruty, Claude Lemaréchal. Fundamentals of convex analysis. Springer.\n2004.\n- Yurii Nesterov. Introductory lectures on convex optimization. Kluwer-Academic. 2003\n- Convex Analysis and Monotone Operator Theory in Hilbert Spaces. H. H. Bauschke and P. L.\nCombettes. 2011.\n- Jorge Nocedal, Stephen J. Wright. Numerical optimization.\n- Dimitri Bertsekas. Nonlinear programming. Athena Scientific. 1999\n- J. Outrata and M. Kocvara and J. Zowe. Nonsmooth Approach to Optimization Problems with\nEquilibrium Constraints. 1998.\nWeitere Referenzen zu aktuellen Veröffentlichungen werden in der Vorlesung gegeben.",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2333",
    "title": "Protocol Design",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 8,
    "hours_total": 240,
    "hours_self_study": 150,
    "hours_presence": 90,
    "examination_achievements": "Type of Assessment: exam The exam takes the form of a 120 minutes written test. The exam assesses the acquaintance with and understanding of concepts and techniques related to protocol design, covering theory and practice, technical and non-technical aspects. Using different kinds of questions, knowledge, in- depth understanding, and transfer using small problems, the exam allows assessing the ability to link and to apply this knowledge regarding the desired learning outcomes. During the semester, students will perform small theoretical and practical exercises that allow them to assess their learning progress and to prepare for the exam. These exercises will also be graded and contribute to the final grade.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Recommended requirements are basics in computer networks, security, and distributed\nsystems (IN0010 or equivalent knowledge) as well as very good command of the C/C++ or Java\nprogramming language.",
    "content": "All communication systems use protocols that define how to exchange information, from bit representations on the wire or in the air to addressing and routing in a global network to application layer conventions for representing complex data types. Protocols appear in many different domains and application areas, which define the goals and constraints; they may be proprietary or open, jointly developed by standards organizations or set by strong market players. In this course, we will focus on protocol for the Internet, primarily looking at the network, transport, and application layer. We will review architectural and protocol design principles from theory as IN2333: Protocol Design | Protocol Design well as from practical experience over the past decades. We will study different functional building blocks and design patterns for protocols suitable to implement certain protocol features and assess their applicability and their limitations. We will look at how the various design principles fit with and how they impact recent and foreseeable future developments in communications and (inter)networking at large and how such principles may need to be restated or adapted for new environments. While a clear focus is on architectures and principles from the Internet and for internetworking, lessons from other networking technologies are also considered. We will use numerous case studies to exemplify the main points. We will discuss various implementation aspects for scalable and robust systems and also consider the non-functional aspects of protocol design, including issues concerning acceptance in the market or groups. In our exercises, we the students will explore selected topics with a focus on recent developments. In our assignments, we will develop a protocol specification to achieve certain functionality in several steps and implement this specification in small groups. The following list offers a rough outline of the topics we expect to cover:\n- State sharing and reliability\n- Scalability concerning many dimensions\n- Resource consumption and fairness\n- Naming and Addressing\n- Protocol syntax and encoding\n- Multiplexing\n- Security: Robustness\n- Security: Protocol Design Techniques\n- Intermediaries: NATs/firewalls, proxies, gateways\n- Transport layer abstractions\n- Interoperability, Evolveability\n- Internet design principles (and their evolution)\n- Meta-aspects of design: financial, political, human\n- Implications of new communication paradigms\n- Think different: Protocol design for specific environments",
    "learning_outcomes": "After successful completion of this module, students will remember the basic functional blocks for different protocols and alternative ways to realize those. They understand the origin and evolution of the Internet architectural principles and the technical issues relevant to Internet-scale protocol design and their evaluation. They recognize non-technical challenges arising protocol design when targeting broader adoption. They understand the implications of design choices, for implementation, maintenance, and validation. They understand the importance of interoperability and evolvability and ways to achieve those for protocol and system designs that may be around for a long time. They recognize the interaction of market players and impact of IPR on technology development and deployment. They are able to apply their knowledge to evaluate the pros and cons of protocol design alternatives as well as the methods of design, modeling, and evaluation to sample cases. IN2333: Protocol Design | Protocol Design",
    "teaching_methods": "The lecture is conducted as Blended Learning. We combine a four-hour presence lecture with two-hour presence exercises, which are augmented by homework. The exercises will emphasize inverse classroom techniques in which the students will prepare and present recent techniques on selected topics.",
    "media": "Powerpoint slides, exercises, assignments",
    "literature": "There are no comprehensive textbooks available on the topic of the course, and we will not base\nthe course on a collection of textbooks but rather use primary literature. The course material\ncontains pointers to literature.",
    "lv_sws_lecturer": "Ott, Jörg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nProtocol Design (IN2333) (Vorlesung, 6 SWS)\nOtt J"
  },
  {
    "module_id": "IN2341",
    "title": "Current Trends in IT Security",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 75 minütigen schriftlichen Klausur erbracht. Die ohne Hilfsmittel zu bearbeitenden Aufgaben überprüfen unter Zeitdruck die Kenntnis und Beherrschung der Security-Konzepte, die während des Semesters in der Vorlesung behandelt wurden.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN0009 Grundlagen: Betriebssysteme und Systemsoftware",
    "content": "Im Zeitalter des Internets zeigt sich IT Security als ein wichtiger Bestandteil der Informatik. IT Security bezieht sich auf das Implementieren von Systemen und Hilfsmittel, die es ermöglichen sensible Informationen zu schützen. Auf Grund der Tatsache, dass ständig neue Angriffe auf moderne Systeme entstehen, muss sich auch die IT Security weiterentwickeln, um Angriffen mit entsprechenden Verteidigungsstrategien trotzen zu können. Aus diesem Grund beinhaltet die Vorlesung die folgenden Themen:\n-- Network security\n-- Web security\n-- Privacy\n-- Malware\n-- Underground economy\n-- Internet of Things (IoT) security",
    "learning_outcomes": "Nach erfolgreicher Teilnahme an diesem Modul, sind die Studierenden in der Lage Grundkonzepte und Techniken der Angreifer und Verteidiger zu verstehen und zu analysieren. IN2341: Current Trends in IT Security | Current Trends in IT Security",
    "teaching_methods": "Die Vorlesung präsentiert aktuelle Themen und Entwicklungen aus dem Gebiet der IT-Sicherheit, die in den Übungen vertieft werden.",
    "media": "Folienpräsentation",
    "literature": "In Konferenzen und Journalen veröffentlichte Artikel",
    "lv_sws_lecturer": "Eckert, Claudia; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nDr. Apostolis Zarras"
  },
  {
    "module_id": "IN2352",
    "title": "Angewandte Biorobotik",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Das durch die Studenten individuell erstellte Lernportfolio dokumentiert ihren Lernfortschritt während des Kursverlaufs. Es enthält folgende Teilleistungen:\n• Dokumentation von Rechercheergebnissen\n• Berichte zu Programmierprojekten\n• Lösungen zu Übungsaufgaben\n• Dokumentation des Praxisprojekts\nDes Weiteren werden im Kurs bewertete Poster (Beginn und Ende des Kurses), und Kurzpräsentationen (2-3) durch die Studierenden erstellt und vorgestellt. Eine Auswahl der vermittelten Inhalte wird durch die Studenten als Videopräsentation zur Semestermitte reflektiert. Die Abschlussnote wird auf Grundlage des Lernportfolios und der Präsentationsleistung vergeben.. Die Verteilung der Leistungen gestaltet sich wie folgt: Dokumentation/Präsentation von Rechercheergebnissen 20% Posterpräsentation 15% Videopräsentation zur Semestermitte 25% Übungsaufgaben 20% Anwendung und praktische Umsetzung 15% Portfolio Form und Vollständigkeit 5%",
    "repetition": "IN2352: Angewandte Biorobotik | Applied Biorobotics",
    "recommended_prerequisites": "Technische Mechanik, Algorithmen und Datenstrukturen",
    "content": "Das Modul behandelt die folgenden Themen\n• Einführung in die Portfolioerstellung, Grundlagen der Präsentation, Literaturrecherche und\ninteraktiver Lernumgebungen\n• Grundlagen zweibeiniger Lokomotion\n• Regelung zweibeiniger Roboter\n• Biologisch inspirierte Optimierungsverfahren\n• Einführung in Experimentaufbau und –Durchführung\nIm Praxisprojekt werden die im Theorieteil behandelten Inhalte von den Studenten auf einen Roboteraufbau übertragen, ein Regler entworfen und optimiert und das resultierende Verhalten analysiert und bewertet.",
    "learning_outcomes": "Am Ende der Veranstaltungen sind die Studierenden in der Lage,\n• die Konzepte zur Verwendung biologischer Erkenntnisse bei der Lösung technischer\nAufgabenstellungen zu erklären und diese auf konkrete Problemstellungen anzuwenden.\n• die Rolle von Modellen im Wissenstransfer von der Biologie in die Robotik zu beschreiben\nund zur Problemlösung geeignete Modelle zu vergleichen, ihre spezifischen Grenzen zu charakterisieren und sie zur Lösung von spezifischen Problemen anzuwenden.\n• Anwendungsbereiche sowie Vor-und Nachteile biologisch inspirierter Optimierungsverfahren zu\nunterscheiden, und sie zur Optimierung erarbeiteter Lösung anzuwenden.\n• das erworbene Wissen im praktischen Versuch anzuwenden, und einen Regler für einen\nLaufroboter zu entwerfen.",
    "teaching_methods": "Die Studierenden erwerben die Grundlagen anhand von kurzen Videos und festigen und Vertiefen ihre Kompetenzen in der Präsenzphase durch Diskussionen und betreute Gruppenarbeit nach der Methode des Flipped Classroom. Das Wissen wird durch selbstständige Recherchearbeit, Dokumentation und Präsentation erweitert und vertieft. Das erworbene Wissen wird durch Anwendung in Übungen und im Praxisprojekt gefestigt. Die Studierenden dokumentieren ihren Lernfortschritt in einem individuellen Portfolio und erhalten regelmäßig Rückmeldung von Kommilitonen und vom Dozenten.",
    "media": "Videos, Poster, Studentenvorträge, praktisches Projekt",
    "literature": "Templates and anchors: neuromechanical hypotheses of legged locomotion on land\nR.J. Full, D.E. Koditschek, Journal of Experimental Biology 1999 202: 3325-3332;\nIN2352: Angewandte Biorobotik | Applied Biorobotics",
    "lv_sws_lecturer": "Renjewski, Daniel; Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAngewandte Biorobotik (Modul MW2388) (Vorlesung mit integrierten Übungen, 4 SWS)\nRenjewski D [L], Buchmann A, Radecker P, Renjewski D"
  },
  {
    "module_id": "IN2356",
    "title": "Autonomes Fahren",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Das schriftliche Examen (60min) prüft das Verständnis der Studenten für das Autonome Fahren und die Fähigkeit der Studenten die gelernte Inhalte auf unterschiedliche Szenarien anzuwenden.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Lineare Algebra für Informatik (MA0901)\nDiskrete Wahrscheinlichkeitstheorie (IN0018)",
    "content": "Das Modul lehrt die Grundlagen des Automatisierten Fahrens, stellt aktuellen Bezug zu Wissenschaft und Praxis her, erörtert zentrale Fragestellungen und vermittelt für diese exemplarische Lösungsansätze, die die Studenten grundlegend anzuwenden lernen. Überblick: Bahnplanung, Entscheidungsfindung, Trajektorien Multisensor Datenfusion, Tracking, Detektion, Sensormodelle Fahrbahnerkennung, –Modellierung und Kartographierung KI im Fahrzeug, Szenarioklassifikation und –Prädiktion Semantische Konzepte, Beschreibung von Verkehrsszenarien, Reasoning Architekturen und Rechnersysteme für Autonomes Fahren Connected Vehicles & Intelligente Infrastruktur Functional and Operational Safety Vorträge von Experten aus der Industrie verstärken den aktuellen Praxisbezug IN2356: Autonomes Fahren | Autonomous Driving Ein Bonus von 0.3 Notenpunkten kann über die freiwillige Einreichung eines in Python umgesetzten Demonstrators zu einer der diskutierten Fragestellungen erzielt werden.",
    "learning_outcomes": "Nach erfolgreichem Absolvieren des Moduls kennen die Teilnehmer die Grundlagen des automatisierten Fahrens, und haben Bezug sowohl wissenschaftlichen, als auch praktischen Bezug zu den aktuellen Themenstellungen aufgebaut. Die Studenten kennen exemplarische Lösungsansätze für zentrale Fragstellungen und können diese grundlegend anwenden.",
    "teaching_methods": "Die Inhalte der Vorlesung werden im Vortrag vermittelt. Der Bezug zur aktuellen technischen Entwicklung wird über Expertenvorträge aus der Wirtschaft vertieft. Die Fähigkeit das Gelernte praktisch anzuwenden kann von den Studenten durch die Entwicklung eines Demonstrators in Python verstärkt werden.",
    "media": "Folien, Videos",
    "literature": "Christopher M. Bishop. Pattern Recognition and Machine Learning. Springer, 2006.\nSebastian Thrun, Probabilistic Robotics, MIT Press, 2005\nRoland Siegwart, Introduction to Autonomous Mobile Robots, Intelligent Robotics and Autonomous\nAgents Series, 2011",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAutonomes Fahren (IN2356) (Vorlesung, 2 SWS)\nKnoll A [L], Lenz A, Waschulzik T"
  },
  {
    "module_id": "IN2357",
    "title": "Machine Learning for Computer Vision",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90-minütigen schriftlichen Klausur erbracht. In der Klausur sollen die Studierenden zeigen, dass sie die Grundkonzepte verschiedener maschineller Lernverfahren verstanden haben, und dass sie sie auf spezielle Probleme im Bereich des Computersehens anwenden können. Hierbei gehört zum Verständnis der einzelnen Methoden vor allem die Fähigkeit, diese mathematisch beschreiben und herleiten zu können, sowie deren Vor- und Nachteile abwägen zu können. Ausserdem wird in anwendungsorientierten Aufgaben die Fähigkeit abgefragt, geeignete maschinelle Lernmethoden für spezielle Probleme im Bereich Computersehen anwenden zu können, sowie diese einordnen zu können (z.B. bzgl. Klassifikation, Regression, MLE, MAP, etc).",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Grundlagen der linearen Algebra, Analysis und Wahrscheinlichkeitsrechnung.\nStatistical modeling and machine learning (IN2332)",
    "content": "Maschinelle Lernmethoden sind ein wesentlicher Bestandteil zur Lösung wichtiger Probleme aus dem Bereich Computersehen, wie z.B. Objektklassifikation und -lageschätzung, Objektverfolgung, Bildsegmentierung, Entrauschen von Bildern, oder Kamerakalibrierung. In dieser Vorlesung werden daher die wichtigsten Methoden des maschinellen Lernens vorgestellt und mathematisch hergeleitet. Diese umfassen vor allem:\n- Kernel Methoden, insbes. Gaußprozesse\n- Lernen von Metriken\n- Clusteringmethoden wie GMM oder Spektrales Clustern\nIN2357: Machine Learning for Computer Vision | Machine Learning for Computer Vision\n- Boosting und Bagging\n- Hidden Markov Modelle\n- Neuronal Netze und Deep Learning*\n- Sampling Methoden, insbes MCMC\nDer Fokus liegt hierbei in einem breiten Verständnis dieser Methoden und nicht in der Vertiefung einzelner Ansätze. Praktische Erfahrung wird anhand von Programmieraufgaben gesammelt. *Das Thema Deep Learning wird nur am Rande behandelt. Für eine ausführliche Behandlung des Themas wird auf andere Veranstaltungen verwiesen, z.B. IN2346",
    "learning_outcomes": "Nach erfolgreicher Teilnahme an diesem Modul beherrschen die Studierenden die Grundlagen der wichtigsten maschinellen Lernmethoden, wie sie im Bereich Computersehen angewendet werden. Sie sind dann in der Lage, die zugrundeliegende mathematische Formulierung von Verfahren wie z.B. Boosting, Bagging, HMMs, Gaußprozessen oder MCMC anzugeben, sowie diese Methoden einem Anwendugskontext in Bereich Computersehen zuzuordnen. Außerdem können sie einfache Implementierungen dieser Methoden entwickeln und auf konkrete Datensätze anwenden.",
    "teaching_methods": "In der Vorlesung werden Folien präsentiert und wichtige mathematische Formulierungen and der Tafel entwickelt. In den begleitenden Übungen werden praktische und theoretische Aufgaben bearbeitet. Diese Aufgaben werden auch zur Heimarbeit rechtzeitig vor den Übungsterminen zur Verfügung gestellt.",
    "media": "Folienpräsentation, Tafelanschrieb",
    "literature": "Christopher Bishop: Pattern Recognition and Machine Learning\nKevin Murphy: Machine Learning: A Probabilistic Perspective\nCarl Edward Rasmussen and Christopher Williams: Gaussian\nProcesses for Machine Learning",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2361",
    "title": "Natural Language Processing",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Type of Assessment: exam The exam takes the form of a written test of 120 minutes. Exam questions assess whether the student has understood and can essentially reproduce the basic concepts, algorithms, models, and methodology of modern Natural Language Processing (NLP). During the semester, students are provided with a number of questions and small problems for every topic that allow them to assess their learning progress and to prepare for the exam. The exam contains a number of questions from this question pool in order to give an incentive to deal with the topics and the questions as well as a number of new questions.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN2064 Machine Learning\nIN2346 Introduction to Deep Learning",
    "content": "• Text Normalization, Tokenization, N-Grams\n• Part-of-Speech-Tagging\n• Formal grammars for English and related approaches\n• Syntactic, Statistical and Dependency Parsing\n• Word Embeddings (Word2Vec, GloVe etc.)\n• Word Sense Disambiguation\n• Sentiment Analysis\n• Information Extraction\n• Semantic Role Labelling\n• Co-Reference Resolution\nIN2361: Natural Language Processing | Natural Language Processing\n• Named Entity Recognition and Classification\n• Machine Translation\n• Modern Neural Network approaches",
    "learning_outcomes": "Upon successful completion of the module, participants understand and can reproduce / remember essential concepts, algorithms, models, and methodology of modern Natural Language Processing (NLP). Participants are able to read and understand modern scientific publications in the field and to analyze, and evaluate the NLP concepts, algorithms, models, and methodology presented in those publications and presented in the course for a possible application to NLP problems in the participant’s own professional projects or their own scientific work in a Master’s thesis, Guided Research project, or PhD thesis developing new NLP algorithms, models and applications. The module prepares the participants for the corresponding Master Lab course in NLP, which enables them to practically apply the concepts, algorithms, models, and methodology of this module by designing and implementing suitable Neural Network Architectures for key NLP Problems such as Semantic Role Labelling or Sentiment Analysis.",
    "teaching_methods": "Teaching format: 2 x 2 hours lecture / week. Learning method: students visit the lecture, post-process the lecture’s content via reviewing the slides, and / or the lecture recording, and reading the background literature In view of the learning goals of the module and the expected number of participants, visiting the lecture and working with the lecture materials and background reading materials for self-study are appropriate learning methods because the main focus of the module is understanding the concepts, algorithms, models, and methodology of modern NLP regarding the ability to read and understand modern publications in the field and being able to analyzing and evaluating their content for own scientific work and in terms of related problems in professional work.",
    "media": "Slides, blackboard, lecture recording, discussion boards in suitable e-learning platforms, textbook\nand supplementary original publications",
    "literature": "D. Jurafsky, J. Martin: Speech and Language Processing, 2018\nOriginal Publications of modern approaches and NN models",
    "lv_sws_lecturer": "Groh, Georg; Prof. Dr. rer. nat. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nNatural Language Processing (IN2361) (Vorlesung, 4 SWS)\nGroh G [L], Groh G"
  },
  {
    "module_id": "IN2362",
    "title": "Sprachbasierte Sicherheit",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer mündlichen Prüfung (60 Minuten) in zwei Teilen (Gewichtung 50/50) erbracht. Der erste Teil besteht in einer Präsentation der lauffähigen Implementierungen einfacher Techniken der vier Übungsblätter am Laptop oder Projektor und der Beantwortung gezielter Fragen hierzu. Durch diesen ersten Teil weisen die Studierenden die Fähigkeit der Anwendung theoretischer Inhalte zur Lösung von konkreten, anwendungsbezogenen Problemstellungen und zur Implementierung dieser Lösungen nach. Der zweite Teil der mündlichen Prüfung besteht aus drei Fragen zum Stoff der Vorlesung und den hier behandelten Fragen und Themengebiete. In diesem zweiten Teil der mündlichen Prüfung wird nachgewiesen, in wieweit das Verständnis für grundsätzliche Verfahren im Bereich Sprachbasierte Sicherheit abgerufen werden kann. So soll insgesamt nachgewiesen werden, dass in begrenzter Zeit z.B. Arten von aktuellen Angriffen und/oder damit verbundene Sicherheitsfragestellungen richtig erkannt und hierzu effektive Verteidigungstechniken und/oder Antworten gefunden und angewendet oder beurteilt werden können.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN2227 - Compilerbau I\nIN2209 - IT Sicherheit",
    "content": "+ Laufzeitstruktur von Programmen auf Maschinenebene + Angriffe durch Injektion malignen Codes (\"code injection attacks\") und deren Abwehr IN2362: Sprachbasierte Sicherheit | Language-based Security o Buffer Overflows und Stack Canaries o Control-Flow Hijacking und Control-Flow Integrity + Angriffe durch Wiederverwendung bereits existierenden Codes (\"code re-use attacks\") und deren Abwehr o Return-Oriented Programming und Software Diversity o Counterfeit Object-Oriented Programming + Angriffe durch Daten o Non-Control Data Attacks und Data-Flow Integrity bzw. Data Randomization + Aktuelle Resultate o Theoretische Sicherheit von Control-Flow Integrity o Trends in Software Diversity Relevante Aspekte der vorgestellten Techniken werden im Übungsteil konkretisiert.",
    "learning_outcomes": "Studenten erwerben fundierte Kenntnisse zu aktuellen Angriffen und Verteidigungstechniken. Behandelte Techniken werden sowohl theoretisch als auch praktisch behandelt, sodass Studenten neben Faktenwissen zu den jeweiligen Techniken auch jene Methodenkompetenzen erwerben, die es ihnen erlaubt Sicherheitsfragestellungen aus Programmiersprachen-Sicht kompetent zu beantworten.",
    "teaching_methods": "Vorlesung mit Folienpräsentation und Tafelanschrieb. Begleitenden Implementierung als Übungsteil.",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Seidl, Helmut; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSprachbasierte Sicherheit (IN2362) (Vorlesung, 2 SWS)\nSeidl H [L], Brunthaler S"
  },
  {
    "module_id": "IN2365",
    "title": "Parallel Programming Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Depending on course size either oral exam (20 min. per student) or 60 min. written exam. Both options are without additional aids and result in one grade for the course. The exam mainly tests concepts in the area of parallel system software: Have the students understood how parallel runtime systems work and do they have a basic understanding for developing such a system? The exam requires the students to answer in their own words, and possibly completing some code segments.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Lecture Parallel Programming (IN2147)\nLecture Microprocessors (IN2075)",
    "content": "This lecture focuses on the implementation aspects of parallel programming systems. Parallel programming models need compiler and runtime support to map the rich feature set of a parallel programming model to actual parallel hardware. To obtain high performance and high efficiency, this mapping needs to take into account the specific architectural aspects of the underlying computer architecture. This lecture briefly reviews key concepts that have been presented in the lecture \"Parallel Programming\" and \"Microprocessors\". It then turns towards the fundamental algorithms used to implement the concepts of parallel programming models and how they interact with modern processors. While the lecture will focus on the general mechanisms, we will use the Intel processor architecture to exemplify the discussed implementation concepts. IN2365: Parallel Programming Systems | Parallel Programming Systems",
    "learning_outcomes": "• Provide students with the fundamental knowledge about how parallel programming models and\nlanguages can be implemented efficiently.\n• Students will learn how a parallel programming model and its runtime interacts with the\nunderlying hardware.\n• Students will be taught fundamental algorithms for key parallel mechanisms such as locks,\nbarriers, etc.",
    "teaching_methods": "Lectures with PowerPoint presentation (easier preparation and distribution), augmented with interactive discussions where suitable (depending on class size). Additional documents (e.g., standard documents, papers, code segments, demos, etc.) will be integrated as necessary to make material more comprehensible.",
    "media": "PowerPoint, code and document presentations via projection, documents made available through\nMoodle",
    "literature": "John Hennessy and David Patterson: Computer Architecture: A Quantitative Approach (Morgan\nKaufmann Series in Computer Architecture and Design). Morgan Kaufmann, 6th edition, ISBN-13\n978-0128119051.\nWilliam Stallings: Computer Organization and Architecture: Designing for Performance. Prentice\nHall, 7th edition, ISBN 978-0131856448.\nYan Solihin: Fundamentals of Parallel Multicore Architecture. Apple Academic Press, ISBN\n978-1482211184.\nSources of the LLVM OpenMP Runtime Implementation. https://openmp.llvm.org/.\nSources of the Threading Building Blocks. https://www.threadingbuildingblocks.org/.\nSelect research papers regarding barrier implementation, lock implementation, scheduling task\ngraphs, etc.\nIntel Corporation: Intel® 64 and IA-32 Architectures Optimization Reference Manual, document ID\n248966-040.\nBarbara Chapman, Gabriele Jost, and Ruud van der Pas: Using OpenMP - Portable Shared\nMemory Parallel Programming. MIT Press, ISBN-13 978-0262533027.\nRuud van der Pas, Eric Stotzer, and Christian Terboven: Using OpenMP - The Next Step: Affinity,\nAccelerators, Tasking, and SIMD. MIT Press, ISBN-13 978-0262534789.\nIN2365: Parallel Programming Systems | Parallel Programming Systems\nJames Reinders: Threading Building Blocks. O'Reilly, ISBN 978-0596514808.",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nParallel Programming Systems (IN2365) (Vorlesung, 2 SWS)\nKlemm M [L], Klemm M"
  },
  {
    "module_id": "IN2369",
    "title": "Industrielle Bildverarbeitung",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Prüfungsart: Klausur (90 min) oder mündliche Prüfung (30 min) Die Prüfungsleistung wird in Form einer Klausur oder einer mündlichen Prüfung erbracht. Anwendungsaufgaben überprüfen die Fähigkeit, realistische Anwendungen der industriellen Bildverarbeitung zu analysieren, zu bewerten und zu entwickeln. Wissensfragen überprüfen die Vertrautheit mit den Hardware-Komponenten und Algorithmen der industriellen Bildverarbeitung sowie die Angemessenheit der Auswahl der Hardware-Komponenten und Algorithmen zur Lösung einer bestimmten Anwendung.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Die Vorlesung setzt ein abgeschlossenes Bachelorstudium in einer Ingenieur- oder\nNaturwissenschaft voraus. Insbesondere setzt die Vorlesung Kenntnisse der folgenden Gebiete\nvoraus:\n- Lineare Algebra (lineare Transformationen zwischen Vektorräumen in Matrixalgebra)\n- Analysis (Reihen, Differentiation und Integration ein- und zweidimensionaler Funktionen\n- Wahrscheinlichkeitstheorie",
    "content": "Die Vorlesung gibt eine detaillierte Beschreibung der praxisrelevanten Methoden und Algorithmen, die zur Lösung von Anwendungen in der industriellen Bildverarbeitung verwendet werden. Die Auswahl der Verfahren orientiert sich an den häufigsten Einsatzgebieten der Bildverarbeitung in der Industrie: Lageerkennung, Form- und Maßprüfung, Beschriftungserkennung und Objekterkennung. Der Schwerpunkt der Vorlesung ist die Beschreibung der Verfahren und ihrer Grundlagen. Beispiele aus der Praxis zeigen die typischen Anwendungen, in denen die IN2369: Industrielle Bildverarbeitung | Machine Vision vorgestellten Verfahren eingesetzt werden. Im einzelnen werden folgende Themenbereiche behandelt:\n- Bildaufnahme\n- Bildverbesserung\n- Segmentation und Merkmalsextraktion\n- Morphologie\n- Kantenextraktion\n- Segmentation und Anpassung von geometrischen Primitiven\n- Kamerakalibrierung\n- Template Matching\n- Stereo-Rekonstruktion\n- Klassifikation\n- Beschriftungserkennung (OCR)\n- Farbbildverarbeitung\n- Hand-Auge-Kalibrierung\n- Objekterkennung",
    "learning_outcomes": "Teilnehmer der Vorlesung verstehen die wesentlichen Hardware-Komponenten eines industriellen Bildverarbeitungssystems, sowie die Theorie, Datenstrukturen und Implementierung der wichtigsten Algorithmen der industriellen Bildverarbeitung. Sie sind in der Lage, Bildverarbeitungsaufgaben zu analysieren und zu bewerten und können diese Kenntnisse und Fähigkeiten nutzen, um industrielle Bildverarbeitungsanwendungen zu entwickeln.",
    "teaching_methods": "Vorlesung (Präsentation von Folien und Vorstellung interaktiver Beispiele)",
    "media": "PowerPoint",
    "literature": "Carsten Steger, Markus Ulrich, Christian Wiedemann: Machine Vision Algorithms and Applications;\n2. Auflage, Wiley-VCH, Weinheim, 2018",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nIndustrielle Bildverarbeitung (IN2369) (Vorlesung, 4 SWS)\nSteger C [L], Steger C"
  },
  {
    "module_id": "IN2371",
    "title": "Fundamentals of Human-Centered Robotics",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "Die Modulnote basiert auf der Leistung der Studierenden in einer Präsentation die eine Demonstration, sowie ein Prüfungsgespräch (ca. 10 Min) enthält. Dabei wird das Wissen der Studierenden über die theoretischen Grundlagen der menschenzentrierten Robotik ausgewertet und untersucht, ob sie dies auf reale Probleme anwenden und das Ergebnis präsentieren, sowie demonstrieren können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Regelungssysteme 1\nRobotik",
    "content": "Die Vorlesung Human-Centered Robotics umfasst eine gründliche Einführung in die Technologie und die intelligente Steuerung von kollaborativen Robotersystemen. Die theoretischen Grundlagen und Anwendungsmöglichkeiten von interagierenden Robotern werden ausführlich diskutiert. Tutorials vertiefen das konzeptionelle Verständnis der interaktiven Robotik und der entsprechenden Softwaretools. Die Studenten lernen die Grundlagen der Robotersicherheit, der menschenfreundlichen, KI-basierten Aufgaben- und Wegplanung in dynamischen Umgebungen. Um praktische Erfahrungen zu sammeln und die Kurskonzepte in modernster Robotertechnik anzuwenden, werden Robothons angeboten, die darauf abzielen, reale Herausforderungen mit hochmotivierten Studierendenteams aus 4-6 Mitgliedern aus verschiedenen Disziplinen zu lösen. Die Kursskizze ist unten abgebildet. I. Einführung IN2371: Fundamentals of Human-Centered Robotics | Fundamentals of Human-Centered Robotics\n- Eine kurze Geschichte der Robotik\n- Was ist menschenfreundliche Robotik?\nII. Mechanisches Design und dynamische Modellierung für Sicherheit und Leistung\n- Steife Roboter\n- Roboter mit flexiblen Elementen\n- Intrinsisch nachgiebige Roboter\n- Sicherheit für die physische Mensch-Roboter-Interaktion\nIII. Roboterregelung für unbekannte Umgebungen und Mensch-Roboter-Interaktion\n- Perzeption und Aktuierung für die interaktive Robotik\n- Bewegungssteuerung\n- Kraft- und Impedanzregelung\n- Kollisionserkennung und -reaktion\nIV. Echtzeit-Bewegungsplanung\n- Echtzeit-Trajektorienplanung\n- Umgebungserfassung und -wahrnehmung\n- reaktive Bewegungsplanung in Echtzeit und Kollisionsvermeidung\n- Hierarchische Bewegungssteuerung\nDie Übungen konzentrieren sich auf folgende Themen:\n- Robotermodellierung - Einführung in die Modellierung von starren und flexiblen Gelenkrobotern\n- Robotersteuerung - Einführung in die angewandte Robotersteuerung in dynamischen\nUmgebungen mit Fokus auf die Sicherheit des Menschen.\n- Bewegungsplanung - Entwurf und Durchführung einer sicheren dynamischen Trajektorienplanung\nWährend des Robothon sammeln die Studenten praktische Erfahrungen bei der Lösung realer Probleme mit Robotersystemen. Die Studierenden arbeiten in interdisziplinären Teams zusammen, in denen jedes Team eine gewünschte Roboteraufgabe zur Umsetzung auswählt, wobei der Schwerpunkt auf der Zusammenarbeit zwischen Mensch und Roboter liegt. Die Studierenden sind verantwortlich für die Leitung des gesamten Projekts, die Erstellung des Projektplans, die Durchführung des Projekts in einem interdisziplinären Team, die termingerechte Fertigstellung des Projekts und die Präsentation der Ergebnisse vor den Kursteilnehmern. Projektbeispiele aus früheren Robothons in Hannover finden Sie unter: https://www.roboterfabrik.uni-hannover.de",
    "learning_outcomes": "Nach Abschluss dieses Moduls sind die Studierenden in der Lage die verschiedenen Methoden und Technologien der sicheren physikalischen Mensch-Roboter-Interaktion zu verstehen und zu bewerten. Sie wissen die theoretischen Grundlagen der Robotersteuerung für eine sichere Mensch-Roboter-Interaktion anzuwenden. Sie können selbst Programme von Robotern auf den Grundlagen neuester Methoden zur globalen Bewegungsplanung in dynamischen Umgebungen entwickeln. Darüber hinaus haben sie einen Überblick über Bewegungsplanungsalgorithmen zur IN2371: Fundamentals of Human-Centered Robotics | Fundamentals of Human-Centered Robotics Kollisionsvermeidung und können diese praktisch in der Robotik umsetzen. Sie könne, von einer spezifischen Problemstellung ausgehend, sichere und menschen-freundliche Programme zur physikalischen Mensch-Roboter-Interaktion entwickeln und praktisch umsetzen und evaluieren.",
    "teaching_methods": "Dieser Kurs besteht aus Vorträgen, theoretischen Übungen und einem Projekt. Neben den Vorträgen werden auch die Übungen zur Verfügung gestellt, präsentiert und diskutiert. Beispiellösungen, sowie einige Paper werden zur Verfügung gestellt. Der Robothon führt die Studenten in die Probleme der Praxis ein, die mit echten State-of-the-Art- Robotern in Form eines gemeinsamen, interdisziplinären Projekts gelöst werden sollen. Dabei wird das Wissen aus den Vorlesungen mit realen Anwendungen und dem kompetenten Einsatz moderner Robotertechnik kombiniert.",
    "media": "Folgende Medienformen finden Verwendung:\n- Präsentationen\n- Übungsaufgaben mit Lösungen\n- Paper",
    "literature": "- R. M. Murray, Z. Li, S. S. Sastry, ‘A mathematical introduction to robotic manipulation’, CRC\npress, 2017.\n- M. W. Spong, S. Hutchinson, M. Vidyasagar, ‘Robot Modeling and Control’, vol. 3, New York:\nWiley, 2006.\n- B. Siciliano, O. Khatib, ‘Springer Handbook of Robotics’, Springer, 2016.\n- Oussama Khatib, Lecture Notes: Advanced Robotics Manipulation, Stanford University.\n- O. Khatib, ‘Inertial Properties in Robotic Manipulation: An Object Level Framework’, Int. J. of\nRobotics Research, vol. 14, no. 1, pp. 3-19, 1995.\n- H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, S. Thrun, ‘Principles of\nRobot Motion: Theory, Algorithms, and Implementation’, MIT Press, 2005.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nFundamentals of Human-Centered Robotics (Vorlesung, 2 SWS)\nHaddadin S [L], Chen L, Haddadin S, Swikir A\nFundamentals of Human-Centered Robotics (Praktikum, 2 SWS)\nHaddadin S [L], Chen L, Haddadin S, Swikir A\nFundamentals of Human-Centered Robotics (Übung, 2 SWS)\nHaddadin S [L], Chen L, Haddadin S, Swikir A\nIN2371: Fundamentals of Human-Centered Robotics | Fundamentals of Human-Centered Robotics"
  },
  {
    "module_id": "IN2373",
    "title": "Regelung moderner Leichtbauroboter",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 60 min erbracht. In dieser soll nachgewiesen werden, dass die wesentlichen Konzepte und Analysemethoden verstanden und mittels Hilfsmaterial auf typische Problemstellungen angewandt werden können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "IN2067 oder eine gleichwertige Robotik-Grundlagenvorlesung, Grundkenntnisse der Beschreibung\ndynamischer Systeme, Regelungstechnikgrundlagen\nOptional praktische Erfahrung mit Leichtbaurobotern, z.B. durch die Vorlesung „Programmierung\nund Regelung für Mensch-Roboterinteraktion“ (IN2308)",
    "content": "• Werkzeuge zur passivitäts- und energiebasierten Analyse von Robotern\n• Konzepte zur nachgiebigen Regelung von Starrkörpersystemen\n– Zustands-Feedbacklinearisierung\n– Nachgiebigkeits-Regelung, Impedanz- und Admittanzregelung\n– Hierarchische Multiprioritätenregelung\n– Passivitätsbasierte Bahnregelung\n– Adaptive Regelung\n– Optimierungsbasierte Regelung\n• Konzepte zur nachgiebigen Regelung von Robotern mit flexiblen Gelenken\n– Kaskadierte Gelenkdrehmomentregelung (Singular-Perturbation¬-Ansatz)\n– Passivitätsbasierte Regelung\n– Vollständige Zustandsregelung für Bahnregelung\nIN2373: Regelung moderner Leichtbauroboter | Control of Modern Lightweight Robots\n– Backstepping-Ansätze\n• Konzepte zur nachgiebigen Regelung von Robotern mit variabel einstellbarer Gelenksteifigkeit\n– Regelung zur Erhaltung der inhärent elastischen Struktur\n– Regelung zur Erhaltung der inhärent elastischen Struktur mit Steifigkeitsvorgabe\n• Konzepte zur Regelung unteraktuierter Systeme",
    "learning_outcomes": "Nach erfolgreicher Teilnahme am Modul sind die Studierenden in der Lage: o ... die grundlegenden Regelungsmethoden für moderne Leichtbauroboter zu bewerten und deren Unterschiede sowie Vor- und Nachteile für den praktischen Einsatz beurteilen zu können. o ... Methoden zur Passivitäts- und Stabilitätsanalyse von Regelungsansätzen in der Robotik zu verstehen und auf bestimmte Leichtbaurobotertypen anwenden zu können. o ... Stabilitätseigenschaften von Roboterreglern zu klassifizieren und deren Konsequenzen für den praktischen Einsatz beurteilen zu können. o ... die gängigsten Methoden zur nachgiebigen Regelung von Robotern implementieren zu können. Dies beinhaltet sowohl Starrkörperroboter wie auch Systeme mit seriell-elastischen Gelenken oder Gelenken variabel einstellbarer Steifigkeit. o ... für einen vorgegebenen Anwendungsfall in der Leichtbauroboterregelung einen passenden Ansatz auszuwählen und zu implementieren.",
    "teaching_methods": "Vorlesung, kombiniert mit Übungen in denen der Lehrinhalt in Simulationsaufgaben eingesetzt und in Relation zueinander gesetzt werden soll. Das Simulationsmodell wird sowohl zentral in der Vorlesung/Übung verwendet als auch den Studierenden als MATLAB/Simulink-Schnittstelle zur Verfügung gestellt.",
    "media": "Folien, Tafelanschrieb, Webinhalte",
    "literature": "Kevin M. Lynch, Frank C. Park: Modern Robotics: Mechanics, Planning, and Control\nRichard M. Murray, Zexiang Li and S. Shankar Sastry: A Mathematical Introduction to Robotic\nManipulation\nJean-Jacques E. Slotine, Weiping Li: Applied Nonlinear Control\nOussama Khatib: Advanced Robotic Manipulation (Lecture Notes)\nJohn Craig: Introduction to Robotics: Mechanics and Control",
    "lv_sws_lecturer": "Albu-Schäffer, Alin Olimpiu; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nRegelung moderner Leichtbauroboter (IN2373) (Vorlesung, 2 SWS)\nDietrich A\nIN2373: Regelung moderner Leichtbauroboter | Control of Modern Lightweight Robots"
  },
  {
    "module_id": "IN2375",
    "title": "Computer Vision III: Detection, Segmentation, and Tracking",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 120,
    "hours_presence": 60,
    "examination_achievements": "Der finale Leistungsnachweis ist in Form einer schriftlichen Prüfung zu absolvieren. Die Prüfung umfasst Deep Learning Konzepte und Algorithmen für Objektdetektierung, Segmentierung und Multiple Object Tracking. Dazu müssen die Studierenden ihre Fähigkeit, neuronale Netzte für standard Computer Vision Problem zu entwickeln, zu trainieren und zu optimieren, unter Beweis stellen.\n- Schriftliche Prüfung von 90 Minuten am Ende der Veranstaltung\n- Die Studierenden bekommen einen Notenbonus von 0.3 in der schriftlichen Prüfung, wenn sie\nalle praktischen Aufgaben erfolgreich absolvieren. Die Bearbeitung und Abgabe der Aufgaben erfolgt freiwillig. Die Aufgaben bestehen aus Programmieraufgaben und analytischen Problemen, die sich eng an den Vorlesungsstoff anlehnen. Die eingereichten Aufgaben werden von den Lehrassistenten bewertet, um die erfolgreiche Absolvierung und die Anrechnung auf den Notenbonus festzustellen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "IN2346 Introduction to Deep Learning\nMA0902 Analysis für Informatiker\nMA0901 Lineare Algebra für Informatiker\nKenntnisse in Python und Pytorch sind Voraussetzung für die praktischen Projekte.\nIN2375: Computer Vision III: Detection, Segmentation, and Tracking | Computer Vision III: Detection, Segmentation, and\nTracking",
    "content": "- Proposal-based object detection (Faster-RCNN)\n- One-stage detectors (YOLO, SSD, RetinaNet)\n- Point-based detection\n- Instance segmentation (Mask-RCNN)\n- Semantic segmentation\n- Panoptic segmentation\n- Video object segmentation (OSVOS)\n- Visual object tracking\n- Multiple object tracking\n- Graph neural networks for object tracking\n- 3D object tracking\n- Trajectory prediction",
    "learning_outcomes": "Nach Beendigung dieses Moduls werden die Studierenden ein Verständnis der theoretischen Konzepte hinter Objektdetektierung, Segmentierung und Tracking erlangt haben. Sie werden dabei reale Problem mithilfe von Deep Learning Modellen zu lösen.",
    "teaching_methods": "Die Vorlesungen bieten ausführliche theoretische Hintergründe zu neuronalen Netzen und insbesondere Deep-Learning-Architekturen für Objektdetektierung, Segmentierung und Tracking. Die praktischen Einheiten spielen eine zentrale Rolle, um den Studierenden mit den State-of-the- Art Modellen (in Pytorch) für die obengenannten Anwendungen vertraut zu machen.",
    "media": "Beamer, Tafel, PC",
    "literature": "Lehrbuch (optional): Richard Szeliski. \"Computer Vision: Algorithms and Applications\". Springer\nNature, 2022 (2. Aufl.)\nDas Material basiert hauptsächlich auf aktuellen Forschungsergebnissen.\nReferenzen werden in der Vorlesung angegeben.",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nComputer Vision III: Detektion, Segmentierung und Tracking (IN2375) (Vorlesung mit integrierten\nÜbungen, 4 SWS)\nCremers D [L], Häfner B ( Araslanov N ), Weber S ( Hartwig R, Muhle D )"
  },
  {
    "module_id": "IN2376",
    "title": "Advanced Robot Control and Learning",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 90,
    "hours_presence": 90,
    "examination_achievements": "The students will learn the advanced topics in control and learning methods, and will be able to apply these methods to real robotic systems. The module grade is based on the student’s performance in a one-week hands-on course (practical demonstration and oral presentation), as well as a final oral exam (20 min). This evaluates the students’ knowledge in theoretical aspects of learning and control, and examines whether they are able to apply this to realworld robotic problems, and present results.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "- Fundamentals of control engineering\n- Fundamentals of robotics\n- Fundamentals machine learning\n- Fundamentals of statistics",
    "content": "The Control section covers advanced topics in robot control, modeling and identification. Starting with the fundamental concepts such as differential geometry, it then covers the essential ideas behind the state-of-the-art of control methods in real robotic applications. Moreover, advanced methods are presented for the modeling and IN2376: Advanced Robot Control and Learning | Advanced Robot Control and Learning identification of physical systems and in particular robots. Finally, in the Adaptive Impedance Control section, the theories behind the human motor control are concisely explained and the associated bio-inspired control algorithms are described. The second part of the course covers typical problems in robot learning and approaches to solve them. Beyond that, many practical implications and problems regarding real-world applications are covered. The outline for this course is as follows. I. Differential Geometry in Robotics\n- Manifolds\n- Rigid Body Configuration\n- Tangent and Cotangent Space\n- Tensors\nII. Task Space Control\n- Robot Equations in Task Coordinates\n- SE3 Coordinates and Jacobian Matrix\n- Decoupled Position Control in Task Space\nIII. Redundant Robots\n- Dynamics of Redundant Robots\n- Motion/Torque Null space\n- Null space and Stability\nIV. Passivity-based Robot Control\n- Passivity\n- 1-DoF Robot\n- Passive Representation of a Robot\n- PD-g(q) Control\n- Passivity & Robustness\n- PD-g(q)-Feedforward & PD+ Control\n- Damping Design\n- Slotine & Li Control\n- Joint Control Summary\n- Cartesian Impedance Control\n- Impedance vs. Admittance Control\n- Local Nature of Cartesian Control\nV. Port-based Modeling in Robotics\n- Dirac Structure & Power Ports\n- Port-based Modeling of a Manipulator\n- Passivity Analysis\nVI. Linear Parametric Modeling and Identification of Robot Dynamics\n- Linear Parameterization of the Manipulator’s Dynamic Model\n- The Minimum Parameter Set\n- Parameter Identification\nIN2376: Advanced Robot Control and Learning | Advanced Robot Control and Learning\n- Trajectory Optimization\n- Modeling of Friction\n- Identification Procedure\n- Adaptive Control\nVII. Adaptive Impedance Control\n- Bio-inspired formulation\n- Adaptive impedance control for a manipulator\nVIII. Learning for Physical Systems – Overview\n- Latest advances in machine learning for physical systems\n- Recent applications for autonomous systems\n- Literature overview\nIX. Real-world Problem Classes\n- Motion and manipulation skill learning\n- Blind manipulation\n- Vision-based manipulation\n- Sensitive grasping\n- Compound manipulation tasks\nX. Complexity reduction\n- Expert knowledge vs. data-driven approaches\n- Smart data vs. big data\n- Interaction control architectures\n- Interaction skill formalisms\n- System limits and task context\n- Latent spaces and dimensionality reduction\nXI. Cost function design\n- Feasibility and optimality\n- Unknown constraints\n- Confidence in real-world problems\nXII. Practical implications\n- Simulation vs. real world\n- Experiment design\n- Limitations of physical systems",
    "learning_outcomes": "After successful participation in the module, the students are able to:\n- Understand robotics problems from differential geometry point of view and consequently interpret\ncontrol objectives\n- Identify and determine the Robot Dynamics\n- Solve modern control problems with advanced methods\n- Understand and exploit the concept of redundancy in robotics\n- Design robust controllers\n- Design bio-inspired controllers\n- Understand and use learning methods in robotics\nIN2376: Advanced Robot Control and Learning | Advanced Robot Control and Learning",
    "teaching_methods": "Exercises are made available, presented and discussed during the lessons. Sample solutions are provided. The Robothon introduces the students to real-world problems that ought to be solved in the form of a project. Have a look at previous Robothons when Prof. Haddadin was still in Hannover: https://www.roboterfabrik.uni-hannover.de During the Robothon, students will gain hands-on experience in solving real-world problems using robotic systems. Students will work together in teams, where each team comes up with their own suggestion of a relevant problem which they may solve within one week. The students are responsible for planning out their solution to the respective problem and implementing it. They will be supported throughout the one-week course but are self- sufficient. At the end they will demonstrate their solution live and give a presentation about the methods and approaches they have used. Learning and control are the main theme of the student projects. Example problems are related to the future of robotics in human-robot shared working areas and industries (e.g., performing the peg-in-hole procedure, packing, etc. in the real world), future of mobility and health systems.",
    "media": "- Presentations\n- Exercises with solutions\n- Robot hands-on experience\n- Tutorials",
    "literature": "- Ploen, Scott Robert. Geometric algorithms for the dynamics and control of multi-body systems.\nDiss. UNIVERSITY\nOF CALIFORNIA IRVINE, 1997.\n- Dullemond, Kees, and Kasper Peeters. \"Introduction to Tensor calculus.\" Kees Dullemond and\nKasper Peeters -\n(1991).\n- Khatib, Oussama. \"A unified approach for motion and force control of robot manipulators: The\noperational space\nformulation.\" IEEE Journal on Robotics and Automation 3.1 (1987)\n- Ott, Christian. Cartesian impedance control of redundant and flexible-joint robots. Springer, 2008.\n- Siciliano, Bruno. \"Kinematic control of redundant robot manipulators: A tutorial.\" Journal of\nIntelligent and Robotic\nsystems 3.3 (1990)\nIN2376: Advanced Robot Control and Learning | Advanced Robot Control and Learning\n- Hatanaka, Takeshi, et al. Passivity-Based Control and Estimation in Networked Robotics.\nSpringer, 2015\n- Duindam, Vincent, et al., eds. Modeling and control of complex physical systems: the port-\nHamiltonian approach.\nSpringer Science & Business Media, 2009\n- Khalil, Wisama, and Etienne Dombre. Modeling, identification and control of robots. Butterworth\nHeinemann, 2004\n- Burdet, Etienne, David W. Franklin, and Theodore E. Milner. Human robotics: neuromechanics\nand motor control.\nMIT Press, 2013\n- Argall, Brenna D., et al. \"A survey of robot learning from demonstration.\" Robotics and\nautonomous systems 57.5\n(2009): 469-483.\n- Asfour, Tamim, et al. \"Imitation learning of dual-arm manipulation tasks in humanoid robots.\"\nInternational Journal of\nHumanoid Robotics 5.02 (2008): 183-202.\n- Kober, Jens, J. Andrew Bagnell, and Jan Peters. \"Reinforcement learning in robotics: A survey.\"\nThe International\nJournal of Robotics Research 32.11 (2013): 1238-1274.\n- Van Hoof, Herke, et al. \"Learning robot in-hand manipulation with tactile features.\" 2015 IEEE-\nRAS 15th\nInternational Conference on Humanoid Robots (Humanoids). IEEE, 2015.\n- Nguyen-Tuong, Duy, and Jan Peters. \"Model learning for robot control: a survey.\" Cognitive\nprocessing 12.4 (2011):\n319-340.\n- Pastor, Peter, et al. \"Skill learning and task outcome prediction for manipulation.\" 2011 IEEE\nInternational\nConference on Robotics and Automation. IEEE, 2011.\n- Kalakrishnan, Mrinal, et al. \"Learning force control policies for compliant manipulation.\" 2011\nIEEE/RSJ International\nConference on Intelligent Robots and Systems. IEEE, 2011.\n- Kronander, Klas, and Aude Billard. \"Learning compliant manipulation through kinesthetic and\ntactile human-robot\ninteraction.\" IEEE transactions on haptics 7.3 (2013): 367-380.",
    "lv_sws_lecturer": "Haddadin, Sami; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAdvanced Robot Control and Learning (Übung, 2 SWS)\nHaddadin S [L], Budiman F, Chen L, Haddadin S, Swikir A\nAdvanced Robot Control and Learning (Praktikum, 2 SWS)\nHaddadin S [L], Budiman F, Chen L, Swikir A\nIN2376: Advanced Robot Control and Learning | Advanced Robot Control and Learning\nAdvanced Robot Control and Learning (Vorlesung, 2 SWS)\nHaddadin S [L], Haddadin S, Budiman F, Chen L, Swikir A"
  },
  {
    "module_id": "IN2383",
    "title": "Formale Methoden für Cyber-Physical Systems",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "The final grade is determined by\n- final exam (40% weight),\n- evaluation of programming tests (60% weight).\nThe final exam is a written exam and lasts for 90 min. In case not many students are attending the lecture, the final examination will be oral. Students should demonstrate in the final exam that they are able to develop formally-correct solutions for cyber-physical systems regarding verification, controller synthesis, observation, and conformance checking. The written exam consists of a part with short questions (30 min.) and a second part with mathematical modeling, calculations, derivations, and writing of pseudo code (60 min.). A collection of formulas and tables required to solve the given problems is provided. Students are only allowed to bring pens and a calculator (non-programmable). The question part contains 25-40 % and the other part 60-75 % of the total points. To pass the exam, at least 40 % of the total points have to be achieved. There will be 4-6 programming tests during the semester that will be graded. Each programming test will be performed in a dedicated room where students can use computers provided by us, or use their own machines. The duration of a test is 60-90 min. Each programming task has verifiable intermediate results. For each achieved intermediate result, points are awarded that are translated into a grade based on a grading scheme. The overall grade for the programming tasks is calculated as the mean of all individual programming tests. If a programming test cannot be attended, e.g., due to sickness, we will provide an alternative date where a different task of similar difficulty has to be solved. IN2383: Formale Methoden für Cyber-Physical Systems | Formal Methods for Cyber-Physical Systems",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Cyber-Physical Systems (IN2305)",
    "content": "In many modern systems, computing elements are tightly connected with physical entities for which the term \"cyber-physical systems\" has been established in recent years. Examples are automated vehicles, surgical robots, smart grids, and collaborative human-robot manufacturing. Because cyber-physical systems are becoming increasingly safety-critical due to the ongoing trend towards deeper autonomy, formal methods that prove the correct behavior of systems are gaining importance. This lecture teaches state-of-the-art formal methods by combining theory and hands- on programming sessions.\n- Preliminaries: Set representations and operations, including interval arithmetic and Taylor models\n- Formal verification using reachability analysis; considered system classes: linear systems,\nnonlinear systems, hybrid systems\n- Online verification in uncertain and dynamic environments\n- Safe reinforcement learning\n- Correct-by-construction controller design\n- Robust model predictive control\n- Set-based observers: set-membership approach and interval-observer approach\n- Conformance checking for system identification: observer-based approaches and reachability-\nbased approaches",
    "learning_outcomes": "After attending the module, you are able to verify, control, observe, and identify cyber-physical systems in a provably correct way by using formal methods. The material is taught at a level that enables you to apply the methods for real problems or start a research project on formal methods for cyber-physical systems. In particular, you will acquire the following skills:\n- You understand the benefits of formal methods compared to conventional methods which do not\nprove properties.\n- You can apply interval arithmetic and bound evaluations of functions using Taylor models.\n- You can construct set representations for intervals, zonotopes, ellipsoids, polytopes, and non-\nconvex sets.\n- You can convert set-representations exactly or in an over-approximative way.\n- You can compute set-based operations, such as linear maps, Minkowski sum, or convex hull.\n- You can write software to propagate reachable sets of linear, nonlinear, and hybrid systems.\n- You can abstract dynamical systems to simpler descriptions and compute the associated\nabstraction error.\n- You can create solutions to verify cyber-physical systems during runtime.\nIN2383: Formale Methoden für Cyber-Physical Systems | Formal Methods for Cyber-Physical Systems\n- You can safeguard reinforcement learning techniques using formal methods.\n- You can automatically synthesize formally-correct controllers adhering to input and state\nconstraints.\n- You can integrate reachability analysis in model predictive control to design robust and adaptive\ncontrollers.\n- You can estimate the set of possible states using set-based observers.\n- You understand the difference between the set-membership approach and the interval-observer\napproach for set-based observers.\n- You can check whether a model encloses all real behaviors.\n- You can program solutions to add uncertainty to models so that they include all observed\nbehaviors.",
    "teaching_methods": "The module consists of a lecture and accompanying excercices. The content of the lecture is presented via slides, which are completed during the lecture using the blackboard. In the accompanying excercices, students should solve programming tasks directly related to the taught content. These tasks should be solved at home. Possible solutions are presented during the excercices and compared with the developed solutions of the students. The programming exercises and the discussion during the excercice sessions prepare the students for the programming tests.",
    "media": "Presentation slides, whiteboard, software development tools",
    "literature": "There is not yet a suitable textbook available; we will provide research papers to deepen the\nunderstanding",
    "lv_sws_lecturer": "Althoff, Matthias; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nFormal Methods for Cyber-Physical Systems (IN2383) (Vorlesung mit integrierten Übungen, 4\nSWS)\nAlthoff M [L], Althoff M, Gassert P, Ladner T, Lützow L, Schäfer L, Wetzlinger M"
  },
  {
    "module_id": "IN2384",
    "title": "Numerische Algorithmen für Computer Vision und Maschinelles Lernen",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "- Schriftliche Prüfung von 90 Minuten am Ende des Moduls. Bei einer geringen Teilnehmerzahl\nkann die Prüfung alternativ mündlich durchgeführt werden.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Es wird erwartet, dass alle Teilnehmer gute Kenntnisse in linearer Algebra (Lineare Algebra für\nInformatik MA0901) und Differentialrechnung (Analysis für Informatik MA0902) haben. Außerdem\nsind Grundkenntnisse in den folgenden Gebieten erforderlich:\n- mathematische Optimierung (z.B. Effiziente Algorithmen und Datenstrukturen I IN2003, oder II\nIN2004; oder Operations Research IN0024; etc.),\n- Computer Vision (z.B. Computer Vision I IN2246, oder II IN2228, oder III IN2375; oder Tracking\nand Detection in Computer Vision IN2210; etc.), und\n- Maschinelles Lernen (z.B. Maschinelles Lernen für Computersehen IN2357; oder Introduction to\nDeep Learning IN2346; oder Statistical Foundations of Learning IN2378; etc.).\nIn den Übungen werden Programmieraufgaben gestellt, welche mit Matlab zu lösen sind.",
    "content": "In diesem Modul werden numerische Verfahren behandelt, welche häufig in den Gebieten Computer Vision (CV) und Maschinellem Lernen (ML) vorkommen. Neben den eigentlichen Algorithmen werden insbesondere auch Aspekte der Problemmodellierung behandelt, sodass praktische Probleme in CV und ML gelöst werden können. Es werden u.a. die folgenden Inhalte behandelt: IN2384: Numerische Algorithmen für Computer Vision und Maschinelles Lernen | Numerical Algorithms in Computer Vision and Machine Learning\n- Fehleranalyse und Konditionierung von Problemen\n- Lineare Systeme (Lösbarkeit, Algorithmen, Stabilität, Regularisierung), sowie deren Anwendung\nund Modellierung in CV und ML (z.B. lineare Regression, Bildregistrierung, Dekonvolution)\n- Spektrale Verfahren (Eigenwertzerlegung, Singulärwertzerlegung, entsprechende Algorithmen),\nsowie Anwendungen und Modellierung in CV und ML (z.B. Clustering, Procrustes Analyse, Punktwolkenregistrierung, Hauptkomponentenanalyse)\n- Numerische Optimierung (Gradienten-basierte Verfahren, Optimierungsverfahren zweiter\nOrdnung, Large-scale Optimierung), sowie deren Anwendungen und Modellierung in CV und ML.",
    "learning_outcomes": "Nach Beendigung dieses Moduls sind die Studierenden in der Lage grundlegende numerische Algorithmen zu implementieren, sowie deren Stärken und Schwächen zu verstehen. Außerdem sollen Studierende ein Gespür dafür entwickeln, welche Algorithmen für welche Probleme aus den Bereichen Computer Vision und Maschinellem Lernen am besten geeignet sind. Somit sind sie in der Lage praktische Probleme aus diesen Bereichen effektiv zu lösen.",
    "teaching_methods": "Die wichtigsten Konzepte werden in der Vorlesung behandelt. In den praktischen Einheiten wird das Verständnis durch entsprechende Übungsaufgaben und Diskussionen vertieft. Neben theoretischen Übungsaufgaben wird es auch Programmieraufgaben geben.",
    "media": "Beamer, Tafel, PC",
    "literature": "- Folien aus der Vorlesung\n- Ausgewählte Publikationen\n- Solomon. Numerical Algorithms: Methods for Computer Vision, Machine Learning, and Graphics,\n2015",
    "lv_sws_lecturer": "Cremers, Daniel; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2387",
    "title": "Time Integration and Differential Equations",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Depending on course size either oral exam (30min per student) or 60min written exam. Both options are without additional aids and result in one grade for the course. Questions allow to assess the student’s ability to understand the fundamental concepts and interplay of time and space discretization methods to develop solvers for time dependent partial differential equations.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "MA0902 Analysis for Informatics\nBasic knowledge on numerics (e.g. via course on numerical programming), Basic Python\nprogramming skills for the tutorials",
    "content": "- Basics\n-- Basics of ordinary differential equations\n-- Basics of standard time integration (Runge-Kutta)\n-- Dispersion properties\n-- Splitting methods\n- Partial differential equations (PDEs)\n-- Classification\n-- Analytical properties and solutions\n- Discretization of spatial dimension\n- Discretization of PDE operators\n- DE solvers on high-performance computers\nIN2387: Time Integration and Differential Equations | Time Integration and Differential Equations\n- Advanced time integration (examples)\n-- Semi-Lagrangian Methods\n-- Spectral Deferred Correction Methods\n-- Exponential time integration\n-- Parareal\n-- Parallel Full Approximation Scheme in Space and Time (PFASST)",
    "learning_outcomes": "Upon completion of the module students will be able to develop solvers for initial value problems of certain classes of partial differential equations. Furthermore, they will be able to evaluate some of them regarding various numerical properties. They will be able to understand the interplay between time and various space discretizations. Finally, they will be able to apply advanced time integration methods.",
    "teaching_methods": "Lecture, Tutorials, Assignments for self-study and consolidation",
    "media": "Slides of lectures, excercise sheets with assignments, other working material",
    "literature": "Hairer, E., Norsett, S. P., & Wanner, G. (1987). Solving ordinary differential equations I: Nonstiff\nproblems.\nDurran, D. R. (2010). Numerical Methods for Fluid Dynamics (Vol. 32).\nVarious research papers which will be announced during the course.",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN2404",
    "title": "Mobile Robotik",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Schriftliche Prüfung von 90 Minuten am Ende der Veranstaltung. Bei einer geringen Teilnehmerzahl kann die Prüfung alternativ mündlich durchgeführt werden. Die Studierenden müssen ihre Lösungen zu jeder praktischen und theoretischen Übung bei dem Lehrassistenten zur Bewertung einreichen. Letzteres kann auch geschriebene Software beinhalten, die automatisch oder durch die Lehrassistenten überprüft wird. Die Studierenden bekommen einen Bonus, wenn die Übungen sehr gut waren.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Begeisterung für Mobilie Robotik und Drohnen, sowie solide Mathematik-Grundkenntnisse in\nAnalysis, Linearer Algebra, und Wahrscheinlichkeitsrechnung. Parallel zur Vorlesung wird das\n„Praktikum der mobilen Robotik“ angeboten, und die Teilnahme wird sehr empfohlen, um die hier\nvermittelten Inhalte praktisch in Simulation und auf fliegenden Drohnen umzusetzen.\nWeiter wird die Teilnahme an den folgenden Veranstaltungen sehr empfohlen:\n- Computer Vision II: Multi-View Geometry (IN2228)\n- Robotik (IN2067),\n- Bewegungsplanung in der Robotik (IN2138)\n- Introduction to Deep Learning (IN2346)\n- Motion planning for autonomous vehicles (IN2106, IN0012, IN4221)\nDie Übungen setzen solide Kenntnisse in Python voraus.",
    "content": "I Grundlagen:\n- Repräsentationen von Zustand, Umgebung und Unsicherheit\n- Übersicht von Sensoren und Aktuatoren\nIN2404: Mobile Robotik | Mobile Robotics II Zustandsschätzung mit Sensor-Fusion:\n- Probabilistische nichtlineare Ausgleichsprobleme\n- Kinematik und Dynamische Modelle\n- Rekursive Schätzung\nIII Von SLAM zu Räumlicher KI:\n- Spärliches Visuelles und Visuell-Inertiales SLAM\n- Dichte Kartographierung und SLAM\n- Semantische, Objekt-orientierte und dynamische Kartographierung\nIV Planung und Regelung:\n- Regelung, Modell-basierte und Modell-vorausschauende Regelung\n- Bewegungsplanung und Exploration\n- Bestärkendes Lernen: Bezug zu Modellen, Regelung und Perzeption",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage,\n- die verschiedenen Komponenten der Mobilen Robotik und deren Interaktion von der Perzeption\nüber die Zustandsschätzung, Kartographierung und Regelung zu beschreiben.\n- mit verschiedenen Repräsentationen von Roboter-Zuständen und Karten mathematisch zu\narbeiten.\n- die verschiedenen wahrscheinlichkeitstheoretischen Formulierungen der Sensor-Fusion zur\nZustandsschätzung zu verstehen.\n- moderne SLAM-Systeme inklusive Elementen des Maschinellen Lernens zu verstehen.\n- Navigationsalgorithmen bezüglich Bewegungsplanung und Regelungstechnik zu beschreiben.\n- geeignete Algorithmen für verschiedene Anwendungen der mobilen Robotik zu kreieren.",
    "teaching_methods": "Die Lehrveranstaltung beinhaltet zwei Komponenten:\n- Vorlesungen (2 SWS), in welchen die Theorie vermittelt wird, Grundlagen hergeleitet und\ninteraktiv erarbeitet werden.\n- Übungen (2 SWS), in welchen Aufgaben von den Studierenden selbständig bearbeitet werden,\nmit Unterstützung der Assistenten, teils auf Papier und teils in Python. Bitte beachten Sie, dass parallel zu diesem Modul das „Praktikum der Robotik“ angeboten wird, und wir die Teilnahme sehr empfehlen, da dort die praktischen Elemente dieses Moduls im autonomen MAV-Flug in Simulation und real umgesetzt werden.",
    "media": "PowerPoint, Whiteboard, Übungsblätter, Übungen in Python",
    "literature": "- Vorlesungsfolien\n- Probabilistic Robotics von Thrun, Burgard, Fox, MIT Press 2006",
    "lv_sws_lecturer": "Leutenegger, Stefan; Prof. Dr.\nIN2404: Mobile Robotik | Mobile Robotics\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMobile Robotik (IN2404) (Vorlesung mit integrierten Übungen, 4 SWS)\nLeutenegger S [L], Boche S, Leutenegger S, Schaefer S"
  },
  {
    "module_id": "IN2406",
    "title": "Fundamentals of Artificial Intelligence",
    "level": "Bachelor/Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 6,
    "hours_total": 180,
    "hours_self_study": 105,
    "hours_presence": 75,
    "examination_achievements": "Written exam at the end of the semester lasting 90min. The questions will cover most of the learned material and are typically shorter than the problems solved in the exercise, but similar in difficulty. All questions will be aligned with the learning outcomes. The correct answers to these questions may involve mathematical derivations and calculations. As an incentive to create artificial intelligence oneself, we provide programming challenges: if students solve a required number of programming challenges, they obtain a 0.3 grade bonus for their exam. During the exam, students are allowed to use a pen (color should not be red or green and pencils are not allowed), a non- programmable calculator, and a formula sheet. Whether this formula sheet is provided or can be written by the students will be announced before each exam.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Previous attendance of\n- IN0007 Fundamentals of Algorithms and Data Structures\n- IN0015 Discrete Structures\n- IN0018 Discrete Probability Theory\nis beneficial. However, all content is taught from ground up and the listed lectures are not essential.\nStudents who have not attended these lectures will have to invest additional time.",
    "content": "- Task environments and the structure of intelligent agents.\n- Solving problems by searching: breadth-first search, uniform-cost search, depth-first search,\ndepth-limited search, iterative deepening search, greedy best-first search, A* search. IN2406: Fundamentals of Artificial Intelligence | Fundamentals of Artificial Intelligence\n- Constraint satisfaction problems: defining constraint satisfaction problems, backtracking search\nfor constraint satisfaction problems, heuristics for backtracking search, interleaving search and inference, the structure of constraint satisfaction problems.\n- Logical agents: propositional logic, propositional theorem proving, syntax and semantics of first-\norder logic, using first-order logic, knowledge engineering in first-order logic, reducing first-order inference to propositional inference, unification and lifting, forward chaining, backward chaining, resolution.\n- Bayesian networks: acting under uncertainty, basics of probability theory, Bayesian networks,\ninference in Bayesian networks, approximate inference in Bayesian networks.\n- Hidden Markov models: time and uncertainty, inference in hidden Markov models (filtering,\nprediction, smoothing, most likely explanation), approximate inference in hidden Markov models.\n- Rational decisions: introduction to utility theory, utility functions, decision networks, the value\nof information, Markov decision processes, value iteration, policy iteration, partially observable Markov decision processes.\n- Learning: types of learning, supervised learning, learning decision trees, reinforcement learning.\n- Introduction to robotics: robot hardware, robotic perception, path planning, planning uncertain\nmovements, control of movements, application domains.",
    "learning_outcomes": "After attending the module, you are able to create artificial intelligence on a basic level using search techniques, logics, probability theory and decision theory. Your learned abilities will be the foundation for more advanced topics in artificial intelligence. In particular, you will acquire the following skills:\n- You can analyze problems of artificial intelligence and judge how difficult it is to solve them.\n- You can recall the basic concepts of intelligent agents and know possible task environments.\n- You can formalize, apply, and understand search problems.\n- You understand the difference between constraint satisfaction and classical search problems as\nwell as apply and evaluate various constraint satisfaction approaches.\n- You can critically assess the advantages and disadvantages of logics in artificial intelligence.\n- You can formalize problems using propositional and first-order logic.\n- You can apply automatic reasoning techniques in propositional and first-order logic.\n- You understand the advantages and disadvantages of probabilistic and logic-based reasoning.\n- You can apply and critically asses methods for probabilistic reasoning with Bayesian networks\nand Hidden Markov Models.\n- You understand and know how to compute rational decisions.\n- You have a basic understanding on how a machine learns.\n- You know the basic areas and concepts in robotics.",
    "teaching_methods": "The module consists of a lecture and exercise classes. The content of the lecture is presented via slides, which are completed during the lecture using the blackboard and/or an electronic writing pad. Students are encouraged to additionally study the relevant literature. In the exercise classes, the learned content is applied to practical examples to consolidate the content of the lecture. Students should ideally have tried to solve the problems before they attend the exercise. To IN2406: Fundamentals of Artificial Intelligence | Fundamentals of Artificial Intelligence encourage more participation, students are regularly asked questions or encouraged to participate in online polls. As an incentive to create artificial intelligence oneself, we provide programming challenges: if students solve a required number of programming challenges, they obtain a 0.3 grade bonus for their exam.",
    "media": "Slides, blackboard, electronic writing pad, exercise sheets;",
    "literature": "- P. Norvig and S. Russell: Artificial Intelligence: A Modern Approach,\nPrentice Hall, 4th edition. (English version)\n- P. Norvig and S. Russell: Künstliche Intelligenz: Ein moderner Ansatz,\nPearson Studium, 4. Auflage. (German version)\n- W. Ertel: Grundkurs Künstliche Intelligenz: Eine praxisorientierte\nEinführung, Springer, 4. Auflage.\n- P. Zöller-Greer: Künstliche Intelligenz: Grundlagen und\nAnwendungen, composia, 2. Auflage.\n- D. L. Poole and A. K. Mackworth: Artificial Intelligence: Foundations of\nComputational Agents, Cambridge University Press.\n- P. C. Jackson Jr: Introduction to Artificial Intelligence, Dover\nPublications.",
    "lv_sws_lecturer": "Althoff, Matthias; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nFundamentals of Artificial Intelligence (IN2406) (Vorlesung mit integrierten Übungen, 5 SWS)\nAlthoff M [L], Althoff M, Külz J, Lercher F, Lützow L, Mair S"
  },
  {
    "module_id": "IN2407",
    "title": "Hardwaresicherheit",
    "level": "Master",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 75-minütigen Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit grundlegenden Konzepten und methodischen Vorgehensweisen der Hardwaresicherheit zur Absicherung von Komponenten und Systemen sowie die Vertrautheit mit grundlegenden Algorithmen. Mit kleineren Aufgaben wird die Fähigkeit überprüft, die Auswirkungen von Angriffen darzustellen und Gegenmaßnahmen zu nennen. Weiter wird das Wissen bewertet, Sicherheitskonzepte gezielt und korrekt einzusetzen.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Einführung in die Rechnerarchitektur (IN0004)\nRechensysteme in Einzeldarstellungen: Mikroprozessoren (IN2075)\nIT Sicherheit (IN2209)",
    "content": "Grundlagen der Hardware Security Architektur sicherer eingebetteter Systeme Sicherheitskonzepte für Mikrocontroller und Prozessoren Physikalische Angriffe auf eingebettete Systeme und Gegenmaßnahmen Komponenten für sichere eingebettete Systeme (z.B. PUF, TRNG) Vorstellung und Diskussion praktischer Beispiele in der Übung",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmenden die grundlegenden Konzepte, Methoden und Architekturen zum Schutz von eingebetteten Systemen vor Manipulation und physikalischen Angriffen auf einem grundlegenden, praxisorientierten, IN2407: Hardwaresicherheit | Hardware Security wissenschaftlichen Niveau. Sie verstehen die Ursachen von Schwachstellen aktueller eingebetteter Systeme, sowie logische und physikalische Methoden zur Ausnutzung dieser Schwachstellen. Weiter können sie die Zusammenhänge zwischen Schutzmechanismen und den damit adressierten Problemen wiedergeben und auf Fallbeispiele anwenden.",
    "teaching_methods": "Vorlesung ergänzt durch Übung, um das Verständnis für konzeptionelle und technische Sachverhalte anhand konkreter Aufgabenstellungen und praktischer Fallbeispiele zu vertiefen.",
    "media": "Folien",
    "literature": "Hardware Security : A Hands-On Learning Approach, S Bhunia, M. Tehranipoor, Elsevier, 2018\nPower Analysis Attacks: Revealing the Secrets of Smart Cards, S. Mangard, E. Oswald, Th. Popp,\nSpringer, 2007",
    "lv_sws_lecturer": "Eckert, Claudia; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nHardware Security (IN2407) (Vorlesung mit integrierten Übungen, 4 SWS)\nEckert C [L], Eckert C, von Tschirschnitz M"
  },
  {
    "module_id": "IN3050",
    "title": "Ausgewählte Themen aus dem Bereich Software Engineering",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit den wesentlichen Konzepten in einem ausgewählten Bereich von Software Engineering. Transferaufgaben und kleine Szenarien überprüfen die Fähigkeit, diese Konzepte systematisch und qualifiziert anzuwenden und zu bewerten.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Bachelor Informatik",
    "content": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Software Engineering an. Studierende des Masterstudienganges Informatik können eine dieser Veranstaltungen als Wahlveranstaltung aus dem Fachgebiet Software Engineering (SE) wählen. Umfang und Anzahl der Credits variieren.",
    "learning_outcomes": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Software Engineering und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
    "teaching_methods": "Vorlesung, möglicherweise Tutor- oder Zentralübung",
    "media": "Folienpräsentation, Tafelanschrieb, eventuell online Programmierung und/oder Animationen\nIN3050: Ausgewählte Themen aus dem Bereich Software Engineering | Selected Topics in Software Engineering",
    "literature": "ausgewählte Artikel aus Konferenzen und Zeitschriften",
    "lv_sws_lecturer": "Brügge, Bernd; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN3150",
    "title": "Ausgewählte Themen aus dem Bereich Künstliche Intelligenz und Robotik",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit den wesentlichen Konzepten in einem ausgewählten Bereich von Künstlicher Intelligenz und Robotik. Transferaufgaben und kleine Szenarien überprüfen die Fähigkeit, diese Konzepte systematisch und qualifiziert anzuwenden und zu bewerten.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Bachelor Informatik",
    "content": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Künstliche Intelligenz und Robotik an. Studierende des Masterstudienganges Informatik können dieses Modul einmal als Wahlmodul aus dem Fachgebiet Künstliche Intelligenz und Robotik (KIR) wählen.",
    "learning_outcomes": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Künstlicher Intelligenz und Robotik und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
    "teaching_methods": "Mit Hilfe einer Folien- oder Tafelpräsentation stellt die Vorlesung ausgewählte Konzepte und Techniken aus dem Bereich Künstliche Intelligenz und Robotik vor und erläutert sie an Beispielen. IN3150: Ausgewählte Themen aus dem Bereich Künstliche Intelligenz und Robotik | Selected Topics in Artificial Intelligence and Robotics In möglicherweise begleitenden Übungen wird anhand geeigneter Aufgaben das Verständnis der Inhalte des Moduls vertieft und die Anwendung der verschiedenen Techniken zum eigenständigen Lösen überschaubarer Problemstellungen geübt.",
    "media": "Folien, Tafelarbeit, Übungsblätter, Übungsaufgaben, Vortrag",
    "literature": "Originalliteratur (z.B. Beiträge in Zeitschriften oder Konferenzbänden), abhängig vom Thema",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAutonomes Fahren (IN2356) (Vorlesung, 2 SWS)\nKnoll A [L], Lenz A, Waschulzik T"
  },
  {
    "module_id": "IN3250",
    "title": "Ausgewählte Themen aus dem Bereich Rechnerarchitektur",
    "level": "",
    "language": "Master",
    "semester_duration": "Deutsch/Englisch",
    "frequency": "Einsemestrig",
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit den wesentlichen Konzepten in einem ausgewählten Bereich von Rechnerarchitektur. Transferaufgaben und kleine Szenarien überprüfen die Fähigkeit, diese Konzepte systematisch und qualifiziert anzuwenden und zu bewerten.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Bachelor Informatik",
    "content": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Rechnerarchitektur an. Studierende des Masterstudienganges Informatik können eine dieses Modul einmal als Wahlmodul aus dem Fachgebiet Rechnerarchitektur (RA) wählen.",
    "learning_outcomes": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen der Rechnerarchitektur und können sich mit neuesten Forschungsprojekten auseinandersetzen.",
    "teaching_methods": "Mit Hilfe einer Folien- oder Tafelpräsentation stellt die Vorlesung ausgewählte Konzepte und Techniken aus dem Bereich Rechnerarchitektur vor und erläutert sie an Beispielen. In möglicherweise begleitenden Übungen wird anhand geeigneter Aufgaben das Verständnis der Inhalte des Moduls IN3250: Ausgewählte Themen aus dem Bereich Rechnerarchitektur | Selected Topics in Computer Architecture vertieft und die Anwendung der verschiedenen Techniken zum eigenständigen Lösen überschaubarer Problemstellungen geübt.",
    "media": "Folien, Tafelarbeit, Übungsblätter, Übungsaufgaben, Vortrag",
    "literature": "Originalliteratur (z.B. Beiträge in Zeitschriften oder Konferenzbänden), abhängig vom Thema",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN3350",
    "title": "Ausgewählte Themen aus dem Bereich Formale Methoden und ihre Anwendungen",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Unregelmäßig",
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit den wesentlichen Konzepten in einem ausgewählten Bereich von Formalen Methoden und ihren Anwendungen. Transferaufgaben und kleine Szenarien überprüfen die Fähigkeit, diese Konzepte systematisch und qualifiziert anzuwenden und zu bewerten.",
    "repetition": "Semesterende",
    "recommended_prerequisites": "Bachelor Informatik",
    "content": "Verschiedene Dozenten bieten Lehrveranstaltungen zu ausgewählten Themen aus dem Bereich Formale Methoden und ihre Anwendungen an. Studierende des Masterstudienganges Informatik können dieses Modul einmal als Wahlmodul aus dem Fachgebiet Formale Methoden und ihre Anwendungen (FMA) wählen.",
    "learning_outcomes": "Teilnehmer kennen den Stand der Forschung/Technik in ausgewählten Bereichen von Formalen Methoden und ihren Anwendungen und können sich mit neuesten Forschungsprojekten auseinandersetzen. IN3350: Ausgewählte Themen aus dem Bereich Formale Methoden und ihre Anwendungen | Selected Topics in Formal Methods and their Applications",
    "teaching_methods": "Mit Hilfe einer Folien- oder Tafelpräsentation stellt die Vorlesung ausgewählte Konzepte und Techniken aus dem Bereich Formale Methoden und ihre Anwendungen vor und erläutert sie an Beispielen. In möglicherweise begleitenden Übungen wird anhand geeigneter Aufgaben das Verständnis der Inhalte des Moduls vertieft und die Anwendung der verschiedenen Techniken zum eigenständigen Lösen überschaubarer Problemstellungen geübt.",
    "media": "Folienpräsentation, Tafelanschrieb, eventuell online Programmierung und/oder Animationen",
    "literature": "ausgewählte Artikel aus Konferenzen und Zeitschriften",
    "lv_sws_lecturer": "Seidl, Helmut; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN3450",
    "title": "Ausgewählte Themen aus dem Bereich Rechnerarchitektur, Rechnernetze und Verteilte Systeme",
    "level": null,
    "language": null,
    "semester_duration": null,
    "frequency": null,
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "IN3450: Ausgewählte Themen aus dem Bereich Rechnerarchitektur, Rechnernetze und Verteilte Systeme | Selected\nTopics in Computer Architecture, Computer Networks and Distributed Systems",
    "lv_sws_lecturer": "Schulz, Martin; Prof. Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAusgewählte Themen aus dem Bereich Rechnerarchitektur, Rechnernetze und Verteilte Systeme:\nDigital Twin Technology (IN3450) (Vorlesung, 3 SWS)\nGerndt H [L], Gerndt H, Gupta A"
  },
  {
    "module_id": "IN3460",
    "title": "Ausgewählte Themen aus dem Bereich Robotik",
    "level": null,
    "language": null,
    "semester_duration": null,
    "frequency": null,
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "IN3460: Ausgewählte Themen aus dem Bereich Robotik | Selected Topics in Robotics\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN3470",
    "title": "Ausgewählte Themen aus dem Bereich Sicherheit und Datenschutz",
    "level": null,
    "language": null,
    "semester_duration": null,
    "frequency": null,
    "credits": 5,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "IN3470: Ausgewählte Themen aus dem Bereich Sicherheit und Datenschutz | Selected Topics in Security and Privacy\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nAusgewählte Themen aus dem Bereich Verteilte Systeme und Rechnernetze - Blockvorlesung\nNetzwerkmechanismen (IN3470) (Vorlesung, 4 SWS)\nCarle G [L], Carle G, Glas K, Rezabek F, Cuellar J, Genchev S, von Seck R"
  },
  {
    "module_id": "IN4590",
    "title": "Seminar Codegenerierung und Innovative Programmiermodelle",
    "level": "Master",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 90,
    "hours_presence": 30,
    "examination_achievements": "seminar paper (8-10 pages) and presentation.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "first 2 years of the Bachelor's Program",
    "content": "In this seminar we discuss novel programming models and code generation techniques with a focus on modern processor architectures like multiprocessors, graphic accelerators, high performance computers, and field programmable gate arrays (FPGAs).",
    "learning_outcomes": "The participants acquire the necessary methodological and interdisciplinary skills for dealing with an academically demanding topic in the area of innovative programming models and code generation. They know how to produce and present a scientific seminar paper. They can analyze and evaluate the results by contrasting them. They can work with scientific literature (search, evaluation, citation) and are able to present the constituent aspects of their topic in both a written paper and a presentation in front of the group.",
    "teaching_methods": "seminar work IN4590: Seminar Codegenerierung und Innovative Programmiermodelle | Advanced Seminar Course Code Generation Techniques and Innovative Programming Models",
    "media": "",
    "literature": "Scientific publications in the area of innovative code generation and programming models",
    "lv_sws_lecturer": "Weidendorfer, Josef; PD Dr. rer. nat.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar: Next-Gen Programming Interfaces and Compilers (IN0014, IN2107, IN4590) (Seminar, 2\nSWS)\nEngelke A, Petter M, Weidendorfer J"
  },
  {
    "module_id": "IN4690",
    "title": "Seminar Software Engineering in Computational Intensive Applications",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 90,
    "hours_presence": 30,
    "examination_achievements": "seminar paper and presentation.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "",
    "content": "Applications from the so-called 'Computational Domains' are becoming more and more complex, and thus have opened the door to many new possibilities but also to new challenges concerning software development. These applications are developed for simulation of scientific phenomina, engineering designs, scientific visualization and many other important problems that usually invovle enormous data set, complex modelling and calculations. High Performance Computing (HPC) is often associted with such applications to solve advanced computation problems. Design, implementation, development, and maintenance of Computational Intensive Applications (CIA) differ in several ways from traditional software engineering, as the major focus is on performance over the complexity management of software applications. The main goals of CIAs are to evaluate the scientific computing approaches and generating the computation results. Therefore, most of the time and efforts are applied on how to achieve accurate and stable results while efficiently utilizing the computational power. On the other hand, the comprehensibility, maintainability, reusability and extensibility of the software remains a minor issue of concern. For IN4690: Seminar Software Engineering in Computational Intensive Applications | Advanced Seminar Course - Software Engineering in Computational Intensive Applications this reason, it is necessary to optimize the quality of the CSE research software since they have to be evolved for a long period of time to better assist the research. In this seminar, we will discuss how to apply and adapt software engineering methodologies and tools in the domain of CIAs development. This will give an opportunity to utilize the knowledge of traditional software engineering, to solve domain-specific problems.",
    "learning_outcomes": "The participants acquire the necessary methodological and interdisciplinary skills for dealing with an academically demanding topic in the area of software engineering in computational intensive applications. They know how to produce and present a scientific seminar paper. They can analyze and evaluate the results by contrasting them. They can work with scientific literature (search, evaluation, citation) and are able to present the constituent aspects of their topic in both a written paper and a presentation in front of the group.",
    "teaching_methods": "seminar work",
    "media": "",
    "literature": "Scientific publications in the area software engineering in computational intensive applications",
    "lv_sws_lecturer": "Brügge, Bernd; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN8003",
    "title": "Informatik",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 90,
    "hours_presence": 60,
    "examination_achievements": "Prüfungsart: Klausur Die Prüfungsleistung wird in Form einer 60-minütigen Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit den behandelten Grundkonzepten der Informatik. Kleine Programmier- und Modellierungsaufgaben überprüfen die Fähigkeit, die erlernten Programmier- und Querysprachen und Modellierungstechniken praktisch grundlegend zur Lösung kleinerer Probleme anwenden zu können. Im Falle epidemiologischer Notsituationen oder vergleichbarer Notsituationen kann an die Stelle der Klausur eine benotete elektronische Übungsleistung oder ein Proctered Exam treten. Falls sich nur wenige Studierende zur Prüfung anmelden, kann die Prüfung nach Ansprache mit den Studierenden auch als mündliche Prüfung abgehalten werden.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Empfohlene Voraussetzungen sind die Mathematikmodule des ersten Studienjahrs der beteiligten\nStudiengänge.",
    "content": "In dem Modul werden beispielhaft folgende Inhalte behandelt:\n- Datenbankmanagementsysteme, ER-Modellierung, relationale Algebra und SQL\n- Java als Programmiersprache:\n++ Grundsätzliche Konstrukte imperativer Programmierung (if, while, for, Arrays etc.) ++ Objektorientiertes Programmieren (Vererbung, Interfaces, Polymorphie etc.) ++ Grundlagen von Exception Handling und Generics IN8003: Informatik | Introduction to Informatics ++ Code-Conventions ++ Java Klassenbibliothek\n- Grundlagen von Visual Basic for Applications\n- Grundlegende Algorithmen und Datenstrukturen:\n++ Algorithmusbegriff, Komplexität ++ Datenstrukturen für Sequenzen (verkettete Listen, Arrays, Stacks & Queues) ++ Rekursion ++ Hashing (Chaining, Probing) ++ Suchen (Binäre Suche, balancierte Suchbäume) ++ Sortieren (Insertion-Sort, Selection-Sort, Merge-Sort)",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme an Vorlesung und Übung sind die Studierenden in der Lage, wichtige Grundbegriffe, Konzepte und Denkweisen der Informatik, speziell objektorientiertes Programmieren, Datenbanken & SQL und grundlegende Algorithmen und Datenstrukturen zu verstehen, zu überblicken und zur Entwicklung eigener Programme mit Datenbankanbindung grundlegend anwenden zu können.",
    "teaching_methods": "Vorlesung und praktische Zentralübung: In der Zentralübung wird das Verständnis der Konzepte aus der Vorlesung anhand von Beispielaufgaben vertieft und praktische Programmierfähigkeiten vermittelt. Zentralübung und Vorlesung sind eng miteinander verzahnt. Selbständig zu erledigende praktische Hausaufgaben üben die praktischen Grundfertigkeiten im Programmieren und Modellieren ein, um die im Selbststudium der Begleitmaterialien zur Vorlesung und Zentralübung erworbenen Kenntnisse zur Lösung kleinerer Probleme selbständig anwenden zu können.",
    "media": "Folienpräsentation, Tafelanschrieb, Vorlesungs- und Zentralübungsaufzeichnung, Diskussionsforen\nin E-Learning Plattformen.",
    "literature": "Kapitel aus Lehrbüchern, die in der Vorlesung als empfohlene Literatur zu den jeweiligen Themen\nbekannt gegeben werden und den Studierenden online zur Verfügung gestellt werden.",
    "lv_sws_lecturer": "Groh, Georg; Prof. Dr. rer. nat. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEinführung in die Informatik für andere Fachrichtungen (IN8003) (Vorlesung mit integrierten\nÜbungen, 4 SWS)\nGroh G"
  },
  {
    "module_id": "IN8011",
    "title": "Informatik I für Ingenieurwissenschaften",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 75,
    "hours_presence": 75,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer 90 minütigen Klausur erbracht. Wissensfragen überprüfen die Vertrautheit mit Konzepten der Informatik und der Programmierung, kleine Programmieraufgaben überprüfen die Fähigkeit, mit maßgeschneiderten Algorithmen Probleme zu lösen und kleine Anwendungen zu realisieren. Die erfolgreiche Bearbeitung der Hausaufgaben kann als Bonus mit maximal 30% in die Bewertung der Klausur einfließen. Die genauen Regelungen hierzu werden rechtzeitig zu Beginn des Moduls bekannt gegeben.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "keine spezifischen Voraussetzungen",
    "content": "Die Vorlesung soll Grundkonzepte objektorientierter Programmiersprachen vermitteln und in grundlegende Techniken der Programmierung einführen. Am Beispiel einer modernen objektorientierten Programmiersprache wie C++ sollen Kontrollstrukturen wie Iteration und Rekursion sowie einfache Ansätze zur Strukturierung von Programmen durch Klassen und Vererbung behandelt werden. Es werden einfache Datenstrukturen wie Felder, Listen, Bäume und Hash Maps eingeführt und Algorithmen zum Lösen elementarer Probleme wie Sortieren oder Suchen behandelt. Zu Beginn wird in kompakter Form in das Arbeiten mit Werkzeugen des Wissenschaftlichen Rechnens wie Maple oder Matlab eingeführt.",
    "learning_outcomes": "Nach der erfolgreichen Teilnahme an diesem Modul verstehen die Teilnehmer die wesentlichen Konzepte der Informatik mit Blick auf die Programmierung auf einem grundlegenden, praxis- IN8011: Informatik I für Ingenieurwissenschaften | Engineering Informatics I orientierten, aber wissenschaftlichen Niveau. Sie sind dann in der Lage, in C oder einer objektorientierten Sprache wie C++ überschaubare algorithmische Probleme zu lösen und einfache Anwendungen zu programmieren.",
    "teaching_methods": "Mit Hilfe einer Folien- oder Tafelpräsentation stellt die Vorlesung wesentliche Konzepte der Informatik generell und der gewählten Programmiersprache vor und erläutert an Beispielen, wie diese auf typische Problemstellungen angewendet werden können. In den begleitenden Übungen wird das Verständnis der Inhalte der Vorlesung vertieft und das Beherrschen der Programmiersprache durch die Bewältigung kleinerer Programmieraufgaben geübt.",
    "media": "Folienpräsentation, Tafelanschrieb, eventuell online Programmierung und/oder Animationen",
    "literature": "Griffiths, David; Grffiths, Dawn\nHead First C, 1st edition\nO'Reilly, 2012\nShaw, Z.A\nLearn C the Hard Way, 1st edition\n2016\nKernighan, B.W.; Richtie, D.M.\nThe C Programming Language, 2nd edition\nPrentice Hall, 2012\nPerry, G.; Miller, D.\nC Programming Absolute Beginner's Guide, 3rd edition\nPearson Education, 2015\nHerold, H.; Lurz, B.; Wohlrab, J.\nGrundlagen der Informatik\nPearson Studium, 2007",
    "lv_sws_lecturer": "Seidl, Helmut; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nInformatik I für Ingenieurwissenschaften (BSc. Engineering Science) (IN8011) (Vorlesung, 2 SWS)\nMendl C\nIN8011: Informatik I für Ingenieurwissenschaften | Engineering Informatics I\nÜbungen zu Informatik I für Ingenieurwissenschaften (BSc. Engineering Science) (IN8011) (Übung,\n3 SWS)\nMendl C, Nibbi M"
  },
  {
    "module_id": "IN8014",
    "title": "Eingebettete Vernetzte Systeme",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 5,
    "hours_total": 150,
    "hours_self_study": 105,
    "hours_presence": 45,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur erbracht. In dieser soll nachgewiesen werden, dass spezifische Probleme von Echtzeitsystemen verstanden wurden und durch den Einsatz geeigneter Algorithmen und Simulationen gelöst werden können. Hilfsmittel sind nicht erlaubt. Prüfungsdauer: 90 Minuten",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Keine",
    "content": "Die Vorlesung behandelt die speziellen Methoden, Lösungen und Probleme aus dem Bereich der Echtzeitsysteme. Der Inhalt umfasst die Motivation und Ausarbeitung der Unterschiede zu Nicht- Echtzeitsystemen, Modellierung von Echtzeitsystemen, Nebenläufigkeit, Scheduling, spezielle Betriebssysteme und Programmiersprachen, Uhren, echtzeitfähige Kommunikation, sowie eine Einführung in fehlertolerante Systeme.",
    "learning_outcomes": "Nach der Teilnahme an den Modulveranstaltungen sind die Studierenden in der Lage die speziellen Anforderungen von Echtzeitsystemen zu analysieren. Die Studierenden können aus einer Vielzahl von Lösungen für die relevanten Aspekte der Echtzeitsysteme (Modellierungskonzepte, Schedulingalgorithmen, Betriebssysteme, Programmiersprachen, etc.) die passenden Lösungen auszuwählen und umsetzen. Sie verstehen die typischen Probleme der nebenläufigen Programmierung und kennen die verschiedenen Mechanismen zur Problemlösung. IN8014: Eingebettete Vernetzte Systeme | Embedded Networked Systems",
    "teaching_methods": "- Vorlesung\n- Gruppenübungen mit Tutorunterstützung zu Themen der Programmierung von Echtzeitsystemen\n- Projektarbeit in Kleingruppen zur Entwicklung von Echtzeitsystemen\n- Programmieraufgaben als Hausaufgabe",
    "media": "Folien, Übungsblätter",
    "literature": "a) Hermann Kopetz: Real-Time Systems, 1997\nb) Jane W. S. Liu: Real-Time Systems, 2000\nc) Alan Burns, Andy Wellings: Real-Time Systems and Programming Languages, 2001\nd) Maurice Herlihy, Nir Shavit: The Art of Multiprocessor Programming, 2008",
    "lv_sws_lecturer": "Knoll, Alois Christian; Prof. Dr.-Ing. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nEingebettete Vernetzte Systeme (BSc. Engineering Science) (IN8014) (Vorlesung, 3 SWS)\nKnoll A [L], Knoll A, Lenz A"
  },
  {
    "module_id": "IN8016",
    "title": "Internetpraktikum für EI",
    "level": "Bachelor",
    "language": "Deutsch/Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 9,
    "hours_total": 270,
    "hours_self_study": 90,
    "hours_presence": 180,
    "examination_achievements": "Examination with the following elements:\n- 2 oral attestations\n- 9 assignments (graded)",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "The following requirements should be fulfilled:\n- Basic unterstanding of computer networks\n- Basic knowledge of Linux (command line)",
    "content": "The course consists of 9 assignments (\"labs\"): 1) The Basics (ISO/OSI model, Ethernet, IP, ARP, ICMP, TCP, UDP, Linux tools and sniffers) 2) Static Routing (IP addressing, IP forwarding, Cisco IOS) 3) Dynamic Routing (RIP and OSPF on both Linux and Cisco IOS) 4) TCP/UDP (fragmentation, connection establishment and teardown, measuring the TCP curves) 5) DNS (Setting up a multi-level DNS hierarchy, DNS caching, DNSSec, IPv6 records) 6) NAT/DHCP/IPv6 (NAT setup, NAT and FTP, DHCP setup, IPv6 intro, 6to4-tunnels, IPv6 fragmentation handling) 7) Security 1 (Apache setup, NMAP, firewalls) 8) Security 2 (IPSec, VPN) 9) Wireless LAN (encryption, breaking WEP, WPA, WPA-EPA, MAC IN8016: Internetpraktikum für EI | Internet Lab for EI [Ilab] filters)",
    "learning_outcomes": "At the end of the module students have a thorough understanding of computer networks and protocols. Furthermore, students learn to work with Linux and get familiar with the Cisco IOS.",
    "teaching_methods": "Assignments are done in groups of exactly two students to encourage students to work in teams and to support each other. For the whole Ilab our Elearning system (http://ilab.net.in.tum.de) is used. Labs are divided into two parts: 1) A theoretical part where students learn the basics necessary for the respective lab. A lecture of 90min accompanies this theoretical part. At the end of the theoretical part, students have to take a short multiple choice examination which is done online before proceeding to the practical exercises. 2) The practical part consists of\n- setting up the lab environment,\n- performing the exercises, and\n- answering questions online to each exercise",
    "media": "The following kinds of media are used:\n- Lecture slides\n- Elearning system\n- Hands-on exercises",
    "literature": "No special literature is recommended.",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN8018",
    "title": "Internetpraktikum 2 für EI",
    "level": null,
    "language": null,
    "semester_duration": null,
    "frequency": null,
    "credits": 10,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Carle, Georg; Prof. Dr.-Ing.\nIN8018: Internetpraktikum 2 für EI | Internet Lab 2 for EI\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN8022",
    "title": "Praktikum - iOS",
    "level": null,
    "language": null,
    "semester_duration": null,
    "frequency": null,
    "credits": 10,
    "hours_total": null,
    "hours_self_study": null,
    "hours_presence": null,
    "examination_achievements": "",
    "repetition": "",
    "recommended_prerequisites": "",
    "content": "",
    "learning_outcomes": "",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Brügge, Bernd; Prof. Dr.\nIN8022: Praktikum - iOS | Practical Course iOS\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nPraktikum - iPraktikum, iOS Praktikum (IN0012, IN2106, IN2175, IN2128, IN4049) (Praktikum, 6\nSWS)\nKrusche S [L], Krusche S, Linhuber M, Sölch M"
  },
  {
    "module_id": "IN8028",
    "title": "Project Work in Informatics",
    "level": "Bachelor",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 12,
    "hours_total": 360,
    "hours_self_study": 330,
    "hours_presence": 30,
    "examination_achievements": "The module grade is based on a research paper (6-8 pages in IEEE double column conference format) and a presentation (20 minutes). The research paper summarizes the results of the project work until the end of the semester. By writing the research paper, students show their ability to work and write scientifically. In the research paper students demonstrate that they are able to apply knowledge and methods within a research project in the field of Informatics. They show that they can work out important questions related to the research problem. At the end of the lecture period, participants give a 20-minute talk summarizing their results. Students show their ability to present their results in a structured and comprehensible manner. Moreover, they demonstrate that they are able to respond competently to questions related to their topic. Each team member should contribute to the presentation. At the end of the semester students have to hand in a declaration, which summarizes the exact contributions for each team member (for the research paper, for the written code, for the conducted evaluation experiments, or for other products and activities of the research project). Additionally, regular supervision meetings with the supervisor and advisors and the project report ensure that student contributions may be assessed on an individual basis. The team member’s individual project contributions and submitted work is graded by the supervisor.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "• IN8005 Introduction to Informatics for Students of Management and & Technology\n• IN8027 Introduction to Informatics for Students of Management & Technology – Programming\nLab Course\nIN8028: Project Work in Informatics | Project Work in Informatics",
    "content": "The project work centers on a research question in the field of work of the supervisor and the advisor (typically a doctoral student). Students experience hands-on work in a project, where they work together in teams. They pass through the whole process of a small scientific project. The content depends on the research question and the elements of scientific project work. Example content: In a design science methodology driven research program, an intermediate technological artifact (e.g. a software system) has been developed as an intermediate result by the advisor under the guidance of the supervisor. As an example, consider a user interface for an interactive visual data-exploration system. The project work of the student team may consist in systematically evaluating this technological artifact with the help of human study participants in focus groups. The contents of the module then encompass quantitative and qualitative evaluation methods, the technology of the artifact, content elements of the theoretical background of the research question / research field (e.g. UI-Design, Information Visualization, Data-Mining).",
    "learning_outcomes": "Upon successful completion of the module, participants are able to apply knowledge and methods in a research project in the field of Informatics. They have deepened and further cross-linked their understanding of Informatics and the Informatics-related topics acquired by the third-semester modules IN8005, IN8027 (Introduction to Informatics for Students of Management & Technology – Programming Lab Course). Students are able to analyze elements of the solution space of the given research problem in a team under given technical, economic and social constraints. In doing so, they can work out important questions related to the research problem in an Informatics field and clarify them in close coordination with experts from this area. They are able to apply the theoretical knowledge acquired in the third semester such as a basic understanding of Machine Learning and practical capabilities such as programming in Java, using Machine Learning Libraries, or practical Software Engineering skills to an Informatics research- problem and develop their own solutions or solution contributions to the related research questions in a team. They are able to prepare the solution developed in the project in such a way that they can present it to application experts in a written form and orally. Students acquire missing Informatics knowledge and skills related to the research question of the project by private study under the guidance of the advisors.",
    "teaching_methods": "The module consists of project work. Teaching format: individual consulting by the supervisor and advisor(s) (individual appointments between team and advisor). Learning method: self-study and project work in a team under supervision of the advisors. Self-study is an appropriate learning method regarding the intended learning goals, because the students train to efficiently acquire required knowledge and skills in Informatics to a degree that allows them (in collaboration with Informatics experts) to understand basic aspects of a scientific problem in Informatics, it’s basic solution space and related technology without having to master IN8028: Project Work in Informatics | Project Work in Informatics all details of this knowledge and skills. This is a core skill for future managers in technology-related fields. Project work in a team is an appropriate learning method because students deepen their interdisciplinary team-working skills in a technological field, which is another core skill or future managers. Team size is 2-4 students.",
    "media": "Will be announced by supervisor before the project starts.",
    "literature": "General literature to project management:\nRowe, S. (2015). Project Management for Small Projects, 2nd Edition. Oakland: Berrett-Koehler\nPublishers.\nSpecific literature will be announced by the supervisor before the project starts.",
    "lv_sws_lecturer": "Groh, Georg; Prof. Dr. rer. nat. habil.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  },
  {
    "module_id": "IN9017",
    "title": "Existenzgründung",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Sommersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 90,
    "hours_presence": 30,
    "examination_achievements": "Mit einer wissenschaftlichen Ausarbeitung (5 - 10 Seiten) weisen die Studierenden nach, dass sie den Aufbau und die Logik des Businessplans verstehen und in der Lage sind, eine Geschäftsidee zu entwickeln und die Ergebnisse und Beiträge der Diskussionen für diese Entwicklung zu nutzen. In der Abschlusspräsentation (20 min.) zeigen die Studierenden, dass sie in der Lage sind, die Geschäftsidee kompakt und schlüssig darzustellen.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "keine",
    "content": "1. Rechtsformen 2. Finanzierung 3. Geistiges Eigentum 4. Steuerrecht 5. Marketing und Vertrieb 6. Businessplanerstellung",
    "learning_outcomes": "Nach der Teilnahme kennen die Studierenden wesentliche Prinzipen der Unternehmensgründung und sind mit den Grundlagen der Businessplanerstellung vertraut. Sie können eine (reale oder fiktive) Geschäftsidee mit Hilfe des Businessplans bis zur Gründungsreife entwickeln. Dabei sind sie in der Lage, die Geschäftsidee und die zentralen Aspekte des Businessplans in kompakter Form einem Publikum verständlich zu erläutern. IN9017: Existenzgründung | Entrepreneurship",
    "teaching_methods": "Zunächst werden die grundlegenden Themen von den Dozenten vorgestellt und im Seminar diskutiert. Danach entwickeln die Teilnehmer in Gruppen eigene Geschäftsideen. Diese Ideen werden in der Gruppe mit den Dozenten beraten und in einem weiteren Entwicklungsschritt im Plenum vorgestellt und diskutiert. Bei der Abschlusspräsentation sind auch externe Experten anwesend und diskutieren das Ergebnis.",
    "media": "Vortrag mit Folien",
    "literature": "Handbuch Businessplan Erstellung vom Münchener Businessplan Wettbewerb",
    "lv_sws_lecturer": "Gerndt, Hans Michael; Prof. Dr.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nSeminar - Existenzgründung (IN9017) (Seminar, 2 SWS)\nGerndt H"
  },
  {
    "module_id": "IN9036",
    "title": "Master Your Thesis!",
    "level": "Master",
    "language": "Englisch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester",
    "credits": 4,
    "hours_total": 120,
    "hours_self_study": 90,
    "hours_presence": 30,
    "examination_achievements": "Assesment method: research paper The examination consists of two houseworks (both as preparation for master´s thesis) and a short presentation of the preliminary proposal followed by a discussion in the group. The houseworks shall verify that the theoretical knowledge of the scientific methods can be applied according to their own topic. The presentation shall verify that skills such as material selection, design and layout, time management during the presentation, presentation style and interaction with the audience can be applied.",
    "repetition": "",
    "recommended_prerequisites": "To participate actively, students will need solid skills in English language.",
    "content": "This course will focus on the following:\n- How to meet the formal requirements of the master´s thesis\n- How to structure a document by outlining\n- What makes a good title\n- How to establish logical text flow\n- How to debug one´s own text\n- How to incorporate feedback",
    "learning_outcomes": "At the end of the module students will be able to\n- Write an applicable thesis proposal in English.\nIN9036: Master Your Thesis! | Master Your Thesis!\n- Develop an outline for their envisioned thesis.\n- Detail the outline of a thesis section.\n- Formulate a (working) title of their thesis.\n- Analyze sources to identify strong arguments.\n- Establish logical flow on paragraph and document level.\n- Articulate a scientific argument using different rhetorical strategies.",
    "teaching_methods": "Seminar",
    "media": "PowerPoint, Slides, Flipchart",
    "literature": "Will be announced in the seminar",
    "lv_sws_lecturer": "Burschka, Darius; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):\nMaster your thesis (Überfachliche Grundlagen) (IN9036) (Seminar, 2 SWS)\nBurschka D [L], Balazs A"
  },
  {
    "module_id": "IN9037",
    "title": "Deutsch für das Informatikstudium: Wissenschaftliche Texte verstehen und schreiben",
    "level": "Bachelor",
    "language": "Deutsch",
    "semester_duration": "Einsemestrig",
    "frequency": "Wintersemester/Sommersemester",
    "credits": 3,
    "hours_total": 90,
    "hours_self_study": 60,
    "hours_presence": 30,
    "examination_achievements": "Die Prüfungsleistung wird in Form einer Klausur von 60 Minuten erbracht. In dieser soll nachgewiesen werden, dass in begrenzter Zeit ein Problem erkannt wird und Wege zu einer Lösung gefunden werden können.",
    "repetition": "Folgesemester",
    "recommended_prerequisites": "Die Teilnehmer haben Deutsch nicht als Muttersprache sondern mussten zur Immatrikulation einen\nSprachtest nachweisen (DSH 2 oder TestDaF 4).",
    "content": "Wortschatz Einüben von relevantem Fachwortschatz, Fremdwörter-Training, Terminologien/ Ableitungen (Verbalisierungen/Nominalisierungen), Nomen-Verbverbindungen (FVG) Wortbildung im Deutschen, besonders Komposita Strukturübungen Syntax-Übungen, Verbstellung in komplexen Satzstrukturen, Verkürzen und Erweitern von Sätzen Zusammenfassungen/Überschriften/Stichwörter (Nominalisierungen) bzw. Erklärungen/ Beschreibungen/mündliche Wiedergabe von Informationen mit Hilfe von Verbalisierungen konkretes Üben Klausuren und Vorlesungsfolien schnell lesen -- verstehen -- bearbeiten Lesetechniken vorstellen, vergleichen, evaluieren, testen IN9037: Deutsch für das Informatikstudium: Wissenschaftliche Texte verstehen und schreiben | German for the Informatics study program: Understanding and writing scientific papers Training anhand alter Klausuren Themen nach Bedarf der Studierenden Termine, um offene Fragen zu beantworten, Möglichkeit, auf besondere Bedürfnisse der einzelnen Teilnehmer einzugehen.",
    "learning_outcomes": "Erreicht werden soll, dass die ausländischen Studierenden mehr Sicherheit im Umgang mit fachsprachlichen Texten erreichen, dass sie ein Forum vorfinden, wo sie ihre Lesekompetenz und ihren schriftlichen Ausdruck verbessern können und vor allem ihre mündliche Ausdrucksfähigkeit trainieren. Ziel sollte eine weitgehende Annäherung an ein C2-Niveau sein, d.h. die Fähigkeit, mühelos die Fachtexte in den Studienfächern Wirtschaftsinformatik/ Informatik zu verstehen und die Leistungen in den Klausuren zu verbessern.",
    "teaching_methods": "",
    "media": "",
    "literature": "",
    "lv_sws_lecturer": "Burschka, Darius; Prof. Dr.-Ing.\nLehrveranstaltungen (Lehrform, SWS) Dozent(in):"
  }
]
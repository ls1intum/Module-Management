services:
  nginx:
    image: nginx:alpine
    container_name: module-management-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /var/lib/rbg-cert/live/fullchain.pem:/etc/certs/fullchain.pem:ro
      - /var/lib/rbg-cert/live/privkey.pem:/etc/certs/privkey.pem:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - module-management-network
    restart: unless-stopped

  postgres:
    image: docker.io/library/postgres:17.5-alpine
    container_name: module-management-db
    environment:
      - "POSTGRES_DB=${DB_NAME}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      - "POSTGRES_USER=${DB_USER}"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - module-management-network
    restart: unless-stopped

  ai-service:
    image: ghcr.io/ls1intum/module-management/ai:${IMAGE_TAG}
    container_name: module-management-ai
    volumes:
      - overlap_data:/code/data
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AI_MODEL: ${AI_MODEL}
    ports:
      - "${AI_SERVICE_PORT}:5000"
    networks:
      - module-management-network
    restart: unless-stopped

  backend:
    image: ghcr.io/ls1intum/module-management/server:${IMAGE_TAG}
    container_name: module-management-backend
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ModuleManagement
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}
      - AI_SERVICE_URL=http://ai-service:5000
    networks:
      - module-management-network
    restart: unless-stopped

  frontend:
    image: ghcr.io/ls1intum/module-management/client:${IMAGE_TAG}
    container_name: module-management-frontend
    environment:
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
    depends_on:
      - backend
      - ai-service
    networks:
      - module-management-network
    restart: unless-stopped

volumes:
  postgres_data:
  overlap_data:


networks:
  module-management-network:
    driver: bridge

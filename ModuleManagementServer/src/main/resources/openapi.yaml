openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/modules/{id}:
    put:
      tags:
      - module-controller
      operationId: updateModule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CitModule"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitModule"
    delete:
      tags:
      - module-controller
      operationId: deleteModule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/module-versions/{moduleVersionId}:
    get:
      tags:
      - module-version-controller
      operationId: getModuleVersionUpdateDtoFromId
      parameters:
      - name: moduleVersionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModuleVersionUpdateRequestDTO"
    put:
      tags:
      - module-version-controller
      operationId: updateModuleVersion
      parameters:
      - name: moduleVersionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModuleVersionUpdateRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModuleVersionUpdateRequestDTO"
  /api/feedbacks/{feedbackId}/reject:
    put:
      tags:
      - feedback-controller
      operationId: rejectFeedback
      parameters:
      - name: feedbackId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectFeedbackDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
  /api/feedbacks/{feedbackId}/accept:
    put:
      tags:
      - feedback-controller
      operationId: approveFeedback
      parameters:
      - name: feedbackId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIdDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
  /api/proposals:
    get:
      tags:
      - proposal-controller
      operationId: getAllProposals
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Proposal"
    post:
      tags:
      - proposal-controller
      operationId: createProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProposalRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proposal"
  /api/proposals/submit/{proposalId}:
    post:
      tags:
      - proposal-controller
      operationId: submitProposal
      parameters:
      - name: proposalId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIdDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/modules/create:
    post:
      tags:
      - module-controller
      operationId: createModule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CitModule"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitModule"
  /api/proposals/{id}:
    get:
      tags:
      - proposal-controller
      operationId: getProposalById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proposal"
  /api/proposals/{id}/view:
    get:
      tags:
      - proposal-controller
      operationId: getProposalView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProposalViewDTO"
  /api/proposals/from-user/{id}:
    get:
      tags:
      - proposal-controller
      operationId: getProposalsByUserId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Proposal"
  /api/proposals/compact:
    get:
      tags:
      - proposal-controller
      operationId: getAllProposalsCompact
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProposalsCompactDTO"
  /api/proposals/compact/from-user/{id}:
    get:
      tags:
      - proposal-controller
      operationId: getProposalsByUserIdFromCompact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProposalsCompactDTO"
  /api/modules:
    get:
      tags:
      - module-controller
      operationId: getAllModules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CitModule"
  /api/modules/moduleId/{id}:
    get:
      tags:
      - module-controller
      operationId: getModuleByModuleId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitModule"
  /api/modules/id/{id}:
    get:
      tags:
      - module-controller
      operationId: getModuleById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitModule"
  /api/feedbacks/module-version-of-feedback/{feedbackId}:
    get:
      tags:
      - feedback-controller
      operationId: getModuleVersionOfFeedback
      parameters:
      - name: feedbackId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModuleVersionUpdateRequestDTO"
  /api/feedbacks/for-user/{id}:
    get:
      tags:
      - feedback-controller
      operationId: getFeedbacksForUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feedback"
  /api/proposals/{proposalId}:
    delete:
      tags:
      - proposal-controller
      operationId: deleteProposal
      parameters:
      - name: proposalId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIdDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    CitModule:
      type: object
      properties:
        id:
          type: integer
          format: int64
        moduleId:
          type: string
        translations:
          type: array
          items:
            $ref: "#/components/schemas/ModuleTranslation"
        creationDate:
          type: string
          format: date-time
    ModuleTranslation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        language:
          type: string
          enum:
          - en
          - de
        title:
          type: string
        recommendedPrerequisites:
          type: string
        assessmentMethod:
          type: string
        learningOutcomes:
          type: string
        mediaUsed:
          type: string
        literature:
          type: string
    ModuleVersionUpdateRequestDTO:
      required:
      - moduleVersionId
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        moduleVersionId:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        moduleId:
          type: string
        status:
          type: string
          enum:
          - PENDING_SUBMISSION
          - PENDING_FEEDBACK
          - ACCEPTED
          - REJECTED
          - OBSOLETE
          - CANCELLED
        isComplete:
          type: boolean
        titleEng:
          type: string
        levelEng:
          type: string
        languageEng:
          type: string
          enum:
          - English
          - German
          - undefined
        frequencyEng:
          type: string
        credits:
          type: integer
          format: int32
        hoursTotal:
          type: integer
          format: int32
        hoursSelfStudy:
          type: integer
          format: int32
        hoursPresence:
          type: integer
          format: int32
        examinationAchievementsEng:
          type: string
        repetitionEng:
          type: string
        recommendedPrerequisitesEng:
          type: string
        contentEng:
          type: string
        learningOutcomesEng:
          type: string
        teachingMethodsEng:
          type: string
        mediaEng:
          type: string
        literatureEng:
          type: string
        responsiblesEng:
          type: string
        lvSwsLecturerEng:
          type: string
    RejectFeedbackDTO:
      required:
      - comment
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        comment:
          type: string
    Feedback:
      type: object
      properties:
        feedbackId:
          type: integer
          format: int64
        feedbackFrom:
          $ref: "#/components/schemas/User"
        requiredRole:
          type: string
          enum:
          - QUALITY_MANAGEMENT
          - ACADEMIC_PROGRAM_ADVISOR
          - EXAMINATION_BOARD
          - PROFESSOR
        status:
          type: string
          enum:
          - PENDING_SUBMISSION
          - PENDING_FEEDBACK
          - APPROVED
          - REJECTED
          - OBSOLETE
          - CANCELLED
        submissionDate:
          type: string
          format: date-time
        comment:
          type: string
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
          - QUALITY_MANAGEMENT
          - ACADEMIC_PROGRAM_ADVISOR
          - EXAMINATION_BOARD
          - PROFESSOR
    UserIdDTO:
      required:
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
    ProposalRequestDTO:
      required:
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        titleEng:
          type: string
        levelEng:
          type: string
        languageEng:
          type: string
          enum:
          - English
          - German
          - undefined
        frequencyEng:
          type: string
        credits:
          type: integer
          format: int32
        hoursTotal:
          type: integer
          format: int32
        hoursSelfStudy:
          type: integer
          format: int32
        hoursPresence:
          type: integer
          format: int32
        examinationAchievementsEng:
          type: string
        repetitionEng:
          type: string
        recommendedPrerequisitesEng:
          type: string
        contentEng:
          type: string
        learningOutcomesEng:
          type: string
        teachingMethodsEng:
          type: string
        mediaEng:
          type: string
        literatureEng:
          type: string
        responsiblesEng:
          type: string
        lvSwsLecturerEng:
          type: string
    ModuleVersion:
      type: object
      properties:
        moduleVersionId:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        moduleId:
          type: string
        creationDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - PENDING_SUBMISSION
          - PENDING_FEEDBACK
          - ACCEPTED
          - REJECTED
          - OBSOLETE
          - CANCELLED
        titleEng:
          type: string
        levelEng:
          type: string
        languageEng:
          type: string
          enum:
          - English
          - German
          - undefined
        frequencyEng:
          type: string
        credits:
          type: integer
          format: int32
        hoursTotal:
          type: integer
          format: int32
        hoursSelfStudy:
          type: integer
          format: int32
        hoursPresence:
          type: integer
          format: int32
        examinationAchievementsEng:
          type: string
        repetitionEng:
          type: string
        recommendedPrerequisitesEng:
          type: string
        contentEng:
          type: string
        learningOutcomesEng:
          type: string
        teachingMethodsEng:
          type: string
        mediaEng:
          type: string
        literatureEng:
          type: string
        responsiblesEng:
          type: string
        lvSwsLecturerEng:
          type: string
        requiredFeedbacks:
          type: array
          items:
            $ref: "#/components/schemas/Feedback"
    Proposal:
      type: object
      properties:
        proposalId:
          type: integer
          format: int64
        createdBy:
          $ref: "#/components/schemas/User"
        creationDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - PENDING_SUBMISSION
          - PENDING_FEEDBACK
          - ACCEPTED
          - REQUIRES_REVIEW
          - CANCELED
        moduleVersions:
          type: array
          items:
            $ref: "#/components/schemas/ModuleVersion"
    ModuleVersionCompactDTO:
      type: object
      properties:
        moduleVersionId:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - PENDING_SUBMISSION
          - PENDING_FEEDBACK
          - ACCEPTED
          - REJECTED
          - OBSOLETE
          - CANCELLED
    ProposalViewDTO:
      type: object
      properties:
        proposalId:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
        latestVersion:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - PENDING_SUBMISSION
          - PENDING_FEEDBACK
          - ACCEPTED
          - REQUIRES_REVIEW
          - CANCELED
        moduleVersionsCompact:
          type: array
          items:
            $ref: "#/components/schemas/ModuleVersionCompactDTO"
    ProposalsCompactDTO:
      type: object
      properties:
        proposalId:
          type: integer
          format: int64
        createdBy:
          type: string
        status:
          type: string
          enum:
          - PENDING_SUBMISSION
          - PENDING_FEEDBACK
          - ACCEPTED
          - REQUIRES_REVIEW
          - CANCELED
        latestVersion:
          type: integer
          format: int64
        latestTitle:
          type: string
